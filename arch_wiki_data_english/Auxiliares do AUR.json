{
  "title": "Auxiliares do AUR",
  "url": "https://wiki.archlinux.org/title/Auxiliares_do_AUR",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **não possuem suporte** \n\nOs auxiliares do AUR automatizam certos usos do Arch User Repository. Em particular, eles podem automatizar as seguintes tarefas:\n\n- pesquisa por pacotes publicados no AUR;\n- resolução de dependências entre pacotes do AUR;\n- obtenção e compilação de pacotes do AUR;\n- obtenção de conteúdo web, tal como comentários de usuários;\n- envio de pacotes do AUR.\n\nPacman só lida com atualizações para pacotes pré-compilados em seus repositórios. Pacotes do AUR são redistribuídos na forma de PKGBUILDs e precisam de um auxiliar do AUR para automatizar o processo de recompilação. No entanto, lembre-se de que uma recompilação de um pacote pode ser necessária quando as suas dependências de bibliotecas compartilhadas forem atualizadas, e não apenas o pacote em si é atualizado.\n\n"
    },
    {
      "title": "Legenda",
      "level": 2,
      "content": "As colunas da #Tabelas de comparação têm o seguinte significado:\n\n- Vários pacotes do mesmo pacote base, sem recompilar ou reinstalar várias vezes, tal como clionAUR.\n- Pacotes divididos que dependem de um pacote do mesmo pacote base, tal como jellyfinAUR[link quebrado: package not found].\n- Pacotes divididos de forma independente, tal como python-pyalsaaudioAUR e python2-pyalsaaudioAUR[link quebrado: package not found].\n\n- Opcional significa que um recurso está disponível, mas apenas por meio de um argumento de linha de comando ou opção de configuração.\n- Parcial significa que um recurso não está totalmente implementado, ou que ela parcialmente desvia do critério dado.\n\n"
    },
    {
      "title": "Pesquisa e download",
      "level": 3,
      "content": "Table content:\nNome | Escrito em | Git clone | Analisador confiável | Resolvedor confiável | Completação de shell | Especificidade\nauracle-gitAUR | C++ | Sim | Sim | Sim | Bash | imprime ordem de compilação\npbgetAUR | Python | Sim | Sim | – | – | –\nrepoctlAUR | Go | Não | Sim | – | zsh | repositório local\nyaahAUR | Bash | Opcional | Sim | – | bash | –\n\n"
    },
    {
      "title": "Pesquisa e compilação",
      "level": 3,
      "content": "Table content:\nNome | Escrito em | Revisão de arquivo | Ver diff | Git clone | Analisador confiável | Resolvedor confiável | Pacotes divididos | Completação de shell | Especificidade\naurutilsAUR | Bash | Sim | Sim | Sim | Sim | Sim | Sim | bash, zsh | repositório local, aplicação local de patches , assinatura de pacote, chroot limpo\nbauerbillAUR | Python | Sim | Não | Sim | Sim | Sim | Sim | bash, zsh | bb-wrapper para interfacear o pacman, gerenciamento de confiança\nPKGBUILDerAUR | Python | Não | Não | Sim | Sim | Sim | Parcial | – | pb para interfacear o pacman\nruaAUR | Rust | Sim | Sim | Sim | Sim | Sim | Sim | bash, zsh, fish | aplicação local de patches, bubblewrap, inspeção de .pkg.tar\n\n"
    },
    {
      "title": "Wrappers do pacman",
      "level": 3,
      "content": "Table content:\nNome | Escrito em | Revisão de arquivo | Ver diff | Git clone | Analisador confiável | Resolvedor confiável | Pacotes divididos | Opções inseguras | Completação de shell | Especificidade\nauraAUR | Haskell | Não | Parcial | Sim | Sim | Sim | Sim | – | bash, fish, zsh | –\npacaurAUR | Bash | Sim | Sim | Sim | Sim | Sim | Sim | --ask | bash, zsh | –\npakkuAUR | Nim | Sim | Sim | Sim | Sim | Sim | Sim | -Sy | bash, zsh | obtém chaves PGP\nparuAUR | Rust | Sim | Sim | Sim | Sim | Sim | Sim | -Sy--ask | bash, fish, zsh | obtém chaves PGP\npikaurAUR | Python | Sim | Sim | Sim | Sim | Sim | Sim | -Sy | bash, fish, zsh | usuários dinâmicos\ntrizenAUR | Perl | Sim | Sim | Sim | Sim | Sim | Parcial | – | bash, fish, zsh | –\nyayAUR | Go | Sim | Sim | Sim | Sim | Sim | Sim | -Sy*--ask* | bash, fish, zsh | obtém chaves PGP\n\n"
    },
    {
      "title": "Gráficos",
      "level": 2,
      "content": "- Argon — Wrapper do pacman em GTK 3 escrito em Python.\n\n- Cylon — Wrapper do pacman em TUI escrito em Bash.\n\n- Pamac — Gerenciador de pacotes autônomo em GTK 3 usando libalpm(3) escrito em Vala.\n\n- Pakku GUI — Frontend GTK 3 para o pakku escrito em Python.\n\n- PkgBrowser — Navegador somente leitura Qt 5 para pacotes de repositórios e AUR escrito em Python.\n\n- Octopi — Wrapper do pacman em Qt 5 escrito em C++.\n\n- Yup — Wrapper para o pacman de interface textual de usuário escrita em Go.\n\n"
    },
    {
      "title": "Manutenção",
      "level": 2,
      "content": "- aur-out-of-date — Usa APIs do hospedeiro para verificar pacotes do AUR por alterações no upstream.\n\n- aurpublish — Script auxiliar para gerenciar e fazer upload de pacotes do AUR usando git-subtree(1). Usa githooks(5) para verificar a integridade do PKGBUILD, gerar .SRCINFO automaticamente e criar um modelo de mensagem de commit.\n\n- devtools — Compila pacotes em um ambiente limpo (contêiner de systemd-nspawn) para garantir sua correção. Envolto por aurutilsAUR e clean-chroot-managerAUR.\n\n- pkgbuild-watch — Procura por alterações nas páginas web dos upstreams.\n\n- pkgoutofdate — Analisa a URL fonte dos PKGBUILDs e tenta localizar novas versões dos pacotes incrementando o número da versão e enviando requisições ao servidor web.\n\n"
    },
    {
      "title": "Outros",
      "level": 2,
      "content": "- aur-talk — Busca e exibe comentários do AUR.\n\n- aurvote-utils — Um conjunto de utilitários para gerenciar os votos do AUR.\n\n- haskell-aur — Biblioteca Haskell para acessar a interface RPC do Aurweb\n\n- package-query — Ferramenta para consultar libalpm(3) e o AUR.\n\n- python3-aur — Módulos Python 3 e utilitários auxiliares para acessar as informações de pacote do AUR e automatizar as interações do AUR.\n\n- raur — Biblioteca em Rust para acessar interface RPC do Aurweb\n\n"
    }
  ]
}