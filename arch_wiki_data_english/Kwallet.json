{
  "title": "Kwallet",
  "url": "https://wiki.archlinux.org/title/Kwallet",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "KDE Wallet Manager is a tool to manage passwords on the KDE Plasma system. Using the KWallet subsystem allows a user to keep its own secrets, but also allows a user to access passwords stored by every application that integrates with KWallet.\n\nA wallet (in the KDE's terminology, sometimes called vault or keyring) is an encrypted volume protected by a user-defined password where user and/or software can store secrets (often, credentials when the user checked \"Remember the account\" in an application). Those vaults can be created and used manually by the user or created and used automatically in the background by some software that integrates with the wallet subsystem (e.g. mail applications or games). Vaults are often decrypted automatically at the user login using a PAM module (see below).\n\nTips:\n\n- If you only need to have a wallet available for applications using it, it is suggested to use the default name (i.e. kdewallet) and the same password as the user (for PAM).\n- Wallets are stored as encrypted files using the .kwl extension in the ~/.local/share/kwalletd directory by default.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "KDE Wallet is often shipped with the KDE Plasma desktop environment. The wallet subsystem can be manually installed with the kwallet package.\n\nOptionally install the kwalletmanager package for the wallet management tool. This tool can be used to graphically create and manage a KDE Wallet.\n\n"
    },
    {
      "title": "Unlock KDE Wallet automatically on login",
      "level": 3,
      "content": "To unlock KDE Wallet automatically on login, install kwallet-pam for the PAM compatible module. The chosen KWallet password must be the same as the current user password.\n\n- kwallet-pam is not compatible with GnuPG keys, the KDE Wallet must use the standard blowfish encryption.\n- When using autologin, the wallet can only be unlocked if the autologin method saves the password. pam_autologin does, for example.\n- The wallet cannot be unlocked when using a fingerprint reader to login\n- The wallet must be named kdewallet (default name). It does not unlock any other wallet(s).\n- If using KDE, one may want to disable Close when last application stops using it in KDE Wallet settings to prevent the wallet from being closed after each usage (Wi-Fi-passphrase unlock, etc.).\n- It may be needed to remove the default created wallet first, thus removing all stored entries.\n- If the kwallet Migration Assistant asks for a password after every login, rename or delete the ~/.kde4/share/apps/kwallet folder.\n\n"
    },
    {
      "title": "Configure PAM",
      "level": 4,
      "content": "The following lines must be present under their corresponding sections:\n\n```\nauth            optional        pam_kwallet5.so\nsession         optional        pam_kwallet5.so auto_start\n```\n\nEdit the PAM configuration corresponding to your situation:\n\n- For SDDM no further edits should be needed because the lines are already present in /etc/pam.d/sddm.\n- For LightDM no further edits should be needed because the lines are already present in /etc/pam.d/lightdm and /etc/pam.d/lightdm-autologin.\n- For GDM edit /etc/pam.d/gdm-password accordingly.\n- For greetd edit /etc/pam.d/greetd accordingly.\n- For unlocking on tty login (no display manager, or like greetd-tuigreet), edit /etc/pam.d/login accordingly. You will need to specify the force_run parameter.\n\n```\n/etc/pam.d/login\n```\n\n```\nauth            optional        pam_kwallet5.so\nsession         optional        pam_kwallet5.so auto_start force_run\n```\n\n```\n/etc/pam.d/greetd\n```\n\n```\n#%PAM-1.0\n\nauth       required     pam_securetty.so\nauth       requisite    pam_nologin.so\nauth       include      system-local-login\nauth       optional     pam_kwallet5.so\naccount    include      system-local-login\nsession    include      system-local-login\nsession    optional     pam_kwallet5.so auto_start force_run\n```\n\n"
    },
    {
      "title": "Using the KDE Wallet to store ssh key passphrases",
      "level": 3,
      "content": "Install ksshaskpass package.\n\nSet the SSH_ASKPASS environment variable to ksshaskpass and SSH_ASKPASS_REQUIRE to prefer (prefer to use the askpass program instead of the TTY). To set it automatically on each login, create the following environment.d(5) file:\n\n```\n~/.config/environment.d/ssh_askpass.conf\n```\n\n```\nSSH_ASKPASS=/usr/bin/ksshaskpass\nSSH_ASKPASS_REQUIRE=prefer\n```\n\nRestart your session (i.e. relogin) so that the environment variables take effect.\n\nThe first time you try to use an SSH key, you will get asked for its passphrase. Make sure to check the Remember password checkbox. Next time, the passphrase will be read from KDE Wallet.\n\n"
    },
    {
      "title": "Using the KDE Wallet to store Git credentials",
      "level": 3,
      "content": "Git can delegate credential handling to a credential helper. By using ksshaskpass as a credential helper, the HTTP/HTTPS and SMTP passwords can be safely stored in the KDE Wallet.\n\nInstall the ksshaskpass package.\n\nConfigure Git by setting the GIT_ASKPASS environment variable:\n\n```\n~/.config/environment.d/git_askpass.conf\n```\n\n```\nGIT_ASKPASS=/usr/bin/ksshaskpass\n```\n\nSee gitcredentials(7) for alternatives and more details.\n\n"
    },
    {
      "title": "Store GPG key passphrases",
      "level": 3,
      "content": "Native KDE windows can be used to prompt for GPG key passphrases and save them in KDE Wallet.\n\nConfigure gpg-agent to use /usr/bin/pinentry-qt.\n\nEnable the Secret Service interface. There are two ways to do this:\n\n- Go to System Settings > KDE Wallet and enable Use KWallet for the Secret Service interface.\n- Edit the KDE Wallet configuration file:\n\n```\n~/.config/kwalletrc\n```\n\n```\n[org.freedesktop.secrets]\napiEnabled=true\n```\n\nClose the wallet and reopen it to affect these changes. You can do this using kwalletmanager or by issuing commands to Qt D-Bus directly:\n\n```\n$ qdbus org.kde.kwalletd6 /modules/kwalletd6 closeAllWallets\n$ qdbus org.kde.kwalletd6 /modules/kwalletd6 open kdewallet 0 $0\n```\n\n"
    },
    {
      "title": "KDE Wallet for Chrome and Chromium",
      "level": 3,
      "content": "Chrome/Chromium/Opera has built in wallet integration. To enable it, run Chromium with the --password-store=kwallet5 or --password-store=detect argument. To make the change persistent, see Chromium#Making flags persistent. (Setting CHROMIUM_USER_FLAGS will not work.)\n\n"
    },
    {
      "title": "Query passwords from the terminal",
      "level": 3,
      "content": "Instead of storing passwords in plain text files, you can manually add new entries in your wallet and retrieve them with kwallet-query.\n\nFor example, if you want to log into the Docker Hub registry with Podman, which supports getting the passwords from stdin with the --password-stdin flag, you can use the following command to login:\n\n```\n$ kwallet-query -r folder_entry wallet_name -f folder_name | podman login docker.io -u dockerhub_username --password-stdin\n```\n\nThis way, your password is not stored in any text file and neither is it stored in the terminal history file.\n\nIn order to run kwallet-query outside of a graphical session (for instance as part of an unattended backup script), set the QT_QPA_PLATFORM=offscreen environment variable:\n\n```\n$ QT_QPA_PLATFORM=offscreen kwallet-query -r folder_entry wallet_name -f folder_name\n```\n\n"
    },
    {
      "title": "Unlocking KWallet automatically in a window manager",
      "level": 3,
      "content": "To unlock KWallet protected by the login password, it is necessary to start /usr/lib/pam_kwallet_init in the autostart portion of your window manager's configuration file in addition to configuring PAM.\n\n"
    },
    {
      "title": "Disable KWallet",
      "level": 3,
      "content": "In case you want to permanently disable kwallet:\n\n```\n~/.config/kwalletrc\n```\n\n```\n[Wallet]\nEnabled=false\n```\n\n"
    },
    {
      "title": "Automatic D-Bus activation",
      "level": 3,
      "content": "Most applications use org.freedesktop.secrets.service D-Bus service. KWallet does not provide a service file for it out of the box.\n\nYou can achieve automatic activation by creating such service file:\n\n```\n~/.local/share/dbus-1/services/org.freedesktop.secrets.service\n```\n\n```\n[D-BUS Service]\nName=org.freedesktop.secrets\nExec=/usr/bin/kwalletd6\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Wikipedia:KWallet\n- Unlocking KWallet with PAM\n- org.freedesktop.secrets DBus API initial support\n\n"
    }
  ]
}