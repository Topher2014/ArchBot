{
  "title": "OpenDKIM",
  "url": "https://wiki.archlinux.org/title/OpenDKIM",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "OpenDKIM is an open source implementation of the DomainKeys Identified Mail (DKIM) sender authentication system.\n\nDKIM is supported by most common mail providers, including Yahoo, Google and Outlook.com.\n\n"
    },
    {
      "title": "The idea",
      "level": 2,
      "content": "Basically, DKIM digitally signs all messages from the server to verify that the message actually was sent from the domain in question and is not forged or modified.\n\n- The sender's mail server signs outgoing email with the private key.\n- When the message arrives, the receiver (or their server) reads the public key from the domainâ€™s TXT records and verifies the signature.\n\nThis ensures the message was sent from a server whose private key matches the domain's public key.\n\nSee RFC 6376 for more information.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the opendkim package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The main configuration file for the signing service is /etc/opendkim/opendkim.conf.\n\n- Copy/move the sample configuration file /usr/share/doc/opendkim/opendkim.conf.sample to /etc/opendkim/opendkim.conf and change the following options:\n\n```\n/etc/opendkim/opendkim.conf\n```\n\n```\nDomain                  example.com\nKeyFile                 /path/to/keys/server1.private\nSelector                myselector\nSocket                  inet:8891@localhost\nUserID                  opendkim\n```\n\n- Socket address is the one specified in /etc/postfix/main.cf. This is what /etc/postfix/main.cf should contain:\n\n```\n/etc/postfix/main.cf\n```\n\n```\n# For use by dkim milter\nsmtpd_milters = inet:localhost:8891\nnon_smtpd_milters = $smtpd_milters\nmilter_default_action = accept\n```\n\n- To generate a secret signing key, specify the domain used to send mails and a selector which is used to refer to the key. The selector may be any value. See the RFC for details, but alpha-numeric strings should be OK:\n\n```\n$ opendkim-genkey -r -s myselector -d example.com\n```\n\n- Sometimes mails get reformatted on their way (e.g. tab exchanged for spaces), rendering the DKIM signature invalid. To prevent trivial reformatting in header and body destroying trust, there is Canonicalization, a policy stating how strict formatting is to be conserved. Available settings are simple for no reformatting allowed and relaxed for some reformatting allowed. For details see RFC 4871 3.4. These can be set individually for header and body:\n\n```\n/etc/opendkim/opendkim.conf\n```\n\n```\n...\nCanonicalization        relaxed/simple\n...\n```\n\nThis example allows some reformatting of the header but not in the message body. Default settings for openDKIM are simple/simple.\n\n- Other configuration options are available. Make sure to read the documentation.\n- Enable/start the opendkim.service.\n\n"
    },
    {
      "title": "DNS Record",
      "level": 2,
      "content": "Add a DNS TXT record with the selector and public key. The correct record is generated with the private key and can be found in myselector.txt in the same location as the private key.\n\nExample:\n\n```\nmyselector._domainkey   IN\t TXT\t\"v=DKIM1; p=....................\"\n```\n\nThere are several other switches available for the record (see RFC 4871 3.6.1), the most interesting might be the t=y which enables testing mode, signaling a checking receiver that the mail must not be treated differently from an unsigned mail, regardless of the state of the signature.\n\nCheck that the DNS record has been correctly updated:\n\n```\n$ host -t TXT myselector._domainkey.example.com\n```\n\nYou may also check that the DKIM DNS record is properly formated using one of the DKIM Key checkers available on the web.\n\n"
    },
    {
      "title": "Postfix integration",
      "level": 2,
      "content": "Either add the following lines to main.cf:\n\n```\n/etc/postfix/main.cf\n```\n\n```\nnon_smtpd_milters=inet:127.0.0.1:8891\nsmtpd_milters=inet:127.0.0.1:8891\n```\n\nTo integrate DKIM and DMARC use unix sockets instead, set the UMask to give the group write access to the socket, and add the postfix user to the opendkim group:\n\n```\n/etc/opendkim/opendkim.conf\n```\n\n```\nSocket                  local:/run/opendkim/opendkim.sock\nUMask                   002\n```\n\n```\n/etc/postfix/main.cf\n```\n\n```\nnon_smtpd_milters = unix:/run/opendkim/opendkim.sock,\n                    unix:/run/opendmarc/opendmarc.sock\nsmtpd_milters = unix:/run/opendkim/opendkim.sock,\n                unix:/run/opendmarc/opendmarc.sock\n```\n\nOr change smtpd options in master.cf:\n\n```\n/etc/postfix/master.cf\n```\n\n```\nsmtp      inet  n       -       n       -       -       smtpd\n  -o smtpd_client_connection_count_limit=10\n  -o smtpd_milters=inet:127.0.0.1:8891\n\nsubmission inet n       -       n       -       -       smtpd\n  -o smtpd_enforce_tls=no\n  -o smtpd_sasl_auth_enable=yes\n  -o smtpd_client_restrictions=permit_sasl_authenticated,reject\n  -o smtpd_sasl_path=smtpd\n  -o cyrus_sasl_config_path=/etc/sasl2\n  -o smtpd_milters=inet:127.0.0.1:8891\n```\n\n"
    },
    {
      "title": "Sendmail integration",
      "level": 2,
      "content": "Edit the sendmail.mc file and add the following line, after the last line starting with FEATURE:\n\n```\n/etc/mail/sendmail.mc\n```\n\n```\nINPUT_MAIL_FILTER(`opendkim', `S=inet:8891@localhost')\n```\n\nRebuild the sendmail.cf file with:\n\n```\n# m4 /etc/mail/sendmail.mc > /etc/mail/sendmail.cf\n```\n\nAnd then restart the sendmail.service.\n\n"
    },
    {
      "title": "Multiple domains",
      "level": 2,
      "content": "To provide mail server service to multiple virtual domains on the same server, modify the basic configuration as below:\n\nProvide these directives:\n\n```\n/etc/opendkim/opendkim.conf\n```\n\n```\nKeyTable                refile:/etc/opendkim/KeyTable\nSigningTable            refile:/etc/opendkim/SigningTable\nExternalIgnoreList      refile:/etc/opendkim/TrustedHosts\nInternalHosts           refile:/etc/opendkim/TrustedHosts\n```\n\nCreate the following two files to tell opendkim where to find the correct keys. You can use the same key for all the domains or generate a key for each domain. Make changes to match your settings. Add more lines as needed. In the following example, example1.com and example2.com share the same key.\n\n```\n/etc/opendkim/KeyTable\n```\n\n```\nmyselector._domainkey.example1.com example1.com:myselector:/etc/opendkim/keys/domain1.com/myselector.private\nmyselector._domainkey.example2.com example2.com:myselector:/etc/opendkim/keys/domain2.com/myselector.private\nmyselector._domainkey.example3.com example3.com:myselector:/etc/opendkim/keys/domain1.com/myselector.private\n...\n```\n\n```\n/etc/opendkim/SigningTable\n```\n\n```\n*@example1.com myselector._domainkey.example1.com\n*@example2.com myselector._domainkey.example2.com\n*@example3.com myselector._domainkey.example3.com\n...\n```\n\nAn extant /etc/opendkim/TrustedHosts file tells opendkim who may use the keys. This is referenced by the ExternalIgnoreList directive in the configuration file. Opendkim ignores this list of hosts when verifying incoming mail.\n\nBecause it is also referenced by the InternalHosts directive, this same list of hosts is be considered \"internal,\" and opendkim signs their outgoing mail. Remember to change <server_ip> to the correct server IP address:\n\n```\n/etc/opendkim/TrustedHosts\n```\n\n```\n127.0.0.1\n::1\nlocalhost\n<server_ip>\nhostname.example1.com\nexample1.com\nhostname.example2.com\nexample2.com\n...\n```\n\nChange ownership of all files to opendkim:\n\n```\n# chown -R opendkim:mail /etc/opendkim\n```\n\nAdd a DNS TXT record with your selector and public key for each of the domains.\n\nYou can now restart opendkim.\n\n"
    },
    {
      "title": "Security",
      "level": 2,
      "content": "The default configuration for the OpenDKIM daemon is less than ideal from a security point of view (all those are minor security issues):\n\n- The OpenDKIM daemon does not need to run as root at all (the configuration suggested earlier will have OpenDKIM drop root privileges by itself, but systemd can do this too and much earlier).\n- If your mail daemon is on the same host as the OpenDKIM daemon, there is no need for localhost tcp sockets and unix sockets may be used instead, allowing classic user/group access controls.\n- OpenDKIM is using the /tmp folder by default whereas it could use its own folder with additional access restrictions.\n\nThe following configuration files will fix most of those issues (assuming you are using Postfix) and drop some unnecessary options in the systemd service unit:\n\n```\n/etc/opendkim/opendkim.conf\n```\n\n```\nBaseDirectory           /var/lib/opendkim\nDomain                  example.com\nKeyFile                 /etc/opendkim/myselector.private\nSelector                myselector\nSocket                  local:/run/opendkim/opendkim.sock\nSyslog                  Yes\nTemporaryDirectory      /run/opendkim\nUMask                   002\n```\n\n```\n/etc/systemd/system/opendkim.service\n```\n\n```\n[Unit]\nDescription=OpenDKIM daemon\nAfter=network.target remote-fs.target nss-lookup.target\n\n[Service]\nType=forking\nUser=opendkim\nGroup=postfix\nExecStart=/usr/bin/opendkim -x /etc/opendkim/opendkim.conf\nRuntimeDirectory=opendkim\nRuntimeDirectoryMode=0750\n\n[Install]\nWantedBy=multi-user.target\n```\n\nEdit /etc/postfix/main.cf accordingly to make Postfix listen to this unix socket:\n\n```\n/etc/postfix/main.cf\n```\n\n```\nsmtpd_milters = unix:/run/opendkim/opendkim.sock\nnon_smtpd_milters = unix:/run/opendkim/opendkim.sock\n```\n\n"
    },
    {
      "title": "Error: \"milter-reject: END-OF-MESSAGE from localhost\"",
      "level": 3,
      "content": "Most likely the Postfix milter protocol is set wrong in /etc/postfix/main.cf:\n\n```\n# Postfix â‰¥ 2.6\nmilter_protocol = 6\n# 2.3 â‰¤ Postfix â‰¤ 2.5\nmilter_protocol = 2\n```\n\n"
    },
    {
      "title": "Authentication-Results: \"dkim=neutral (bad format) header.i=@example.com\"",
      "level": 3,
      "content": "Most likely this was caused by the DNS TXT records for given selector split into three or more resource record (RR). The authenticator, when concating the records got wrong record value.\n\nFor example, given DNS TXT record for selector \"default._domainkey.example.com\" with the correct, expected value\n\n```\n\"v=DKIM1; k=rsa; s=email; p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqrXzI8BMAv3rTYU9FA4F1m2aLyT7JF8qnhTuqWibR/X55ZxoUX8fceXkRbM03tgn+1UWo5mbNN5siLPDlNOKU6fWCmkCbroPXe0vpip72zkFCtYxO4NTQY0kVaKVyFpUbFbxN3oabYTmaty3eE2yQDDAmJeZiVyEE7K7E0vnW9KpiJypFPFoft52Dqr3BTB8197gHPEMXgeP5gYkjJxVEfJZiZVco6p41JUr0CzD2dPun6pSLOO8NCkx3bWNKsL1DA7CR6qX/o2oOsd821N+0tn+8oc6x0rnhetaR0442NAGzxna4jTkUe9jwAK4aU7nKQxqNn/wOw1K2qT7uhsVMwIDAQAB\".\n```\n\nThe authenticator on the other side receive the record split into three,\n\n```\n$ resolver -t TXT default._domainkey.example.com\n```\n\n```\n= options: &{sqtype:TXT sqclass:IN nameserver:udp://127.0.0.1 insecure:false qname:default._domainkey.example.com qtype:16 qclass:1}\n= resolv.conf: &{Domain:localhost Search:[] NameServers:[127.0.0.1] NDots:1 Timeout:5 Attempts:2 OptMisc:map[]}\n> Lookup default._domainkey.example.com at 127.0.0.1:53\n< From: 127.0.0.1:53\n> Header: {ID:2136 IsQuery:false Op:0 IsAA:false IsTC:false IsRD:true IsRA:true RCode:0 QDCount:1 ANCount:3 NSCount:0 ARCount:0}\n> Question: &{Name:default._domainkey.example.com Type:TXT}\n> Status: OK\n> Answer #1:\n>> Resource record: {Name:default._domainkey.example.com Type:16 Class:1 TTL:1822 rdlen:143}\n>> RDATA: YkjJxVEfJZiZVco6p41JUr0CzD2dPun6pSLOO8NCkx3bWNKsL1DA7CR6qX/o2oOsd821N+0tn+8oc6x0rnhetaR0442NAGzxna4jTkUe9jwAK4aU7nKQxqNn/wOw1K2qT7uhsVMwIDAQAB\n> Answer #2:\n>> Resource record: {Name:default._domainkey.example.com Type:16 Class:1 TTL:1822 rdlen:253}\n>> RDATA: p=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqrXzI8BMAv3rTYU9FA4F1m2aLyT7JF8qnhTuqWibR/X55ZxoUX8fceXkRbM03tgn+1UWo5mbNN5siLPDlNOKU6fWCmkCbroPXe0vpip72zkFCtYxO4NTQY0kVaKVyFpUbFbxN3oabYTmaty3eE2yQDDAmJeZiVyEE7K7E0vnW9KpiJypFPFoft52Dqr3BTB8197gHPEMXgeP5g\n> Answer #3:\n>> Resource record: {Name:default._domainkey.example.com Type:16 Class:1 TTL:1822 rdlen:26}\n>> RDATA: v=DKIM1; k=rsa; s=email;\n```\n\nWhen authenticator combine the record the value its got is,\n\n```\nYkjJxVEfJZiZVco6p41JUr0CzD2dPun6pSLOO8NCkx3bWNKsL1DA7CR6qX/o2oOsd821N+0tn+8oc6x0rnhetaR0442NAGzxna4jTkUe9jwAK4aU7nKQxqNn/wOw1K2qT7uhsVMwIDAQABp=MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAqrXzI8BMAv3rTYU9FA4F1m2aLyT7JF8qnhTuqWibR/X55ZxoUX8fceXkRbM03tgn+1UWo5mbNN5siLPDlNOKU6fWCmkCbroPXe0vpip72zkFCtYxO4NTQY0kVaKVyFpUbFbxN3oabYTmaty3eE2yQDDAmJeZiVyEE7K7E0vnW9KpiJypFPFoft52Dqr3BTB8197gHPEMXgeP5gv=DKIM1; k=rsa; s=email;\n```\n\nSolution: Generate keys with 1024 bits length (or less than 2048 bits) to make it fit into 255 chars on DNS TXT record.\n\n"
    },
    {
      "title": "Notes",
      "level": 2,
      "content": "While you are about to fight spam and increase people's trust in your server, you might want to take a look at Sender Policy Framework, which basically means adding a DNS Record stating which servers are authorized to send email for your domain.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- DKIM INspector\n- DKIM signature test via email.\n\n"
    }
  ]
}