{
  "title": "Dell XPS 15 (7590)",
  "url": "https://wiki.archlinux.org/title/Dell_XPS_15_(7590)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nGPU (Intel) | 8086:3e9b | Yes\nGPU (NVIDIA) | 10de:1f91 | Yes\nWireless | 8086:2723 | Yes\nBluetooth | 8087:0029 | Yes\nAudio | 8086:a348 | Yes\nTouchpad |  | Yes\nTouchscreen |  | Yes\nWebcam | 0c45:6723 | Yes\nCard Reader | 10ec:525a | Yes\nFingerprint reader | 27c6:5395 | No\nThunderbolt | 8086:15da | Yes\n\nThis page refers to the 7590 revision of the XPS 15. Most of it also applies to the Precision 5540.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Before installing it is necessary to modify some UEFI Settings. They can be accessed by pressing the F2 key repeatedly when booting.\n\n- Under 'System Configuration', change the SATA Mode from the default \"RAID\" to \"AHCI\". This will allow Linux to detect the NVMe SSD.\n- Under 'Secure Boot', disable Secure Boot to allow Linux to boot.\n- Under 'POST Behaviour', change \"Fastboot\" to \"Thorough\". This prevents intermittent boot failures.\n\nIf you are using multiboot with an existing Windows installation, make sure that \"fast startup\" is disabled in Windows 8/10.\n\n"
    },
    {
      "title": "Fwupd",
      "level": 3,
      "content": "Dell provides firmware updates directly via LVFS and can thus be flashed directly from Linux. See fwupd.\n\n"
    },
    {
      "title": "Manual installation",
      "level": 3,
      "content": "Firmware images can be found at Dell support page. Keeping an existing Windows system will make updates of the UEFI much simpler. If a clean Arch Linux install is the case in order to install:\n\n- Download the desired firmware from section \"Dell XPS 15 7590 System BIOS\"\n- Save it in /efi/EFI/Dell/Bios/ or /boot/EFI/Dell/Bios/ (this path may vary, depending on your installation)\n- Reboot the system, and enter the boot menu by pressing repeatedly F12 on Dell logo\n- Choose \"Bios Flash Update\"\n- Select the file previously saved, and start the process\n\nThe process will take about five minutes, during which the system will have some reboots and push fans at maximum speed. Finally the system will reboot normally.\n\n"
    },
    {
      "title": "Suspend",
      "level": 3,
      "content": "See Power management/Suspend and hibernate#Changing suspend method.\n\n"
    },
    {
      "title": "Thermal Management",
      "level": 2,
      "content": "Default thermal management is not very optimized (this is my experience with the i9 processor at least).\n\nThe laptop gets hot quite often and the fans run at high speed most of the time.\n\nOne solution I found is to use powertop to get a quieter system.\n\nSee Powertop for details.\n\nYou may activate manual fans control with i8kutils. Install i8kutilsAUR and dell-bios-fan-control-gitAUR. Edit /etc/i8kutils/i8kmon.conf and enable services:\n\nDo a complete daemon-reload, then\n\n```\n# modprobe dell-smm-hwmon\n# modprobe i8k\n```\n\nThen one can start/enable i8kmon.service and dell-bios-fan-control.service.\n\nYou may have to modify the modprobe options for dell-smm-hwmon to have the above work. See more at this reddit thread\n\n```\noptions dell-smm-hwmon ignore_dmi=1\n```\n\nAnother solution to decrease CPU temperature by 8°C (as for i7) on average is to\n\n```\n# echo 1 | tee /sys/devices/system/cpu/intel_pstate/no_turbo\n```\n\nThis is likely to be reset though during adapter plugging and uplugging.\n\n"
    },
    {
      "title": "Intel",
      "level": 3,
      "content": "As of early May 2021, the new kernel versions under 5.12.x are causing issues on the Precision 5540 variant of this model where the internal display goes black even before entering the tty.\n\nThe issue has been identified, but a fix is yet to be mainlined.\n\n"
    },
    {
      "title": "NVIDIA",
      "level": 3,
      "content": "See NVIDIA Optimus.\n\nStarting with the 460 series of the NVIDIA drivers, optional advanced power management options can be enabled. See: [2]\n\nAfter having set the configuration according to the NVIDIA documentation, correct operation can be checked using nvidia-smi from nvidia-utils: nvidia-smi -q -d PERFORMANCE\n\nWhen idle, the following state should be reported:\n\n```\n==============NVSMI LOG==============\n \n Timestamp                                 : Sun Apr 11 14:19:40 2021\n Driver Version                            : 465.19.01\n CUDA Version                              : 11.3\n \n Attached GPUs                             : 1\n GPU 00000000:01:00.0\n     Performance State                     : P8\n     Clocks Throttle Reasons\n         Idle                              : Active\n         Applications Clocks Setting       : Not Active\n         SW Power Cap                      : Not Active\n         HW Slowdown                       : Not Active\n             HW Thermal Slowdown           : Not Active\n             HW Power Brake Slowdown       : Not Active\n         Sync Boost                        : Not Active\n         SW Thermal Slowdown               : Not Active\n         Display Clock Setting             : Not Active\n```\n\nReported power consumption in this state should be around 1W.\n\nIf you do not plan to use the discrete GPU at all, it can be completely disabled and powered off. See: Hybrid graphics#Fully power down discrete GPU\n\n"
    },
    {
      "title": "Backlight",
      "level": 3,
      "content": "As of Linux kernel 5.12, the OLED backlight is fully supported and works in X11 and Wayland.\n\nFor earlier kernel versions, see Backlight#Color correction.\n\n"
    },
    {
      "title": "Backlight function keys",
      "level": 3,
      "content": "When using a LCD display device and in a desktop environment (KDE verified) the function key will be working out of the box for the DEs that have their own key mapping. However, when in a window manager with modesetting driver (and also int the tty console), the backlight controlling function keys will not be working and will throw out errors like ACPI BIOS Error, could not resolve symbol.\n\nUsually /sys/class/backlight/intel_backlight is symlinked to /sys/device/pci00/0000:00:02.0/drm/card0/card0-eDP-1/, and by changing the value of backlight file inside the directory the backlight level can be controlled, but the operation needs root privilege. Establishing a udev rule and accordingly a backlight control group will help, but these steps can be done easily with the package lightAUR.\n\nThen a mapping of function key to the command, say, light -A 3 and light -U 3 would be in need. XF86BrightnessDown and XF86BrightnessUp will not be working. The mapping of the keys can be done with acpid. Install the package, then insert these lines to the case \"$1\" in block\n\n```\n/etc/acpi/handler.sh\n```\n\n```\nvideo/brightnessup) light -A 3 ;;\nvideo/brightnessdown) light -U 3 ;;\n```\n\nStart/enable acpid.service.\n\n"
    },
    {
      "title": "Fingerprint reader",
      "level": 2,
      "content": "It is a Goodix fingerprint reader.\n\nThe producer does not provide any Linux driver nor documentation to implement one.\n\nSome effort is in slow progress to reverse engineer the windows drivers (see [3]).\n\n"
    }
  ]
}