{
  "title": ".NET Core (Español)",
  "url": "https://wiki.archlinux.org/title/.NET_Core_(Espa%C3%B1ol)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2021-09-13** \n\n.NET Core es un nuevo framework FLOSS de Microsoft para C#, Visual Basic y F#. Está diseñado para ser multiplataforma, modular y apto para aplicaciones modernas, a diferencia de su predecesor, el framework .NET.\n\n"
    },
    {
      "title": "Instalación",
      "level": 2,
      "content": "Si solo desea ejecutar aplicaciones gestionadas por .NET Core, instale el paquete dotnet-runtime.\n\nPara compilar aplicaciones con .NET Core, instale también dotnet-sdk.\n\nMicrosoft recomienda utilizar Visual Studio Code, su IDE FLOSS basado en Electron, para compilar y depurar aplicaciones .NET Core.\n\n"
    },
    {
      "title": "Instalación manual de múltiples versiones",
      "level": 3,
      "content": "Puede tener instaladas varias versiones del SDK o del runtime de .NET Core usando el script dotnet-install.sh proveído por la .NET Foundation. Aquí puede encontar la documentación del script.\n\nPor ejemplo, el siguiente comando instala la ultima versión del canal «current» en /usr/share/dotnet:\n\n```\n# ./dotnet-install.sh --install-dir /usr/share/dotnet -channel Current -version latest\n```\n\nSi quiere simular la instalación, use el parámetro -Dryrun.\n\nUna vez que esté instalada, puede ver los SDKs disponibles:\n\n```\n$ dotnet --list-sdks\n```\n\n```\n2.2.108 [/usr/share/dotnet/sdk]\n3.0.103 [/usr/share/dotnet/sdk]\n```\n\n```\n$ dotnet --version\n```\n\n```\n3.0.103\n```\n\n"
    },
    {
      "title": "Desinstalación de versiones instaladas manualmente",
      "level": 3,
      "content": "Puede querer desinstalar las versiones desactualizadas que fueron instaladas con dotnet-install.sh. La Herramienta de desinstalación de .NET aún no tiene soporte para Linux, así que tendrá que desinstalarlas manualmente.\n\n```\n$ dotnet --list-sdks\n```\n\n```\n5.0.100 [/usr/share/dotnet/sdk]\n5.0.102 [/usr/share/dotnet/sdk]\n```\n\nDesinstale el SDK:\n\n```\n$ SDK_VERSION=\"5.0.100\"\n$ DOTNET_UNINSTALL_PATH=\"/usr/share/dotnet\"\n# rm -rf $DOTNET_UNINSTALL_PATH/sdk/$SDK_VERSION\n```\n\nAl usar dotnet-install.sh, el host dotnet y otros paquetes compartidos son instalados, y puede que sea necesario quitarlos dependiendo de la versión.\n\nTermine la desinstalación de la versión de .NET (SDK, host, paquetes compartidos):\n\n```\n$ SDK_VERSION=\"5.0.100\"\n$ DOTNET_VERSION=\"5.0.0\"\n$ DOTNET_UNINSTALL_PATH=\"/usr/share/dotnet\"\n# rm -rf $DOTNET_UNINSTALL_PATH/sdk/$SDK_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/shared/Microsoft.NETCore.App/$DOTNET_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/shared/Microsoft.AspNetCore.All/$DOTNET_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/shared/Microsoft.AspNetCore.App/$DOTNET_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/host/fxr/$DOTNET_VERSION\n```\n\n"
    },
    {
      "title": "Instalación de múltiples versiones desde el AUR",
      "level": 3,
      "content": "Algunos de los paquetes de dotnet en el AUR pueden ser instalados junto con otros. Solo se necesita un paquete host (dotnet-host-binAUR o dotnet-host) que contiene las herramientas para consola de comandos, y puede instalarlo con cualquiera de los SDK o Runtimes disponibles (últimos paquetes de cada versión principal). Aquí tiene una lista con los paquetes compatibles:\n\n- dotnet-host-binAUR, dotnet-runtime-binAUR, aspnet-runtime-binAUR, dotnet-sdk-binAUR\n- dotnet-host-preview-binAUR, dotnet-runtime-preview-binAUR, aspnet-runtime-preview-binAUR, dotnet-sdk-preview-binAUR\n- dotnet-runtime-3.0AUR, aspnet-runtime-3.0AUR, dotnet-sdk-3.0AUR,\n- dotnet-runtime-2.2AUR, aspnet-runtime-2.2AUR, dotnet-sdk-2.2AUR, dotnet-sdk-2.2-vs2017AUR\n- dotnet-runtime-2.1AUR, aspnet-runtime-2.1AUR, dotnet-sdk-2.1AUR\n\n"
    },
    {
      "title": "Instalación de PowerShell Core",
      "level": 3,
      "content": "Puede instalar PowerShell Core como una herramienta «global» ([1] [2]):\n\n```\n# dotnet tool install --global PowerShell\n```\n\nPara actualizarlo a la versión actual:\n\n```\n# dotnet tool update --global PowerShell\n```\n\n"
    },
    {
      "title": "Recolección de datos",
      "level": 2,
      "content": "La recoleccion de datos (telemetry) está habilitada de manera predeterminada, pero se puede deshabilitar estableciendo la variable de entorno DOTNET_CLI_TELEMETRY_OPTOUT=1.\n\n"
    },
    {
      "title": "Completado por tabulación",
      "level": 2,
      "content": "Todos los programas de dotnet que ocupan System.CommandLine.Parser para parsear sus argumentos tienen soporte para completado automático. Para habilitarlo, solo tiene que añadir unas lineas a su archivo .bashrc / .zshrc, como se describe en la documentación. Aquí tiene instrucciones para usar el paquete correspondiente.\n\n"
    },
    {
      "title": "No se puede encontrar ninguna versión del framework compatible",
      "level": 3,
      "content": "Si obtiene el siguiente error cuando intenta ejecutar un proyecto nuevo, es porque ya no es necesario que se establezca la variable DOTNET_ROOT, al contrario de las soluciones para varios problemas en GitHub. El paquete de Arch Linux (desde la versión 3.1) instala las versiones en /usr/share/dotnet, como recomienda Microsoft.\n\n```\n$ dotnet run\n```\n\n```\nIt was not possible to find any compatible framework version\nThe framework 'Microsoft.AspNetCore.App', version '3.1.0' was not found.\n  - No frameworks were found.\n\nYou can resolve the problem by installing the specified framework and/or SDK.\n\nThe specified framework can be found at:\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.AspNetCore.App&framework_version=3.1.0&arch=x64&rid=arch-x64\n```\n\nEsto sucede porque el runtime es distribuido en un paquete aparte en Arch Linux. Asegúrese de tener instalado el paquete aspnet-runtime.\n\n"
    },
    {
      "title": "Error \"the required library libhostfxr.so could not be found\"",
      "level": 3,
      "content": "Algunas de las herramientas del SDK de dotnet (por ejemplo, libman, dotnet-watch, etc.) asumen que tiene establecida la variable de entorno DOTNET_ROOT. Si no es así, se podría observar un error como este: [3]\n\n```\nA fatal error occurred, the required library libhostfxr.so could not be found.\nIf this is a self-contained application, that library should exist in [/home/my_user/.dotnet/tools/.store/microsoft.web.librarymanager.cli/1.0.172/microsoft.web.librarymanager.cli/1.0.172/tools/netcoreapp2.1/any/].\nIf this is a framework-dependent application, install the runtime in the default location [/usr/share/dotnet] or use the DOTNET_ROOT environment variable to specify the runtime location.\n```\n\nLa solución es exportar manualmente DOTNET_ROOT en su shell:\n\n```\n~/.bashrc\n```\n\n```\nexport DOTNET_ROOT=/opt/dotnet\n```\n\n"
    },
    {
      "title": "Error MSB4019: The imported project \"/usr/share/dotnet/sdk/.../Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.Common.targets\" was not found. Confirm that the expression in the Import declaration ... is correct, and that the file exists on disk.",
      "level": 3,
      "content": "Sucede después de actualizar la versión. La sesión en su shell tiene las variables de entorno de un SDK de dotnet distintas a las que tiene el actualmente instalado. Reinicie su shell o inicie sesión nuevamente para arreglarlo.\n\n"
    },
    {
      "title": "No se pudo encontrar el SDK especificado",
      "level": 3,
      "content": "Se cree que esto es causado por un conflicto entre las librerías Mono y MSBuild SDK y las de dotnet core. Para corregir esto, exporte la ruta manualmente en su shell (reemplazando el número de versión según sea necesario), por ejemplo:\n\n```\n~/.bashrc\n```\n\n```\nexport MSBuildSDKsPath=$( echo /usr/share/dotnet/sdk/3.*/Sdks );\n```\n\n"
    },
    {
      "title": "Véase también",
      "level": 2,
      "content": "- Página principal de .NET Core\n- .NET Foundation\n- Explorador de API de .NET\n\n"
    }
  ]
}