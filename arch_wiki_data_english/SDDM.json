{
  "title": "SDDM",
  "url": "https://wiki.archlinux.org/title/SDDM",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Display manager\n- KDE\n\nThe Simple Desktop Display Manager (SDDM) is a display manager. It is the recommended display manager for the KDE Plasma and LXQt desktop environments.\n\nFrom Wikipedia:Simple Desktop Display Manager:\n\nThe KDE development team has accepted a proposal to incorporate the SDDM project into the Plasma Desktop project. SDDM will be an official part of Plasma and updates will likely be pushed alongside Plasma Desktop updates.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the sddm package. Optionally install sddm-kcm for the KConfig Module and qt5-declarative for enabling Qt5 theme support.\n\nFollow Display manager#Loading the display manager to start SDDM at boot.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The default configuration file for SDDM can be found at /usr/lib/sddm/sddm.conf.d/default.conf. For any changes, create configuration file(s) in /etc/sddm.conf.d/. See sddm.conf(5) for all options.\n\nThe sddm-kcm package (included in the plasma group) provides a GUI to configure SDDM in Plasma's system settings. There is also a Qt-based sddm-conf-gitAUR available.\n\nEverything should work out of the box, since Arch Linux uses systemd and SDDM defaults to using systemd-logind for session management.\n\n"
    },
    {
      "title": "Autologin",
      "level": 3,
      "content": "SDDM supports automatic login through its configuration file, for example:\n\n```\n/etc/sddm.conf.d/autologin.conf\n```\n\n```\n[Autologin]\nUser=john\nSession=plasma\n```\n\nThis configuration causes a KDE Plasma session to be started for user john when the system is booted. Available session types can be found in /usr/share/xsessions/ for X and in /usr/share/wayland-sessions/ for Wayland.\n\nTo autologin into KDE Plasma while simultaneously locking the session (e.g. to allow autostarted apps to warm up), see KDE#Lock_screen.\n\n"
    },
    {
      "title": "Passwordless login",
      "level": 3,
      "content": "It is possible to configure SDDM to allow logging into some accounts without a password. This differs from automatic login in that the user still has to choose which account to log into, and it differs from simply setting the account password to the empty string in that it only allows interactive users to log in (and not, for example, remote users logged in via SSH).\n\nSDDM goes through PAM so you must configure the SDDM configuration of PAM:\n\n```\n/etc/pam.d/sddm\n```\n\n```\n#%PAM-1.0\nauth        sufficient  pam_succeed_if.so user ingroup nopasswdlogin\nauth        include     system-login\n...\n```\n\nIn order to also allow unlocking the KDE Plasma lock screen without a password, also add the same line at the top of /etc/pam.d/kde:\n\n```\n/etc/pam.d/kde\n```\n\n```\n#%PAM-1.0\nauth        sufficient  pam_succeed_if.so user ingroup nopasswdlogin\nauth        include     system-login\n...\n```\n\nYou must then also be part of the nopasswdlogin group to be able to login interactively without entering your password:\n\n```\n# groupadd -r nopasswdlogin\n# gpasswd -a username nopasswdlogin\n```\n\n"
    },
    {
      "title": "Unlock KDE Wallet automatically on login",
      "level": 3,
      "content": "See KDE Wallet#Unlock KDE Wallet automatically on login.\n\n"
    },
    {
      "title": "Theme settings",
      "level": 3,
      "content": "Theme settings can be changed in the [Theme] section. If you use Plasma's system settings, themes may show previews.\n\nSet to breeze for the default Plasma theme.\n\nSome themes are available in the AUR, for example archlinux-themes-sddmAUR.\n\n"
    },
    {
      "title": "Current theme",
      "level": 4,
      "content": "Set the current theme through the Current value, e.g. Current=archlinux-simplyblack.\n\n"
    },
    {
      "title": "Editing themes",
      "level": 4,
      "content": "The default SDDM theme directory is /usr/share/sddm/themes/. You can add your custom made themes to that directory under a separate subdirectory. Note that SDDM requires these subdirectory names to be the same as the theme names. Study the files installed to modify or create your own theme.\n\n"
    },
    {
      "title": "Customizing a theme",
      "level": 4,
      "content": "To override settings in the theme.conf configuration file, create a custom theme.conf.user file in the same directory. For example, to change the theme's background:\n\n```\n/usr/share/sddm/themes/name/theme.conf.user\n```\n\n```\n[General]\nbackground=/path/to/background.png\n```\n\n"
    },
    {
      "title": "Testing (previewing) a theme",
      "level": 4,
      "content": "You can preview an SDDM theme if needed. This is especially helpful if you are not sure how the theme would look if selected or just edited a theme and want to see how it would look without logging out. You can run something like this:\n\n```\n$ sddm-greeter-qt6 --test-mode --theme /usr/share/sddm/themes/breeze\n```\n\nThis should open a new window for every monitor you have connected and show a preview of the theme.\n\n"
    },
    {
      "title": "Mouse cursor",
      "level": 4,
      "content": "To set the mouse cursor theme, set CursorTheme to your preferred cursor theme.\n\nValid Plasma mouse cursor theme names are breeze_cursors, Breeze_Snow and breeze-dark.\n\n"
    },
    {
      "title": "User icon (avatar)",
      "level": 4,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nSDDM reads the user icon (a.k.a. \"avatar\") as a PNG image from either ~/.face.icon for each user, or the common location for all users specified by FacesDir in an SDDM configuration file. The configuration setting can be placed in either /etc/sddm.conf directly, or, better, a file under /etc/sddm.conf.d/ such as /etc/sddm.conf.d/avatar.conf.\n\nTo use the FacesDir location option, place a PNG image for each user named username.face.icon at the location specified by the FacesDir key in the configuration file. The default location for FacesDir is /usr/share/sddm/faces/. You can change the default FacesDir location to suit your needs. Here is an example:\n\n```\n/etc/sddm.conf.d/avatar.conf\n```\n\n```\n[Theme]\nFacesDir=/var/lib/AccountsService/icons/\n```\n\nThe other option is to put a PNG image named .face.icon at the root of your home directory. In this case, no changes to any SDDM configuration file is required. However, you need to make sure that sddm user can read the PNG image file(s) for the user icon(s).\n\nTo set proper permissions run:\n\n```\n$ setfacl -m u:sddm:x ~/\n$ setfacl -m u:sddm:r ~/.face.icon\n```\n\nYou can check permissions with:\n\n```\n$ getfacl ~/\n$ getfacl ~/.face.icon\n```\n\nSee SDDM README: No User Icon.\n\n"
    },
    {
      "title": "Numlock",
      "level": 3,
      "content": "If you want to enforce numlock to be enabled, set Numlock=on in the [General] section.\n\nIf SDDM is running under Wayland, the numlock setting currently does not work. You may need to change KWin settings to enable it, see this issue.\n\n"
    },
    {
      "title": "Rotate display",
      "level": 3,
      "content": "See Xrandr#Configuration.\n\n"
    },
    {
      "title": "DPI settings",
      "level": 3,
      "content": "Sometimes it is useful to set up the correct monitor's PPI settings on a \"Display Manager\" level.[1] To do so you need to add to ServerArguments the parameter -dpi your_dpi at the end of the string. For example:\n\n```\n/etc/sddm.conf.d/dpi.conf\n```\n\n```\n[X11]\nServerArguments=-nolisten tcp -dpi 94\n```\n\n"
    },
    {
      "title": "Enable HiDPI",
      "level": 3,
      "content": "Create the following file:\n\n```\n/etc/sddm.conf.d/hidpi.conf\n```\n\n```\n[Wayland]\nEnableHiDPI=true\n\n[X11]\nEnableHiDPI=true\n```\n\nWhen using Wayland, the HiDPI scaling depends on the greeter used.[2] For instance, when using a Qt-based greeter such as Breeze, add the following configuration:\n\n```\n[General]\nGreeterEnvironment=QT_SCREEN_SCALE_FACTORS=2,QT_FONT_DPI=192\n```\n\n"
    },
    {
      "title": "Enable virtual keyboard",
      "level": 3,
      "content": "Install qt6-virtualkeyboard (or another virtual keyboard).\n\nCreate the following file:\n\n```\n/etc/sddm.conf.d/virtualkbd.conf\n```\n\n```\n[General]\nInputMethod=name_of_virtual_keyboard\n```\n\nSDDM now displays a button in lower-left corner of login screen to open the virtual keyboard.\n\n"
    },
    {
      "title": "Using a fingerprint reader",
      "level": 3,
      "content": "Note: But that configuration does not include login, only unlocking of existing sessions.\n\nBut that configuration does not include login, only unlocking of existing sessions.\n\nBecause KWallet requires passwordbased auth on login (see below), you might still want to skip the setup for fprint with SDDM.\n\nSDDM works with a fingerprint reader when using fprint. After installing fprint and adding fingerprint signatures, add the following to the top of /etc/pam.d/sddm:\n\n```\n/etc/pam.d/sddm\n```\n\n```\nauth \t\t\tsufficient  \tpam_fprintd.so\n```\n\nIn order to use either a password or a fingerprint, you can instead add the following to the top of the file:\n\n```\n/etc/pam.d/sddm\n```\n\n```\nauth \t\t\t[success=1 new_authtok_reqd=1 default=ignore]  \tpam_unix.so try_first_pass likeauth nullok\nauth \t\t\tsufficient  \tpam_fprintd.so\n```\n\nNote that KWallet cannot be unlocked using a fingerprint reader (see KDE Wallet#Unlock KDE Wallet automatically on login), but the first line ensures that a password login will automatically unlock KWallet.\n\nIf you now press enter in the empty password field, the fingerprint reader should start working.\n\n"
    },
    {
      "title": "Rootless",
      "level": 3,
      "content": "Traditionally, the X11 display server has been run with root privileges by default. This rootful mode allows X11 to have unrestricted access to system resources, which was necessary for its operation in environments where direct hardware access and management were common. However, with the increasing emphasis on security in modern computing environments, efforts have been made to transition to rootless modes, which is also why Wayland by default runs in rootless mode.\n\nStarting unprivileged X11 (and Wayland) sessions has been supported since sddm 0.20.0.[3]\n\nTo enable rootless mode: create a new configuration file under /etc/sddm.conf.d/, name it something meaningful, and add the following to it, replacing x11-user with wayland if necessary.\n\n```\n/etc/sddm.conf.d/rootless-x11.conf\n```\n\n```\n[General]\nDisplayServer=x11-user\n```\n\nTo confirm whether you are running in rootless mode check which user owns the compositor process (e.g. kwin_wayland)\n\n- SDDM considers its Wayland support experimental.\n- By default DisplayServer=wayland attempts to use the weston compositor, even if it's not installed, to use a different Wayland compositor, enter the program and relevant arguments to the CompositorCommand option as described in #KDE Plasma / KWin, see also sddm.conf(5) for more.\n\n"
    },
    {
      "title": "KDE Plasma / KWin",
      "level": 4,
      "content": "Adding the following lines to your configuration file sets the Wayland compositor to KWin and enables the wlr_layer_shell Wayland protocol extension. This requires layer-shell-qt and layer-shell-qt5 for SDDM themes using Qt6 and Qt5, respectively.\n\n```\n/etc/sddm.conf.d/10-wayland.conf\n```\n\n```\n[General]\nDisplayServer=wayland\nGreeterEnvironment=QT_WAYLAND_SHELL_INTEGRATION=layer-shell\n\n[Wayland]\nCompositorCommand=kwin_wayland --drm --no-lockscreen --no-global-shortcuts --locale1\n```\n\nTo enable virtual keyboard support (e.g. using qt6-virtualkeyboard or maliit-keyboard), append the --inputmethod flag with the appropriate keyboard to the kwin_wayland command as shown below. Do not set the option InputMethod in the section General, since this will cause the virtual keyboard to no longer be shown.\n\n```\n/etc/sddm.conf.d/10-wayland.conf\n```\n\n```\n[Wayland]\nCompositorCommand=kwin_wayland --drm --no-lockscreen --no-global-shortcuts --locale1 --inputmethod maliit-keyboard\n```\n\nChanges to your display configuration made in a Plasma Wayland session (e.g. monitor layout, resolution, etc) will not persist to SDDM. To make them persist open Plasma's System Settings and navigate to Colors & Themes > Login Screen (SDDM) and click \"Apply Plasma Settings...\". You will need to have permission to perform this action.\n\nThe same can be achieved manually with the following:\n\nTo enable correct display & monitor handling in SDDM (scaling, monitor resolution, hz,...), you can copy or modify the appropriate configuration file from your home directory to the one of SDDM:\n\n```\n# cp ~/.config/kwinoutputconfig.json /var/lib/sddm/.config/\n# chown sddm:sddm /var/lib/sddm/.config/kwinoutputconfig.json\n```\n\nTo also enable correct input handling in SDDM (tap-to-click, touchscreen mapping,...), you can copy the appropriate configuration file from your home directory to the one of SDDM:\n\n```\n# cp ~/.config/kcminputrc /var/lib/sddm/.config/\n# chown sddm:sddm /var/lib/sddm/.config/kcminputrc\n```\n\n"
    },
    {
      "title": "Blank screen with cursor, but no greeter shows",
      "level": 3,
      "content": "Greeter crashes if there is no available disk space. Check your disk space with df -h.\n\nIf disk space is not the issue, it may be due to a bug. Switch to another TTY, and then try loginctl unlock-session session_id or to restart SDDM.\n\n"
    },
    {
      "title": "Hangs after login",
      "level": 3,
      "content": "Try removing ~/.Xauthority and logging in again without rebooting. Rebooting without logging in creates the file again and the problem will persist.\n\n"
    },
    {
      "title": "SDDM starts on tty1 instead of tty7",
      "level": 3,
      "content": "SDDM follows the systemd convention of starting the first graphical session on tty1.\n\nNote that the config file still has the option MinimumVT but is ignored since SDDM version 0.20: sddm.conf(5) § MinimumVT=.\n\n"
    },
    {
      "title": "One or more users do not show up on the greeter",
      "level": 3,
      "content": "By default, SDDM is configured to displays only users with a UID in the range of 1000 to 60513. If the UIDs of the desired users are outside this range then you will have to modify the range.\n\nFor example, for a UID of 501, set MinimumUid and hide those with shells used by system users:\n\n```\n/etc/sddm.conf.d/uid.conf\n```\n\n```\n[Users]\nHideShells=/usr/bin/nologin,/sbin/nologin,/bin/false,/usr/bin/git-shell\nMinimumUid=500\n```\n\nFor users with a higher UIDs, set MaximumUid to the appropriate value.\n\n"
    },
    {
      "title": "User avatars do not show up on the greeter",
      "level": 3,
      "content": "User avatars are not shown on the greeter if the number of users exceeds DisableAvatarsThreshold parameter or if avatars are not enabled at all as controlled by EnableAvatars parameter. To circumvent this add the following lines to your sddm configuration:\n\n```\n/etc/sddm.conf.d/avatars.conf\n```\n\n```\n[Theme]\nEnableAvatars=true # enable avatars\nDisableAvatarsThreshold=7 # set the threshold for the number of users. Avatars are not shown if this threshold is exceeded.\n```\n\n"
    },
    {
      "title": "SDDM loads only US keyboard layout",
      "level": 3,
      "content": "SDDM loads the keyboard layout specified in /etc/X11/xorg.conf.d/00-keyboard.conf. You can generate this configuration file by localectl set-x11-keymap command. See Keyboard configuration in Xorg for more information.\n\nAn alternative way of setting the keyboard layout that will only set it in SDDM and not subsequent sessions is to invoke a setxkbmap command in the startup script of SDDM, located at /usr/share/sddm/scripts/Xsetup. See Xorg/Keyboard configuration#Using setxkbmap for examples.\n\nSDDM may also incorrectly display the layout as US but will immediately change to the correct layout after you start typing your password [5]. This seems to not be a bug in SDDM but in X server.[6]\n\n"
    },
    {
      "title": "Screen resolution is too low",
      "level": 3,
      "content": "Issue may be caused by HiDPI usage for monitors with corrupted EDID [7]. If you have enabled HiDPI, try to disable it.\n\nIf even the above fails, you can try setting your screen size in a Xorg configuration file:\n\n```\n/etc/X11/xorg.conf.d/90-monitor.conf\n```\n\n```\nSection \"Monitor\"\n        Identifier      \"<default monitor>\"\n        DisplaySize     345 194 # in millimeters\nEndSection\n```\n\n"
    },
    {
      "title": "Long load time on autofs home directory",
      "level": 3,
      "content": "SDDM by default tries to display avatars of users by accessing ~/.face.icon file. If your home directory is an autofs, for example if you use dm-crypt, this will make it wait for 60 seconds, until autofs reports that the directory cannot be mounted.\n\nYou can disable avatars by creating the following configuration file:\n\n```\n/etc/sddm.conf.d/avatar.conf\n```\n\n```\n[Theme]\nEnableAvatars=false\n```\n\n"
    },
    {
      "title": "X authority (aka MIT-MAGIC-COOKIE) file",
      "level": 3,
      "content": "SDDM uses a random fresh UUID for the auth file as described in details at [8]. So in order to find that file one may use a script:\n\n```\n# find /var/run/sddm/ -type f\n```\n\nThis may be needed if one needs to start x11vnc when there is no user logged in. For example:\n\n```\n# x11vnc -display :0 -auth \"$( find /var/run/sddm/ -type f )\"\n```\n\n"
    },
    {
      "title": "Overlapping greeters on multiscreen setup",
      "level": 3,
      "content": "It happens that the X monitor layout is not setup correctly on multiscreen setup leading to overlapping greeters. To solve this add the following lines to order your sddm greeter layout from left to right:\n\n```\n/usr/share/sddm/scripts/Xsetup\n```\n\n```\nfor next in $(xrandr --listmonitors | grep -E \" *[0-9]+:.*\" | cut -d\" \" -f6); do\n  [ -z \"$current\" ] && current=$next && continue\n  xrandr --output $current --auto --output $next --auto --right-of $current\n  current=$next\ndone\n```\n\n"
    },
    {
      "title": "Login session appears on an unexpected display",
      "level": 3,
      "content": "It can happen that the SDDM login session appears on a different display than your primary display if multiple displays are connected. This problem can be annoying if the secondary display is rotated and the primary display is not. A simple fix to this problem is to use xrandr to configure the displays before the login session using Xsetup script. E.g. here xrandr reports that there are two connected displays where the secondary display (DP-2) is left of the primary display (DP-4).\n\n```\n# xrandr | grep -w connected\nDP-2 connected 2160x3840+0+0 left (normal left inverted right x axis y axis) 597mm x 336mm\nDP-4 connected primary 3840x2160+2160+0 (normal left inverted right x axis y axis) 697mm x 392mm\n```\n\nThe following Xsetup recreates the above setup for the login window:\n\n```\n/usr/share/sddm/scripts/Xsetup\n```\n\n```\n#!/bin/sh\n# Xsetup - run as root before the login dialog appears\n\nxrandr --output DP-4 --auto --primary\nxrandr --output DP-2 --left-of DP-4 --rotate left --noprimary\n```\n\n"
    },
    {
      "title": "Black screen after logout with NVIDIA graphics card",
      "level": 3,
      "content": "One may encounter a complete black screen or with only cursor/display device logo on it after the logout of any user. This happens because sddm.service starts faster than the NVIDIA drivers. Consider using early KMS.\n\n"
    },
    {
      "title": "Failing first password attempt results in text clearing itself after a few keystrokes on subsequent attempts",
      "level": 3,
      "content": "Use a different theme than the default.\n\n"
    },
    {
      "title": "Screen out of sync on hybrid graphics with Wayland",
      "level": 3,
      "content": "If you set up SDDM with kwin_wayland compositor, one may encounter a screen out of sync when booting. If returning back to X11 works well, and you're using mesa-amber drivers, chances are Wayland will work well by just replacing your current mesa-amber drivers with mesa. You can find more details about this issue at KDE Bug 483804.\n\n"
    },
    {
      "title": "Some themes crash",
      "level": 3,
      "content": "Some SDDM themes do not specify QtVersion in metadata.desktop and SDDM starts with incompatible greeter (qt5 instead of qt6).\n\nIf you have set custom theme but on reboot there is default theme with error Library import requires a version, you need to add QtVersion=6 to /usr/share/sddm/themes/ThemeName/metadata.desktop.\n\n"
    }
  ]
}