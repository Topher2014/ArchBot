{
  "title": "GRUB/EFI examples",
  "url": "https://wiki.archlinux.org/title/GRUB/EFI_examples",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIt is well known that different motherboard manufactures implement UEFI differently. The purpose of this page is to show hardware-specific methods known to work when installing/restoring GRUB in EFI mode.\n\n"
    },
    {
      "title": "Aspire V3-571G (Possibly other Aspire One laptops as well)",
      "level": 3,
      "content": "Some variations of this laptop have a only partial EFI compatibility due to originally shipping with Windows 7 only. Later revisions of this laptop shipped with more complete UEFI compatibility. Due to this the earlier revisions can only boot GRUB if it is placed where the Windows boot loader binary is expected (esp/EFI/BOOT/bootx64.efi). However the binary can only be booted manually from the boot menu (on key F12), likely because it is missing Microsoft signatures. A solution to this problem is to upgrade to the newer version of the system firmware, however the process is not straight forward as earlier revisions of the machine are locked out of upgrading for some reason.\n\nThe following steps can be taken to bypass the restriction and upgrade to a later revision firmware:\n\n- Acquire an incompatible 2.x version of the BIOS firmware for the same model machine from Acer[dead link 2023-04-23 â“˜] Acer CDN direct linkArchive.org mirror.\n- Extract the archive to obtain the flasher executable (eg. Q5WV1221.exe).\n- Open this executable in a hex editor of your choice (a good simple one is ghex).\n- In the hex editor search for the block flag string DisableSecureCapsuleFlash=1.\n- Change the ASCII string so that it becomes DisableSecureCapsuleFlash=0 (That's changing the last byte from hex 31 to 30).\n- Save the modified binary.\n- Obtain a copy of FreeDOS, flash it to a boot media and put your modified binary on the boot media as well (more on that here Flashing BIOS from Linux#FreeDOS)\n- Run your modified binary from within FreeDOS and follow the instructions on screen. Upon completion you should have your firmware upgrade to the officially unsupported 2.x version.\n- You can now install GRUB normally as described here GRUB#UEFI systems.\n\nMore info:\n\n- https://www.bios-mods.com/forum/Thread-Upgrade-Bios-To-UEFI-Insyde?pid=159051#pid159051\n- https://catchtito.blogspot.com/2013/05/how-to-update-to-2x-bios-from-1x-bios.html\n\n"
    },
    {
      "title": "Apple Macs",
      "level": 2,
      "content": "Use bless command from within macOS to set grubx64.efi as the default boot option. You can also boot from the macOS install disc and launch a Terminal there if you only have Linux installed. In the Terminal, create a directory and mount the EFI system partition:\n\n```\n# cd /Volumes\n# mkdir efi\n# mount -t msdos /dev/disk0s1 /Volumes/efi\n```\n\nThen run bless on grub.efi and on the EFI system partition to set them as the default boot options.\n\n```\n# bless --folder=/Volumes/efi --file=/Volumes/efi/EFI/GRUB/grubx64.efi --setBoot\n# bless --mount=/Volumes/efi --file=/Volumes/efi/EFI/GRUB/grubx64.efi --setBoot\n```\n\n"
    },
    {
      "title": "Z68 Family and U47 Family",
      "level": 3,
      "content": "```\n# cp esp/EFI/GRUB/grubx64.efi esp/shellx64.efi\n```\n\nAfter this launch the UEFI Shell from the UEFI setup/menu (in ASUS UEFI BIOS, switch to advanced mode, press Exit in the top right corner and choose \"Launch EFI shell from filesystem device\"). The GRUB menu will show up and you can boot into your system. Afterwards you can use efibootmgr to setup a menu entry, for example if you have the EFI system partition on /dev/sda1:\n\n```\n# efibootmgr --create --disk /dev/sda --part 1 --write-signature --loader /EFI/GRUB/grubx64.efi --label \"GRUB\" --verbose\n```\n\nIf your motherboard has no such option (or even if it does), you can use UEFI shell to create a UEFI boot option for the Arch partition temporarily.\n\nOnce you boot into the UEFI shell, add a UEFI boot menu entry:\n\n```\nShell> bcfg boot add 0 FS0:\\EFI\\GRUB\\grubx64.efi \"GRUB\"\n```\n\nwhere FS0: is the mapping corresponding to the EFI system partition and \\EFI\\GRUB\\grubx64.efi is the file from the --loader from the efibootmgr command above.\n\nThis will temporarily add a UEFI boot option for the next boot to get into Arch. Once in Arch, modprobe efivars and confirm that efibootmgr creates no errors (no errors meaning you successfully booted in UEFI mode). Then GRUB installation can be performed again and should successfully permanently add a boot entry in the UEFI menu.\n\n"
    },
    {
      "title": "ux32vd",
      "level": 3,
      "content": "There is a caveat. If the machine was booted from MBR then grub-install (or efibootmgr) will fail to create the UEFI boot entry with the following error:\n\n```\nEFI variables are not supported on this system\n```\n\nYou first need to boot the machine with EFI and then create the boot entry. This can be done the way described for Z68 Family: by copying esp/EFI/GRUB/grubx64.efi into esp/shellx64.efi and selecting \"Launch EFI shell from filesystem device\". After successful boot it is possible to create a boot entry using grub-install or efibootmgr.\n\n"
    },
    {
      "title": "P8Z77 Family",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nInstall GRUB and copy the modified UEFI Shell binary to ESP.\n\nThe EFI system partition should contain just two files:\n\n```\n/Shell.efi\n/EFI/GRUB/grubx64.efi\n```\n\n- Reboot and enter the BIOS (the Delete key will do this).\n- Using the arrow keys, move to the exit menu and drop down to the EFI shell.\n- Add an entry for Arch to the menu. Below is an example, see the Unified Extensible Firmware Interface#Launching UEFI Shell article for more.\n\nWithin UEFI shell\n\n```\nShell> bcfg boot dump -v\nShell> bcfg boot add 1 FS0:\\EFI\\GRUB\\grubx64.efi \"GRUB\"\nShell> exit\n```\n\n- Reboot the machine and enter the BIOS.\n- Navigate to the Boot section and adjust the boot order to with the \"GRUB\" being the one on the SSD.\n- Boot to this entry and enjoy.\n\n"
    },
    {
      "title": "M5A97",
      "level": 3,
      "content": "Finish the standard Arch install procedures, making sure that you partition your boot hard disk as GPT.\n\nInstall GRUB and copy the modified UEFI Shell binary to ESP.\n\nThe reason that we need this shell application is that the efibootmgr command will fail silently during grub-install.\n\nAfter this launch the UEFI Shell from the UEFI setup/menu (in ASUS UEFI BIOS, switch to advanced mode, press Exit in the top right corner and choose \"Launch EFI shell from filesystem device\"). The UEFI shell will show up. From here we need to add our GRUB entry to the NVRAM.\n\n```\nShell> bcfg boot add 3 FS0:\\EFI\\GRUB\\grubx64.efi \"GRUB\"\n```\n\nwhere FS0: is the mapping corresponding to the EFI system partition and 3 is the zero based boot entry index.\n\nTo list the current boot entries you can run:\n\n```\nShell> bcfg boot dump -v\n```\n\n"
    },
    {
      "title": "Z97M Pro4",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nThis is a similar procedure to Asus Z68 Family. This was tested on a Z97M Pro4 BIOS P1.90.\n\n```\n# cp esp/EFI/GRUB/grubx64.efi esp/shellx64.efi\n```\n\nAfter this launch the UEFI Shell from the UEFI setup/menu (in ASROCK UEFI BIOS, goto Exit tab and choose \"Launch EFI Shell From Filesystem Device\"). The GRUB menu will show up and you can boot into your system. Afterwards you can use efibootmgr to setup a menu entry, for example if you have the EFI system partition on /dev/sda1:\n\n```\n# efibootmgr --create --disk /dev/sda --part 1 --write-signature --loader /EFI/GRUB/grubx64.efi --label \"GRUB\" --unicode\n```\n\n"
    },
    {
      "title": "PowerEdge T30",
      "level": 3,
      "content": "The Dell UEFI implementation needs the UEFI firmware workaround to load grub. Otherwise it will drop into a \"no OS found\" screen.\n\n"
    },
    {
      "title": "Latitude E7450",
      "level": 3,
      "content": "In addition to the UEFI firmware workaround (without which GRUB is not launched), the Dell Latitude seems to require to have the EFI system partition mounted on /boot. When ESP is mounted on /efi, GRUB fails to find the configuration files and launches the rescue console.\n\n"
    },
    {
      "title": "MSI",
      "level": 2,
      "content": "These MSI motherboards seem to want the EFI program to exist in a different location from where GRUB installs it. Do one of the following after following the instructions for installing GRUB:\n\n"
    },
    {
      "title": "B250M PRO-VH",
      "level": 3,
      "content": "```\n# mkdir esp/EFI/BOOT\n# cp esp/EFI/grub/grubx64.efi esp/EFI/BOOT/shellx64.efi\n```\n\n"
    },
    {
      "title": "B150 PC MATE / B250 PC MATE / H110I PRO / Z370 GAMING PLUS / MPG B760I EDGE WIFI",
      "level": 3,
      "content": "Install GRUB to the default/fallback boot path.\n\n"
    },
    {
      "title": "EliteBook 840 G1 & Probook 6570b",
      "level": 3,
      "content": "See HP EliteBook 840 G1#UEFI Setup for details.\n\n"
    },
    {
      "title": "S5400 Family",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThis board can run in BIOS or in EFI mode. BIOS mode requires an MBR partitioned hard drive, EFI - a GPT hard drive. Please note that this board operates on the Intel EFI v1.10 specification, and is IA32 (32-bit) only. The normal procedure for UEFI installation can be followed, with the exception of the following changes.\n\n- Instead of using the grub-efi-x86_64 target, grub-efi-i386 has to be used\n- The bcfg command is not available for pre-UEFI (v2.0) firmware. A startup.nsh file can be used on the root of the EFI system partition containing the path to the boot loader. For example: FS0:\\EFI\\GRUB\\grubia32.efi has to be placed in the startup.nsh file on the root of the EFI system partition.\n- The grub.cfg file has to be placed in the same directory as the grub EFI binary, otherwise GRUB will not find it and enter the interactive shell.\n\n"
    },
    {
      "title": "K450 IdeaCentre",
      "level": 3,
      "content": "The EFI system partition requires the file \\EFI\\BOOT\\BOOTx64.efi to be present in order to boot, otherwise you will receive \"Error 1962: No operating system found. Boot sequence will automatically repeat.\"\n\nInstall GRUB to the default/fallback boot path.\n\nThis is a workaround for what is likely a bug in the UEFI implementation.\n\n"
    },
    {
      "title": "M92p ThinkCentre",
      "level": 3,
      "content": "This system whitelists UEFI boot entries. It will boot from a entry called \"Red Hat Enterprise Linux\" or \"Windows Boot Manager\"(Jan. 2021). So specify the bootloader-id appropriately:\n\n```\n# grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=\"Red Hat Enterprise Linux\" --recheck --debug\n```\n\nor\n\n```\n# grub-install --target=x86_64-efi --efi-directory=esp --bootloader-id=\"Windows Boot Manager\" --recheck --debug\n```\n\nIt is also possible to edit your EFI config with efibootmgr. First, list your boot entries:\n\n```\n# efibootmgr\n```\n\nDelete old entry for Windows Boot Manager:\n\n```\n# efibootmgr -Bb 0000\n```\n\nNow create a new boot entry which points to your desired boot loader on your hard drive. Be aware: -p defines on which partition your EFI system partition lies.\n\n```\n# efibootmgr -c -d /dev/sda -p 1 -L \"Windows Boot Manager\" -l \"\\EFI\\boot\\grubx64.efi\"\n```\n\nThis will set up your EFI to boot the entry \"Windows Boot Manager\" and load the grub boot loader.\n\n"
    },
    {
      "title": "X270 Thinkpad",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nInstall GRUB to the default/fallback boot path.\n\n"
    }
  ]
}