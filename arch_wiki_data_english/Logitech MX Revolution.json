{
  "title": "Logitech MX Revolution",
  "url": "https://wiki.archlinux.org/title/Logitech_MX_Revolution",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article shows how to configure a Logitech MX Revolution mouse.\n\n"
    },
    {
      "title": "Install",
      "level": 2,
      "content": "Install xbindkeys and xvkbdAUR.\n\n"
    },
    {
      "title": "Xorg",
      "level": 3,
      "content": "Xorg is able to auto-detect this mouse just fine. However, it has a 17 key mapping.\n\nEdit the mouse section of /etc/X11/xorg.conf:\n\n```\nSection \"InputDevice\"\n    Identifier  \"Mouse0\"\n    Driver      \"mouse\"\n    Option      \"Protocol\" \"auto\"\n    Option      \"Device\" \"/dev/input/mice\"\n    Option      \"ZAxisMapping\" \"4 5\"\n    #Option      \"XAxisMapping\" \"6 7\"  #uncomment if you want horizontal scrolling with mouse wheel\n    Option      \"Buttons\"    \"17\"\nEndSection\n```\n\n"
    },
    {
      "title": "Bind mouse buttons with Xbindkeys",
      "level": 3,
      "content": "We will put all of the settings into ~/.xbindkeysrc the configuration file of Xbindkeys.\n\nYou will want to put in ~/.xbindkeysrc events to send to xvkbd. Here is a sample:\n\n```\n\"/usr/bin/xvkbd -text \"\\[Alt_L]\\[Left]\"\"\n  m:0x0 + b:8\n\"/usr/bin/xvkbd -text \"\\[Alt_L]\\[Right]\"\"\n  m:0x0 + b:9\n\"/usr/bin/xvkbd -text \"\\[Control_L]\\[Page_Up]\"\"\n  m:0x0 + b:6\n\"/usr/bin/xvkbd -text \"\\[Control_L]\\[Page_Down]\"\"\n  m:0x0 + b:7\n```\n\nFor some reason some combinations of keyboard events refuse to work with certain buttons for me.\n\nm:0x0 refers to your first mouse. The \"+b:8\" refers to the button you push. Here is a list of all the buttons:\n\n```\n# Mappings for keys for MX Revo\n# b:1\t-\tleft mouse button\n# b:2\t-\tleft and right mouse button together\n# b:3 \t-\tright mouse button\n# b:4\t-\tmouse wheel up\n# b:5\t-\tmouse wheel down\n# b:6\t-\tmouse wheel left\n# b:7\t-\tmouse wheel right\n# b:8\t-\tback button\n# b:9\t-\tforward button\n# b:10\t-\t-none-\n# b:11\t-\t-none-\n# b:12\t-\t-none-\n# b:13\t-\tmedia wheel up\n# b:14\t-\t-none-\n# b:15\t-\tmedia wheel down\n# b:16\t-\t-none-\n# b:17\t-\tmedia wheel press\n```\n\nTo remap the seach button to something instead of search, put something along the lines of the following into ~/.xbindkeysrc.\n\nExample here is to remap it to Alt+F4 to close a window.\n\n```\n\"/usr/bin/xvkbd -text \"\\[Alt_L]\\[F4]\"\"\nc:0xE1\n```\n\nAlternatively, Gnome will recognize the small middle search button as a keyboard event. Thus, you just have to go into keyboard shortcuts and remap that to something. This is probably the most reliable way to go about using this key.\n\n"
    },
    {
      "title": "Bind mouse buttons with Xmodmap",
      "level": 3,
      "content": "It is possible to use xmodmap to register the button press as a middle click. Begin by assigning the key event to Pointer_Button 2.\n\n```\necho \"keycode 225 = Pointer_Button2\" >> ~/.Xmodmap\n```\n\nNow, you can create a startup script that feeds that input into xmodmap and autostart it.\n\n```\n#!/bin/sh \nxmodmap ~/.Xmodmap\n```\n\nAnd do not forget to make it executable.\n\nThe trick only works when \"mousekeys\" are on. So either gnome-keyboard-properties -> Mousekeys -> Enable pointer OR toggle with SHIFT-ALT-NUMLOCK (you want to be able to toggle so you can use the numeric keypad at times). Or in KDE System Settings -> Keyboard & Mouse -> Mouse -> Mouse Navigation -> Check \"Move pointer with keyboard (using the num pad)\"\n\nLastly, add xbindkeys to your startup and you should be good to go.\n\nThe best way to map the search button to middle click is to add the following lines to /etc/sysctl.d/50-mouse.conf:\n\n```\n# Enable mouse button emulation\ndev.mac_hid.mouse_button_emulation = 1\n# Set 2nd button to 217 - the middle button of MX Revolution mouse.\ndev.mac_hid.mouse_button2_keycode = 217\n# Optionally reset default mapping of Alt_R to right click\n# by mapping right click to a non-existing key\ndev/mac_hid/mouse_button3_keycode = 999\n```\n\n"
    },
    {
      "title": "Mouse Wheel Mode",
      "level": 3,
      "content": "In order to enable or disable mouse wheel's free spinning, you can use revoco2AUR. Giving the following command from shell, or, alternatively, putting it in a script executed at the startup should enable/disable free spinning.\n\n```\n# revoco free  # in order to enable free spinning\n# revoco click # in order to disable free spinning\n```\n\nIt is also possible to remap the button to toggle between free and click.\n\n```\n# revoco manual 6 # use search button instead of middle click.\n```\n\nThis will free the wheel button allowing it to act as a normal mouse 3 button.\n\nMore Info can be found here\n\n"
    }
  ]
}