{
  "title": "Fprintd",
  "url": "https://wiki.archlinux.org/title/Fprintd",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Fingerprint GUI\n- ThinkFinger\n\nFrom the fprint homepage:\n\nThe idea is to use the built-in fingerprint reader in some notebooks for login using PAM. This article will also explain how to use regular password for backup login method (solely fingerprint scanner is not recommended due to numerous reasons).\n\n"
    },
    {
      "title": "Prerequisites",
      "level": 2,
      "content": "You can check if your device is supported by checking the list of supported devices or the list of unsupported devices. To check which one you have, type:\n\n```\n$ lsusb\n```\n\nThe lsusb tool is available inside the usbutils package.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the fprintd package. imagemagick might also be needed.\n\nSome devices require a different fork of libfprint, not (yet?) merged with the main libfprint:\n\n- libfprint-tod — For touch-based sensors.\n\n- libfprint-elanmoc2 — For ELAN 04f3:0c4c waiting merge.\n\n- libfprint-elanmoc2-newdrvs — Experimental for 04f3:0c4c or a 04f3:0c00, waiting merge.\n\nThis list is not exhaustive. See many more forks for other devices in the AUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Upstream recommends using S2Idle sleep instead of S3 but depending on your device, S3 might work as well.\n\n"
    },
    {
      "title": "Login configuration",
      "level": 3,
      "content": "- If you use GDM, the fingerprint-option is already available in the login menu (if not add yourself to the input user group). You can skip this section!\n- If you use SDDM, see SDDM#Using a fingerprint reader.\n\nAdd pam_fprintd.so as sufficient to the top of the auth section of /etc/pam.d/system-local-login:\n\n```\n/etc/pam.d/system-local-login\n```\n\n```\nauth      sufficient pam_fprintd.so\nauth      include   system-login\n...\n```\n\nThis tries to use fingerprint login first, and if it fails or if it finds no fingerprint signatures in the given user's home directory, it proceeds to password login.\n\nYou can also modify other files in /etc/pam.d/{login,su,sudo,gdm,lightdm} in the same way. For example /etc/pam.d/polkit-1 for polkit based authentication (GNOME & many other desktop environments). If /etc/pam.d/polkit-1 does not exist, copy it from /usr/lib/pam.d/polkit-1. KDE already has fingerprint authentication configured in /etc/pam.d/kde-fingerprint so you do not need to edit that file.\n\nAdding pam_fprintd.so as sufficient to any configuration file in /etc/pam.d/ when a fingerprint signature is present will only prompt for fingerprint authentication. This prevents the use of a password if you cannot Ctrl+c fingerprint authentication (due to the lack of a shell). In order to use either a password or a fingerprint in a graphical interface, add the following line to the top of any files required:\n\n```\nauth\t\tsufficient  \tpam_unix.so try_first_pass likeauth nullok\nauth\t\tsufficient  \tpam_fprintd.so\n...\n```\n\nThis will prompt for a password; pressing Enter on a blank field will proceed to fingerprint authentication.\n\nIf you want to prompt for fingerprint and password input at the same time, you can use pam-fprint-grosshackAUR. This may be needed for some graphical programs which do not allow blank password input, such as Gnome's built-in polkit agent. To use this package, add the following lines to the top of any files required:\n\n```\nauth\t\tsufficient  \tpam_fprintd_grosshack.so\nauth\t\tsufficient  \tpam_unix.so try_first_pass nullok\n...\n```\n\n"
    },
    {
      "title": "Create fingerprint signature",
      "level": 3,
      "content": "You will need to have an authentication agent running before being able to enroll.\n\nTo add a signature for a finger, run:\n\n```\n$ fprintd-enroll\n```\n\nor create a new signature for all fingers:\n\n```\n$ fprintd-delete \"$USER\"\n$ for finger in {left,right}-{thumb,{index,middle,ring,little}-finger}; do fprintd-enroll -f \"$finger\" \"$USER\"; done\n```\n\nYou will be asked to scan the given finger. Swipe your right index finger five times. After that, the signature is created in /var/lib/fprint/.\n\nYou can also enroll without an authentication agent:\n\n```\n# fprintd-enroll user\n```\n\nTo verify the newly created fingerprint, use:\n\n```\n$ fprintd-verify\n```\n\nFor more information, see fprintd(1).\n\n"
    },
    {
      "title": "Restrict enrolling",
      "level": 3,
      "content": "Note: **This article or section is a candidate for merging with polkit.** This article or section is a candidate for merging with polkit.\n\nThis article or section is a candidate for merging with polkit.\n\nBy default every user is allowed to enroll new fingerprints without prompting for the password or the fingerprint. You can change this behavior using polkit rules.\n\nThere are two locations that contains the polkit configuration files:\n\n- /etc/polkit-1/rules.d/\n- /usr/share/polkit-1/rules.d/\n\nNote: **not** \n\nIn the following example only root can enroll fingerprints:\n\n```\n/etc/polkit-1/rules.d/50-net.reactivated.fprint.device.enroll.rules\n```\n\n```\npolkit.addRule(function (action, subject) {\n  if (action.id == \"net.reactivated.fprint.device.enroll\") {\n    return subject.user == \"root\" ? polkit.Result.YES : polkit.Result.NO\n  }\n})\n```\n\n"
    },
    {
      "title": "No devices available",
      "level": 3,
      "content": "If your supported device cannot be found or is claimed to be already open (in use), check the fprintd.service logs in the journal.\n\nYou may find log entries like:\n\n```\nfprintd[2936592]: Corrupted message received\nfprintd[2936592]: Ignoring device due to initialization error: unsupported firmware version\n```\n\nEnsure your device's firmware is up to date with Fwupd.\n\n"
    },
    {
      "title": "gdm hangs when revealing login prompt after suspend",
      "level": 3,
      "content": "This issue is described in libfprint repository. The developers answer is:\n\nThe proposed fix is to create:\n\n```\n/etc/modprobe.d/bluetooth-blacklist.conf\n```\n\n```\nblacklist btusb\n```\n\nOr execute straight away:\n\n```\n# rmmod btusb\n```\n\nThen it should not try to initialize the device.\n\n"
    },
    {
      "title": "Unexpected error while suspending device",
      "level": 3,
      "content": "This issue is described in libfprint repository:\n\n"
    },
    {
      "title": "Fingerprint authentication is not taking effect in the Polkit agent.",
      "level": 3,
      "content": "After adding fingerprint rules to Linux PAM, fingerprint recognition only works for SDDM and sudo, but not for polkit.\n\nCopy the 50-default.rules file to /etc/polkit-1/rules.d/ and change group name wheel to your user group.\n\n```\n# cp /usr/share/polkit-1/rules.d/50-default.rules /etc/polkit-1/rules.d/\n```\n\n```\n/etc/polkit-1/rules.d/50-default.rules\n```\n\n```\npolkit.addAdminRule(function(action, subject) {\n    return [\"unix-group:wheel\"];\n});\n```\n\n"
    },
    {
      "title": "Debug",
      "level": 3,
      "content": "Use the following environment variable and command line flag:\n\n```\n# G_MESSAGES_DEBUG=all /usr/lib/fprintd -t\n```\n\n"
    },
    {
      "title": "fprintd starts before fingerprint reader device is initialized after resuming from sleep",
      "level": 3,
      "content": "Create the following udev rule which enables USB device persistence, replacing the ID with the one for your fingerprint reader which you can find using lsusb:\n\n```\n/etc/udev/rules.d/01-fingerprint.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"usb\", DRIVERS==\"usb\", ATTRS{idVendor}==\"06cb\", ATTRS{idProduct}==\"00fc\", ATTR{power/persist}=\"1\", RUN=\"/usr/bin/chmod 444 %S%p/../power/persist\"\n```\n\n"
    },
    {
      "title": "Sleeping while fprintd is still running breaks fprintd",
      "level": 3,
      "content": "Fprintd waits 30 seconds after a successful login before quitting, so sleeping during that time period may cause fprintd to break. If that happens, create and Template:Enable the following systemd service:\n\n```\n/etc/systemd/system/kill-printd.service\n```\n\n```\nDescription=Kill fprintd before sleep\nBefore=sleep.target\n\n[Service]\nExecStart=killall fprintd\n\n[Install]\nWantedBy=sleep.target\n```\n\n"
    },
    {
      "title": "Enrolling works but verifying does not",
      "level": 3,
      "content": "Some touch-based fingerprint readers generate images too small for fprint's algorithm to work properly. A common workaround for those is swiping instead of touching the sensor, but the speed at which a good image is generated may vary. Some sensors require a slower swipe and some a faster one. Here are some tips regarding what a good image should look like.\n\nIf you want to practice with different speeds to see which generates a better image, try dumping the images with the script examples/img-capture and comparing it with the examples from above (you will need to compile libfprint from source).\n\nSee also https://gitlab.freedesktop.org/libfprint/libfprint/-/issues/174\n\n"
    }
  ]
}