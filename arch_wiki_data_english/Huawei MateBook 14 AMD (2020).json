{
  "title": "Huawei MateBook 14 AMD (2020)",
  "url": "https://wiki.archlinux.org/title/Huawei_MateBook_14_AMD_(2020)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nTable content:\nHardware | PCI/USB ID | Working?\nTouchpad |  | Yes\nKeyboard |  | Yes\nWebcam | 13d3:56db | Yes\nBluetooth | 1358:c123 | Yes\nAudio | 1022:15e3 | Yes\nWireless | 10ec:c822 | Yes\nFingerprint reader | 27c6:5110 | No\nBattery protection |  | Yes\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "The Western Digital SN730 NVMe SSD comes pre-configured with a logical sector size of 512 bytes and a physical sector size of 4096 bytes. Switching the logical sector size to the native 4096 byte size might improve performance as indicated by the vendor. This will erase all data on the device! To format the SSD with a different sector size, run:\n\n```\n$ nvme format --lbaf=NUMBER /dev/nvmeXnY\n```\n\nwith the LBA format according to\n\n```\n$ nvme id-ns -H /dev/nvmeXnY\n```\n\n```\n[...]\nLBA Format  0 : Metadata Size: 0   bytes - Data Size:  512 bytes - Relative Performance: 0x2 Good \nLBA Format  1 : Metadata Size: 0   bytes - Data Size: 4096 bytes - Relative Performance: 0x1 Better\n```\n\nInstallation of Arch Linux can proceed normally. Refer to the Installation guide for more information.\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "fwupd detects the touchpad, GPU, UEFI, TPM, DisplayPort Hub and NVMe drive, although Huawei currently does not provide updates through the Linux Vendor firmware Service (LVFS).\n\nPrevious devices got their BIOS updates published on the Huawei homepage which could be manually installed[1]. However, currently no updates are available for download even though this device receive the update to BIOS version 1.06 after launch.\n\n"
    },
    {
      "title": "Power and temperature monitoring",
      "level": 3,
      "content": "Zen 2 (Ryzen 4000) is currently not supported by lm_sensors. zenpower3-dkmsAUR gives the die temperature and package power consumption.\n\n"
    },
    {
      "title": "Battery protection",
      "level": 3,
      "content": "The Huawei WMI driver v3.3 to expose battery protection thresholds was merged into kernel 5.5[2]. There is an issue[3] where the hardware reports incorrect values for the charge thresholds, preventing battery protection from working. The maintainer of the driver has stated this should be fixed in userspace[4].\n\nA temporary fix is to write some sane values to the file:\n\n```\n# echo '40 70' > /sys/devices/platform/huawei-wmi/charge_control_thresholds\n```\n\nThis will enable battery protection (in this case, the device will stop charging at 70%). In order for matebook-appletAUR to run without superuser rights, add yourself to the huawei-wmi user group since the thresholds are still read-only to non-root.\n\nAlternatively, huawei-wmiAUR will set the group write privileges. This will also take care of the thresholds resetting randomly upon reboot by automatically reinstating the battery charge-thresholds. For more information, see this guide.\n\nIn case that the thresholds does not apply (i.e. does not stop charging) despite being properly set, check whether \"Smart Charging\" is turned on by sending:\n\n```\n# echo 0x00001603 > /sys/kernel/debug/huawei-wmi/arg\n```\n\nThen calling the call twice:\n\n```\n# cat /sys/kernel/debug/huawei-wmi/call\n# cat /sys/kernel/debug/huawei-wmi/call\n```\n\nIf the output reports [{0x00,0x00,0x00,0x00},{0x00,0x04,0x48,0x28,0x46,0x00... then the Smart Charging is enabled and the following instructions need to be run instead to set the limit to 40-70:\n\n```\n# echo 0x462848011503 > /sys/kernel/debug/huawei-wmi/arg\n# cat /sys/kernel/debug/huawei-wmi/call\n# cat /sys/kernel/debug/huawei-wmi/call\n```\n\nSee Huawei-WMI issue 55 for details.\n\n"
    },
    {
      "title": "Audio",
      "level": 2,
      "content": "Speakers and internal microphone work out of the box although the internal microphone picks up a significant amount of noise. To correctly detect a headset with microphone, use the alc255-acer,dell-headset-multi for the value of model=, as explained in Advanced Linux Sound Architecture/Troubleshooting#Wrong model autodetection.\n\n"
    },
    {
      "title": "Fingerprint reader",
      "level": 2,
      "content": "The Goodix fingerprint reader is currently unsupported officially. There is a fork however, which aims to provide support for the device (along with other similar goodix ones). The driver is currently in testing but there is an aur package for it libfprint-goodixtls-gitAUR which works with fprintd\n\n"
    }
  ]
}