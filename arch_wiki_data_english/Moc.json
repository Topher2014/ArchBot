{
  "title": "Moc",
  "url": "https://wiki.archlinux.org/title/Moc",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Music On Console is a lightweight music player similar to MPD, but unlike it, MOC comes with an interface and its server does not support remote access.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install moc-pulseAUR or moc-pulse-svnAUR for the development version. To use the pulseaudio driver, go to #Using PulseAudio.\n\n"
    },
    {
      "title": "Front-ends",
      "level": 2,
      "content": "- mocicon — GTK panel applet to control MOC\n\n- eXo — Qt frontend to MOC, supports scrobbling\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "On mocp first run, the ~/.moc/ directory is created. MOC reads its configuration from the file ~/.moc/config.\n\nSample configuration files can be found in /usr/share/doc/moc/. To configure, copy the examples to ~/.moc/config and edit accordingly.\n\nTo use MOC with v4.1 OSS, see OSS#MOC.\n\nTo change the default key bindings, see /usr/share/doc/moc/keymap.example.\n\n"
    },
    {
      "title": "Using PulseAudio",
      "level": 3,
      "content": "Locate the variable SoundDriver and add PULSEAUDIO: to the front.\n\n```\nSoundDriver = PULSEAUDIO:JACK:ALSA:OSS\n```\n\nThis ensures that PulseAudio gets loaded with first priority. Listing other sound drivers after this are fallbacks when the previous ones are not available.\n\n"
    },
    {
      "title": "Navigation",
      "level": 3,
      "content": "To change directories with the arrow keys uncomment in ~/.moc/config:\n\n```\nKeymap = keymap\n```\n\nEdit the following in ~/.moc/keymap:\n\n```\ngo    = ENTER RIGHT\ngo_up = U LEFT\n#seek_forward  = RIGHT\n#seek_backward = LEFT\n```\n\nTo speed up navigation and detach, set the following in ~/.moc/config:\n\n```\nReadTags = no\nShowTime = no\nTagsCacheSize = 0\n```\n\n"
    },
    {
      "title": "systemd service",
      "level": 3,
      "content": "Enable this service for the respective user:\n\n```\n/etc/systemd/system/moc@.service\n```\n\n```\n[Unit]\nDescription=MOC server\nConditionPathExists=/usr/bin/mocp\nAfter=network.target sound.target\n\n[Service]\nRemainAfterExit=yes\nUser=%I\nExecStart=/usr/bin/mocp -S\nExecStop=/usr/bin/mocp -x\nWorkingDirectory=/home/%I/\n\n[Install]\nWantedBy=multi-user.target\n```\n\n"
    },
    {
      "title": "Themes",
      "level": 3,
      "content": "Several themes for the player GUI are available. To list the available themes and set one, use hotkey T. To set one to permanent use the configuration file ~/.moc/config.\n\n```\nTheme = laras_theme\n```\n\nA selection of example themes can be found in /usr/share/moc/themes/, the installation of mocp-themes-gitAUR adds more of them.\n\nSince themes are just text files, it is easy to create new ones. User defined themes are expected in ~/.moc/themes/.\n\nExample theme file:\n\n```\nbackground                     = white black\nframe                          = white black\nwindow_title                   = white black\ndirectory                      = white black\nselected_directory             = white black reverse\nplaylist                       = white black\nselected_playlist              = white black reverse\nfile                           = white black\nselected_file                  = white black reverse\nselected_info                  = white black reverse\nmarked_file                    = white black bold\nmarked_selected_file           = white black reverse\ninfo                           = white black\nmarked_info                    = white black bold\nmarked_selected_info           = white black reverse\nstatus                         = white black\ntitle                          = white black bold\nstate                          = white black\ncurrent_time                   = white black bold\ntime_left                      = white black bold\ntotal_time                     = white black bold\ntime_total_frames              = white black\nsound_parameters               = white black bold\nlegend                         = white black\ndisabled                       = white black\nenabled                        = white black bold\nempty_mixer_bar                = white black\nfilled_mixer_bar               = white black reverse\nempty_time_bar                 = white black\nfilled_time_bar                = white black reverse\nentry                          = white black\nentry_title                    = white black\nerror                          = white black bold\nmessage                        = white black\nplist_time                     = white black\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Run mocp to start the server and interface. Some useful default shortcuts (press h for more):\n\nTable content:\nStart playing at this file or go to this directory | Enter\nPause | Space or p\nPlay next file | n\nPlay previous file | b\nSilent seek forward by 5s | ]\nSilent seek backward by 5s | [\nSwitch between playlist and file list | Tab\nAdd a file/directory to the playlist | a\nAdd a directory recursively to the playlist | Shift+a\nDelete an item from the playlist | d\nClear the playlist | Shift+c\nIncrease volume by 1% | >\nDecrease volume by 1% | <\nIncrease volume by 5% | . (period)\nDecrease volume by 5% | , (comma)\nSet volume to 10% | Alt+1\nSet volume to 90% | Alt+9\nDetach MOC from the server | q\nQuit | Shift+q\n\nTo shut down the server, run the mocp -x command.\n\n"
    },
    {
      "title": "Scrobbling",
      "level": 2,
      "content": "mocp-scrobblerAUR is a Last.fm (and Libre.fm) scrobbler for MOC with support for now-playing notifications, daemonization and cache. It only depends on Python 3.\n\nCopy the example file to your user configuration directory:\n\n```\nmkdir ~/.mocpscrob/\ncp /usr/share/doc/mocp-scrobbler/config.example  ~/.mocpscrob/config\n```\n\nEdit ~/.mocpscrob/config to add your login and password. The password variable will be replaced with password_md5 on the first run. Its value will be the original value hashed using MD5 algorithm. If you want to change password, just add again password with you new password, and password_md5 will be replaced.\n\nTo scrobble tracks, start mocp-scrobbler as daemon before mocp. You can also use an alias:\n\n```\nalias mocp='/usr/bin/mocp-scrobbler.py -d; mocp'\n```\n\nIn January of 2016 last.fm updated their password requirements, with all new and updated passwords requiring the inclusion of one of the following characters !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~, or a space. This is known to cause an authentication error with mocpscrob configurations which specify passwords not conforming to these new specifications. Changing one's password and updating the ~/.mocpscrob/config password accordingly resolves this issue.\n\n"
    },
    {
      "title": "MOC fails to start",
      "level": 3,
      "content": "If MOC fails to start, it is most probably because of something wrong in ~/.moc/. You can try to fix it, or simply delete the whole folder.\n\n"
    },
    {
      "title": "Strange characters",
      "level": 3,
      "content": "If you see strange-like characters displayed instead of the normal lines (vertical lines to separate space, etc.), you may have a font set incompatible to MOC. Either change the respective font, or edit .moc/config to use ASCII for drawing lines:\n\n```\nASCIILines = no\n```\n\n"
    },
    {
      "title": "FATAL_ERROR: Layout1 is malformed",
      "level": 3,
      "content": "If MOC crashes with this error, try adding either line to .moc/config:\n\n```\nLayout1 = directory(0,0,50%,100%): playlist(50%,0,100%,100%)\n```\n\nor\n\n```\nLayout1 = directory(0,0,50%,100%): playlist(50%,0,FILL,100%)\n```\n\nSee original report and Debian bugs.\n\n"
    },
    {
      "title": "Bluetooth not working unless it is connected before MOC is started",
      "level": 3,
      "content": "When using pipewire, MOC defaults to JACK which appears to be the cause of this issue. Simply changing from jack to ALSA solves this issue through changing the following value within the configuration file:\n\nDefault value:\n\nJACK:OSS:ALSA\n\nNew value:\n\nALSA:OSS:JACK\n\nMOC picks the first working audio driver, thus ALSA will be picked first. This should fix the bluetooth issues.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official documentation\n\n"
    }
  ]
}