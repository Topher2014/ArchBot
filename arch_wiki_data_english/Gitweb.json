{
  "title": "Gitweb",
  "url": "https://wiki.archlinux.org/title/Gitweb",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Gitweb is the default web interface that comes with Git.\n\nGitweb actually supports FCGI natively, so you do not need to wrap it as a CGI script.[1]\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "To install Gitweb you first have to install git and a web server. Now, if you want to quickly test it, see the help of git instaweb. Otherwise, if you want a comprehensive setup, keep reading.\n\nFor all the examples below, you need to install the perl-cgi package. (FS#45431)\n\n"
    },
    {
      "title": "Apache",
      "level": 3,
      "content": "Add the following to the end of your /etc/httpd/conf/httpd.conf:\n\n```\nAlias /gitweb \"/usr/share/gitweb\"\n<Directory \"/usr/share/gitweb\">\n   DirectoryIndex gitweb.cgi\n   Options ExecCGI\n   Require all granted\n   <Files gitweb.cgi>\n   SetHandler cgi-script\n   </Files>\n   SetEnv  GITWEB_CONFIG  /etc/gitweb.conf\n</Directory>\n```\n\nor alternatively add it to a separate file like etc/httpd/conf/extra/gitweb.conf and then add the following to the end of httpd.conf:\n\n```\n# gitweb configuration\nInclude conf/extra/gitweb.conf\n```\n\nIf Apache refuses to display Gitweb, but prints the plain source code of the perl script instead, it is very likely that Apache is not configured to permit CGI execution. Make sure that the following is uncommented in httpd.conf:\n\n```\n<IfModule !mpm_prefork_module>\n   LoadModule cgid_module modules/mod_cgid.so\n</IfModule>\n<IfModule mpm_prefork_module>\n   LoadModule cgi_module modules/mod_cgi.so\n</IfModule>\n```\n\nthen restart httpd.service to apply these changes. For further details about CGI execution with Apache, see https://httpd.apache.org/docs/2.4/howto/cgi.html.\n\n"
    },
    {
      "title": "Lighttpd",
      "level": 3,
      "content": "Add the following to /etc/lighttpd/lighttpd.conf:\n\n```\nserver.modules += ( \"mod_alias\", \"mod_cgi\", \"mod_redirect\", \"mod_setenv\" )\nurl.redirect += ( \"^/gitweb$\" => \"/gitweb/\" )\nalias.url += ( \"/gitweb/\" => \"/usr/share/gitweb/\" )\n$HTTP[\"url\"] =~ \"^/gitweb/\" {\n       setenv.add-environment = (\n               \"GITWEB_CONFIG\" => \"/etc/gitweb.conf\",\n               \"PATH\" => env.PATH\n       )\n       cgi.assign = ( \".cgi\" => \"\" )\n       server.indexfiles = ( \"gitweb.cgi\" )\n}\n```\n\nthen restart lighttpd.service to apply these changes. You may also need to add \".css\" => \"text/css\" to the mimetype.assign line for GitWeb to display properly.\n\n"
    },
    {
      "title": "Nginx",
      "level": 3,
      "content": "Append this location to your nginx configuration (you might want to change the location):\n\n```\n/etc/nginx/nginx.conf\n```\n\n```\nlocation /gitweb.cgi {\n    include fastcgi_params;\n    gzip off;\n    fastcgi_param   SCRIPT_FILENAME  /usr/share/gitweb/gitweb.cgi;\n    fastcgi_param   GITWEB_CONFIG  /etc/gitweb.conf;\n    fastcgi_pass    unix:/run/fcgiwrap.sock;\n}\n\nlocation / {\n    root /usr/share/gitweb;\n    index gitweb.cgi;\n}\n```\n\nIf you follow Nginx#CGI implementation, try replacing include fastcgi_params; with include fastcgi.conf;.\n\nFinally, install fcgiwrap and start/enable fcgiwrap.socket.\n\n"
    },
    {
      "title": "Configuration of Gitweb",
      "level": 2,
      "content": "See gitweb.conf(5) for the list of all configuration options.\n\n"
    },
    {
      "title": "Basic configuration",
      "level": 3,
      "content": "Open (or create if it does not exist) the file /etc/gitweb.conf and place this in it:\n\n```\n/etc/gitweb.conf\n```\n\n```\n# The directories where your projects are. Must not end with a slash.\nour $projectroot = \"/path/to/your/repositories\"; \n\n# Base URLs for links displayed in the web interface.\nour @git_base_url_list = qw(git://<your_server> http://git@<your_server>);\n```\n\nTo enable \"blame\" view (showing the author of each line in a source file), add the following line:\n\n```\n$feature{'blame'}{'default'} = [1];\n```\n\nNow that the configuration is done, restart your web server.\n\n"
    },
    {
      "title": "Adding repositories",
      "level": 3,
      "content": "To add a repository go to your repository folder, make your repository like so:\n\n```\n$ mkdir my_repository.git\n$ git init --bare my_repository.git/\n$ cd my_repository.git/\n$ touch git-daemon-export-ok\n$ echo \"Short project's description\" > description\n```\n\nNext open the config file and add this:\n\n```\nconfig\n```\n\n```\n[gitweb]\nowner = Your Name\n```\n\nThis will fill in the \"Owner\" field in Gitweb. It is not required.\n\nThis assumes that you want to have this repository as \"central\" repository storage where you push your commits to so the git-daemon-export-ok and --bare are here to have minimal overhead and to allow the git daemon to be used on it.\n\nThat is all for making a repository. You can now see it on your http://localhost/gitweb (assuming everything went fine). You do not need to restart Apache for new repositories since the Gitweb CGI script simply reads your repository folder.\n\n"
    },
    {
      "title": "Syntax highlighting",
      "level": 3,
      "content": "To enable syntax highlighting with Gitweb, you have to first install the highlight package:\n\nWhen highlight has been installed, simply add this line to your gitweb.conf:\n\n```\n$feature{'highlight'}{'default'} = [1];\n```\n\nSave the file and highlighting should now be enabled.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- How To Install A Public Git Repository On A Debian Server â€” HowtoForge page used as the main source for this article.\n\n"
    }
  ]
}