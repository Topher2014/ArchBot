{
  "title": "Shinobi",
  "url": "https://wiki.archlinux.org/title/Shinobi",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Webcam setup\n- Zoneminder\n\nShinobi is a modern, Open Source NVR (Network Video Recorder) written in Node.js. For personal or educational use, the Pro version does not require a license key. See upstream documentation if the intended use is for commercial purposes.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install shinobi-gitAUR.\n\n1. Installation of plugins from the webUI will not work. Manually start the server as root if these are needed.\n1. The restart feature from the webUI will not work since pm2 is not being used.\n1. Binding to ports <1000 will not work, as only root can do so. This is only relevant if using FTP or SMTP to receive motion/object detection. See #Motion/object detection from within the camera for a several work around options.\n\n"
    },
    {
      "title": "Install and set up the MariaDB server",
      "level": 3,
      "content": "Refer to MariaDB#Installation for initial setup, then use the following commands to create a database for Shinobi:\n\n```\n# mysql\n> CREATE DATABASE ccio; flush privileges; \\q\n```\n\nCreate Shinobi's user majesticflame and grant it all privileges to the new database:\n\n```\n# mysql < /usr/share/shinobi/sql/user.sql\n```\n\nNote: **192.168.9.100** Then copy the file to your MariaDB server with scp or any other mechanism then running the modified sql file:\n\n```\n$ sed 's/127.0.0.1/192.168.9.100/g' < /usr/share/shinobi/sql/user.sql > /tmp/user.sql\n```\n\nThen copy the file to your MariaDB server with scp or any other mechanism then running the modified sql file:\n\n```\n# mysql < /tmp/user.sql\n```\n\nFinally populate the database with tables:\n\n```\n# mysql ccio < /usr/share/shinobi/sql/framework.sql\n```\n\n"
    },
    {
      "title": "Setup Shinobi",
      "level": 3,
      "content": "Note: **127.0.0.1** \n\nCustomize /etc/shinobi/conf.json as desired.\n\nOptionally setup the mail section accordingly as well as replacing the cron key with something random as indicated in the comments.\n\nOptionally change the super admin password by editing /etc/shinobi/super.json and replacing the value for \"pass\" with an md5sum hashed password. Generate one like this:\n\n```\n$ echo -n PASSWORD | md5sum\n```\n\nStart and enable shinobi with the shinobi.target unit. shinobi.target will start/stop shinobi-camera.service and shinobi-cron.service. Browse to http://localhost:8080/super to perform initial setup including creating a user/users. See the official configure guide for a walk-through. Once finished, browse to http://localhost:8080 and log in as the non-admin user.\n\nNote: **localhost** \n\n"
    },
    {
      "title": "Android and iOS apps",
      "level": 2,
      "content": "Shinobi Mobile Apps for both Android and iOS are available though this public test.\n\n"
    },
    {
      "title": "Delay between camera video and Shinobi",
      "level": 3,
      "content": "Some level of a lag or delay between the camera and the Shinobi dashboard is normal and dependent on stream type and video settings. See upstream documentation for some tips on minimizing the delay.\n\n"
    },
    {
      "title": "Motion/object detection natively in Shinobi",
      "level": 3,
      "content": "Shinobi can monitor a video feed and only record if motion is detected. Full frame or trigger areas are natively supported. See the setting-up-motion-detection article of upstream's documentation.\n\n"
    },
    {
      "title": "Motion/object detection from within the camera",
      "level": 3,
      "content": "Some camera manufactures offer native motion/object detection within the firmware of the camera itself. Shinobi can accept external event to trigger a record when motion is detected by the camera and these events are communicated by either SMTP or FTP.\n\nNote: **Segment length** \n\nSince our package is not running node as root, it cannot use the native ports for these services (25 for STMP and 21 for FTP).\n\nIt is recommended to simply select a port above 1,000 for these services on Shinobi and within the camera.\n\nIf using the native ports is a hard requirement, use a drop-in snippet for shinobi-camera.service:\n\n```\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\n```\n\n"
    },
    {
      "title": "Resources",
      "level": 2,
      "content": "- Shinobi docs - Official docs and guides.\n- iSpy camera database - Large database of URLs for various cameras.\n- Shinobi camera database - Searchable database of supported cameras including things such as protocols, URLs for streams, and other technical specs.\n- Home assistant camera database - Another resource for finding URLs for streams.\n\n"
    }
  ]
}