{
  "title": "$XDG CONFIG HOME",
  "url": "https://wiki.archlinux.org/title/$XDG_CONFIG_HOME",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- dotfiles\n- XDG user directories\n\nThis article summarizes the XDG Base Directory specification in #Specification and tracks software support in #Support.\n\n"
    },
    {
      "title": "Specification",
      "level": 2,
      "content": "Please read the full specification. This section will attempt to break down the essence of what it tries to achieve.\n\nOnly XDG_RUNTIME_DIR is set by default through pam_systemd(8). It is up to the user to explicitly define the other variables according to the specification. Changing it might cause issues with pipewire and screen sharing on chromium.\n\nSee Environment variables#Globally for information on defining variables.\n\n"
    },
    {
      "title": "User directories",
      "level": 3,
      "content": "- XDG_CONFIG_HOME Where user-specific configurations should be written (analogous to /etc). Should default to $HOME/.config.\n\n- Where user-specific configurations should be written (analogous to /etc).\n- Should default to $HOME/.config.\n\n- XDG_CACHE_HOME Where user-specific non-essential (cached) data should be written (analogous to /var/cache). Should default to $HOME/.cache.\n\n- Where user-specific non-essential (cached) data should be written (analogous to /var/cache).\n- Should default to $HOME/.cache.\n\n- XDG_DATA_HOME Where user-specific data files should be written (analogous to /usr/share). Should default to $HOME/.local/share.\n\n- Where user-specific data files should be written (analogous to /usr/share).\n- Should default to $HOME/.local/share.\n\n- XDG_STATE_HOME Where user-specific state files should be written (analogous to /var/lib). Should default to $HOME/.local/state.\n\n- Where user-specific state files should be written (analogous to /var/lib).\n- Should default to $HOME/.local/state.\n\n- XDG_RUNTIME_DIR Used for non-essential, user-specific data files such as sockets, named pipes, etc. Not required to have a default value; warnings should be issued if not set or equivalents provided. Must be owned by the user with an access mode of 0700. Filesystem fully featured by standards of OS. Must be on the local filesystem. May be subject to periodic cleanup. Modified every 6 hours or set sticky bit if persistence is desired. Can only exist for the duration of the user's login. Should not store large files as it may be mounted as a tmpfs. pam_systemd sets this to /run/user/$UID.\n\n- Used for non-essential, user-specific data files such as sockets, named pipes, etc.\n- Not required to have a default value; warnings should be issued if not set or equivalents provided.\n- Must be owned by the user with an access mode of 0700.\n- Filesystem fully featured by standards of OS.\n- Must be on the local filesystem.\n- May be subject to periodic cleanup.\n- Modified every 6 hours or set sticky bit if persistence is desired.\n- Can only exist for the duration of the user's login.\n- Should not store large files as it may be mounted as a tmpfs.\n- pam_systemd sets this to /run/user/$UID.\n\n"
    },
    {
      "title": "System directories",
      "level": 3,
      "content": "- XDG_DATA_DIRS List of directories separated by : (analogous to PATH). Should default to /usr/local/share:/usr/share.\n\n- List of directories separated by : (analogous to PATH).\n- Should default to /usr/local/share:/usr/share.\n\n- XDG_CONFIG_DIRS List of directories separated by : (analogous to PATH). Should default to /etc/xdg.\n\n- List of directories separated by : (analogous to PATH).\n- Should default to /etc/xdg.\n\n"
    },
    {
      "title": "Support",
      "level": 2,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThis section exists to catalog the growing set of software using the XDG Base Directory Specification introduced in 2003. This is here to demonstrate the viability of this specification by listing commonly found dotfiles and their support status. For those not currently supporting the Base Directory Specification, workarounds will be demonstrated to emulate it instead.\n\nThe workarounds will be limited to anything not involving patching the source, executing code stored in environment variables or compile-time options. The rationale for this is that configurations should be portable across systems and having compile-time options prevent that.\n\nHopefully this will provide a source of information about exactly what certain kinds of dotfiles are and where they come from.\n\n"
    },
    {
      "title": "Contributing",
      "level": 3,
      "content": "When contributing make sure to use the correct section.\n\nNothing should require code evaluation, patches or compile-time options to gain support and anything which does must be deemed hardcoded. Additionally, if the process is error prone or difficult, it should also be classified as hardcoded.\n\n- The first column should be either a link to an internal article, a Template:Pkg or a Template:AUR.\n- The second column is for any legacy files and directories the project had (one per line), this is done so people can find them even if they are no longer read.\n- In the third, try to find the commit or version a project switched to XDG Base Directory or any open discussions and include them in the next two columns (two per line).\n- The last column should include any appropriate workarounds or solutions. Please verify that your solution is correct and functional.\n\n"
    },
    {
      "title": "Supported",
      "level": 3,
      "content": "Table content:\nApplication | Legacy Path | Supported Since | Discussion | Notes\nact | ~/.actrc | 1656 2195 | [5] | XDG_CONFIG_HOME/act/actrc If present ~/.actrc will be merged with the XDG path config.\naerc |  | fff1664 |  | XDG_CONFIG_HOME/aerc/aerc.conf\nALSA | ~/.asoundrc | 577df36 1.2.3 | [6] | XDG_CONFIG_HOME/alsa/asoundrc\nanacondaAUR | ~/.conda/.condarc, ~/.conda/condarc, ~/.conda/condarc.d/, ~/.condarc | 4.11.0 | [7] [8] | \nAndroid Studio | ~/.AndroidStudioX.X | Android Studio 4.1 |  | XDG_CONFIG_HOME/Google/AndroidStudioX.X XDG_DATA_HOME/Google/AndroidStudioX.X XDG_CACHE_HOME/Google/AndroidStudioX.X Location overview by Google does not mention XDG - paths could be hardcoded instead of using the proper variable, though that is unlikely as Intellij IDEA, which Android Studio is based on, implements it properly as well\nAnki | ~/Anki, ~/Documents/Anki |  | [9] [10] [11] | Uses $XDG_DATA_HOME/Anki2 as default if no older location exists, can be changed by using anki -b <anki_dir>\nantimicrox | ~/.antimicro, ~/.antimicrox | edba864 | [12] | \napvlvAUR | ~/.apvlvrc | [13] | [14] | Uses XDG_CONFIG_HOME/apvlv/apvlvrc now if it exist.\naria2 | ~/.aria2 | 8bc1d37 | [15] | XDG_CONFIG_HOME/aria2/ XDG_CACHE_HOME/aria2/\natuin | ~/.config/atuin ~/.local/share/atuin | 156893d |  | XDG_CONFIG_HOME/atuin/config.toml XDG_DATA_HOME/atuin/history.db\nasunderAUR | ~/.asunder ~/.asunder_album_artist ~/.asunder_album_genre ~/.asunder_album_title | 2.9.0[dead link 2021-05-17 ⓘ] | [16][dead link 2021-05-17 ⓘ] | Uses XDG_CONFIG_HOME/asunder/asunder for ~/.asunder and XDG_CACHE_HOME/asunder/asunder_album_... for the other 3 files. Legacy paths are not removed after migration, they have to be deleted manually.\naudacity | ~/.audacity-data/ | 3.2.0 | [17] | Uses new locations if legacy do not exist: XDG_CONFIG_HOME/audacity XDG_DATA_HOME/audacity\nbtop |  | b5e709d |  | XDG_CONFIG_HOME/btop\nbinwalk | ~/.binwalk | 2051757 | [18] | XDG_CONFIG_HOME/binwalk\nbitwarden-cli | ~/.config/Bitwarden CLI | 1.7.1 | [19] | XDG_CONFIG_HOME/Bitwarden CLI XDG_DATA_HOME/audacity The BITWARDENCLI_APPDATA_DIR environment variable takes precedence. Currently contains a single data.json file with all the vault data, so it ought to belong in XDG_DATA_HOME\nBlender | ~/.blender | 4293f47 | [20] | \nborgmatic | ~/.borgmatic/ | 1.9.0 | [21] | \nbyobu | ~/.byobu | 4.17 | [22] | XDG_CONFIG_HOME/byobu Legacy path takes precedence if present, or if XDG_CONFIG_HOME is not set.\ncabal | ~/.cabal/ | 9f7dc55 v3.10.1.0 | [23] | \ncalcurse | ~/.calcurse | 04162d | [24] [25] | XDG_CONFIG_HOME/calcurse XDG_DATA_HOME/calcurse If the legacy path ~/.calcurse is present, it will take precedence.\ncalibre |  |  |  | \nccache | ~/.ccache | 4.0 | [26] | XDG_CACHE_HOME/ccache XDG_CONFIG_HOME/ccache/ccache.conf\ncatfish | ~/.config/catfish | af65ed25 | [27] | \nclangd | ~/.clangd | ad38f4b3 11.0.0 | [28] | XDG_CONFIG_HOME/clangd/config.yml XDG_CACHE_HOME/clangd Project specific configuration can be specified in proj/.clangd. Configuration is combined when this is sensible. In case of conflicts, user config has the highest precedence, then inner project, then outer project.\nclifmAUR | ~/.config/clifm/ | 9d6e482 |  | XDG_CONFIG_HOME/clifm/\nComposer | ~/.composer | 1.0.0-beta1 | [29] | \ncrossnote | ~/.mume | d714a82 0.8.13 | [30] | $XDG_CONFIG_HOME/mume If the legacy path is present, it will take precedence.\nctags (universal-ctags) | ~/.ctagsrc, .ctags.d | 68da03a 8fb0b04 | Issue 89 Pull request 2384 | At start-up time, Universal-ctags loads files having file`.ctags` as a file extension under: $XDG_CONFIG_HOME/ctags See Ctags Option files.\ncURL | ~/.curlrc | 7.73.0 | [31] | XDG_CONFIG_HOME/.curlrc\nCUPS | ~/.cups/ | 23b1be6 | [32] | libcups added XDG support in v3 (still in beta). The version in the official repositories is still hardcoded to ~/.cups.\ndconf |  |  |  | \nDolphin emulator | ~/.dolphin-emu | a498c68 | [33] | \ndr14_t.meter-gitAUR |  | 7e777ca | [34] | XDG_CONFIG_HOME/dr14tmeter/\ndunst |  | 78b6e2b | [35] | XDG_CONFIG_HOME/dunst/\nEmacs | ~/.emacs ~/.emacs.d/init.el | [36] 27.1 |  | XDG_CONFIG_HOME/emacs/init.el Legacy paths have precedence over XDG paths. Emacs will never create XDG_CONFIG_HOME/emacs/. Workaround for 26.3 or older: It's possible to set HOME, but it has unexpected side effects.\nfish |  |  |  | \nfltk | ~/.fltk/ | 7308bcd | [37] [38] | Only supported in version 1.4.0, which doesn't exist in Arch Linux's official repositories yet (as of 18-March-2025)\nfontconfig | ~/.fontconfig ~/.fonts | 8c255fb, [39] |  | Config goes in XDG_CONFIG_HOME/fontconfig/fonts.conf or XDG_CONFIG_HOME/fontconfig/conf.d/, fonts are stored in XDG_DATA_HOME/fonts/\nfontforge | ~/.FontForge ~/.PfaEdit | e4c2cc7 | [40] [41] | \nfreecad | ~/.FreeCAD | e7e2994ba 0.20.0 | [42] | Defaults to XDG_CONFIG_HOME/FreeCAD XDG_DATA_HOME/FreeCAD XDG_CACHE_HOME/FreeCAD legacy path can be used with FreeCAD --keep-deprecated-paths\nfreerdp | ~/.freerdp | edf6e72 |  | \nGajim | ~/.gajim | 3e777ea | [43] | \ngconfAUR | ~/.gconf | fc28caa | [44] | \nGDB | ~/.gdbinit, ~/.gdb_history | 11.1 |  | XDG_CONFIG_HOME/gdb/gdbinit, export GDBHISTFILE=\"$XDG_DATA_HOME\"/gdb/history\nghidra | ~/.ghidra/ | 3b0aac9 | [45] | \nGIMP | ~/.gimp-x.y ~/.thumbnails | 60e0cfe 483505f | [46] [47] | \nGit | ~/.gitconfig, ~/.gitignore, ~/.gitattributes, ~/.git-credentials, ~/.gitk | 0d94427, dc79687, 684e40f | Git Config, Git Attributes, Git Credentials, gitk | XDG_CONFIG_HOME/git/config, XDG_CONFIG_HOME/git/ignore, XDG_CONFIG_HOME/git/attributes, XDG_CONFIG_HOME/git/credentials, XDG_CONFIG_HOME/git/gitk\ngops |  | 71c4255 |  | \ngnuplot | ~/.gnuplot_history | a5562b1 [48] |  | \ngoobookAUR | ~/.goobookrc | 3.5 | [49] | XDG_CONFIG_HOME/goobookrc\nGodot Engine | ~/.godot | 73049d1 3.0-stable | [50] | \nGStreamer | ~/.gstreamer-0.10 | 4e36f93 | [51] | \nGTK 3 |  |  |  | \nHaskell#Stack | ~/.stack | 2.9.3 | [52] | Defaults to legacy. Use export STACK_XDG=1 to make it compliant with the spec. The old method of export STACK_ROOT=\"$XDG_DATA_HOME\"/stack still works and takes priority [53][dead link 2024-07-30 ⓘ].\nhelm | ~/.helm | 3.0.0 |  | \nhtop | ~/.htoprc | 93233a6 |  | XDG_CONFIG_HOME/htop/htoprc\nhttpie | ~/.httpie | 5af0874 | [54] | \nhunspell | ~/.hunspell_default. |  | [55] | \ni3 | ~/.i3 | 7c130fb |  | \ni3blocks, i3blocks-gitAUR |  | [56] |  | \ni3status | ~/.i3status.conf | c3f7fc4 |  | \ni3status-rust |  |  |  | \nIdeaVim | ~/.ideavimrc | 0.54.1-EAP | [57] | XDG_CONFIG_HOME/ideavim/ideavimrc\nimagemagick |  |  |  | \niotop-c | ~/.config/iotop | [58] | [59] | \nInkscape | ~/.inkscape | 0.47 | [60] | \nipython | ~/.ipython | 8.0.0 | [61] | Checks if $XDG_CONFIG_HOME/ipython (or ~/.config/ipython if XDG_CONFIG_HOME is unset) exists, otherwise it uses ~/.ipython.\niwd / iwctl | ~/.iwctl_history | d3e00d7f |  | \nintellij-idea-community-edition / intellij-idea-ultimate-editionAUR | ~/.IntelliJIdeaXXXX.X | 2020.1 | [62] | XDG_CONFIG_HOME/JetBrains/IntelliJIdeaXXXX.X XDG_DATA_HOME/JetBrains/IntelliJIdeaXXXX.X XDG_CACHE_HOME/JetBrains/IntelliJIdeaXXXX.X\njosm | ~/.josm | 11162 | [63] | \njupyter | ~/.jupyter | opt-in in 5.0, opt-out in 6.0, compulsory in 7.0 (changelog) |  | XDG_CONFIG_HOME/jupyter\nKakoune |  |  |  | \nkeynavAUR | ~/.keynavrc |  |  | XDG_CONFIG_HOME/keynav/keynavrc\nless | ~/.lesskey, ~/.lesshst | 590 full support in 598 | [64] | The environment variables XDG_CONFIG_HOME and XDG_DATA_HOME must be set in version 590. In version 598 this is no longer necessary. XDG_CONFIG_HOME/lesskey XDG_STATE_HOME/lesshst or XDG_DATA_HOME/lesshst\nlatexmk (in texlive-binextra) | ~/.latexmkrc |  |  | XDG_CONFIG_HOME/latexmk/latexmkrc\nlftp | ~/.lftp | 21dc400 | [65] | \nlgogdownloaderAUR | ~/.gogdownloader | d430af6 | [66] | \nluarocks | ~/.luarocks | cd16cdd | [67] | XDG_CONFIG_HOME/luarocks XDG_CACHE_HOME/luarocks If the legacy path ~/.luarocks is present, it will take precedence.\nmangohud |  | 65b90fc | [68] | XDG_CONFIG_HOME/MangoHud\nmc | ~/.mc | 1b99570 0b71156 ce401d7 | [69] | \nMercurial | ~/.hgrc | 3540200 4.2 |  | XDG_CONFIG_HOME/hg/hgrc.\nmesa |  | 87ab26b |  | XDG_CACHE_HOME/mesa\nmilkytracker | ~/.milkytracker_config | eb487c5 | [70] | \nmlterm | ~/.mlterm/ | 71df071 | [71] | XDG_CONFIG_HOME/mlterm/\nnmcli | ~/.nmcli-history | 1.52.0 | [72] [73] [74] | XDG_CACHE_HOME/nmcli-history\nmozc | ~/.mozc | 91cc1e1 | [75] | \nmpd | ~/.mpdconf | 87b7328 |  | \nmpv | ~/.mpv | cb250d4 | [76] | \nmsmtp | ~/.msmtprc | af2f409 v1.6.7+ |  | XDG_CONFIG_HOME/msmtp/config.\nmutt | ~/.mutt | b17cd67 | [77] | \nmypaint | ~/.mypaint | cf723b7 |  | \nnano | ~/.nano/ ~/.nanorc | c16e79b | [78] | \nncmpcpp | ~/.ncmpcpp ~/.lyrics | 38d9f81 27cd86e | [79] [80] [81] | ncmpcpp_directory should be set to avoid an error.log file in ~/.ncmpcpp. And lyrics_directory can be set to ~/.cache/ncmpcpp-lyrics to avoid ~/.lyrics.\nNeovim | ~/.nvim ~/.nvimlog ~/.nviminfo | 1ca5646bb | [82] [83] | \nNestopia UE | ~/.nestopia/ | 610c008 1.51.0 | [84] | \nnewsboat | ~/.newsboat | 3c57824 | [85] | It is required to create both directories [86]: mkdir -p \"$XDG_DATA_HOME\"/newsboat \"$XDG_CONFIG_HOME\"/newsboat\nnode-gyp | ~/.node-gyp | 2b5ce52a | [87] | \nnp2kai-gitAUR | ~/.config/np2kai ~/.config/xnp2kai | 56a1cc2 | [88] | \nnotmuch | ~/.notmuch-config |  | [89] | mkdir -p $XDG_CONFIG_HOME/notmuch/default; mv ~/.notmuch-config $XDG_CONFIG_HOME/notmuch/default/config\nNSS | ~/.pki | 3.42 (da45424) | [90] | See Chromium for existing issue.\nnteract-binAUR |  | 4593e72 | [91] [92] | does not recognize workarounds for ipython/jupyter\nocaml-utopAUR | ~/.utop-history ~/.utoprc | 2.13.0 9729963 | [93] | XDG_STATE_HOME/utop/utop-history XDG_CONFIG_HOME/utop/utoprc\nOfflineIMAP | ~/.offlineimaprc | 5150de5 | [94] | XDG_CONFIG_HOME/offlineimap/config\nopenal | ~/.alsoftrc | 3c90ed9 |  | XDG_CONFIG_HOME/alsoft.conf\nopentyrianAUR | ~/.opentyrian | 39559c3 | [95] | \noscAUR | ~/.oscrc ~/.osc_cookiejar | 6bc2d3f ebcf3de | github.com/openSUSE/osc/pull/940 github.com/osc/pull/940 | XDG_CONFIG_HOME/osc/oscrc XDG_STATE_HOME/osc/cookiejar Legacy path takes precedence if it exists\npam-u2f | ~/.config/Yubico/u2f_keys | ad52dd8 | [96] | XDG_CONFIG_HOME/Yubico/u2f_keys\npandoc-cli | ~/.pandoc/ | 0bed0ab | [97] | \nPCManFM | ~/.thumbnails | 1.3.2 |  | \npcsx2AUR | ~/.pcsx2 | 87f1e8f a9020c6 3b22f0f 0a012ae | [98] [99] | \npdfsamAUR | ~/.openjfx |  |  | export _JAVA_OPTIONS=-Djavafx.cachedir=\"$XDG_CACHE_HOME\"/openjfx\nPry | ~/.pryrc ~/.pry_history | a0be0cc7 15e1fc92 e9d1be0e | [100] | \npython-autoimportAUR | ~/.config/autoimport/config.toml | 1.2.0 | [101] | XDG_CONFIG_HOME/autoimport/config.toml\npython-black | ~/.config/black | 21.4b0 | [102] | XDG_CONFIG_HOME/black, XDG_CACHE_HOME/black/<version>/\npython-pylint | ~/.pylint.d | 2.10 | [103] | Formerly export PYLINTHOME=\"$XDG_CACHE_HOME\"/pylint, global config still needs: export PYLINTRC=\"$XDG_CONFIG_HOME\"/pylint/pylintrc\npython-pip | ~/.pip | 6.0 | [104] | \npython-pipx | ~/.local/pipx | c3d8de9 | [105] | For compatibility, pipx will revert to ~/.local/pipx if it exists. Implemented using python-platformdirs\npython-poetry | ~/.poetry | [106] | [107] | \npowershellAUR |  | 6.0 |  | \nppsspp | ~/.ppsspp | 132fe47 | [108] | \nprocps-ng | ~/.toprc | af53e17 | [109] [110] | \npacman | ~/.makepkg.conf | 80eca94 | [111] | \npanda3dAUR | ~/.panda3d | 2b537d2 |  | \npnpm | ~/.pnpm-store | [112] [113] | [114] | \npoezioAUR |  |  |  | \nPulseAudio | ~/.pulse ~/.pulse-cookie | 59a8618 87ae830 9ab510a 4c195bc | [115] | Steam might still create ~/.pulse-cookie. Add cookie-file = ~/.config/pulse/cookie to /etc/pulse/client.conf to get rid of it.\npyroomAUR |  |  |  | \nquodlibet | ~/.quodlibet | 3.10.0 | [116] | \nqutebrowser |  |  |  | \nqtile |  | fd8686e 66d704b 51cff01 | [117] | Some optional bar widgets can create files and directories in non-compliant paths, but most often these are still configurable.\nrclone | ~/.rclone.conf | 9d36258 | [118] | \nretroarch |  |  |  | \nripgrep-all | ~/.cache/rga | 963524b v0.10.3 | [119] [120] [121] | \nrrAUR | ~/.rr | 02e7d41 | [122] | \nRSpec | ~/.rspec | 5e395e2 | [123] | \nrTorrent | ~/.rtorrent.rc | 6a8d332 |  | \nRuboCop | ~/.rubocop.yml | 6fe5956 | [124] | \nRuby#RubyGems | ~/.gem | 3.0.0 (5c6269c) | [125] | XDG_CONFIG_HOME/gem/gemrc XDG_CONFIG_HOME/irb XDG_DATA_HOME/gem XDG_DATA_HOME/rdoc\nsandboxd | ~/.sandboxrc | [126] | [127] | XDG_CONFIG_HOME/sandboxd/sandboxrc\nscribus | ~/.scribus | 1.5.3 |  | \nscummvm | ~/.scummvmrc ~/.scummvm/ | 7d014be | [128] | It is required to migrate data by hand. mkdir \"$XDG_CONFIG_HOME\"/scummvm/ \"$XDG_DATA_HOME\"/scummvm mv ~/.scummvmrc \"$XDG_CONFIG_HOME\"/scummvm/scummvm.ini mv ~/.scummvm \"$XDG_DATA_HOME\"/scummvm/saves\nsdcv | ~/.stardict/ ~/.sdcv_history | 958ec35 | [129] | \nshellcheck | ~/.shellcheckrc | 581bcc3 |  | XDG_CONFIG_HOME/shellcheckrc See Shellcheck RC Files for more info.\nsnes9x | ~/.snes9x | 93b5f11 | [130] | By default, the configuration file is left blank with intention that the user will fill it at their will (through the gui or manually).\nspectrwm | ~/.spectrwm | a30bbb | [131] | \nsublime-text-devAUR |  | build 4105 |  | Prior to build 4105, the cache was placed in XDG_CONFIG_HOME/sublime-text-3/Cache.\nsurfraw | ~/.surfraw.conf ~/.surfraw.bookmarks | 3e4591d bd8c427 f57fc71 |  | \nsway | ~/.sway/config | 614393c | [132] | XDG_CONFIG_HOME/sway/config\nsxhkd |  |  |  | \nsystemd |  |  |  | \nteeworlds | ~/.teeworlds | [133] |  | \ntermite |  |  |  | \ntig | ~/.tigrc, ~/.tig_history | 2.2 | [134] | ~/.local/share/tig directory must exist, writes to ~/.tig_history otherwise.\nTigerVNC | ~/.vnc | 1.14.0 | [135] | \nTheming (desktop) | ~/.icons/, ~/.themes/ | [136] |  | XDG_DATA_HOME/icons XDG_DATA_HOME/themes For Qt programs, GTK or Qt programs on Wayland, to use cursors in XDG_DATA_HOME/icons, the XCURSOR_PATH environment variable needs to be configured.\ntmux | ~/.tmux.conf | 3.1 | [137] | 3.1 introduced ~/.config/tmux/tmux.conf and in 3.2 XDG_CONFIG_HOME/tmux/tmux.conf was added\ntmuxp | ~/.tmuxp | 1.5.0 | [138] | Fixed in 1.5.2\ntmuxinatorAUR | ~/.tmuxinator | 2636923 | [139] | \nTransmission | ~/.transmission | b71a298 |  | \nutil-linux |  | 570b321 |  | \nyapf |  | a0b51d2 | [140] | $XDG_CONFIG_HOME/yapf/style\nUzbl |  | c6fd63a | [141] | \nvale | ~/.vale.ini | 3.0.0 |  | \nvim | ~/.vim, ~/.vimrc, ~/.viminfo | c9df1fb | [142] | XDG_CONFIG_HOME/vim/vimrc See :h xdg-base-dir for more details. The viminfo file can be set with :set viminfofile=\nvimb |  |  |  | \nVirtualBox | ~/.VirtualBox | 4.3 | [143] | \nvis | ~/.vis | 68a25c7 d138908 | [144] | \nVLC | ~/.vlcrc | 16f32e1 | [145] | \nwarsow | ~/.warsow-2.x | 98ece3f | [146] | \nWeeChat | ~/.weechat | [147] 3.2 | [148] [149][dead link 2023-05-06 ⓘ] | XDG_CONFIG_HOME/weechat XDG_CACHE_HOME/weechat XDG_DATA_HOME/weechat\nWireshark | ~/.wireshark | b0b53fa v2.1.0 |  | \nwxWidgets |  | [150] |  | \nXKB | ~/.xkb |  |  | \nXsettingsd | ~/.xsettingsd | b4999f5 |  | \nxmobar | ~/.xmobarrc | 7b0d6bf[dead link 2024-07-30 ⓘ] 9fc6b37[dead link 2024-07-30 ⓘ] eaccf70[dead link 2024-07-30 ⓘ] | [151][dead link 2024-07-30 ⓘ] [152][dead link 2024-07-30 ⓘ] | XDG_CONFIG_HOME/xmobar/xmobarrc\nxmonad | ~/.xmonad/ | 40fc10b | [153] [154] | All of these must exist, otherwise it gives up and falls back to ~/.xmonad/ for each: XDG_CACHE_HOME/xmonad XDG_CONFIG_HOME/xmonad XDG_DATA_HOME/xmonad Alternatively, it always respects XMONAD_CACHE_DIR, XMONAD_CONFIG_DIR, and XMONAD_DATA_DIR.\nxonsh | ~/.xonshrc |  | [155] | $XDG_CONFIG_HOME/xonsh/rc.xsh\nxournalpp | ~/.xournalpp | 20db937f 1.1.0 | [156] [157] | \nxsel | ~/.xsel.log | ee7b481 | [158] | \nZim |  | e42b8b0 |  | $XDG_CONFIG_HOME/zim/preferences.conf $XDG_CONFIG_HOME/zim/notebooks.list\nzoxide | ~/.zo | 0.3.0 | [159] | \nzutils | ~/.zutilsrc | 1.12 |  | $XDG_CONFIG_HOME/zutils.conf\n\n2195\n\nIf present ~/.actrc will be merged with the XDG path config.\n\n1.2.3\n\n```\nXDG_CONFIG_HOME/Google/AndroidStudioX.X\nXDG_DATA_HOME/Google/AndroidStudioX.X\nXDG_CACHE_HOME/Google/AndroidStudioX.X\n```\n\nLocation overview by Google does not mention XDG - paths could be hardcoded instead of using the proper variable, though that is unlikely as Intellij IDEA, which Android Studio is based on, implements it properly as well\n\n```\nXDG_CONFIG_HOME/aria2/\nXDG_CACHE_HOME/aria2/\n```\n\n```\nXDG_CONFIG_HOME/atuin/config.toml\nXDG_DATA_HOME/atuin/history.db\n```\n\n```\nXDG_CONFIG_HOME/audacity\nXDG_DATA_HOME/audacity\n```\n\n```\nXDG_CONFIG_HOME/Bitwarden CLI\nXDG_DATA_HOME/audacity\n```\n\nThe BITWARDENCLI_APPDATA_DIR environment variable takes precedence.\n\nCurrently contains a single data.json file with all the vault data, so it ought to belong in XDG_DATA_HOME\n\nXDG_CONFIG_HOME/byobu\n\nLegacy path takes precedence if present, or if XDG_CONFIG_HOME is not set.\n\n```\nXDG_CONFIG_HOME/calcurse\nXDG_DATA_HOME/calcurse\n```\n\nIf the legacy path ~/.calcurse is present, it will take precedence.\n\n```\nXDG_CACHE_HOME/ccache\nXDG_CONFIG_HOME/ccache/ccache.conf\n```\n\nXDG_CACHE_HOME/clangd\n\nProject specific configuration can be specified in proj/.clangd. Configuration is combined when this is sensible. In case of conflicts, user config has the highest precedence, then inner project, then outer project.\n\n0.8.13\n\nIf the legacy path is present, it will take precedence.\n\n8fb0b04\n\nPull request 2384\n\nSee Ctags Option files.\n\nlibcups added XDG support in v3 (still in beta). The version in the official repositories is still hardcoded to ~/.cups.\n\n27.1\n\nLegacy paths have precedence over XDG paths. Emacs will never create XDG_CONFIG_HOME/emacs/. Workaround for 26.3 or older: It's possible to set HOME, but it has unexpected side effects.\n\n[40] [41]\n\n0.20.0\n\n```\nXDG_CONFIG_HOME/FreeCAD\nXDG_DATA_HOME/FreeCAD\nXDG_CACHE_HOME/FreeCAD\n```\n\nlegacy path can be used with FreeCAD --keep-deprecated-paths\n\n60e0cfe 483505f\n\n[46] [47]\n\n[48]\n\n3.0-stable\n\nThe old method of export STACK_ROOT=\"$XDG_DATA_HOME\"/stack still works and takes priority [53][dead link 2024-07-30 ⓘ].\n\n```\nXDG_CONFIG_HOME/JetBrains/IntelliJIdeaXXXX.X\nXDG_DATA_HOME/JetBrains/IntelliJIdeaXXXX.X\nXDG_CACHE_HOME/JetBrains/IntelliJIdeaXXXX.X\n```\n\nfull support in 598\n\nXDG_CONFIG_HOME/lesskey\n\nXDG_STATE_HOME/lesshst or XDG_DATA_HOME/lesshst\n\nXDG_CONFIG_HOME/latexmk/latexmkrc\n\n```\nXDG_CONFIG_HOME/luarocks\nXDG_CACHE_HOME/luarocks\n```\n\nIf the legacy path ~/.luarocks is present, it will take precedence.\n\n1b99570 0b71156 ce401d7\n\n3540200 4.2\n\naf2f409 v1.6.7+\n\n38d9f81 27cd86e\n\n[79] [80] [81]\n\n[82] [83]\n\nmkdir -p \"$XDG_DATA_HOME\"/newsboat \"$XDG_CONFIG_HOME\"/newsboat\n\n~/.utoprc\n\n9729963\n\nXDG_CONFIG_HOME/utop/utoprc\n\nebcf3de\n\ngithub.com/osc/pull/940\n\nXDG_CONFIG_HOME/osc/oscrc XDG_STATE_HOME/osc/cookiejar\n\nLegacy path takes precedence if it exists\n\n87f1e8f a9020c6 3b22f0f 0a012ae\n\na0be0cc7 15e1fc92 e9d1be0e\n\n[109] [110]\n\n59a8618 87ae830 9ab510a 4c195bc\n\nfd8686e 66d704b 51cff01\n\n```\nXDG_CONFIG_HOME/gem/gemrc\nXDG_CONFIG_HOME/irb\nXDG_DATA_HOME/gem\nXDG_DATA_HOME/rdoc\n```\n\nmkdir \"$XDG_CONFIG_HOME\"/scummvm/ \"$XDG_DATA_HOME\"/scummvm mv ~/.scummvmrc \"$XDG_CONFIG_HOME\"/scummvm/scummvm.ini mv ~/.scummvm \"$XDG_DATA_HOME\"/scummvm/saves\n\nSee Shellcheck RC Files for more info.\n\n3e4591d bd8c427 f57fc71\n\nXDG_DATA_HOME/themes\n\nFor Qt programs, GTK or Qt programs on Wayland, to use cursors in XDG_DATA_HOME/icons, the XCURSOR_PATH environment variable needs to be configured.\n\nSee :h xdg-base-dir for more details.\n\nThe viminfo file can be set with :set viminfofile=\n\n68a25c7 d138908\n\n3.2\n\n```\nXDG_CONFIG_HOME/weechat\nXDG_CACHE_HOME/weechat\nXDG_DATA_HOME/weechat\n```\n\n9fc6b37[dead link 2024-07-30 ⓘ] eaccf70[dead link 2024-07-30 ⓘ]\n\n[152][dead link 2024-07-30 ⓘ]\n\n[153] [154]\n\n```\nXDG_CACHE_HOME/xmonad\nXDG_CONFIG_HOME/xmonad\nXDG_DATA_HOME/xmonad\n```\n\nAlternatively, it always respects XMONAD_CACHE_DIR, XMONAD_CONFIG_DIR, and XMONAD_DATA_DIR.\n\n1.1.0\n\n[157]\n\n```\n$XDG_CONFIG_HOME/zim/preferences.conf\n $XDG_CONFIG_HOME/zim/notebooks.list\n```\n\n```\n$XDG_CONFIG_HOME/zutils.conf\n```\n\n"
    },
    {
      "title": "Partial",
      "level": 3,
      "content": "Table content:\nApplication | Legacy Path | Supported Since | Discussion | Notes\nabookAUR | ~/.abook |  |  | abook --config \"$XDG_CONFIG_HOME\"/abook/abookrc --datafile \"$XDG_DATA_HOME\"/abook/addressbook\nackAUR | ~/.ackrc |  | [160] | export ACKRC=\"$XDG_CONFIG_HOME/ack/ackrc\"\nAnsible | ~/.ansible | 2.14 | [161] [162] [163] | export ANSIBLE_HOME=\"${XDG_CONFIG_HOME}/ansible\" export ANSIBLE_CONFIG=\"${XDG_CONFIG_HOME}/ansible.cfg\" export ANSIBLE_GALAXY_CACHE_DIR=\"${XDG_CACHE_HOME}/ansible/galaxy_cache\" [164] The remote's ~/.ansible/tmp can be moved by setting remote_tmp = ${XDG_CONFIG_HOME}/ansible/tmp in an appropriate ansible.cfg. [165] [166]\nasdf-vmAUR | ~/.asdfrc, ~/.asdf/ |  | [167] | export ASDF_CONFIG_FILE=\"${XDG_CONFIG_HOME}/asdf/asdfrc\", export ASDF_DATA_DIR=\"${XDG_DATA_HOME}/asdf\"\naspell | ~/.aspell.conf |  | [168] | Very incomplete. The following re-locates the en dictionaries, but additional possible dictionaries are not specificed here for brevity. export ASPELL_CONF=\"per-conf $XDG_CONFIG_HOME/aspell/aspell.conf; personal $XDG_DATA_HOME/aspell/en.pws; repl $XDG_DATA_HOME/aspell/en.prepl\"\naws-cli | ~/.aws | 1.7.45 | [169] | export AWS_SHARED_CREDENTIALS_FILE=\"$XDG_CONFIG_HOME\"/aws/credentials, export AWS_CONFIG_FILE=\"$XDG_CONFIG_HOME\"/aws/config\nbash-completion | ~/.bash_completion |  |  | export BASH_COMPLETION_USER_FILE=\"$XDG_CONFIG_HOME\"/bash-completion/bash_completion\nbashdbAUR | ~/.bashdbinit, ~/.bashdb_hist |  |  | Like documented at [170], you can specify a file to run commands from. Thus, move the init file to XDG_CONFIG_HOME/bashdb/bashdbinit and create an alias alias bashdb='bashdb -x ${XDG_CONFIG_HOME:-$HOME/.config}/bashdb/bashdbinit'. Unfortunately the history file is hardcoded [171].\nbazaar | ~/.bazaar, ~/.bzr.log | 2.3.0 | [172] | Discussion in upstream bug states that bazaar will use ~/.config/bazaar if it exists. The logfile ~/.bzr.log might still be written.\nbogofilter-db | ~/.bogofilter | 0.7.5 | [173] | export BOGOFILTER_DIR=\"$XDG_DATA_HOME\"/bogofilter\nbtpd-gitAUR | ~/.btpd/ |  | [174] | btpd -d \"$XDG_DATA_HOME\"/.btpd HOME=\"$XDG_DATA_HOME\" btcli\nbunAUR | ~/.bun/ |  | [175] | Bun will prioritize using $XDG_CONFIG_HOME, $XDG_CACHE_HOME, and/or $XDG_DATA_HOME when these have explicitly been set. As an alternative, export BUN_INSTALL=\"$XDG_DATA_HOME\"/bun can be used to set bun's main location for its directories.\ncalc | ~/.calc_history |  |  | export CALCHISTFILE=\"$XDG_CACHE_HOME\"/calc_history\nRust#Cargo | ~/.cargo |  | [176] [177] [178] [179] | export CARGO_HOME=\"$XDG_DATA_HOME\"/cargo\ncataclysm-dda | ~/.cataclysm-dda | 0.D-1 | [180] | partial support due to required compile time option\ncd-bookmark | ~/.cdbookmark |  | [181] | export CD_BOOKMARK_FILE=$XDG_CONFIG_HOME/cd-bookmark/bookmarks or use the fork that has native XDG support: [182]\ncgdb | ~/.cgdb | 0.8.0 | [183] [184] | Set export CGDB_DIR=$XDG_CONFIG_HOME/cgdb and move the config file to XDG_CONFIG_HOME/cgdb/cgdbrc\nchez-schemeAUR | ~/.chezscheme_history |  |  | petite --eehistory \"$XDG_DATA_HOME\"/chezscheme/history\nchktex in texlive-binextra | ~/.chktexrc |  |  | Move the config file to $XDG_CONFIG_HOME/chktex/.chktexrc (mind the leading dot) and export CHKTEXRC=$XDG_CONFIG_HOME/chktex\nChromium | ~/.chromium, ~/.pki | 23057 | [185] [186] [187] | Deliberately (according to these sources) clobbers ~/.config by writing hundreds of megabytes of cache data into it. Quite unsupported. Chromium creates .pki due to not setting up NSS properly even though NSS itself allows using XDG spec now. This results in downstream from it not working as well (Qt WebEngine especially affecting many cases like KMail and etc.)\ncinelerra | ~/.bcast5 |  | [188] | export CIN_CONFIG=\"$XDG_CONFIG_HOME\"/bcast5\nconky | ~/.conkyrc | 00481ee | [189] | conky --config=\"$XDG_CONFIG_HOME\"/conky/conkyrc\nclaws-mail | ~/.claws-mail |  | [190] | claws-mail --alternate-config-dir \"$XDG_DATA_HOME\"/claws-mail\ncoreutils | ~/.dircolors |  |  | eval $(dircolors \"$XDG_CONFIG_HOME\"/dircolors)\ncrawl | ~/.crawl |  |  | The trailing slash is required: export CRAWL_DIR=\"$XDG_DATA_HOME\"/crawl/\nclusterssh | ~/.clusterssh/ |  |  | alias cssh=\"cssh --config-file '$XDG_CONFIG_HOME/clusterssh/config'\" $XDG_CONFIG_HOME/clusterssh/config extra_cluster_file=$HOME/.config/clusterssh/clusters extra_tag_file=$HOME/.config/clusterssh/tags Despite this, clusterssh will still create ~/.clusterssh/.\nCUDA | ~/.nv |  |  | export CUDA_CACHE_PATH=\"$XDG_CACHE_HOME\"/nv\ndict | ~/.dictrc |  |  | dict -c \"$XDG_CONFIG_HOME\"/dict/dictrc\ndiscord | ${XDG_CONFIG_HOME}/discord |  |  | As of version 0.0.27: Undocumented, though actively used: export DISCORD_USER_DATA_DIR=\"${XDG_DATA_HOME}\" Source: <discord_system_package_root>/resources/app.asar.\nDocker | ~/.docker |  |  | export DOCKER_CONFIG=\"$XDG_CONFIG_HOME\"/docker\ndocker-machine | ~/.docker/machine |  |  | export MACHINE_STORAGE_PATH=\"$XDG_DATA_HOME\"/docker-machine\nDOSBox | ~/.dosbox/dosbox-0.74-2.conf |  | [191] | dosbox -conf \"$XDG_CONFIG_HOME\"/dosbox/dosbox.conf\ndub | ~/.dub | v1.30.0-beta.1 |  | Dub uses the ~/.dub directory for both user settings and caching downloaded packages. The directory can only be moved as a whole, using export DUB_HOME=\"path/to/new/dub\".\nElectrum Bitcoin Wallet | ~/.electrum | c121230 |  | export ELECTRUMDIR=\"$XDG_DATA_HOME/electrum\"\nELinks | ~/.elinks |  |  | export ELINKS_CONFDIR=\"$XDG_CONFIG_HOME\"/elinks\nelixir | ~/.mix, ~/.hex | afaf889 | [192] [193] | Elixir does not fully conform to XDG specs, it will use XDG only if the MIX_XDG variable is set to a special value, otherwise it will by default use legacy path. export MIX_XDG=\"true\"\nerlang | ~/.erlang.cookie | [194] | [195] | Erlang does not fully conform to XDG specs, it looks for its files in XDG_CONFIG_HOME last. mkdir \"$XDG_CONFIG_HOME\"/erlang mv ~/.erlang.cookie \"$XDG_CONFIG_HOME\"/erlang\nElm | ~/.elm |  |  | export ELM_HOME=\"$XDG_CONFIG_HOME\"/elm\nfactorioAUR | ~/.factorio/ |  | [196] [197] | Factorio supports manually specifying data paths with a config file: [198] __Game_Install_directory/config-path.cfg use-system-read-write-data-directories=true __Game_Install_directory/config/config.ini [path] read-data=__PATH__executable__/../../data write-data=.local/share/factorio\nfceux | ~/.fceux/ |  | [199] | export FCEUX_HOME=\"$XDG_CONFIG_HOME\"/fceux. Fceux will create .fceux directory inside $FCEUX_HOME.\nFFmpeg | ~/.ffmpeg |  |  | export FFMPEG_DATADIR=\"$XDG_CONFIG_HOME\"/ffmpeg\nflutterAUR | ~/.flutter, ~/.flutter_settings, ~/.flutter_tool_state, ~/.pub-cache |  | [200] | \nfzf-gitAUR | ~/.fzf.bash, ~/.fzf.zsh |  | [201] | The shell init files will be installed to XDG_CONFIG_HOME/fzf if the installation script is called with --xdg for example /usr/local/opt/fzf/install --xdg.\nemscripten | ~/.emscripten, ~/.emscripten_sanity, ~/.emscripten_ports, ~/.emscripten_cache__last_clear |  | [202] | export EM_CONFIG=\"$XDG_CONFIG_HOME\"/emscripten/config, export EM_CACHE=\"$XDG_CACHE_HOME\"/emscripten/cache, export EM_PORTS=\"$XDG_DATA_HOME\"/emscripten/cache, emcc --em-config \"$XDG_CONFIG_HOME\"/emscripten/config --em-cache \"$XDG_CACHE_HOME\"/emscripten/cache\nget_iplayerAUR | ~/.get_iplayer |  |  | export GETIPLAYERUSERPREFS=\"$XDG_DATA_HOME\"/get_iplayer\ngetmail | ~/.getmail/getmailrc |  |  | getmail --rcfile=\"$XDG_CONFIG_HOME/getmail/getmailrc\" --getmaildir=\"$XDG_DATA_HOME/getmail\"\nghc | ~/.ghci | [203] | [204][dead link 2025-04-06 ⓘ] | Supported upstream from 9.4.1 [205], but as of 2025-03-18 Arch package is 9.2.8 and not yet up-to-date.\nghcup-hs-binAUR | ~/.ghcup | [206] | [207] | export GHCUP_USE_XDG_DIRS=true The environment variable GHCUP_USE_XDG_DIRS can be set to any non-empty value. See [208].\nglivAUR | ~/.glivrc |  |  | gliv --glivrc=\"$XDG_CONFIG_HOME\"/gliv/glivrc\ngnuradio | ~/.gnuradio |  | [209] | GNU Radio: export GR_PREFS_PATH=\"$XDG_CONFIG_HOME\"/gnuradio GNU Radio Companion: export GRC_PREFS_PATH=\"$XDG_CONFIG_HOME\"/gnuradio/grc.conf\nGnuPG | ~/.gnupg |  | [210] [211] | export GNUPGHOME=\"$XDG_DATA_HOME\"/gnupg, gpg2 --homedir \"$XDG_DATA_HOME\"/gnupg Note that this currently does not work out-of-the-box using systemd user units and socket-based activation, since the socket directory changes based on the hash of $GNUPGHOME. You can get the new socket directory using gpgconf --list-dirs socketdir and have to modify the systemd user units to listen on the correct sockets accordingly. You also have to use the following gpg-agent.service drop-in file (or otherwise pass the GNUPGHOME env var to the agent running in systemd), or you might experience issues with \"missing\" private keys: [Service] Environment=\"GNUPGHOME=%h/.local/share/gnupg\" If you use GPG as your SSH agent, set SSH_AUTH_SOCK to the output of gpgconf --list-dirs agent-ssh-socket instead of some hardcoded value.\nGo | ~/go | [212] |  | export GOPATH=\"$XDG_DATA_HOME\"/go, export GOMODCACHE=\"$XDG_CACHE_HOME\"/go/mod If GOMODCACHE is not set, it defaults to $GOPATH/pkg/mod (see [213]). GOCACHE is supported and defaults to $XDG_CACHE_HOME/go-build (see [214]).\nGoogle Earth | ~/.googleearth |  |  | Some paths can be changed with the KMLPath and CachePath options in ~/.config/Google/GoogleEarthPlus.conf\ngopass | ~/.password-store |  |  | Override settings in ~/.config/gopass/config.yml: ~/.config/gopass/config.yml root: path: gpgcli-gitcli-fs+file:///home/<userid>/.config/password-store\ngpodder | ~/gPodder |  |  | GPODDER_DOWNLOAD_DIR sets the download folder. GPODDER_HOME - where config and database files are stored, downloads also if GPODDER_DOWNLOAD_DIR is not set.\nGQ LDAP client | ~/.gq, ~/.gq-state | 1.51 |  | export GQRC=\"$XDG_CONFIG_HOME\"/gqrc, export GQSTATE=\"$XDG_DATA_HOME\"/gq/gq-state, mkdir -p \"$(dirname \"$GQSTATE\")\"\nGradle | ~/.gradle |  | [215] [216] | export GRADLE_USER_HOME=\"$XDG_DATA_HOME\"/gradle\nGTK 1 | ~/.gtkrc |  |  | export GTK_RC_FILES=\"$XDG_CONFIG_HOME\"/gtk-1.0/gtkrc\nGTK 2 | ~/.gtkrc-2.0 |  |  | export GTK2_RC_FILES=\"$XDG_CONFIG_HOME/gtk-2.0/gtkrc\":\"$XDG_CONFIG_HOME/gtk-2.0/gtkrc.mine\" If Lxappearance is used, ~/.gtkrc-2.0 may keep being created because it is where clicking \"Apply\" customizations writes to. The path is hardcoded in Lxappearance, but simply being an output file, the settings can be repeatedly moved to the location. To prevent KDE Plasma from creating this file, disable the \"GNOME/GTK Settings Synchronization\" background service.\nhledger | ~/.hledger.journal |  | [217] | export LEDGER_FILE=\"$XDG_DATA_HOME\"/hledger.journal\nHoudini | ~/houdiniMAJOR.MINOR) |  | [218] [219] | export HOUDINI_USER_PREF_DIR=\"$XDG_CACHE_HOME\"/houdini__HVER__ The value of this variable must include the substring __HVER__, which will be replaced at run time with the current MAJOR.MINOR version string.\nimapfilterAUR | ~/.imapfilter |  |  | export IMAPFILTER_HOME=\"$XDG_CONFIG_HOME/imapfilter\"\nIPFS | ~/.ipfs |  |  | export IPFS_PATH=\"$XDG_DATA_HOME\"/ipfs\nirb | ~/.irbrc |  |  | ~/.profile $ export IRBRC=\"$XDG_CONFIG_HOME\"/irb/irbrc \"$XDG_CONFIG_HOME\"/irb/irbrc IRB.conf[:SAVE_HISTORY] ||= 1000 IRB.conf[:HISTORY_FILE] ||= File.join(ENV[\"XDG_DATA_HOME\"], \"irb\", \"history\")\nirssi | ~/.irssi |  | [220] | irssi --config=\"$XDG_CONFIG_HOME\"/irssi/config --home=\"$XDG_DATA_HOME\"/irssi\nisync | ~/.mbsyncrc |  | [221] | mbsync -c \"$XDG_CONFIG_HOME\"/isync/mbsyncrc\nJava#OpenJDK | ~/.java/.userPrefs |  | [222] | export _JAVA_OPTIONS=-Djava.util.prefs.userRoot=\"$XDG_CONFIG_HOME\"/java\njupyter | ~/.jupyter | 5.0.0rc0 | [223] [224] | python-jupyter-core < v5.0.0: export JUPYTER_CONFIG_DIR=\"$XDG_CONFIG_HOME\"/jupyter v5.0.0 <= python-jupyter-core < v6.0.0: export JUPYTER_PLATFORM_DIRS=\"1\" (see [225]) python-jupyter-core >= v6.0.0: full support (via python-platformdirs) enabled by default\nk9s | ~/.k9s | 0.20.4 | [226] | export K9SCONFIG=\"$XDG_CONFIG_HOME\"/k9s\nKDE | ~/.kde, ~/.kde4 |  | [227] | export KDEHOME=\"$XDG_CONFIG_HOME\"/kde\nkeychain | ~/.keychain | [228] | [229] | keychain --absolute --dir \"$XDG_RUNTIME_DIR\"/keychain\nkodi | ~/.kodi | [230] | [231] | KODI_DATA=$XDG_DATA_HOME/kodi\nkscriptAUR | ~/.kscript |  | [232] | export KSCRIPT_CACHE_DIR=\"$XDG_CACHE_HOME\"/kscript\nledger | ~/.ledgerrc, ~/.pricedb |  | [233] | ledger --init-file \"$XDG_CONFIG_HOME\"/ledgerrc\nLeiningen | ~/.lein, ~/.m2 |  | [234] | export LEIN_HOME=\"$XDG_DATA_HOME\"/lein to change the m2 repo location used by leiningen look here: Leiningen#m2_repo_location\nlibdvdcss | ~/.dvdcss |  | [235] | export DVDCSS_CACHE=\"$XDG_DATA_HOME\"/dvdcss\nlibice | ~/.ICEauthority |  | [236] | export ICEAUTHORITY=\"$XDG_CACHE_HOME\"/ICEauthority Make sure XDG_CACHE_HOME is set beforehand to directory user running Xorg has write access to. Do not use XDG_RUNTIME_DIR as it is available after login. Display managers that launch Xorg (like GDM) will repeatedly fail otherwise.\nLibreOffice |  |  | [237] | Libreoffice stores everything in $XDG_CONFIG_HOME/libreoffice/4/user/, including runtime files, user data, cache and extensions. Some of these can be changed unter Tools > Options > LibreOffice > Paths\nlibx11 | ~/.XCompose, ~/.compose-cache |  |  | export XCOMPOSEFILE=\"$XDG_CONFIG_HOME\"/X11/xcompose, export XCOMPOSECACHE=\"$XDG_CACHE_HOME\"/X11/xcompose\nltrace | ~/.ltrace.conf |  |  | ltrace -F \"$XDG_CONFIG_HOME\"/ltrace/ltrace.conf\nLuanti | ~/.minetest/ |  | [238] | export MINETEST_USER_PATH=\"$XDG_DATA_HOME\"/luanti\nlynx | /etc/lynx.cfg |  |  | export LYNX_CFG=\"$XDG_CONFIG_HOME\"/lynx.cfg\nm17n-db | ~/.m17n.d |  | [239] | \nmaptool-binAUR | ~/.maptool-rptools |  | [240] | /opt/maptool/lib/app/MapTool.cfg [JavaOptions] -DMAPTOOL_DATADIR=.local/share/maptool-rptools However, no way to change the location of this configuration file.\nmaven | ~/.m2 |  | [241] | export MAVEN_OPTS=-Dmaven.repo.local=\"$XDG_DATA_HOME\"/maven/repository , mvn -gs \"$XDG_CONFIG_HOME\"/maven/settings.xml and set <localRepository> as appropriate in settings.xml\nMathematica | ~/.Wolfram |  |  | export WOLFRAM_USERBASE=\"$XDG_CONFIG_HOME\"/Wolfram Used to be MATHEMATICA_USERBASE, see Upgrading from Mathematica to Wolfram.\nmaxima | ~/.maxima |  |  | export MAXIMA_USERDIR=\"$XDG_CONFIG_HOME\"/maxima\nmednafen | ~/.mednafen |  |  | export MEDNAFEN_HOME=\"$XDG_CONFIG_HOME\"/mednafen\nminikube | ~/.minikube |  | [242] | export MINIKUBE_HOME=\"$XDG_DATA_HOME\"/minikube Creates a further .minikube directory in MINIKUBE_HOME for whatever reason.\nmitmproxy | ~/.mitmproxy |  |  | alias mitmproxy=\"mitmproxy --set confdir=$XDG_CONFIG_HOME/mitmproxy\", alias mitmweb=\"mitmweb --set confdir=$XDG_CONFIG_HOME/mitmproxy\"\nMOC | ~/.moc |  |  | mocp -M \"$XDG_CONFIG_HOME\"/moc, mocp -O MOCDir=\"$XDG_CONFIG_HOME\"/moc\nmonero | ~/.bitmonero |  |  | monerod --data-dir \"$XDG_DATA_HOME\"/bitmonero\nmost | ~/.mostrc |  |  | export MOST_INITFILE=\"$XDG_CONFIG_HOME\"/mostrc\nMPlayer | ~/.mplayer |  |  | export MPLAYER_HOME=\"$XDG_CONFIG_HOME\"/mplayer\nmtpaint | ~/.mtpaint |  | [243] | /etc/mtpaint/mtpaintrc userINI = ~/.config/mtpaint\nmypy | ~/.config/mypy/config, ~/.mypy.ini, ~/.mypy_cache | v0.670 | [244] [245] | XDG_CONFIG_HOME/mypy/config, export MYPY_CACHE_DIR=\"$XDG_CACHE_HOME\"/mypy\nMySQL | ~/.mysql_history, ~/.my.cnf , ~/.mylogin.cnf |  |  | export MYSQL_HISTFILE=\"$XDG_DATA_HOME\"/mysql_history ~/.my.cnf only supported for mysql-server, not mysql-client [246] ~/.mylogin.cnf unsupported\nmysql-workbench | ~/.mysql/workbench |  |  | You can run MySQL Workbench with the ---configdir flag, such as mysql-workbench --configdir=\"$XDG_DATA_HOME/mysql/workbench\". The directory needs to be created manually, since MySQL Workbench default location is $HOME/.mysql/workbench .\nncurses | ~/.terminfo |  |  | Precludes system path searching: export TERMINFO=\"$XDG_DATA_HOME\"/terminfo, export TERMINFO_DIRS=\"$XDG_DATA_HOME\"/terminfo:/usr/share/terminfo\nn | /usr/local/n |  |  | export N_PREFIX=$XDG_DATA_HOME/n\nncmpc | ~/.ncmpc |  |  | ncmpc -f \"$XDG_CONFIG_HOME\"/ncmpc/config\nNetbeans | ~/.netbeans |  | [247] | netbeans --userdir \"${XDG_CONFIG_HOME}\"/netbeans\nNode.js | ~/.node_repl_history |  | [248] | export NODE_REPL_HISTORY=\"$XDG_DATA_HOME\"/node_repl_history\nnpm | ~/.npm, ~/.npmrc |  | [249] | export NPM_CONFIG_USERCONFIG=$XDG_CONFIG_HOME/npm/npmrc npmrc prefix=${XDG_DATA_HOME}/npm cache=${XDG_CACHE_HOME}/npm init-module=${XDG_CONFIG_HOME}/npm/config/npm-init.js logs-dir=${XDG_STATE_HOME}/npm/logs prefix is unnecessary (and unsupported) if Node.js is installed by nvm.\nopam | ~/.opam |  | [250] | export OPAMROOT=\"$XDG_DATA_HOME/opam\" Both configuration and state data are stored in OPAMROOT, so this solution is not fully compliant.\nPuTTY | ~/.putty/ | 9952b2d |  | Will use $XDG_CONFIG_HOME/putty if it already exists. Creates ~/.putty if not. Prioritises $XDG_CONFIG_HOME/putty if both exist. Tested in 0.74\npython-easyocrAUR | ~/.EasyOCR |  |  | export EASYOCR_MODULE_PATH=\"$XDG_CONFIG_HOME/EasyOCR\"\nspotdlAUR | ~/.spotdl | v4.0.6 (3929cae) | [251] | mkdir \"$XDG_DATA_HOME\"/spotdl\nnuget | ~/.nuget/packages |  | [252] | export NUGET_PACKAGES=\"$XDG_CACHE_HOME\"/NuGetPackages\nNVIDIA | ~/.nv |  |  | Uses XDG_CACHE_HOME if set, otherwise improperly falls back to ~/.nv instead of ~/.cache.\nnvidia-settings | ~/.nvidia-settings-rc |  | [253] | nvidia-settings --config=\"$XDG_CONFIG_HOME\"/nvidia/settings\nnvm | ~/.nvm |  |  | export NVM_DIR=\"$XDG_DATA_HOME\"/nvm\nOctave | ~/octave, ~/.octave_packages, ~/.octave_hist |  |  | export OCTAVE_HISTFILE=\"$XDG_CACHE_HOME/octave-hsts\", export OCTAVE_SITE_INITFILE=\"$XDG_CONFIG_HOME/octave/octaverc\" $XDG_CONFIG_HOME/octave/octaverc source /usr/share/octave/site/m/startup/octaverc; pkg prefix ~/.local/share/octave/packages ~/.local/share/octave/packages; pkg local_list /home/<your username>/.local/share/octave/octave_packages; The local_list option must be given an absolute path.\nomnisharp-roslyn-binAUR | ~/.omnisharp/ | [254] | [255] | export OMNISHARPHOME=\"$XDG_CONFIG_HOME/omnisharp\"\nopenscad | ~/.OpenSCAD | 7c3077b0f | [256] | Does not fully honour XDG Base Directory Specification, see [257] Currently it hard-codes ~/.local/share.\npackettracerAUR | ~/.packettracer, ~/pt |  |  | Has GUI config to change PT installation directory, ~/pt/ (Options > Preferences > Administrative > User Folder). This path is written to the file ~/.packettracer. Log files may still be written to ~/pt/logs regardless of this setting until the .packettracer file is recreated manually.\nparallel | ~/.parallel | 20170422 |  | export PARALLEL_HOME=\"$XDG_CONFIG_HOME\"/parallel\npass | ~/.password-store |  |  | export PASSWORD_STORE_DIR=\"$XDG_DATA_HOME\"/pass\nPhive | ~/.phive |  | [258] Also [259] and [260] | Since 0.14.5, it is possible to move the whole data directory. export PHIVE_HOME=\"$XDG_DATA_HOME/phive\"\nPidgin | ~/.purple |  | [261] | pidgin --config=\"$XDG_DATA_HOME\"/purple\nplatformio-core | ~/.platformio |  | [262] | export PLATFORMIO_CORE_DIR=\"$XDG_DATA_HOME\"/platformio\nPostgreSQL | ~/.psqlrc, ~/.psql_history, ~/.pgpass, ~/.pg_service.conf | 9.2 | [263] [264] | export PSQLRC=\"$XDG_CONFIG_HOME/pg/psqlrc\", export PSQL_HISTORY=\"$XDG_STATE_HOME/psql_history\", export PGPASSFILE=\"$XDG_CONFIG_HOME/pg/pgpass\", export PGSERVICEFILE=\"$XDG_CONFIG_HOME/pg/pg_service.conf\" It is required to create both directories: mkdir \"$XDG_CONFIG_HOME/pg\" && mkdir \"$XDG_STATE_HOME\"\nPulseAudio | ~/.esd_auth |  |  | Very likely generated by the module-esound-protocol-unix.so module. It can be configured to use a different location but it makes much more sense to just comment out this module in /etc/pulse/default.pa or \"$XDG_CONFIG_HOME\"/pulse/default.pa.\npyenv | ~/.pyenv |  | [265] [266] | export PYENV_ROOT=$XDG_DATA_HOME/pyenv\nazure-cli | ~/.azure |  |  | export AZURE_CONFIG_DIR=$XDG_DATA_HOME/azure\npython | ~/.python_history | v3.13 | [267] [268] [269] | All history from interactive sessions is saved to ~/.python_history by default since version 3.4 and PYTHON_HISTORY since 3.13. For the history file, Python will not create any missing directories and only writes to the file if its directory exists. This can still be customized the same way as in older versions (see this example), including to use a custom path or disable history saving. PYTHON_HISTORY: export PYTHON_HISTORY=$XDG_STATE_HOME/python_history PYTHONPYCACHEPREFIX: export PYTHONPYCACHEPREFIX=$XDG_CACHE_HOME/python PYTHONUSERBASE: export PYTHONUSERBASE=$XDG_DATA_HOME/python\npython-gripAUR | ~/.grip |  |  | export GRIPHOME=\"$XDG_CONFIG_HOME/grip\"\npython-setuptools | ~/.python-eggs |  |  | export PYTHON_EGG_CACHE=\"$XDG_CACHE_HOME\"/python-eggs\nracket | ~/.racketrc, ~/.racket |  | [270] | export PLTUSERHOME=\"$XDG_DATA_HOME\"/racket\nrbenv | ~/.rbenv |  | [271] [272] | export RBENV_ROOT=\"$XDG_DATA_HOME\"/rbenv\nnodenvAUR | ~/.nodenv |  |  | export NODENV_ROOT=\"$XDG_DATA_HOME\"/nodenv\nreadline | ~/.inputrc |  |  | export INPUTRC=\"$XDG_CONFIG_HOME\"/readline/inputrc\nrecoll | ~/.recoll |  |  | export RECOLL_CONFDIR=\"$XDG_CONFIG_HOME/recoll\"\nredis | ~/.rediscli_history, ~/.redisclirc |  |  | export REDISCLI_HISTFILE=\"$XDG_DATA_HOME\"/redis/rediscli_history, export REDISCLI_RCFILE=\"$XDG_CONFIG_HOME\"/redis/redisclirc\nripgrep |  |  | [273] | export RIPGREP_CONFIG_PATH=$XDG_CONFIG_HOME/ripgrep/config\nrlwrap | ~/.*_history |  | [274] | export RLWRAP_HOME=\"$XDG_DATA_HOME\"/rlwrap\nruby-bundler | ~/.bundle | 4a120d8 | Pull request 3545 | export BUNDLE_USER_CACHE=$XDG_CACHE_HOME/bundle export BUNDLE_USER_CONFIG=$XDG_CONFIG_HOME/bundle/config export BUNDLE_USER_PLUGIN=$XDG_DATA_HOME/bundle For more info see Bundler: bundle config.\nruby-solargraphAUR | ~/.solargraph/cache/ |  | [275] | export SOLARGRAPH_CACHE=$XDG_CACHE_HOME/solargraph\nruff | .ruff_cache |  | [276] | export RUFF_CACHE_DIR=$XDG_CACHE_HOME/ruff\nRust#Rustup | ~/.rustup |  | [277] | export RUSTUP_HOME=\"$XDG_DATA_HOME\"/rustup\nsbt | ~/.sbt ~/.ivy2 |  | [278] | sbt -ivy \"$XDG_DATA_HOME\"/ivy2 -sbt-dir \"$XDG_DATA_HOME\"/sbt (beware [279])\nSageMath | ~/.sage |  |  | export DOT_SAGE=\"$XDG_CONFIG_HOME\"/sage\nGNU Screen | ~/.screenrc ~/.screen/ |  |  | export SCREENRC=\"$XDG_CONFIG_HOME\"/screen/screenrc, export SCREENDIR=\"${XDG_RUNTIME_DIR}/screen\"\nsimplescreenrecorderAUR | ~/.ssr/ | 0.4.3 | [280] [281] | Will use $XDG_CONFIG_HOME/simplescreenrecorder/ ONLY if it already was created otherwise defaults to ~/.ssr mv ~/.ssr \"$XDG_CONFIG_HOME\"/simplescreenrecorder\nsingularity-ceAUR | ~/.singularity | 3.11.4 |  | export SINGULARITY_CONFIGDIR=\"$XDG_CONFIG_HOME/singularity\", export SINGULARITY_CACHEDIR=\"$XDG_CACHE_HOME/singularity\"\nspacemacs | ~/.spacemacs, ~/.spacemacs.d | [282] | [283] | Move the ~/.spacemacs file. export SPACEMACSDIR=\"$XDG_CONFIG_HOME\"/spacemacs, mv ~/.spacemacs \"$SPACEMACSDIR\"/init.el Other files need to be configured like Emacs.\nSQLite | ~/.sqliterc, ~/.sqlite_history | 3.44.0 for the config;history is still in the legacy place |  | XDG_CONFIG_HOME/sqlite3/sqliterc, export SQLITE_HISTORY=$XDG_DATA_HOME/sqlite_history\nstarship | ~/.config/starship, ~/.cache/starship | [284] (v0.2.0), [285] (v0.45.0) | [286] | export STARSHIP_CONFIG=\"$XDG_CONFIG_HOME\"/starship.toml, export STARSHIP_CACHE=\"$XDG_CACHE_HOME\"/starship\nsubversion | ~/.subversion |  | [287] [288][289] | alias svn=\"svn --config-dir \\\"$XDG_CONFIG_HOME\\\"/subversion\"\nsudo | ~/.sudo_as_admin_successful | 1.9.6 | [290] [291] | Only present when activated at compile-time (default none). An admin_flag parameter can be used in /etc/sudoers since 1.9.6.\ntask | ~/.task, ~/.taskrc |  |  | Fully supported in version 2.6 (note $XDG_CONFIG_HOME/task/taskrc must exist, otherwise taskwarrior will offer to create sample config in legacy $HOME/.taskrc location, even if $XDG_CONFIG_HOME is set [292][293])\nLocal TeX Live TeXmf tree, TeXmf caches and config | ~/texmf, ~/.texlive/texmf-var, ~/.texlive/texmf-config |  |  | export TEXMFHOME=$XDG_DATA_HOME/texmf, export TEXMFVAR=$XDG_CACHE_HOME/texlive/texmf-var, export TEXMFCONFIG=$XDG_CONFIG_HOME/texlive/texmf-config\nTeXmacs | ~/.TeXmacs |  |  | export TEXMACS_HOME_PATH=$XDG_STATE_HOME/texmacs\ntiptopAUR | ~/.tiptoprc |  |  | This will still expect the .tiptoprc file. tiptop -W \"$XDG_CONFIG_HOME\"/tiptop\nruby-travisAUR | ~/.travis/ |  | [294] | export TRAVIS_CONFIG_PATH=$XDG_CONFIG_HOME/travis\nuncrustify | ~/.uncrustify.cfg |  |  | export UNCRUSTIFY_CONFIG=\"$XDG_CONFIG_HOME\"/uncrustify/uncrustify.cfg\nUnison | ~/.unison |  |  | export UNISON=\"$XDG_DATA_HOME\"/unison\nunitsAUR | ~/.units_history |  |  | units --history \"$XDG_CACHE_HOME\"/units_history\nurxvtd | ~/.urxvt/urxvtd-hostname |  |  | export RXVT_SOCKET=\"$XDG_RUNTIME_DIR\"/urxvtd\nVagrant | ~/.vagrant.d, ~/.vagrant.d/aliases |  | [295] | export VAGRANT_HOME=\"$XDG_DATA_HOME\"/vagrant, export VAGRANT_ALIAS_FILE=\"$XDG_DATA_HOME\"/vagrant/aliases\nvint | ~/.vintrc.yaml, .vintrc.yml, .vintrc | 0f741ac2c | [296] | Undocumented, but the code says $XDG_CONFIG_HOME/.vintrc.yaml should work\nvirtualenv | ~/.virtualenvs |  |  | export WORKON_HOME=\"$XDG_DATA_HOME/virtualenvs\"\nVisual Studio Code | ~/.vscode-oss/ |  | [297] | You can use export VSCODE_PORTABLE=\"$XDG_DATA_HOME\"/vscode, which is not documented and might break unexpectedly. Setting this makes the editor look for the contents of .config/Code - OSS in $VSCODE_PORTABLE/user-data. You can also run Visual Studio with the --extensions-dir flag, such as code --extensions-dir \"$XDG_DATA_HOME/vscode\". This is documented and probably will not break as unexpectedly, as it has other use cases.\nVSCodiumAUR | ~/.vscode-oss/ |  | [298] [299] | You can run VSCodium with the --extensions-dir flag, such as vscodium --extensions-dir \"$XDG_DATA_HOME/vscode\". This however won't prevent the creation of ~/.vscode-oss/ directory.\nw3m | ~/.w3m | 26284ff | [300] [301] | export W3M_DIR=\"$XDG_STATE_HOME/w3m\"\nwakatime | ~/.wakatime.cfg, ~/.wakatime.data, ~/.wakatime.db, ~/.wakatime.log |  |  | export WAKATIME_HOME=\"$XDG_CONFIG_HOME/wakatime\" The directory needs to be created manually mkdir \"$XDG_CONFIG_HOME/wakatime\"\nwget | ~/.wgetrc, ~/.wget-hsts |  |  | export WGETRC=\"$XDG_CONFIG_HOME/wgetrc\" and add the following as an alias for wget: wget --hsts-file=\"$XDG_CACHE_HOME/wget-hsts\", or set the hsts-file variable with an absolute path as wgetrc does not support environment variables: echo hsts-file \\= \"$XDG_CACHE_HOME\"/wget-hsts >> \"$XDG_CONFIG_HOME/wgetrc\"\nwine | ~/.wine |  | [302] | Winetricks uses XDG-alike location below for WINEPREFIX management: mkdir -p \"$XDG_DATA_HOME\"/wineprefixes, export WINEPREFIX=\"$XDG_DATA_HOME\"/wineprefixes/default\nx3270AUR | ~/.x3270pro, ~/.c3270pro |  |  | export X3270PRO=\"$XDG_CONFIG_HOME\"/x3270/config, export C3270PRO=\"$XDG_CONFIG_HOME\"/c3270/config App also creates ~/.x3270connect but this is currently unsupported.\nxbindkeys | ~/.xbindkeysrc |  |  | xbindkeys -f \"$XDG_CONFIG_HOME\"/xbindkeys/config\nxorg-xauth | ~/.Xauthority |  |  | export XAUTHORITY=\"$XDG_RUNTIME_DIR\"/Xauthority Note that LightDM does not allow you to change this variable. If you change it nonetheless, you will not be able to login. Use startx instead or configure LightDM. According to [303] SLiM has ~/.Xauthority hardcoded. The SDDM Xauthority path can be changed in its own configuration files as shown below. Unfortunately, it is relative to the home directory. /etc/sddm.conf.d/xauth-path.conf [X11] UserAuthFile=.Xauthority On Wayland, overriding this may cause Xorg programs to fail to connect to the Xwayland server. For example, both kwin and mutter use a randomized name, so it cannot be set to a static value.\nxinit | ~/.xinitrc, ~/.xserverrc |  | [304] | export XINITRC=\"$XDG_CONFIG_HOME\"/X11/xinitrc, export XSERVERRC=\"$XDG_CONFIG_HOME\"/X11/xserverrc\nxorg-xrdb | ~/.Xresources, ~/.Xdefaults |  |  | Ultimately you should be using Xresources and since these resources are loaded via xrdb you can specify a path such as xrdb -load ~/.config/X11/xresources.\nXorg | ~/.xsession, ~/.xsessionrc, ~/.Xsession, ~/.xsession-errors |  |  | These can be added as part of your Xorg init script (~/.xinitrc) or Xsession start script (which will often be based on /etc/X11/Xsession). Depending on where you have configured your $XDG_CACHE_HOME, you might need to expand the paths yourself. # xsession start script USERXSESSION=\"$XDG_CACHE_HOME/X11/xsession\" USERXSESSIONRC=\"$XDG_CACHE_HOME/X11/xsessionrc\" ALTUSERXSESSION=\"$XDG_CACHE_HOME/X11/Xsession\" ERRFILE=\"$XDG_CACHE_HOME/X11/xsession-errors\" Unlike most other examples in this table, actual X11 init scripts will vary a lot between installations.\nz | ~/.z |  | [305] | export _Z_DATA=\"$XDG_DATA_HOME/z\"\nyarn | ~/.yarnrc, ~/.yarn/, ~/.yarncache/, ~/.yarn-config/ | 2d454b5 | [306] [307] | alias yarn='yarn --use-yarnrc \"$XDG_CONFIG_HOME/yarn/config\"'\nzsh | ~/.zshrc, ~/.zprofile, ~/.zshenv, ~/.zlogin, ~/.zlogout, ~/.histfile, ~/.zcompdump, ~/.zcompcache | [308] | [309] | export ZDOTDIR=$HOME/.config/zsh to avoid the need of most zsh dotfiles in your home. \"$XDG_CONFIG_HOME\"/zsh/.zshrc # Use XDG dirs for completion and history files [ -d \"$XDG_STATE_HOME\"/zsh ] || mkdir -p \"$XDG_STATE_HOME\"/zsh HISTFILE=\"$XDG_STATE_HOME\"/zsh/history [ -d \"$XDG_CACHE_HOME\"/zsh ] || mkdir -p \"$XDG_CACHE_HOME\"/zsh zstyle ':completion:*' cache-path \"$XDG_CACHE_HOME\"/zsh/zcompcache compinit -d \"$XDG_CACHE_HOME\"/zsh/zcompdump-$ZSH_VERSION Finally, if you use zsh as a login shell and chose to rely on either of the startup files ~/.zshenv or, ~/.zprofile or, ~/.zlogin to set important environment variables such as ZDOTDIR, to bootstrap, there is no way around having the one file that sets ZDOTDIR be in the default location. For context, an exception is if your wider system configuration does set the ZDOTDIR environment variable before that.\n\n```\nexport ANSIBLE_HOME=\"${XDG_CONFIG_HOME}/ansible\"\nexport ANSIBLE_CONFIG=\"${XDG_CONFIG_HOME}/ansible.cfg\"\nexport ANSIBLE_GALAXY_CACHE_DIR=\"${XDG_CACHE_HOME}/ansible/galaxy_cache\"\n```\n\nThe remote's ~/.ansible/tmp can be moved by setting remote_tmp = ${XDG_CONFIG_HOME}/ansible/tmp in an appropriate ansible.cfg. [165] [166]\n\nHOME=\"$XDG_DATA_HOME\" btcli\n\n```\nexport CALCHISTFILE=\"$XDG_CACHE_HOME\"/calc_history\n```\n\nor use the fork that has native XDG support: [182]\n\nexport CRAWL_DIR=\"$XDG_DATA_HOME\"/crawl/\n\n```\n$XDG_CONFIG_HOME/clusterssh/config\n```\n\n```\nextra_cluster_file=$HOME/.config/clusterssh/clusters\nextra_tag_file=$HOME/.config/clusterssh/tags\n```\n\nDespite this, clusterssh will still create ~/.clusterssh/.\n\nUndocumented, though actively used: export DISCORD_USER_DATA_DIR=\"${XDG_DATA_HOME}\"\n\nSource: <discord_system_package_root>/resources/app.asar.\n\nexport MIX_XDG=\"true\"\n\nmkdir \"$XDG_CONFIG_HOME\"/erlang mv ~/.erlang.cookie \"$XDG_CONFIG_HOME\"/erlang\n\n```\n__Game_Install_directory/config-path.cfg\n```\n\n```\nuse-system-read-write-data-directories=true\n```\n\n```\n__Game_Install_directory/config/config.ini\n```\n\n```\n[path]\nread-data=__PATH__executable__/../../data\nwrite-data=.local/share/factorio\n```\n\nThe environment variable GHCUP_USE_XDG_DIRS can be set to any non-empty value. See [208].\n\nexport GR_PREFS_PATH=\"$XDG_CONFIG_HOME\"/gnuradio\n\nGNU Radio Companion: export GRC_PREFS_PATH=\"$XDG_CONFIG_HOME\"/gnuradio/grc.conf\n\nNote that this currently does not work out-of-the-box using systemd user units and socket-based activation, since the socket directory changes based on the hash of $GNUPGHOME. You can get the new socket directory using gpgconf --list-dirs socketdir and have to modify the systemd user units to listen on the correct sockets accordingly. You also have to use the following gpg-agent.service drop-in file (or otherwise pass the GNUPGHOME env var to the agent running in systemd), or you might experience issues with \"missing\" private keys:\n\n```\n[Service]\nEnvironment=\"GNUPGHOME=%h/.local/share/gnupg\"\n```\n\nIf you use GPG as your SSH agent, set SSH_AUTH_SOCK to the output of gpgconf --list-dirs agent-ssh-socket instead of some hardcoded value.\n\nIf GOMODCACHE is not set, it defaults to $GOPATH/pkg/mod (see [213]). GOCACHE is supported and defaults to $XDG_CACHE_HOME/go-build (see [214]).\n\n```\n~/.config/gopass/config.yml\n```\n\n```\nroot:\npath: gpgcli-gitcli-fs+file:///home/<userid>/.config/password-store\n```\n\n[216]\n\nIf Lxappearance is used, ~/.gtkrc-2.0 may keep being created because it is where clicking \"Apply\" customizations writes to. The path is hardcoded in Lxappearance, but simply being an output file, the settings can be repeatedly moved to the location.\n\nTo prevent KDE Plasma from creating this file, disable the \"GNOME/GTK Settings Synchronization\" background service.\n\n[219]\n\nThe value of this variable must include the substring __HVER__, which will be replaced at run time with the current MAJOR.MINOR version string.\n\n```\n~/.profile\n```\n\n```\n$ export IRBRC=\"$XDG_CONFIG_HOME\"/irb/irbrc\n```\n\n```\n\"$XDG_CONFIG_HOME\"/irb/irbrc\n```\n\n```\nIRB.conf[:SAVE_HISTORY] ||= 1000\nIRB.conf[:HISTORY_FILE] ||= File.join(ENV[\"XDG_DATA_HOME\"], \"irb\", \"history\")\n```\n\nexport JUPYTER_CONFIG_DIR=\"$XDG_CONFIG_HOME\"/jupyter\n\nv5.0.0 <= python-jupyter-core < v6.0.0:\n\nexport JUPYTER_PLATFORM_DIRS=\"1\" (see [225])\n\npython-jupyter-core >= v6.0.0: full support (via python-platformdirs) enabled by default\n\nto change the m2 repo location used by leiningen look here: Leiningen#m2_repo_location\n\nMake sure XDG_CACHE_HOME is set beforehand to directory user running Xorg has write access to.\n\nDo not use XDG_RUNTIME_DIR as it is available after login. Display managers that launch Xorg (like GDM) will repeatedly fail otherwise.\n\n```\n/opt/maptool/lib/app/MapTool.cfg\n```\n\n```\n[JavaOptions]\n-DMAPTOOL_DATADIR=.local/share/maptool-rptools\n```\n\nHowever, no way to change the location of this configuration file.\n\n, mvn -gs \"$XDG_CONFIG_HOME\"/maven/settings.xml and set <localRepository> as appropriate in settings.xml\n\nUsed to be MATHEMATICA_USERBASE, see Upgrading from Mathematica to Wolfram.\n\nCreates a further .minikube directory in MINIKUBE_HOME for whatever reason.\n\n```\n/etc/mtpaint/mtpaintrc\n```\n\n```\nuserINI = ~/.config/mtpaint\n```\n\n~/.my.cnf only supported for mysql-server, not mysql-client [246]\n\n~/.mylogin.cnf unsupported\n\nexport TERMINFO=\"$XDG_DATA_HOME\"/terminfo, export TERMINFO_DIRS=\"$XDG_DATA_HOME\"/terminfo:/usr/share/terminfo\n\n```\nnpmrc\n```\n\n```\nprefix=${XDG_DATA_HOME}/npm\ncache=${XDG_CACHE_HOME}/npm\ninit-module=${XDG_CONFIG_HOME}/npm/config/npm-init.js\nlogs-dir=${XDG_STATE_HOME}/npm/logs\n```\n\nprefix is unnecessary (and unsupported) if Node.js is installed by nvm.\n\nBoth configuration and state data are stored in OPAMROOT, so this solution is not fully compliant.\n\n```\n$XDG_CONFIG_HOME/octave/octaverc\n```\n\n```\nsource /usr/share/octave/site/m/startup/octaverc;\npkg prefix ~/.local/share/octave/packages ~/.local/share/octave/packages;\npkg local_list /home/<your username>/.local/share/octave/octave_packages;\n```\n\nThe local_list option must be given an absolute path.\n\nCurrently it hard-codes ~/.local/share.\n\nLog files may still be written to ~/pt/logs regardless of this setting until the .packettracer file is recreated manually.\n\nAlso [259] and [260]\n\nexport PHIVE_HOME=\"$XDG_DATA_HOME/phive\"\n\nIt is required to create both directories: mkdir \"$XDG_CONFIG_HOME/pg\" && mkdir \"$XDG_STATE_HOME\"\n\nPYTHON_HISTORY: export PYTHON_HISTORY=$XDG_STATE_HOME/python_history PYTHONPYCACHEPREFIX: export PYTHONPYCACHEPREFIX=$XDG_CACHE_HOME/python PYTHONUSERBASE: export PYTHONUSERBASE=$XDG_DATA_HOME/python\n\n```\nexport BUNDLE_USER_CACHE=$XDG_CACHE_HOME/bundle\nexport BUNDLE_USER_CONFIG=$XDG_CONFIG_HOME/bundle/config\nexport BUNDLE_USER_PLUGIN=$XDG_DATA_HOME/bundle\n```\n\nFor more info see Bundler: bundle config.\n\n~/.ivy2\n\n~/.screen/\n\n[281]\n\nmv ~/.ssr \"$XDG_CONFIG_HOME\"/simplescreenrecorder\n\nexport SPACEMACSDIR=\"$XDG_CONFIG_HOME\"/spacemacs, mv ~/.spacemacs \"$SPACEMACSDIR\"/init.el\n\nOther files need to be configured like Emacs.\n\ntiptop -W \"$XDG_CONFIG_HOME\"/tiptop\n\nSetting this makes the editor look for the contents of .config/Code - OSS in $VSCODE_PORTABLE/user-data.\n\nYou can also run Visual Studio with the --extensions-dir flag, such as code --extensions-dir \"$XDG_DATA_HOME/vscode\". This is documented and probably will not break as unexpectedly, as it has other use cases.\n\nThe directory needs to be created manually\n\nmkdir \"$XDG_CONFIG_HOME/wakatime\"\n\nmkdir -p \"$XDG_DATA_HOME\"/wineprefixes, export WINEPREFIX=\"$XDG_DATA_HOME\"/wineprefixes/default\n\nApp also creates ~/.x3270connect but this is currently unsupported.\n\nNote that LightDM does not allow you to change this variable. If you change it nonetheless, you will not be able to login. Use startx instead or configure LightDM. According to [303] SLiM has ~/.Xauthority hardcoded.\n\nThe SDDM Xauthority path can be changed in its own configuration files as shown below. Unfortunately, it is relative to the home directory.\n\n```\n/etc/sddm.conf.d/xauth-path.conf\n```\n\n```\n[X11]\nUserAuthFile=.Xauthority\n```\n\nOn Wayland, overriding this may cause Xorg programs to fail to connect to the Xwayland server. For example, both kwin and mutter use a randomized name, so it cannot be set to a static value.\n\nDepending on where you have configured your $XDG_CACHE_HOME, you might need to expand the paths yourself.\n\n```\n# xsession start script\n```\n\n```\nUSERXSESSION=\"$XDG_CACHE_HOME/X11/xsession\"\nUSERXSESSIONRC=\"$XDG_CACHE_HOME/X11/xsessionrc\"\nALTUSERXSESSION=\"$XDG_CACHE_HOME/X11/Xsession\"\nERRFILE=\"$XDG_CACHE_HOME/X11/xsession-errors\"\n```\n\nUnlike most other examples in this table, actual X11 init scripts will vary a lot between installations.\n\n```\n\"$XDG_CONFIG_HOME\"/zsh/.zshrc\n```\n\n```\n# Use XDG dirs for completion and history files\n[ -d \"$XDG_STATE_HOME\"/zsh ] || mkdir -p \"$XDG_STATE_HOME\"/zsh\nHISTFILE=\"$XDG_STATE_HOME\"/zsh/history\n[ -d \"$XDG_CACHE_HOME\"/zsh ] || mkdir -p \"$XDG_CACHE_HOME\"/zsh\nzstyle ':completion:*' cache-path \"$XDG_CACHE_HOME\"/zsh/zcompcache\ncompinit -d \"$XDG_CACHE_HOME\"/zsh/zcompdump-$ZSH_VERSION\n```\n\nFinally, if you use zsh as a login shell and chose to rely on either of the startup files ~/.zshenv or, ~/.zprofile or, ~/.zlogin to set important environment variables such as ZDOTDIR, to bootstrap, there is no way around having the one file that sets ZDOTDIR be in the default location. For context, an exception is if your wider system configuration does set the ZDOTDIR environment variable before that.\n\n"
    },
    {
      "title": "Hardcoded",
      "level": 3,
      "content": "Table content:\nApplication | Legacy Path | Discussion | Notes\nadb & Android Studio | ~/.android/ |  | Despite appearances otherwise, adb will always generate ~/.android/adbkeys, though it will try keys in ADB_VENDOR_KEYS as well.\naegisub | ~/.aegisub/ | [310] | \nalpine | ~/.pinerc, ~/.addressbook, ~/.pine-debug[1-4], ~/.newsrc, ~/.mailcap, ~/.mime.types, ~/.pine-interrupted-mail |  | alias alpine=\"alpine -p $XDG_CONFIG_HOME/alpine/pinerc\" In the above config file, some locations can be customized using options like newsrc-path= and address-book=.\naMule | ~/.aMule | [311] [312] [313] | \nanthy | ~/.anthy | [314] | \nApache Directory Studio | ~/.ApacheDirectoryStudio |  | \nARandR | ~/.screenlayout | [315] | \nArduino | ~/.arduino15, ~/.jssc | won't fix | \narduino-cli | ~/.arduino15/ | [316] | mv ~/.arduino15 $XDG_CONFIG_HOME/arduino15 Specify the new directories used by Arduino CLI in arduino-cli.yaml as mentioned in the documentation here. alias arduino-cli='arduino-cli --config-file $XDG_CONFIG_HOME/arduino15/arduino-cli.yaml'\nASP.NET Core | ~/.aspnet | [317] | \nAvidemux | ~/.avidemux6 | [318] | \nazote | ~/.azotebg | [319] | \nBash | ~/.bashrc, ~/.bash_history, ~/.bash_profile, ~/.bash_login, ~/.bash_logout | 108134 10431 | mkdir -p \"$XDG_STATE_HOME\"/bash export HISTFILE=\"$XDG_STATE_HOME\"/bash/history bashrc can be sourced from a different location in /etc/bash.bashrc. Specify --init-file <file> as an alternative to ~/.bashrc for interactive shells.\nBerkshelf | ~/.berkshelf/ |  | \ncelestiaAUR | ~/.celestiarc |  | \nchatty | ~/.chatty/ | [320] | \ncmake | ~/.cmake/ | [321] | Used for the user package registry ~/.cmake/packages/<package>, detailed in cmake-packages(7) § User Package Registry and the Package registry wiki page. Looks like it's hardcoded, for example in cmFindPackageCommand.cxx.\ncmus | ~/.config/cmus | [322] | [323]\nCinnamon | ~/.cinnamon/ | [324] | \nconanAUR | ~/.conan/ | [325] | export CONAN_USER_HOME=\"$XDG_CONFIG_HOME\" will set the directory in which .conan/ is created. It was designed to simplify CI, but can be used here too.\ncryptomatorAUR | ~/.Cryptomator | [326] | \ncVim[dead link 2022-09-23 ⓘ] | ~/.cvimrc | [327] | \ndarcs | ~/.darcs/ | [328] | \ndart | ~/.dart, ~/.dart-tool, ~/.dartServer | [329] | \ndbus | ~/.dbus/ | [330] | Consider using dbus-broker, as it does not create or use this directory.\ndevede | ~/.devedeng |  | Hardcoded here\nDia | ~/.dia/ |  | \ndig | ~/.digrc |  | \ndotnet-sdk | ~/.dotnet/, ~/.templateengine | [331] | \ndropbox | ~/.dropbox/ |  | \nEclipse | ~/.eclipse/ | [332] | Option -Dosgi.configuration.area=@user.home/.config/.. overrides but must be added to \"$ECLIPSE_HOME\"/eclipse.ini\" rather than command line which means you must have write access to $ECLIPSE_HOME. (Arch Linux hard-codes $ECLIPSE_HOME in /usr/bin/eclipse)\nemacs-slime | ~/.slime/ | [333] [334] | \nequalxAUR | ~/.equalx/ | [335] | \nFetchmail | ~/.fetchmailrc |  | \nFirefox | ~/.mozilla/ | [336] [337] | \nFlatpak | ~/.var/ | [338] [339] won't fix | \nfreesweep | ~/.sweeprc | [340] | \ngftpAUR | ~/.gftp/ | [341] | Following the XDG spec is planned for gftp.\ngitkrakenAUR | ~/.gitkraken/ | [342] | \nGoldenDict | ~/.goldendict/ | [343] | \ngphoto2 | ~/.gphoto | [344] | \ngramps | ~/.gramps/ | [345] | 2022 Support XDG base directory specification (for next release Gramps 5.2 ) - Patch https://github.com/gramps-project/gramps/pull/1368\ngroovy | ~/.groovy/ |  | \ngrsync | ~/.grsync/ | [346] | \ngoogle-cloud-cliAUR | ~/.gsutil/ | [347] | \ngtk-recordMyDesktop | ~/.gtk-recordmydesktop |  | \nhplip | ~/.hplip/ | [348] | \nhydrogen | ~/.hydrogen/ | [349] | \nidris | ~/.idris | [350] | \nitch-setup-binAUR | ~/.itch | won't fix | You can move the Game install location in the app settings.\nJmol | ~/.jmol/ | [351] | \nlbdbAUR | ~/.lbdbrc, ~/.lbdb/ | [352] | \nllpp | ~/.config/llpp.conf | [353][dead link 2022-09-23 ⓘ] (repo was deleted) | Added in 3ab86f0 but subsequently reverted in old:e253c9f1/new:e253c9f1\nJava OpenJDK | ~/.java/fonts | [354] | export _JAVA_OPTIONS=-Djava.util.prefs.userRoot=\"$XDG_CONFIG_HOME\"/java\nJava OpenJFX | ~/.java/webview |  | \njgmenu | ~/.jgmenu-lockfile | [355] [356] | \njitsi-meetAUR | ~/Downloads | libjitsi#518 | Download dir hardcoded to ~/Downloads rather than XDG_DOWNLOAD_DIR (from XDG user directories)\njulia | ~/.juliarc.jl, ~/.julia_history, ~/.julia | [357] [358] | The trailing :$JULIA_DEPOT_PATH is necessary. See [359] export JULIA_DEPOT_PATH=\"$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH\" export JULIAUP_DEPOT_PATH=\"$XDG_DATA_HOME/julia\"\nkotlin | ~/.kotlinc_history |  | Related Konan issue: [360]\nKubernetes | ~/.kube/ | [361][362][363] | export KUBECONFIG=\"$XDG_CONFIG_HOME/kube\" export KUBECACHEDIR=\"$XDG_CACHE_HOME/kube\"\nelan-leanAUR | ~/.elan | [364] | \nlibrewolfAUR | ~/.mozilla ~/.librewolf | [365] | \nlldb | ~/.lldb, ~/.lldbinit, ~/.lldb/lldb-widehistory | [366] | \nLMMS | ~/.lmmsrc.xml | [367] | \nmaliit-keyboard | ~/.presage |  | Maliit Keyboard uses an old, unmaintained library called Presage that creates ~/.presage. In 2024, Maliit Keyboard dropped their Presage dependency but as of version 2.3.1, this has not yet been included in a release. In the meantime, compile the master branch of maliit-keyboard.\nman-db | ~/.manpath | [368] | \nmathomatic[dead link 2024-10-12 ⓘ] | ~/.mathomaticrc, ~/.matho_history |  | History can be moved by using rlwrap mathomatic -r with the RLWRAP_HOME environment set appropriately.\nMediaWiki | ~/.mweval_history and ~/.mwsql_history (if $HOME is defined) |  | If $HOME is not defined: [MediaWiki]/maintenance/.mweval_history and [MediaWiki]/maintenance/.mwsql_history. Generated by the maintenance scripts eval.php and sql.php.\nmegacmdAUR | ~/.megaCmd/ | [369] | \nMinecraft | ~/.minecraft/ | won't fix | \nminicom | ~/.minirc.dfl |  | Upstream has a TODO entry for supporting configuration files under ~/.config/minicom. [370]\nMono | ~/.mono/ | [371] | \nmongodb | ~/.mongorc.js, ~/.dbshell | [372] | This Stack Overflow thread suggests a partial workaround using command-line switch --norc.\n | ~/.netrc |  | Like ~/.ssh, many programs expect this file to be here. These include projects like curl (CURLOPT_NETRC_FILE), ftp (NETRC), s-nail (NETRC), etc. While some of them offer alternative configurable locations, many do not such as w3m, wget and lftp.\nnim | ~/.nimble | [373] [374] | Nimble will try to load ~/.config/nimble/nimble.ini at startup, set nimbleDir there. You will have to change nimblepath in the Nim compiler configuration file as well.\nNetworkmanager-openvpn | ~/.cert/nm-openvpn | [375] | \nnyx | ~/.nyx |  | The project is not currently maintained\noh-my-bash-gitAUR | ~/.osh-update |  | \nOllama | ~/.ollama | [376] | Model locations can be set with: export OLLAMA_MODELS=$XDG_DATA_HOME/ollama/models Source: [377]\nopenshot | ~/.openshot_qt | [378] [379] | \nOpenSSH | ~/.ssh | won't fix | Assumed to be present by many ssh daemons and clients such as DropBear and OpenSSH.\npalemoon | ~/.moonchild productions | [380] | \nparsec-binAUR | ~/.parsec |  | \npcsxrAUR | ~/.pcsxr |  | A -cfg flag exists, but can only be set relative to ~/.pcsxr.\nperf | ~/.debug |  | Hardcoded in tools/perf/util/config.c. Commit: [381]\nperl | ~/.cpan, ~/perl5 | [382] | Perl5's CPAN expects ~/.cpan\nphoronix-test-suiteAUR | ~/.phoronix-test-suite | [383] | Partial workaround: [384]\nPHP | ~/.php_history | [385] | PHP applications can read/write a custom file with readline_read_history and readline_write_history.\nportfolio-performance-binAUR | ~/.PortfolioPerformance/ | [386] | \nvarious shells and display managers | ~/.profile |  | \npsensor | ~/.psensor | [387] | \npulumi | ~/.pulumi | [388] | \npython-tensorflow | ~/.keras | [389] | The issues is for tf.keras module\nquilt | ~/.quiltrc |  | Fallback to /etc/quilt.quiltrc if ~/.quiltrc does not exist.\nQt Designer | ~/.designer | [390] | \nR | ~/.Rprofile, ~/.Rdata, ~/.Rhistory |  | R_HOME_USER=\"$HOME/.config/R\" R_PROFILE_USER=\"$HOME/.config/R/profile\" R_HISTFILE=\"$HOME/.config/R/history\"\nRedNotebook | ~/.rednotebook | [391] | \nRemarkable | ~/.remarkable |  | \nrenderdoc | ~/.renderdoc | won't fix | \nRen'Py | ~/.renpy | won't fix | Recent versions respect RENPY_PATH_TO_SAVES environment variable. So you could set it to change the path for some games. export RENPY_PATH_TO_SAVES=\"$XDG_DATA_HOME/renpy\"\nrepo | ~/.repoconfig | [392] | \nrpm | ~/.rpmrc ~/.rpmmacros | Backlog | Workaround is to use --rcfile and --macros however this come with sideeffects.\nSANE | ~/.sane/ |  | scanimage creates a .cal file there\nsbcl | ~/.sbclrc |  | /etc/sbclrc (require :asdf) (setf sb-ext:*userinit-pathname-function* (lambda () (uiop:xdg-config-home #P\"sbcl/sbclrc\"))) Note that this requires root privileges and will change the location of ~/.sbclrc for all users. This can be mitigated by checking for an existing ~/.sbclrc inside the lambda form.\nSeaMonkey | ~/.mozilla/seamonkey | [393] | \nSignal Desktop |  | [394] | Currently keeps messages in ~/.config/Signal\nSnap | ~/snap/ | [395] | \nSolfege | ~/.solfege, ~/.solfegerc, ~/lessonfiles | [396] | \nSpamAssassin | ~/.spamassassin |  | \nSteam | ~/.steam, ~/.steampath, ~/.steampid | [397] | Many game engines (Unity 3D, Unreal) follow the specification, but then individual game publishers hardcode the paths in Steam Auto-Cloud causing game-saves to sync to the wrong directory.\nstellariumAUR | ~/.stellarium/ | [398] | \nstremioAUR | ~/.stremio-server/ | [399] | \nsts4 | ~/.sts4 | [400] | Pass JVM arg -Dlanguageserver.boot.symbolCacheDir=$XDG_CACHE_HOME/sts4/symbolCache\npython-streamlitAUR | ~/.streamlit | [401] | \nsweethome3d | ~/.eteks/sweethome3d | [402] | \npython-sympy | ~/.sympy-history | [403] | \nTeamSpeak | ~/.ts3client |  | export TS3_CONFIG_DIR=\"$XDG_CONFIG_HOME/ts3client\"\nterraform | ~/.terraform.d/ | [404] | \ntexinfo | ~/.infokey |  | info --init-file \"$XDG_CONFIG_HOME/infokey\"\nThunderbird | ~/.thunderbird/ | [405] | \ntllocalmgr | ~/.texlive |  | \nurlviewAUR | ~/.urlview |  | Use fork urlview-xdg-gitAUR instead. The fork will use XDG_CONFIG_HOME/urlview/config\nviberAUR | ~/.ViberPC |  | \nvimperator | ~/.vimperatorrc | [406] | export VIMPERATOR_INIT=\":source $XDG_CONFIG_HOME/vimperator/vimperatorrc\" export VIMPERATOR_RUNTIME=\"$XDG_CONFIG_HOME\"/vimperator\nvisidata | ~/.visidata | [407] | \nwpa_cli | ~/.wpa_cli_history |  | \nwegoAUR | ~/.wegorc | [408] | \nx2goclientAUR | ~/.x2goclient |  | alias x2goclient=\"x2goclient --home=$HOME/.config\"\nxpdf | ~/.xpdfrc |  | \nxrdpAUR | ~/thinclient_drives |  | For the directory ~/thinclient_drives, you may consider editing /etc/xrdp/sesman.ini and modifying the section [Chansrv] following the example config.\nXVim2 | ~/.xvimrc | [409] | \nYARD | ~/.yard | [410] | Would accept Pull Request if anyone want to implement it.\nzenmap nmap | ~/.zenmap | [411] [412] | \nzoomAUR | ~/.zoom |  | Unrecommended: setting the following variable moves the contents of .zoom but the directory itself always gets created. Moreover, it breaks some functionalities eg. being able to start a meeting. export SSB_HOME=\"$XDG_DATA_HOME\"/zoom\nzotero-binAUR | ~/.zotero ~/Zotero | [413] | ~/Zotero default location for data can be changed from GUI: Edit -> Preferences -> Advanced -> Data Directory Location -> Custom\n\nIn the above config file, some locations can be customized using options like newsrc-path= and address-book=.\n\nSpecify the new directories used by Arduino CLI in arduino-cli.yaml as mentioned in the documentation here. alias arduino-cli='arduino-cli --config-file $XDG_CONFIG_HOME/arduino15/arduino-cli.yaml'\n\nexport HISTFILE=\"$XDG_STATE_HOME\"/bash/history\n\nbashrc can be sourced from a different location in /etc/bash.bashrc. Specify --init-file <file> as an alternative to ~/.bashrc for interactive shells.\n\n[334]\n\n```\nexport JULIA_DEPOT_PATH=\"$XDG_DATA_HOME/julia:$JULIA_DEPOT_PATH\"\nexport JULIAUP_DEPOT_PATH=\"$XDG_DATA_HOME/julia\"\n```\n\n```\nexport KUBECONFIG=\"$XDG_CONFIG_HOME/kube\" \nexport KUBECACHEDIR=\"$XDG_CACHE_HOME/kube\"\n```\n\n~/.librewolf\n\nGenerated by the maintenance scripts eval.php and sql.php.\n\n[374]\n\nexport OLLAMA_MODELS=$XDG_DATA_HOME/ollama/models\n\nSource: [377]\n\n```\nR_HOME_USER=\"$HOME/.config/R\"\nR_PROFILE_USER=\"$HOME/.config/R/profile\"\nR_HISTFILE=\"$HOME/.config/R/history\"\n```\n\n```\nexport RENPY_PATH_TO_SAVES=\"$XDG_DATA_HOME/renpy\"\n```\n\n```\n/etc/sbclrc\n```\n\n```\n(require :asdf)\n(setf sb-ext:*userinit-pathname-function*\n      (lambda () (uiop:xdg-config-home #P\"sbcl/sbclrc\")))\n```\n\nNote that this requires root privileges and will change the location of ~/.sbclrc for all users. This can be mitigated by checking for an existing ~/.sbclrc inside the lambda form.\n\nexport VIMPERATOR_RUNTIME=\"$XDG_CONFIG_HOME\"/vimperator\n\n"
    },
    {
      "title": "Tools",
      "level": 2,
      "content": "The tool xdg-ninjaAUR detects unwanted files/directories in $HOME which can be moved to XDG base directories. See README for examples.\n\nThe tool boxxy can be used to wrap applications which do not respect the XDG base directories and redirect any unwanted files.\n\nThe tool ephemeral can be used to link chromium/electron caches that normally live in XDG_CONFIG_HOME to locations in XDG_CACHE_HOME.\n\n"
    },
    {
      "title": "Hiding unwanted directories",
      "level": 3,
      "content": "For directories which cannot be relocated, some desktop environments such as KDE allow you to hide them:\n\n```\n$ echo path >> ~/.hidden\n```\n\npath is the path of the file/directory, relative to the parent directory of .hidden.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GNOME Goal: XDG Base Directory Specification Usage\n- Rob Pike: \"Dotfiles\" being hidden is a UNIXv2 mistake.\n- systemd-path(1)\n- file-hierarchy(7)\n- Grawity's notes on dotfiles.\n- Grawity's notes on environment variables.\n- ploum.net: Modify Your Application to use XDG Folders.\n- The PCGamingWiki attempts to document whether or not Linux PC games follow the XDG Base Directory Specification.\n\n"
    }
  ]
}