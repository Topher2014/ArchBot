{
  "title": "Ripcord",
  "url": "https://wiki.archlinux.org/title/Ripcord",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Ripcord is a lightweight desktop chat client for group-centric services like Slack and Discord built upon the Qt toolkit. It is proprietary, closed-source software released under a shareware license which allows the Discord module to be used free of charge while locking Slack usage behind purchase.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the ripcordAUR package.\n\n"
    },
    {
      "title": "Emoji glitch",
      "level": 2,
      "content": "There is a bug with some emoji fonts (known: noto-fonts-emoji, ttf-joypixelsAUR, ttf-twemojiAUR) which generates rendering glitches, currently not fixed.\n\nEmoji fonts known to behave well include ttf-twemoji-colorAUR and ttf-symbolaAUR, so it is recommended to use one of them. Otherwise, the Experimental tab of the Preferences window offers an option to override the system font for Ripcord only.\n\nSome users have reported that using system libraries solves the issue.\n\nFor further updates and information, see the relevant ticket on the issue tracker.\n\n"
    },
    {
      "title": "Using system libraries",
      "level": 2,
      "content": "The Ripcord AppImage bundles its own copy of required libraries, which are also used by the AUR package. It is however possible to force the program to load libraries preexisting in the system. The main advantage of this is better integration with the desktop environment and Arch as a whole. The main disadvantage is that system libraries might be incompatible with the Ripcord release in use.\n\nOtherwise, you may proceed as follows:\n\n- Install packages qt5-base, qt5-imageformats, qt5-multimedia, qt5-svg, qt5-websockets and qt5-x11extras (more may be necessary, if you find so please amend this list).\n- Reach directory /usr/lib/ripcord or, if you would rather not touch managed files, download the AppImage, run it with --appimage-extract and cd to squashfs-root.\n- Wipe or better move to a backup location the contents of the lib folder you find there, leaving the folder itself intact.\n- Run ln -s /usr/lib/libsodium.so lib/libsodium.so.18.\n- Delete or move to a backup location the whole plugins folder.\n- Set environment variable QT_QPA_PLATFORM_PLUGIN_PATH=/usr/lib/qt/plugins.\n\nFinally, run the executable.\n\n"
    },
    {
      "title": "IME",
      "level": 2,
      "content": "If you need to use an input method framework, IBus is known to behave well out of the box, while Fcitx seems to require following the steps in using system libraries.\n\n"
    }
  ]
}