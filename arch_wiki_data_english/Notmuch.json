{
  "title": "Notmuch",
  "url": "https://wiki.archlinux.org/title/Notmuch",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- mutt\n- aerc\n\nNotmuch is a mail indexer. Essentially, is a very thin front end on top of xapian. Much like Sup, it focuses on one thing: indexing your email messages. Notmuch can be used as an email reader, or simply as an indexer and search tool for other MUAs, like mutt.\n\n"
    },
    {
      "title": "Overview",
      "level": 2,
      "content": "Notmuch is written in C and an order of magnitude faster than sup-mail. Notmuch can be terminated during the indexing process, on the next run it will continue where it left off. Also like sup-mail, it does not provide a way to permanently delete unwanted email messages (however, see #Permanently delete emails). It does not fetch or send mails, nor does it store your email addresses, you will need to use programs like OfflineIMAP, msmtp and abook for those tasks.\n\nInstall the notmuch package. It provides python, vim, and emacs bindings.\n\n"
    },
    {
      "title": "First time Usage",
      "level": 2,
      "content": "After installation, you enter an interactive setup by running:\n\n```\nnotmuch setup\n```\n\nThe program prompts you for the location of your maildir and your primary and secondary email addresses. You can also edit the configuration file directly which is created by default at $HOME/.notmuch-config.\n\nSubsequent re-indexing of the mail directories is done with:\n\n```\nnotmuch new\n```\n\n"
    },
    {
      "title": "Frontends",
      "level": 2,
      "content": "There are a range of ways to use notmuch, including CLI, or with one of the Unix $EDITORS:\n\n"
    },
    {
      "title": "Emacs",
      "level": 3,
      "content": "The default frontend for notmuch is Emacs. It is developed by the same people that develop notmuch.\n\n"
    },
    {
      "title": "Vim",
      "level": 3,
      "content": "There is a Vim interface available and included in the notmuch-vim package. To start it, type:\n\n```\nvim -c NotMuch\n```\n\n"
    },
    {
      "title": "alot",
      "level": 3,
      "content": "alot is a standalone CLI interface for notmuch, written in Python. It is available as alot and alot-gitAUR.\n\nAlot uses mailcap for handling different kinds of files. This currently includes HTML mails, which means that you need to configure a ~/.mailcap file in order to view HTML mails. As minimum, put this line into your ~/.mailcap:\n\n```\ntext/html; w3m -dump -o -document_charset=%{charset} %s; nametemplate=%s.html; copiousoutput\n```\n\nThis uses w3m, some other text based clients such as links or lynx can be used instead, although their arguments might differ.\n\nMore file handlers can be configured of course.\n\n"
    },
    {
      "title": "bower",
      "level": 3,
      "content": "bower is another CLI interface, this one is written in Mercury. It is available as bower-mailAUR.\n\n"
    },
    {
      "title": "Neomutt",
      "level": 3,
      "content": "Neomutt - Another mutt fork which includes many feature patches, among them the Notmuch integration patch. Install the neomutt or the neomutt-gitAUR package.\n\n"
    },
    {
      "title": "aerc",
      "level": 3,
      "content": "aerc is a terminal-based full-featured (threading, MIME multipart emails, flags, tags, ...) MUA written in Go, supporting many backends including Notmuch. It is available as aerc.\n\n"
    },
    {
      "title": "astroid",
      "level": 3,
      "content": "Astroid is a graphical MUA and interface to notmuch written using C++ and GTK. It can be installed with astroid or astroid-gitAUR. The GUI is designed to be very fast, preview HTML and attachments, be navigable by keyboard. It is extensively configurable and you use your favorite editor either embedded or launch it externally. Check out the Tour to see how astroid can be used and for a description of the complete setup, or check out the README for more information.\n\n"
    },
    {
      "title": "Integrating with mutt",
      "level": 2,
      "content": "If you use mutt as your MUA, then notmuch is an excellent complementary tool to index and search your mail. The notmuch-mutt package provides a script to integrate notmuch with mutt.\n\nAfter installing the notmuch-mutt package and configuring notmuch, the only thing left before using notmuch to search from mutt is adding keybindings to call the notmuch-mutt perl script from mutt. Adding the following to your .muttrc is what is recommended in notmuch contrib source:\n\n```\nmacro index <F8> \\\n\"<enter-command>set my_old_pipe_decode=\\$pipe_decode my_old_wait_key=\\$wait_key nopipe_decode nowait_key<enter>\\\n<shell-escape>notmuch-mutt -r --prompt search<enter>\\\n<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\\\n<enter-command>set pipe_decode=\\$my_old_pipe_decode wait_key=\\$my_old_wait_key<enter>\" \\\n\"notmuch: search mail\"\n\nmacro index <F9> \\\n\"<enter-command>set my_old_pipe_decode=\\$pipe_decode my_old_wait_key=\\$wait_key nopipe_decode nowait_key<enter>\\\n<pipe-message>notmuch-mutt -r thread<enter>\\\n<change-folder-readonly>`echo ${XDG_CACHE_HOME:-$HOME/.cache}/notmuch/mutt/results`<enter>\\\n<enter-command>set pipe_decode=\\$my_old_pipe_decode wait_key=\\$my_old_wait_key<enter>\" \\\n\"notmuch: reconstruct thread\"\n\nmacro index <F6> \\\n\"<enter-command>set my_old_pipe_decode=\\$pipe_decode my_old_wait_key=\\$wait_key nopipe_decode nowait_key<enter>\\\n<pipe-message>notmuch-mutt tag -- -inbox<enter>\\\n<enter-command>set pipe_decode=\\$my_old_pipe_decode wait_key=\\$my_old_wait_key<enter>\" \\\n\"notmuch: remove message from inbox\"\n```\n\nThe above uses F8 to search your inbox using notmuch, F9 to create threads from search results, and F6 to tag search results.\n\n"
    },
    {
      "title": "Integrating with NeoMutt",
      "level": 2,
      "content": "If you use neomutt, the notmuch-mutt package is not required. Instead, create a ~/.mailboxes with some basic (virtual) mailboxes. A virtual mailbox is not an actual folder, but the result of a notmuch query for a specific tag:\n\n```\n~/.mailboxes\n```\n\n```\nvirtual-mailboxes \"inbox\" \"notmuch://?query=tag:inbox\"\nvirtual-mailboxes \"archive\" \"notmuch://?query=tag:archive\"\nvirtual-mailboxes \"sent\" \"notmuch://?query=tag:sent\"\nvirtual-mailboxes \"newsletters\" \"notmuch://?query=tag:newsletters\"\n```\n\nNext, make mutt aware of your virtual mailboxes by enabling virtual spoolfile and sourcing the latter:\n\n```\n~/.muttrc\n```\n\n```\nset virtual_spoolfile=yes\nset folder=notmuch-root-folder\nsource ~/.mailboxes\n```\n\nAt this point, mutt will still list your mailboxes as empty, because your mails are not yet tagged and thus, notmuch querys are empty. To fill your virtual mailboxes, you need to initially tag the messages in your maildir. A very simple approach is to create a shell script like the following:\n\n```\n~/.scripts/notmuch-hook.sh\n```\n\n```\n#!/bin/sh\nnotmuch new\n# retag all \"new\" messages \"inbox\" and \"unread\"\nnotmuch tag +inbox +unread -new -- tag:new\n# tag all messages from \"me\" as sent and remove tags inbox and unread\nnotmuch tag -new -inbox +sent -- from:me@example.org or from:me@myself.com\n# tag newsletters, but dont show them in inbox\nnotmuch tag +newsletters +unread -new -- from:newsletter@example.org or subject:'newsletter*'\n```\n\nMake the shell script executable and run it:\n\n```\n~/.scripts/notmuch-hook.sh\n```\n\nFor the above example to work, make sure that notmuch tags new messages as 'new':\n\n```\n~/.notmuch-config\n```\n\n```\n[new]\ntags=new\n```\n\nFinally, your hook script needs to rerun on new mail arrival. If you use offlineimap to sync IMAP to a local maildir, create a post sync hook:\n\n```\n~/.offlineimaprc\n```\n\n```\n[Account myaccount]\npostsynchook = ~/.scripts/notmuch-hook.sh\n```\n\nSome useful key bindings:\n\n```\n~/.muttrc\n```\n\n```\nmacro index A \"<modify-labels>+archive -unread -inbox\\\\n\" \"Archive message\"\nmacro index c \"<change-vfolder>?\" \"Change to vfolder overview\"\nmacro index \\\\\\\\ \"<vfolder-from-query>\" \"Search mailbox\"\n```\n\n"
    },
    {
      "title": "Permanently delete emails",
      "level": 2,
      "content": "One choice is to maintain a tag of emails you wish to remove from your disk, for example, \"killed\". Then, you can combine the search for the tags with xargs to delete them permanently:\n\n```\nnotmuch search --output=files --format=text0 tag:killed | xargs -r0 rm\n notmuch new\n```\n\nBy placing this into the pre-new hook for notmuch you can make sure you delete files before updating the database.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- The official notmuch website\n- The notmuch repository\n- muchsync - Synchronize notmuch mail across machines\n- lieer - Fast email-fetching and sending and two-way tag synchronization between notmuch and GMail\n\n"
    }
  ]
}