{
  "title": "Acer Swift Go SFG16-72",
  "url": "https://wiki.archlinux.org/title/Acer_Swift_Go_SFG16-72",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nTouchpad |  | Yes\nKeyboard |  | Yes\nGPU | 8086:7d55 | Yes\nWi-Fi | 8086:7e40 | Yes\nWebcam | 13d3:5526 | Yes\nBluetooth | 8087:0033 | Yes\nAudio | 8086:7e28 | Yes\nFingerprint scanner | 1c7a:0584 | No\n\n"
    },
    {
      "title": "Cannot access Firmware Setup issues",
      "level": 2,
      "content": "Firmware Version: Insyde Corp. V1.14 (Release Date: 08/25/2024)\n\nAfter installing Linux, you may encounter issues accessing the Firmware Setup. For further information and troubleshooting, please refer to this discussion: https://bbs.archlinux.org/viewtopic.php?pid=2200805\n\nThe solution is to delete the entry '\\systemd\\systemd-bootx64.efi' with efibootmgr. This will restore your access to Firmware Setup (F2).\n\n```\n$ efibootmgr\n```\n\n```\nBootCurrent: 0000\nTimeout: 0 seconds\nBootOrder: 0000,0002,2001,2002,2003\nBoot0000* HDD0: HFS001TEJ9X110N\tPciRoot(0x0)/Pci(0xe,0x0)/NVMe(0x1,AC-E4-2E-00-4A-57-E5-52)/HD(1,GPT,46e396dc-21ec-46a5-b172-deea633c63d9,0x800,0x100000)RC\nBoot0002* Linux Boot Manager\tHD(1,GPT,46e396dc-21ec-46a5-b172-deea633c63d9,0x800,0x100000)/\\EFI\\systemd\\systemd-bootx64.efi\nBoot2001* EFI USB Device\tRC\nBoot2002* EFI DVD/CDROM\tRC\nBoot2003* EFI Network\tRC\n```\n\n```\n$ efibootmgr --delete-bootnum --bootnum 2\n```\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Enable the \"F12 Boot Menu\" under the Main section in Firmware Setup. This provides a useful fallback in case you're unable to access the Firmware Setup later.\n\nTo disable Secure Boot, set the supervisor password in the UEFI settings. Then you should be able to disable Secure Boot and boot Arch.\n\nAfter installation, you'll need to re-enable Secure Boot. Then, navigate to the \"Select an UEFI file as trusted for executing\" option, and locate your boot loader. In my case, it was located at EFI/systemd/systemd-bootx64.efi. After selecting the boot loader, you can disable Secure Boot again.\n\nThis step is necessary; otherwise, you won't be able to access the firmware setup.\n\n"
    },
    {
      "title": "Audio",
      "level": 2,
      "content": "Install sof-firmware to support the audio card.\n\n"
    },
    {
      "title": "Battery health control",
      "level": 2,
      "content": "Install acer-wmi-battery-dkmsAUR and reboot.\n\nEnsure acer_wmi is loaded:\n\n```\n$ lsmod | grep acer\n```\n\nEnable health mode:\n\n```\n$ cat /sys/module/acer_wmi_battery/drivers/wmi:acer-wmi-battery/health_mode\n```\n\nIf health_mode returns 0:\n\n```\n$ echo 1 > /sys/module/acer_wmi_battery/drivers/wmi:acer-wmi-battery/health_mode\n```\n\nThis enables battery thresholds until reboot.\n\nCreate a systemd service file to ensure battery health mode is set automatically on boot:\n\n```\n/etc/systemd/system/set-battery-health-mode.service\n```\n\n```\n[Unit]\nDescription=Set Acer Battery Health Mode\nAfter=network.target\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/sh -c 'echo 1 > /sys/module/acer_wmi_battery/drivers/wmi:acer-wmi-battery/health_mode'\nRemainAfterExit=true\n\n[Install]\nWantedBy=multi-user.target\n```\n\nEnable the set-battery-health-mode.service.\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "fwupd supports only \"UEFI dbx\". It is possible to manually flash the UEFI firmware update with fwupdtool.\n\nThese errors during bootup related to ACPI can safely ignored.\n\n```\nACPI BIOS Error (bug): Failure creating named object [\\_SB.UBTC], AE_ALREADY_EXISTS (20240322/dswload2-326)\nACPI Error: AE_ALREADY_EXISTS, During name lookup/catalog (20240322/psobject-220)\n```\n\n"
    },
    {
      "title": "Function keys",
      "level": 2,
      "content": "Table content:\nKey | Visible?1 | Marked?2 | Effect\nF1 | No | Yes | XF86AudioMute\nF2 | No | Yes | XF86AudioLowerVolume\nF3 | No | Yes | XF86AudioRaiseVolume\nF4 | No | Yes | XF86MuteMic\nF5 | No | Yes | XF86MonBrightnessDown\nF6 | No | Yes | XF86MonBrightnessUp\na | Yes | Yes | XF86Presentation\nF10 | No | No | Disable TouchPad\n\n1. The key is visible to xorg-xev, wev and similar tools.\n1. The physical key has a symbol on it, which describes its function.\n\n"
    }
  ]
}