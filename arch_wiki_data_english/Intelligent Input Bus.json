{
  "title": "Intelligent Input Bus",
  "url": "https://wiki.archlinux.org/title/Intelligent_Input_Bus",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Localization\n- Input method\n- Fcitx\n- Fcitx5\n\nIBus (Intelligent Input Bus) is an input method framework, a type of application that allows for easily switching between different keyboard layouts. When combined with an input method editor, it also allows for typing non-Latin characters using a keyboard that does not natively support them.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the ibus package.\n\nAdditionally, see Input method#List of available input method editors for a comprehensive list of available input method editors.\n\n"
    },
    {
      "title": "Integration",
      "level": 2,
      "content": "Set at least the following environment variables:\n\n```\n/etc/environment\n```\n\n```\nGTK_IM_MODULE=ibus\nQT_IM_MODULE=ibus\nXMODIFIERS=@im=ibus\n```\n\nTo launch IBus on user login, create an autostart entry with the following command:\n\n```\nibus-daemon -rxRd\n```\n\nOn the next login IBus will start along with the user session.\n\n- The ibus-autostartAUR package provides an autostart entry that can auto start this.\n- The ibus-daemonAUR package provides an ibus@$DISPLAY.service that can be enabled to achieve this.\n- KDE comes with a plasmoid called Input Method Panel that can act as an IBus frontend and can possibly provide a better integrated experience. To launch IBus with Input Method Panel, use the --panel=/usr/lib/kimpanel-ibus-panel option with the ibus-daemon command above (if the panel doesn't appear, you can try the --desktop=kde option instead). To configure the Input Method Panel widget, see the KDE UserBase Wiki and KDE#Widgets for details. The ibus-autostart-kimpanelAUR package provides an autostart entry that can auto start this.\n\n- To launch IBus with Input Method Panel, use the --panel=/usr/lib/kimpanel-ibus-panel option with the ibus-daemon command above (if the panel doesn't appear, you can try the --desktop=kde option instead). To configure the Input Method Panel widget, see the KDE UserBase Wiki and KDE#Widgets for details.\n- The ibus-autostart-kimpanelAUR package provides an autostart entry that can auto start this.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "See Locale for help with adding non-Latin language support to your system.\n\nSee Fonts#Non-latin scripts for a non-exhaustive list of available non-Latin fonts.\n\n"
    },
    {
      "title": "GNOME",
      "level": 3,
      "content": "GNOME uses IBus by default, so you can simply go to Settings > Keyboard > Input Sources and add a keyboard layout for the language of your choice.\n\nSome non-Latin languages (e.g. Simplified Chinese) need to enable the Show Extended Input Sources option in GNOME Tweaks.\n\n"
    },
    {
      "title": "Other desktop environments",
      "level": 3,
      "content": "To launch the IBus preferences window, you can:\n\n- Right-click on its tray icon and select Preferences, or\n- Find and launch the GUI application IBus Preferences, or\n- Run the command ibus-setup in a terminal\n\nThe points of interest here are the keyboard shortcut for Next input method (which is the one you will want to use instead of the default shortcut provided by your desktop environment) and the Input Method tab where you can add or remove the different keyboard layouts (which is where you will want to do this instead of your desktop environment's default layout manager).\n\n"
    },
    {
      "title": "Emoji input",
      "level": 3,
      "content": "IBus supports the input of emoji icons. Type Super+. and you will see the input prompt change to an underlined e character. You can then type the symbol or name of the emoji you want (e.g. :) or face) and press Space to render it. If you are satisfied with the result press Enter to submit it and exit emoji input mode, or press Space for a second time to open a dialog where you can further customize your desired emoji.\n\nSee ibus-emoji(7) for more information.\n\n"
    },
    {
      "title": "Unicode input",
      "level": 3,
      "content": "IBus supports the input of complex Unicode characters. Type Ctrl+Shift+u and you will see the input prompt change to an underlined u character. You can then type the code of the Unicode character you want and press Space or Enter to render and submit it.\n\n"
    },
    {
      "title": "Tray icon color",
      "level": 3,
      "content": "By default, IBus uses a dark blue color to display the language symbol of the currently active layout (e.g. EN). The color value is stored in a gsettings schema, so if you wish to change it you can run the following command:\n\n```\n$ gsettings set org.freedesktop.ibus.panel xkb-icon-rgba 'COLOR'\n```\n\nThe string 'COLOR' should conform to the following guidelines:\n\nThe RGBA value can be\n\n1. a color name from X11,\n1. a hex value in form '#rrggbb' where 'r', 'g' and 'b' are hex digits of the red, green, and blue,\n1. a RGB color in form 'rgb(r,g,b)' or\n1. a RGBA color in form 'rgba(r,g,b,a)' where 'r', 'g', and 'b' are either integers in the range 0 to 255 or percentage values in the range 0% to 100%, and 'a' is a floating point value in the range 0 to 1 of the alpha.\n\n"
    },
    {
      "title": "Layout switcher display delay",
      "level": 3,
      "content": "When pressing the Next input method hotkey, IBus displays a small dialog to signify the layout switch. By default this dialog is displayed 400ms after pressing the key, but this value can be changed by the user, with some interesting choices being '0' to display the dialog immediately without any delay, or a negative value (e.g. '-1') to switch the layouts without showing the window at all (which may be useful if you only use two layouts and simply switch from one to the other).\n\nThe value is stored in a gsettings schema, so if you wish to change it you can run the following command:\n\n```\n$ gsettings set org.freedesktop.ibus.general switcher-delay-time 'VALUE'\n```\n\nTo show the currently stored value, run the following command:\n\n```\n$ gsettings get org.freedesktop.ibus.general switcher-delay-time\n```\n\nThe string 'VALUE' should conform to the following guidelines:\n\nSet popup delay milliseconds to show IME switcher window. The default is 400.\n\n- 0 = Show the window immediately.\n- 0 < Delay milliseconds.\n- 0 > Do not show the window and switch prev/next engines.\n\n"
    },
    {
      "title": "Using modifier key combinations to switch layouts",
      "level": 3,
      "content": "For some reason, the IBus preferences GUI will not let you use a subset of modifier key combinations (e.g. Alt+Shift_R) as the layout switching hotkey. However, IBus stores the hotkey as a string in a gsettings schema, so you can still use such combinations by directly editing that string:\n\n```\n$ gsettings set org.freedesktop.ibus.general.hotkey triggers \"['VALUE']\"\n```\n\nThe string 'VALUE' should be any valid modifier key combination written in a format that IBus recognizes, e.g. <Alt>Shift_R.\n\n"
    },
    {
      "title": "rxvt-unicode",
      "level": 3,
      "content": "For rxvt-unicode to work correctly with IBus, you may need to add the following lines to ~/.Xresources:\n\n```\nURxvt.inputMethod: ibus\nURxvt.preeditType: OverTheSpot\n```\n\n"
    },
    {
      "title": "Missing packages due to pyenv",
      "level": 3,
      "content": "If using pyenv to manage python versions and configuration, ibus dependencies may not be installed on the set global python version. This can happen if the global version is not the one managed by the system (to which dependencies that ibus depends on, such as gi are installed). This may result in a running but non-functional ibus setup (ibus is in the system tray, but preferences can not be opened, etc). One way to verify this issue is to attempt to run ibus-setup and see if any missing dependency errors arise.\n\nTo fix this issue, change your pyenv global version to the system version:\n\n```\npyenv global system\n```\n\n"
    },
    {
      "title": "Settings removed after restart",
      "level": 3,
      "content": "If you find your settings are being removed consistently after restart (input methods being reverted), you can confirm the engines set to be preloaded and the order in which they will be loaded:\n\n```\n$ gsettings get org.freedesktop.ibus.general preload-engines\n['xkb:us::eng']\n$ gsettings get org.freedesktop.ibus.general engines-order\n['xkb:us::eng', 'anthy']\n```\n\nTo ensure anthy gets loaded in this case, add it to the org.freedesktop.ibus.preload-engines list:\n\n```\n$ gsettings set org.freedesktop.ibus.general preload-engines \"['xkb:us::eng', 'anthy']\"\n```\n\nChanges your changes should be reflected immediately, and should persist across restarts.\n\n"
    },
    {
      "title": "Ibus IME packages only input keyboard's native charset",
      "level": 3,
      "content": "A possible fix is to set the GTK_IM_MODULE environment variable to xim instead of ibus:\n\n```\n/etc/environment\n```\n\n```\nGTK_IM_MODULE=xim\nQT_IM_MODULE=ibus\nXMODIFIERS=@im=ibus\n```\n\n"
    },
    {
      "title": "Keys \"stick\" after being held down",
      "level": 3,
      "content": "In certain games, especially those running via Proton, keeping a key pressed for several seconds might result in that key \"sticking\" (continuing to be registered as pressed) until it is pressed and released again. Limited testing [1] has found that simply killing the IBus daemon is sufficient to resolve the issue.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GitHub repository\n\n"
    }
  ]
}