{
  "title": "Local Mail Delivery with fdm",
  "url": "https://wiki.archlinux.org/title/Local_Mail_Delivery_with_fdm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Mail server\n\nfdm (fetch and deliver mail), is a simple program for delivering and filtering mail. Comparing it to other same-purposed applications shows that it has similarities with Mutt's very focused design principles.\n\n"
    },
    {
      "title": "Installing",
      "level": 2,
      "content": "Install the fdm package or the fdm-gitAUR package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "fdm can be configured through a configuration file. Default is ~/.fdm.conf, or /etc/fdm.conf if that does not exist.\n\nFor full details refer to the manual pages fdm(1), fdm.conf(5) and the /usr/share/doc/fdm-git/MANUAL.\n\n"
    },
    {
      "title": "mbox",
      "level": 3,
      "content": "Alpine uses the mbox format, so we need to set up some files that we will be editing:\n\n```\n$ cd\n$ mkdir mail\n$ touch mail/INBOX .fdm.conf \n$ chmod 600 .fdm.conf mail/INBOX\n```\n\n"
    },
    {
      "title": "maildir",
      "level": 3,
      "content": "Mutt prefers a capitalized mail directory, and is able to use the maildir format. If you plan on using Mutt do the following setup:\n\n```\n$ cd\n$ touch .fdm.conf; chmod 600 .fdm.conf\n$ mkdir -p Mail/INBOX/{new,cur,tmp}\n```\n\n"
    },
    {
      "title": "An example configuration",
      "level": 3,
      "content": "Edit .fdm.conf, and add your email accounts and basic filter rules. Use mbox or maildir, but not both.\n\n```\n.fdm.conf\n```\n\n```\n## Accounts and rules for:\n#> foo@example.com\n#> bar@gmail.com\n## Last edit 21-Dec-09\n \n# Catch-all action (mbox):\naction \"inbox\" mbox \"%h/mail/INBOX\"\n# Catch-all action (maildir):\n# action \"inbox\" maildir \"%h/Mail/INBOX\"\n \naccount \"foo\" imaps server \"imap.example.com\"\n\tuser \"foo@example.com\" pass \"supersecret\"\n \naccount \"bar\" imaps server \"imap.gmail.com\"\n\tuser \"bar@gmail.com\" pass \"evenmoresecret\"\n \n# Match all mail and deliver using the 'inbox' action.\nmatch all action \"inbox\"\n```\n\nThis will collect the mail from the listed accounts and deliver it to the INBOX folder that we made. Refer to the fdm(1) man page for specifics on how to connect to other types of mail servers (POP3 for example).\n\n"
    },
    {
      "title": "Password Management",
      "level": 2,
      "content": "Passwords for email accounts can be stored as plain text in the config file or can be requested from a password manager or key-ring via a shell command, in the format of $(cmd ...)\n\n"
    },
    {
      "title": "Using a password manager",
      "level": 3,
      "content": "Here is an example using pass:\n\n```\naccount \"foo\" imaps server \"imap.example.com\"\n    user \"foo@example.com\" pass $(pass foo-email-entry | head -1)\n```\n\n"
    },
    {
      "title": "OAuth2 authentication, gmail",
      "level": 3,
      "content": "fdm can use OAuth2 access tokens that are required for GMail, but it lacks the ability to renew and/or authorize OAuth2 credentials. A comprehensive solution is using the oama utility which provides IMAP/SMTP clients with the capabilities of renewal and authorization of OAuth2 credentials. After the initial setup, access token renewal happens automatically in the background transparent to the user.\n\nInstall the oama-binAUR package and configure fdm:\n\n```\naccount \"foo\" imaps server \"imap.gmail.com\"\n    user \"foo@gmail.com\"\n    pass $(oama access foo@gmail.com)\n    oauthbearer\n```\n\n"
    },
    {
      "title": "Running from cron",
      "level": 3,
      "content": "While the above examples work fine for interactive use, using them from a cron job is a bit more involved since some of the programs invoked might expect certain environments. One can work around that by using wrapper scripts and exporting the needed environment variables.\n\nHere are a few tricks for such scripts:\n\n```\n...\n# for pass\nexport PASSWORD_STORE_DIR=~/.local/var/password-store\n...\n# when using gnome's keyring\n# secret-tool can't live without these two envvars\n# so we fake them for the case this script runs in a cron job\nexport DISPLAY=${DISPLAY:-:0}\nexport DBUS_SESSION_BUS_ADDRESS=${DBUS_SESSION_BUS_ADDRESS:-unix:path=/run/user/$UID/bus}\n...\n```\n\n"
    },
    {
      "title": "Testing",
      "level": 2,
      "content": "Once you have this setup to your satisfaction, attempt to collect your mail by manually running fdm.\n\n```\n$ fdm -kv fetch\n```\n\nThis will keep your mail untouched on the server in case there are errors. Look over the output to make sure everything worked as planned. Open your favorite mail reader (MUA) and make sure that you can read the mail that was just delivered.\n\n"
    },
    {
      "title": "Additional filtering",
      "level": 3,
      "content": "If you want to have mail from a certain account go to a specific mailbox, you could add the following lines to your fdm.conf file. From the configuration file above, if you wanted to filter the mail from bar@gmail.com into its own folder bar-mail, you would add this below the existing \"action\" line:\n\n```\naction bar-deliver mbox \"%h/mail/bar-mail\"\n```\n\nChange the mbox to maildir if needed, also make sure the path is correct.\n\nTo activate the new action, add this before the existing \"match\" line:\n\n```\nmatch account bar action bar-deliver\n```\n\nThen all mail to bar@gmail.com will be put into the bar-mail mail folder.\n\n"
    },
    {
      "title": "Automation",
      "level": 3,
      "content": "Since fdm does not run as a daemon, timed mail fetching is left to job schedulers like cron or systemd timers. This section will show implementations for both.\n\n"
    },
    {
      "title": "Cron",
      "level": 4,
      "content": "Fetch and sort mail from all accounts every 15 minutes, appending a log all matches to a local file:\n\n```\n$ crontab -e\n```\n\n```\n...\n*/15 * * * * fdm fetch >> $HOME/[Mm]ail/fdm.log\n```\n\n"
    },
    {
      "title": "systemd timer",
      "level": 4,
      "content": "Setup the fdm service for the local user to fetch and sort mail from all accounts:\n\n```\n${XDG_CONFIG_HOME:-$HOME/.config}/systemd/user/fdm.service\n```\n\n```\n[Unit]\n\nDescription=Fetch mail using fdm\nAfter=network.target network-online.target dbus.socket\nDocumentation=man:fdm(1)\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/fdm fetch\n```\n\nThen setup the timer to run the service every 15 minutes:\n\n```\n${XDG_CONFIG_HOME:-$HOME/.config}/systemd/user/fdm.timer\n```\n\n```\n[Unit]\nDescription=Fetch mail using fdm\n\n[Timer]\n# Uncomment to run the service two minutes after booting\n# OnBootSec=2m\nOnUnitActiveSec=15m\nPersistent=true\n\n[Install]\nWantedBy=timers.target\n```\n\nFinally start/enable the user unit fdm.timer.\n\n"
    }
  ]
}