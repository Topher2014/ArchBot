{
  "title": "Dell Precision 5530",
  "url": "https://wiki.archlinux.org/title/Dell_Precision_5530",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nTable content:\nHardware | PCI/USB ID | Working?\nTouchpad | 06CB:7A13 | Yes\nKeyboard |  | Yes\nGPU (Intel) | 8086:3e9b | Yes\nGPU (NVIDIA) | 10de:1c8c | Yes\nWebcam | 0c45:671d | Yes\nBluetooth | 0cf3:e301 | Yes\nSD-card reader | 10ec:525a | Yes\nAudio | 8086:a348 | Yes\nWi-Fi | 168c:003e | Yes\nFingerprint reader | 27c6:5395 | No\nTPM |  | Yes\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Before installing it is necessary to modify some UEFI Settings. They can be accessed by pressing F2 repeatedly when booting.\n\n- Change the SATA Mode from the default \"RAID\" to \"AHCI\". This will allow Linux to detect the NVMe SSD. If dual booting with an existing Windows installation, Windows will not boot after the change but this can be fixed without a re-installation.\n- Change Fastboot to \"Thorough\" in \"POST Behaviour\". This prevents intermittent boot failures.\n- Disable secure boot to allow Linux to boot. Alternatively, you can choose to set up Secure Boot so that it works with Linux and you can take advantage of its potential security benefits.\n\nInstallation of Arch Linux can proceed normally. Refer to the Installation guide for more information.\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "They are 2 main ways to update the UEFI firmware:\n\n- through the running Linux session with fwupd,\n- through UEFI: firmware images can be found at Dell support page as XPS_15_9570_X.Y.Z.exe files: Download the desired firmware from section \"Dell XPS 15 9570 System BIOS\" Save it in /boot/EFI/Dell/Bios/ (this path may vary, depending on your installation) Reboot the system, and enter the boot menu by pressing repeatedly F12 on Dell logo Choose \"Bios Flash Update\" Select the file previously saved, and start the process\n\n- Download the desired firmware from section \"Dell XPS 15 9570 System BIOS\"\n- Save it in /boot/EFI/Dell/Bios/ (this path may vary, depending on your installation)\n- Reboot the system, and enter the boot menu by pressing repeatedly F12 on Dell logo\n- Choose \"Bios Flash Update\"\n- Select the file previously saved, and start the process\n\n"
    },
    {
      "title": "Function keys",
      "level": 2,
      "content": "Table content:\nKey | Visible?1 | Marked?2 | Effect\nFn+Esc | No | Yes | Enables Fn lock\nFn+F1 | Yes | Yes | XF86AudioMute\nFn+F2 | Yes | Yes | XF86AudioLowerVolume\nFn+F3 | Yes | Yes | XF86AudioRaiseVolume\nFn+F4 | Yes | Yes | XF86AudioPrev\nFn+F5 | Yes | Yes | XF86AudioPlay\nFn+F6 | Yes | Yes | XF86AudioNext\nFn+F7 | No | No | See #Unmarked keybinds\nFn+F8 | Yes | Yes | Inputs Super+p\nFn+F9 | Yes | Yes | XF86Search\nFn+F10 | Yes | Yes | Enables/disables keyboard backlight\nFn+F11 | Yes | Yes | XF86MonBrightnessDown\nFn+F12 | Yes | Yes | XF86MonBrightnessUp\nFn+Print | Yes3 | Yes | XF86RFKill, will hard-block Wi-Fi and soft-block Bluetooth. Press again to disable\nFn+Ins | Yes3 | No | XF86Sleep, see #Unmarked keybinds\nFn+RCtrl | Yes | Yes | Menu\nFn+Up | Yes | Yes | PageUp\nFn+Down | Yes | Yes | PageDown\nFn+Left | Yes | Yes | Home\nFn+Right | Yes | Yes | End\n\n1. The key is visible to xev and similar tools\n1. The physical key has a symbol on it, which describes its function\n1. systemd-logind handles this by default\n\n"
    },
    {
      "title": "Unmarked keybinds",
      "level": 3,
      "content": "There are several keybinds handled by the BIOS\n\nTable content:\nKey | Effect\nFn+F7 | Unobtrusive mode. Has to be enabled in the BIOS in order to work. Deactivates all LEDs and turns off display and sound. Press again to disable.\nFn+Ins | Suspends device. Can not be disabled/configured\n\n"
    },
    {
      "title": "Suspend",
      "level": 3,
      "content": "See Power management/Suspend and hibernate#Changing suspend method.\n\n"
    },
    {
      "title": "Hibernate",
      "level": 3,
      "content": "Works out of the Box see Power management/Suspend and hibernate\n\n"
    },
    {
      "title": "Powertop",
      "level": 3,
      "content": "powertop is very efficient to manage power consumption. Run powertop --auto-tune and compare the Watt consumption variation (laptop must be unplugged and running on battery). powertop --auto-tune can be run at every boot.\n\nSee Powertop#Apply settings.\n\n"
    },
    {
      "title": "Graphics",
      "level": 2,
      "content": "The integrated Intel card works out of the box.\n\n"
    },
    {
      "title": "Various options for the integrated Intel-card",
      "level": 3,
      "content": "TLP is recommended to save some power. However several more options can be activated for the Intel card in order to save power or prevent screen flickering.\n\nAdd the following line to:\n\n```\n/etc/modprobe.d/i915.conf\n```\n\n```\noptions i915 enable_fbc=1 disable_power_well=0 fastboot=1 enable_psr=0\n```\n\nSome guides suggest the option enable_guc=3, however some problem were evidenced with that option. Before you add it to /etc/modprobe.d/i915.conf, try it first as a command-line option before you boot.\n\n"
    },
    {
      "title": "kernel modules",
      "level": 3,
      "content": "The nouveau module is known to cause kernel panics and freezes.\n\nOne way to mitigate this would be by adding nomodeset to the kernel options. However it is better to completely disable it with the blacklist method (recommended):\n\n```\n/etc/modprobe.d/blacklist.conf\n```\n\n```\nblacklist nouveau\nblacklist rivafb\nblacklist nvidiafb\nblacklist rivatv\nblacklist nv\n```\n\n"
    },
    {
      "title": "NVIDIA Optimus",
      "level": 3,
      "content": "See NVIDIA Optimus#Available methods.\n\n"
    },
    {
      "title": "Disable NVIDIA card when not in use",
      "level": 4,
      "content": "Another good option is to disable the default NVIDIA board and enable it only for off-loading for computation purposes using PRIME.\n\nIt is possible to make it work with the proprietary NVIDIA driver, and there are probably several ways to make it work. See [2].\n\n- Install nvidia and nvidia-prime. This should pull all necessary packages.\n- Create the following file and add the following to allow the GPU to power-off on boot:\n\n```\n/etc/tmpfiles.d/nvidia_pm.conf\n```\n\n```\nw /sys/bus/pci/devices/0000:01:00.0/power/control - - - - auto\n```\n\n- Several modules need to be blacklisted in order to prevent them from being loaded on boot. Add the following to\n\n```\n/etc/modprobe.d/blacklist.conf\n```\n\n```\nblacklist nouveau\nblacklist rivafb\nblacklist nvidiafb\nblacklist rivatv\nblacklist nv\nblacklist nvidia\nblacklist nvidia-drm\nblacklist nvidia-modeset\nblacklist nvidia-uvm\nblacklist ipmi_msghandler\nblacklist ipmi_devintf\n```\n\n- Create the following file:\n\n```\n/etc/modprobe.d/disable-nvidia.conf\n```\n\n```\ninstall nvidia /bin/false\n```\n\n- If you are using TLP, you might need to blacklist the discrete NVIDIA card by adding/uncommenting the following line inside the TLP config file:\n\n```\nRUNTIME_PM_DENYLIST=\"01:00.0\"\n```\n\nDouble-check the address with lspci.\n\n- In order to enable and disable the video card create the following 2 scripts:\n\n```\nenableGPU.sh\n```\n\n```\n#!/bin/sh\n# allow to load nvidia module\nif [ ! -f /etc/modprobe.d/disable-nvidia.conf ]; then\n\tprintf \"File /etc/modprobe.d/disable-nvidia.conf does not exist.\\n\"\n\tprintf \"Is the GPU already enabled ?\\n\"\n\texit 1\nfi\nprintf \"Allowing to load NVIDIA modules...\\n\"\nmv /etc/modprobe.d/disable-nvidia.conf /etc/modprobe.d/disable-nvidia.conf.disable\nprintf \"Changing power control...\\n\"\n# remove NVIDIA card (currently in power/control = auto)\necho -n 1 > /sys/bus/pci/devices/0000\\:01\\:00.0/remove\nsleep 1\n# change PCIe power control\necho -n on > /sys/bus/pci/devices/0000\\:00\\:01.0/power/control\nsleep 1\n# rescan for NVIDIA card (defaults to power/control = on)\nprintf \"Rescanning.....\"\necho -n 1 > /sys/bus/pci/rescan\nif [ -x \"$(command -v nvidia-smi)\" ]; then\n\tprintf \"\\n\"\n\tnvidia-smi\nfi\nprintf \"\\nNVIDIA CARD IS NOW ENABLED.\\n\"\n```\n\n```\ndisableGPU.sh\n```\n\n```\n#!/bin/sh\nprintf \"Unloading NVIDIA modules...\\n\"\nmodprobe -r nvidia_drm\nmodprobe -r nvidia_uvm\nmodprobe -r nvidia_modeset\nmodprobe -r nvidia\nprintf \"Changing power control...\\n\"\n# change NVIDIA card power control\necho -n auto > /sys/bus/pci/devices/0000\\:01\\:00.0/power/control\nsleep 1\n# change PCIe power control\necho -n auto > /sys/bus/pci/devices/0000\\:00\\:01.0/power/control\nsleep 1\n# lock system from loading nvidia module\nif [ -f /etc/modprobe.d/disable-nvidia.conf.disable ]; then\n\tmv /etc/modprobe.d/disable-nvidia.conf.disable /etc/modprobe.d/disable-nvidia.conf\n\tprintf \"\\nNVIDIA CARD IS NOW DISABLED.\\n\"\nelse\n\tprintf \"\\nFile /etc/modprobe.d/disable-nvidia.conf.disable does not exist.\\n\"\n\tprintf \"Is the GPU already disabled ?\\n\"\nfi\n```\n\n- If the video card is not disabled on shutdown, then the modules will be loaded again at next boot even though they are blacklisted. Therefore we need to create a service which shuts down the NVIDIA card at shutdown. Create the following file:\n\n```\n/etc/systemd/system/disable-nvidia-on-shutdown.service\n```\n\n```\n[Unit]\nDescription=Disables Nvidia GPU on OS shutdown\n[Service]\nType=oneshot\nRemainAfterExit=true\nExecStart=/bin/true\nExecStop=/bin/bash -c \"mv /etc/modprobe.d/disable-nvidia.conf.disable /etc/modprobe.d/disable-nvidia.conf || true\"\n[Install]\nWantedBy=multi-user.target\n```\n\n- Finally we need to do a daemon-reload and enable disable-nvidia-on-shutdown.service.\n\n- Reboot\n\nAfter rebooting, doublecheck that the nvidia module is not loaded:\n\n```\n$ lsmod | grep nvidia\n```\n\nNow you can enable the NVIDIA card by running the aforementioned script enableGPU.sh. The script will verify if the NVIDIA card is enabled. Finally you can run a command with prime-run:\n\n```\n$ glxinfo | grep \"OpenGL renderer\"\n```\n\n```\nOpenGL renderer string: Mesa DRI Intel(R) UHD Graphics 630 (Coffeelake 3x8 GT2)\n```\n\n```\n$ prime-run glxinfo | grep \"OpenGL renderer\"\n```\n\n```\nOpenGL renderer string: GeForce GTX 1050 Ti with Max-Q Design/PCIe/SSE2\n```\n\nDisable the card with disableGPU.sh to lower the power consumption.\n\n"
    },
    {
      "title": "xbacklight",
      "level": 4,
      "content": "To get xbacklight working and not conflicting with NVIDIA Optimus:\n\n```\n/etc/X11/xorg.conf.d/20-intel.conf\n```\n\n```\nSection \"Device\"\n\tIdentifier  \"Intel Graphics\"\n        Driver      \"intel\"\n        Option      \"Backlight\"  \"intel_backlight\"\nEndSection\n```\n\n"
    },
    {
      "title": "NVRM: Failed to enable MSI; falling back to PCIe virtual-wire interrupts",
      "level": 4,
      "content": "Sometimes it happens after suspend/resume. GPU could work fine without MSI [3]. You could disable MSI by adding the following in /etc/modprobe.d/nvidia.conf:\n\n```\noptions nvidia NVreg_EnableMSI=0\n```\n\n"
    },
    {
      "title": "Lock-ups when resuming from suspend with nvidia module",
      "level": 4,
      "content": "If your system locks up every time you resume from suspend with the following two lines in the output of dmesg:\n\n```\n[   42.447364] pci 0000:01:00.0: Refused to change power state, currently in D3\n[   46.896493] pci 0000:01:00.0: Refused to change power state, currently in D3\n```\n\nYou need to add the following to your kernel command line:\n\n```\nnouveau.blacklist=0 acpi_osi=! acpi_osi=\\\"Windows 2015\\\" mem_sleep_default=deep\n```\n\nSee NVIDIA bug number: 2589324, dell resolution.\n\n"
    },
    {
      "title": "Wi-Fi and Bluetooth",
      "level": 2,
      "content": "These work well out of the box but you might need to update the firmware for better stability. For Bluetooth, make sure you have everything installed as per the Bluetooth wiki page.\n\n"
    },
    {
      "title": "ath10k module crashes after suspend",
      "level": 4,
      "content": "You may notice driver crashes after suspend/resume, which for the most part does not seem to impact the running system, with coredumps similar to:\n\n```\nkernel: WARNING: CPU: 6 PID: 27936 at drivers/net/wireless/ath/ath10k/mac.c:5746 ath10k_bss_info_changed+0xf96/0x1120 [ath10k_core]\nkernel: Modules linked in: uhid algif_hash cmac rfcomm fuse ccm ipt_MASQUERADE nf_conntrack_netlink nfnetlink xfrm_user xfrm_algo iptable_nat nf_nat_ipv4>\nkernel:  snd_hda_intel dcdbas x86_pkg_temp_thermal dell_smm_hwmon snd_hda_codec intel_powerclamp cfg80211 kvm_intel snd_hda_core input_leds snd_hwdep snd>\nkernel:  vfio_mdev mdev vfio_iommu_type1 vfio kvm irqbypass intel_gtt i2c_algo_bit drm_kms_helper syscopyarea sysfillrect sysimgblt fb_sys_fops drm agpga>\nkernel: CPU: 6 PID: 27936 Comm: kworker/u24:42 Tainted: G     U  W  OE     5.0.4-arch1-1-ARCH #1\nkernel: Hardware name: Dell Inc. XPS 15 9570/0HWTMH, BIOS 1.8.1 02/01/2019\nkernel: Workqueue: events_unbound async_run_entry_fn\nkernel: RIP: 0010:ath10k_bss_info_changed+0xf96/0x1120 [ath10k_core]\nkernel: Code: 24 8b 95 78 01 00 00 85 c0 0f 85 a7 00 00 00 89 d1 be 10 00 00 00 48 c7 c2 c0 b2 fa c0 4c 89 c7 e8 bf 68 00 00 e9 a5 f1 ff ff <0f> 0b 4c 89>\nkernel: RSP: 0000:ffffb7a45422fcd0 EFLAGS: 00010282\nkernel: RAX: 00000000fffffffe RBX: ffff98f6d44815a0 RCX: 0000000000000000\nkernel: RDX: ffff98f6d4481938 RSI: ffffb7a45422fcf0 RDI: ffff98f6d81df418\nkernel: RBP: ffff98f6d81df418 R08: 0000000000000001 R09: 0000000000000000\nkernel: R10: 000000000000001f R11: 0000000000000000 R12: 0000000000000020\nkernel: R13: ffff98f6d81df420 R14: ffff98f6d4482598 R15: ffff98f6d44815a0\nkernel: FS:  0000000000000000(0000) GS:ffff98f6dc380000(0000) knlGS:0000000000000000\n179 94%\nkernel:  process_one_work+0x1eb/0x410\nkernel:  worker_thread+0x2d/0x3d0\nkernel:  ? process_one_work+0x410/0x410\nkernel:  kthread+0x112/0x130\nkernel:  ? kthread_park+0x80/0x80\nkernel:  ret_from_fork+0x35/0x40\nkernel: ---[ end trace 09ae3e174c178f98 ]---\n```\n\nPatched in some kernels and not others (which?), relevant links:\n\n- BBS: Suspend issue with Dell XPS 9570 (related)\n- bugzilla#201499: ath10k BUG on resume\n\n"
    },
    {
      "title": "Wi-Fi partially looses network connectivity every 1-2 hours",
      "level": 4,
      "content": "With some Wi-Fi routers, the network connection might get partially lost without any noticeable change in the network status. Existing connections (e.g. ssh sessions, Zoom video calls) keep working, but loading new web pages or even pinging the gateway do not work anymore. Restarting the network fixes the problem, which however reappears after 1-2 ours.\n\nThe issue can be fixed definitively by downgrading the Wi-Fi card firmware as explained in post #17 of this forum thread. To avoid repeating the downgrade every time linux-firmware is upgraded, see pacman#Skip files from being installed to system.\n\n"
    },
    {
      "title": "Bluetooth disappears (after suspend?)",
      "level": 4,
      "content": "Possibly related to the previous instability issue, sometimes the adapter seems to completely disappear. As reported here (thanks w.v.w., you can likely fix this by manually upgrading the firmware (to something newer than what is in linux-firmware:\n\n1. Double check adapter (e.g. QCA6174, below)\n\n```\n$ lspci | grep Network\n```\n\n```\n3b:00.0 Network controller: Qualcomm Atheros QCA6174 802.11ac Wireless Network Adapter (rev 32)\n```\n\n2. Confirm hardware and current firmware version (e.g. hw3.2, firmware RM.4.4.1.c3-00013-QCARMSWPZ-1, below)\n\n```\n# journalctl -b --grep='ath10k.*(firmware|qca)'\n```\n\n```\nkernel: ath10k_pci 0000:3b:00.0: qca6174 hw3.2 target 0x05030000 chip_id 0x00340aff sub 1a56:1535\nkernel: ath10k_pci 0000:3b:00.0: firmware ver RM.4.4.1.c3-00013-QCARMSWPZ-1 api 6 features wowlan,ignore-otp,no-4addr-pad,raw-mode,mfp crc32 fc0096a8\n```\n\n3. Follow the instructions at https://wireless.wiki.kernel.org/en/users/Drivers/ath10k/firmware[dead link 2024-10-12 ⓘ]\n\ne.g. for the above adapter, download the latest firmware from https://github.com/kvalo/ath10k-firmware/tree/master/QCA6174/hw3.0[dead link 2024-07-30 ⓘ] and\n\n```\n$ cd /lib/firmware/ath10k/QCA6174/hw3.0\n# cp firmware-6.bin firmware-6.bin.bak\n# cp ~/Downloads/firmware-6.bin_RM.4.4.1.c3-00013-QCARMSWPZ-1 firmware-6.bin\n```\n\nEither rmmod ath10k_core ath10k_pci && modprobe ath10k_pci (as the root user) (may not work, check dmesg) or reboot.\n\n"
    },
    {
      "title": "ath10k-fixer",
      "level": 4,
      "content": "A possible workaround for some of the above issues is to reload the ath10k_pci kernel module when it crashes:\n\n```\n# modprobe -r ath10k_pci && modprobe ath10k_pci\n```\n\nThis workaround is automated by the ath10k-fixerAUR daemon.\n\n"
    },
    {
      "title": "Touchpad and Touchscreen",
      "level": 2,
      "content": "Wacom touchscreen and Synaptics touchpad:\n\n```\n$ xinput\n```\n\n```\n⎡ Virtual core pointer                          id=2    [master pointer  (3)]\n⎜   ↳ Virtual core XTEST pointer                id=4    [slave  pointer  (2)]\n⎜   ↳ SYNA2393:00 06CB:7A13 Touchpad            id=16   [slave  pointer  (2)]\n⎜   ↳ Wacom HID 488F Finger                     id=15   [slave  pointer  (2)]\n⎣ Virtual core keyboard                         id=3    [master keyboard (2)]\n[truncated]\n```\n\nBoth are i2c devices:\n\n```\n$ udevadm info /dev/input/mouse3 # touchscreen\n```\n\n```\nP: /devices/pci0000:00/0000:00:15.0/i2c_designware.0/i2c-10/i2c-WCOM488F:00/0018:056A:488F.0006/input/input47/mouse3\nN: input/mouse3\nL: 0\nE: DEVPATH=/devices/pci0000:00/0000:00:15.0/i2c_designware.0/i2c-10/i2c-WCOM488F:00/0018:056A:488F.0006/input/input47/mouse3\nE: DEVNAME=/dev/input/mouse3\nE: MAJOR=13\nE: MINOR=35\nE: SUBSYSTEM=input\nE: USEC_INITIALIZED=5501073\nE: ID_INPUT=1\nE: ID_INPUT_TOUCHSCREEN=1\nE: ID_PATH=pci-0000:00:15.0-platform-i2c_designware.0\nE: ID_PATH_TAG=pci-0000_00_15_0-platform-i2c_designware_0\n```\n\n```\n$ udevadm info /dev/input/mouse6 # touchpad\n```\n\n```\nP: /devices/pci0000:00/0000:00:15.1/i2c_designware.1/i2c-11/i2c-SYNA2393:00/0018:06CB:7A13.0007/input/input38/mouse6\nN: input/mouse6\nL: 0\nS: input/by-path/pci-0000:00:15.1-platform-i2c_designware.1-mouse\nE: DEVPATH=/devices/pci0000:00/0000:00:15.1/i2c_designware.1/i2c-11/i2c-SYNA2393:00/0018:06CB:7A13.0007/input/input38/mouse6\nE: DEVNAME=/dev/input/mouse6\nE: MAJOR=13\nE: MINOR=38\nE: SUBSYSTEM=input\nE: USEC_INITIALIZED=4683741\nE: ID_INPUT=1\nE: ID_INPUT_TOUCHPAD=1\nE: ID_SERIAL=noserial\nE: ID_PATH=pci-0000:00:15.1-platform-i2c_designware.1\nE: ID_PATH_TAG=pci-0000_00_15_1-platform-i2c_designware_1\nE: DEVLINKS=/dev/input/by-path/pci-0000:00:15.1-platform-i2c_designware.1-mouse\n```\n\nIf you experience problems with the touch pad it might be worth disabling psmouse\n\n"
    },
    {
      "title": "TB16",
      "level": 3,
      "content": "TB16 works fine if either Thunderbolt security is disabled in the BIOS or using bolt to temporarily authorize or permanently enroll Thunderbolt devices with Thunderbolt security activated. Various quirks are detailed on the Dell TB16 page.\n\n"
    },
    {
      "title": "Caldigit TS3 Plus",
      "level": 3,
      "content": "The TS3 Plus works fine if either Thunderbolt security is disabled in the BIOS or using bolt to temporarily authorize or permanently enroll Thunderbolt devices with Thunderbolt security activated. There is an issue where the USB ports will not work if unplugged and then plugged in again. This can be fixed by rebooting into the UEFI and using BIOS assisted enumeration (NOT native nor auto-switch), you may need to disable auto-switch, apply, then choose BIOS assisted, then apply again.\n\n"
    },
    {
      "title": "Thermal management",
      "level": 2,
      "content": "Thermal design is poor in the 9570, primarily due to higher-end chips being used inside the original system design without compensating for extra heat. This impacts numerous areas:\n\n1. Performance: at higher temperatures, CPU cores are throttled down to avoid damage. At best your system will not run as fast as it can, and at worst (and quite commonly), slower than cheaper chips and with sluggish performance.\n1. Battery life is unnecessarily decreased.\n1. System longevity: running at constantly high temperatures will negatively impact equipment lifetime.\n1. User discomfort: uncomfortable heat and uncomfortable fan noise.\n\nFortunately these can all be improved significantly to get your system running powerfully and quietly.\n\n"
    },
    {
      "title": "Diagnosis",
      "level": 3,
      "content": "You probably have a lot of dmesg output like this (for all CPUs), even with fairly light usage:\n\n```\nkernel: CPU8: Package temperature above threshold, cpu clock throttled (total events = 8451)\nkernel: CPU8: Package temperature/speed normal\n```\n\nUse lm_sensors and do some stress testing (with stress and mprime) to see what is happening with CPU core temperatures and fanspeed under different loads.\n\n"
    },
    {
      "title": "Undervolting",
      "level": 3,
      "content": "See Undervolting CPU on the wiki. Reduces heat and extends battery life.\n\nPossible configurations for /etc/intel-undervolt.conf:\n\n1. i9-8950HK* (last updated 2019-03-30)\n\n```\nundervolt 0 'CPU' -140\nundervolt 1 'GPU' -75\n```\n\n```\n* Tested extensively for moderate use.  Was not stress tested for > 24 hours.  Anecdotal reports of up to -200.\n```\n\nThis has a more minor impact than repasting but is significantly easier to do.\n\n"
    },
    {
      "title": "Repasting & padding",
      "level": 3,
      "content": "Significant improvements are possible by replacing the thermal grease used by Dell with better options available from Amazon, and adding some extra thermal padding. This might sound overwhelming but is well worth the effort, especially for newer CPUs. If you cannot do this yourself consider finding a shop / technician who can do this for you. See the following article as the user comments below it for more info:\n\n- UltraBookReview: How to Fix Throttling on the Dell XPS 15 9570 / 9560\n- Picture of 9570 VRMs - from comments of the above article\n\n"
    },
    {
      "title": "Results",
      "level": 3,
      "content": "According to the author of the UltraBookReview article above:\n\nFrom this forum post, much lower/softer fan speeds were needed to maintain the same temperatures, and temperature was a few degrees lower under similar loads. Fans were on less often and for less time when they were. Throttling was less prevalent and less severe.\n\n"
    },
    {
      "title": "Fingerprint reader",
      "level": 2,
      "content": "The fingerprint reader lacks Linux drivers.\n\nGoodix will not provide them directly as stated on their forum and frequently blames the responsibility on device manufacturers.\n\nNonetheless Goodix stated (2020-04-30) that they are collaborating with Dell to provide the support for Linux in the second half of 2020 for the XPS 9570.\n\nThere are also some people working on reverse engineering the driver.\n\n"
    }
  ]
}