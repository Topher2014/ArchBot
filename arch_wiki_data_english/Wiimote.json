{
  "title": "Wiimote",
  "url": "https://wiki.archlinux.org/title/Wiimote",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This article will go through the basic steps required to have a working Wiimote in Linux for general use. It will not go into much detail for some steps as there are many guides already written for some parts already.\n\n"
    },
    {
      "title": "Prerequisites",
      "level": 2,
      "content": "- Bluetooth\n- A Wii Remote\n\nWiimotes connect via Bluetooth. This must already be configured and running without the help of this guide. You will need a Wiimote, this can include (although are not required) the Nunchuk and Classic Control attachments.\n\nOnce a Wiimote is connected via Bluetooth, the device should start working, as the kernel driver for the Wiimote is in Linux since version 3.1 and the bluez package in Arch Linux includes the required wiimote plugin.\n\n"
    },
    {
      "title": "Connect the Wiimote",
      "level": 2,
      "content": "See XWiimote#Connect the Wii Remote.\n\n"
    },
    {
      "title": "Infrared sources",
      "level": 2,
      "content": "Possible infrared sources are\n\n- Nintendo Wii Sensor Bar\n- Wireless sensor bar - check eBay!\n- Normal light bulbs\n- Small candles (should have about 30cm distance)\n- Home made sensor bar ([1])\n\n"
    },
    {
      "title": "MoltenGamepad",
      "level": 3,
      "content": "moltengamepadAUR provides a display server-neutral way to configure Wiimotes and other game controllers. It will work in X11, Wayland, or even the Linux console.\n\n"
    },
    {
      "title": "Using a Wiimote as a media device",
      "level": 4,
      "content": "MoltenGamepad can use the uinput kernel module to emulate keyboard key presses. You can use this to make your Wiimote control videos and music.\n\nFirst, install MoltenGamepad.\n\nCreate the system-wide configuration directories:\n\n```\n# mkdir -p /etc/xdg/moltengamepad/profiles\n```\n\nAdd a profile for setting up a Wiimote as a media controller (see the upstream example). You can set the key bindings to whatever you like.\n\n```\n/etc/xdg/moltengamepad/profiles/wiimote_mediacontrol\n```\n\n```\n[wiimote]\nwiimote.wm_2 = key(key_nextsong)\nwiimote.wm_down = key(key_down)\nwiimote.wm_up = key(key_up)\nwiimote.wm_right = key(key_right)\nwiimote.wm_plus = key(key_volumeup)\nwiimote.wm_1 = key(key_previoussong)\nwiimote.wm_left = key(key_left)\nwiimote.wm_a = key(key_playpause)\nwiimote.wm_minus = key(key_volumedown)\nwiimote.wm_b = key(key_mute)\n```\n\nLoad this profile when MoltenGamepad starts by adding it to the root configuration file:\n\n```\n/etc/xdg/moltengamepad/moltengamepad.cfg\n```\n\n```\nload profiles from \"wiimote_mediacontrol\"\n```\n\nFinally, start/enable the moltengamepad.service unit.\n\n"
    },
    {
      "title": "X11",
      "level": 3,
      "content": "XWiimote provides an X11 input driver for using a Wiimote as a desktop input device. See XWiimote#X.Org Input Driver for details.\n\n"
    },
    {
      "title": "cwiid",
      "level": 3,
      "content": "The Wiimote can act as a regular input device like a mouse using wminput(1) from the cwiidAUR package. This package contains a userspace driver, libraries, and programs required for basic use of the Wiimote.\n\nFirst you need to make sure to load the uinput module:\n\n```\n# modprobe uinput\n```\n\nYou should have a device in /dev/uinput now. For permanent use, add uinput to MODULES in mkinitcpio.conf.\n\ncwiid should allow you to scan for your Wiimote now. Run the following command and press the 1 and 2 buttons on your Wiimote:\n\n```\n$ bluetoothctl scan on\n```\n\n```\nScanning ...\n       MAC_address       Nintendo RVL-CNT-01\n```\n\nOnce your Wiimote has been detected you can test if it is working by running wmgui(1) and testing out various buttons and sensors through that interface.\n\nIf you have no infrared source, simply run:\n\n```\n$ wminput -w\n```\n\nYou can control your pointer now by tilting your Wiimote forward, backward or to the sides.\n\nIf you have an infrared source, run:\n\n```\n$ wminput -c ir_ptr -w\n```\n\n"
    },
    {
      "title": "Configuration",
      "level": 4,
      "content": "The default configuration files are in /etc/cwiid/wminput/. They are a good starting point for your customized settings in ~/.cwiid/wminput or /usr/local/etc/cwiid/wminput. The general syntax is:\n\n```\nWiimote_button = keyboard_key\n```\n\nAll possible values for Wiimote_button can be found in cwiid/wminput.list. The possible values for keyboard_key are keycodes in /usr/include/linux/input-event-codes.h.\n\n"
    },
    {
      "title": "Unable to open uinput",
      "level": 4,
      "content": "If wminput gives this error, leaving you unable to use the Wiimote, create a udev rule with the following contents [2]:\n\n```\nKERNEL==\"uinput\", GROUP=\"wheel\", MODE=\"0660\"\n```\n\nReboot the system afterwards. See also wminput(1) ยง DESCRIPTION regarding udev rules for uinput.\n\nAlternatively, add uinput to the MODULES array in mkinitcpio.conf:\n\n```\nMODULES=(uinput ...)\n```\n\nRegenerate the initramfs and reboot the system afterwards.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- XWiimote\n\n"
    }
  ]
}