{
  "title": "VCV Rack",
  "url": "https://wiki.archlinux.org/title/VCV_Rack",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "VCV Rack is a modular analogue synthesizer, more precisely a Virtual Eurorack DAW. It uses a plug-in systems to add more Eurorack emulated modules. As hardware Eurorack, it can be connected to midi, audio sources and destination, and other Eurorack modules. See also Wikipedia:VCV Rack. VCV Rack allow input from computer keyboard too, via the rack module MIDI-CV (included in \"fundamental\" modules pack).\n\nThe main principle of a modular analogue synthesizer is to add several module in the rack, and connect the different modules with wires, here by clicking on a connector and dragging in into another connector. Buttons on the modules allow you to change specifics parameters of the module.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "There are several possible ways to install VCV Rack as an Arch package, choose the one that meets your requirements:\n\n"
    },
    {
      "title": "vcvrack",
      "level": 3,
      "content": "vcvrackAUR builds completely from source code with some selected libraries like GLFW linked dynamically and includes minor patches for better system integration:\n\n- Supports system-wide plugin packages which can be used without an online account. These are installed to /usr/lib/vcvrack/plugins from the vcvrack-plugins package group.\n- Adds a custom MIME type for .vcv files downloaded e.g. from Patchstorage which allows opening patches from the file browser\n- Native Wayland support through system GLFW library\n- aarch64 support (no aarch64 plugins in library though, you will need to build plugins manually or from AUR)\n\nIt's also available as a binary package through Unofficial user repositories#proaudio, which gets you automatic updates through pacman and lets you install all available system-wide plugin packages using pacman -Syu vcvrack-plugins. Since it's not officially supported by VCV Rack developers, please contact the package maintainers for help first.\n\n"
    },
    {
      "title": "vcvrack-bin",
      "level": 3,
      "content": "vcvrack-binAUR installs the official binary to /opt/vcvrack and only supports plugins installed from the library. Since this is the official binary, you should get support from VCV Rack developers.\n\n"
    },
    {
      "title": "vcvrack-pro",
      "level": 3,
      "content": "vcvrack-proAUR installs the commercial Pro version to /opt/VCV/Rack2Pro and its CLAP, VST 2 and 3 plugins to the appropriate system paths. It can be installed side-by-side with one of the above variants but requires a Pro/VCV+ account. During the build you are prompted for your login credentials unless a previously installed version is already logged in.\n\nSimilar to vcvrack-binAUR, only plugins installed from the library are supported, however these can then be shared with the Free version.\n\n"
    },
    {
      "title": "Plugins",
      "level": 3,
      "content": "After logging in, free and commercial plugins (or \"modules\") can be installed from the library. These are installed to the Rack user directory, i.e. ~/.local/share/Rack2.\n\n"
    },
    {
      "title": "Debug logs",
      "level": 3,
      "content": "Rack writes logs to ~/.local/share/Rack2/log.txt, make sure to provide relevant logs when reporting issues.\n\n"
    },
    {
      "title": "Using computer keyboard Input",
      "level": 2,
      "content": "To use computer keyboard Input:\n\n- add the MIDI-CV module in your virtual Rack\n- Click on the middle line on the screen of the module.\n- Choose QWERTY keyboard for virtual piano keyboard\n- Choose Numpad keyboard for virtual percussion keyboard\n\nYou can add two (or more) times the module, to have QWERTY part controlling some part of your setup and Numpad controlling some other part for example.\n\n"
    },
    {
      "title": "Using computer audio input and output",
      "level": 2,
      "content": "The Audio-8 (8 channels) and Audio-16 (16 channels) modules, from the VCV Free (formerly Fundamental) modules pack, allow to input and output audio to JACK, PulseAudio, ALSA or (MIDI) Bridge Output. To set the desired Input or Output:\n\n- Choose the desired sound library on the first line of the screen of the virtual module\n- Select the Input or Output port on the Second line.\n\nFor using audio Input source into the modular setup use the \"From device\" connectors For using audio Output destination, from the modular setup, use the \"To device\" connectors.\n\n"
    },
    {
      "title": "Oscilloscope",
      "level": 2,
      "content": "The Scope module can show you the signal from any part of the setup; allowing you to debug your patch.\n\n"
    },
    {
      "title": "Compiling plugins",
      "level": 2,
      "content": "You can find open source plugins in the Library.\n\n"
    },
    {
      "title": "Manual build",
      "level": 3,
      "content": "If you're using vcvrack-binAUR, follow the manual making sure RACK_DIR is set to the SDK path. Plugins can only be installed to the user directory, system-wide plugins are not supported.\n\nWith vcvrackAUR, RACK_DIR should implicitly be set to /usr/share/vcvrack or you might explicitly set it when building.\n\n```\nexport RACK_DIR=path/to/Rack-SDK  # or /usr/share/vcvrack\ngit clone --recurse-submodules https://github.com/codygeary/CVfunk-Modules\ncd CVfunk-Modules\nmake dep\nmake install\n```\n\n"
    },
    {
      "title": "PKGBUILD template",
      "level": 3,
      "content": "System-wide plugin packages are only supported by the vcvrackAUR package, not by vcvrack-binAUR or when manually downloading Rack from the website. Find the full template here.\n\n```\nPKGBUILD\n```\n\n```\n_slug=Example # from plugin.json\n_name=example # e.g. repo name\ngroups=(pro-audio vcvrack-plugins)\ndepends=(gcc-libs vcvrack)\nmakedepends=(simde zstd)\n\nbuild() {\n  cd $_name\n  make SLUG=$_slug VERSION=$pkgver STRIP=: RACK_DIR=/usr/share/vcvrack dist\n}\n\npackage() {\n  cd $_name\n  install -d \"$pkgdir\"/usr/lib/vcvrack/plugins\n  cp -va dist/$_slug -t \"$pkgdir\"/usr/lib/vcvrack/plugins\n}\n```\n\n- SLUG=$_slug VERSION=$pkgver can be omitted when adding jq to makedepends\n- STRIP=: disables stripping of debug symbols by Rack's makefiles, makepkg should do this instead and can optionally keep extracted debug symbols\n- RACK_DIR=/usr/share/vcvrack points to shared makefiles by Rack\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://github.com/DISTRHO/Cardinal - DPF-based Rack wrapper that uses compiled-in modules and provides LV2/VST plugins plus a JACK app.\n\n"
    }
  ]
}