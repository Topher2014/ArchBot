{
  "title": "Dotfile",
  "url": "https://wiki.archlinux.org/title/Dotfile",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- XDG Base Directory support\n- X resources\n\nUser-specific application configuration is traditionally stored in so called dotfiles (files whose filename starts with a dot). It is common practice to track dotfiles with a version control system such as Git to keep track of changes and synchronize dotfiles across various hosts. There are various approaches to managing dotfiles (e.g. directly tracking dotfiles in the home directory v.s. storing them in a subdirectory and symlinking/copying/generating files with a shell script or a dedicated tool). Apart from explaining how to manage dotfiles this article also contains a list of dotfile repositories from Arch Linux users.\n\n"
    },
    {
      "title": "Tracking dotfiles directly with Git",
      "level": 2,
      "content": "The benefit of tracking dotfiles directly with Git is that it only requires Git and does not involve symlinks. The disadvantage is that host-specific configuration generally requires merging changes into multiple branches.\n\nThe simplest way to achieve this approach is to initialize a Git repository directly in your home directory and ignoring all files by default with a gitignore(5) pattern of *. This method however comes with two drawbacks: it can become confusing when you have other Git repositories in your home directory (e.g. if you forget to initialize a repository you suddenly operate on your dotfile repository) and you can no longer easily see which files in the current directory are untracked (because they are ignored).\n\nAn alternative method without these drawbacks is the \"bare repository and alias method\" popularized on Ask Hacker News: What do you use to manage your dotfiles?, which just takes three commands to set up:\n\n```\n$ git init --bare ~/.dotfiles\n$ alias dotfiles='/usr/bin/git --git-dir=\"$HOME/.dotfiles/\" --work-tree=\"$HOME\"'\n$ dotfiles config status.showUntrackedFiles no\n```\n\nYour dotfiles can be replicated on a new system like:\n\n```\n$ git clone --bare <git-repo-url> $HOME/.dotfiles\n$ alias dotfiles='/usr/bin/git --git-dir=\"$HOME/.dotfiles/\" --work-tree=\"$HOME\"'\n$ dotfiles checkout\n$ dotfiles config --local status.showUntrackedFiles no\n```\n\n- In case of already having some stock dotfiles which might get overwritten, you'll encounter something similar to the following the error:\n\n```\n$ dotfiles checkout\nerror: The following untracked working tree files would be overwritten by checkout:\n    .bashrc\n    .gitignore\nPlease move or remove them before you can switch branches.\nAborting\n```\n\n```\nmkdir -p .dotfiles-backup && \\\ndotfiles checkout 2>&1 | egrep \"\\s+\\.\" | awk {'print $1'} | \\\nxargs -I{} mv {} .dotfiles-backup/{}\n```\n\nYou can then manage your dotfiles with the created alias. If you are using Bash and would like bash completion for this alias, simply install bash-complete-aliasAUR, then add the alias and the following line to your ~/.bashrc.\n\n```\n$ complete -F _complete_alias dotfiles\n```\n\nAnother way to get completion in bash is adding the following to your ~/.bashrc (taken from [1]):\n\n```\nsource /usr/share/bash-completion/completions/git\n__git_complete dotfiles __git_main\n```\n\n"
    },
    {
      "title": "Host-specific configuration",
      "level": 2,
      "content": "A common problem with synchronizing dotfiles across various machines is host-specific configuration.\n\nWith Git this can be solved by maintaining a master branch for all shared configuration, while each individual machine has a machine-specific branch checked out. Host-specific configuration can be committed to the machine-specific branch; when shared configuration is modified in the master branch, the per-machine branches need to be rebased on top of the updated master.\n\nIn configuration scripts like shell configuration files conditional logic can be used. For example, Bash scripts (i.e. .bashrc) can apply different configuration depending on the machine name (or type, custom variable, etc.):\n\n```\nif [[ \"$(hostname)\" == \"archlaptop\" ]]; then\n    # laptop specific commands here\nelse\n    # desktop or server machine commands\nfi\n```\n\nSimilar can also be achieved with .Xresources.[2]\n\nIf you find rebasing Git branches too cumbersome, you may want to use a tool that supports file grouping, or if even greater flexibility is desired, a tool that does processing.\n\n"
    },
    {
      "title": "Tools",
      "level": 2,
      "content": "Table content:\nName | Package | Written in | File grouping | Processing\ndotbot | dotbotAUR | Python | configuration file | No\nchezmoi | chezmoi | Go | directory-based | Go templates\ndot-templater | dot-templater-gitAUR | Rust | directory-based | custom syntax\ntoml-bombadil | toml-bombadil | Rust | configuration file | tera\ndotdrop | dotdropAUR | Python | configuration file | Jinja2\ndotfiles | dotfilesAUR | Python | No | No\ndotter | dotter-rsAUR | Rust | configuration file | Handlebars\ndt-cli | dt-cliAUR | Rust | configuration file | Handlebars\nGNU Stow | stow | Perl | directory-based[3] | No\nMackup | mackupAUR | Python | automatic per application | No\nmir.qualia | mir.qualiaAUR | Python | No | custom blocks\nrcm | rcmAUR | Shell | directory-based (by host or tag) | No\nyas-bdsm | – | Shell | directory-based | No\n\n"
    },
    {
      "title": "Tools wrapping Git",
      "level": 3,
      "content": "If you are uncomfortable with Git, you may want to use one of these tools, which abstract the version control system away (more or less).\n\nTable content:\nName | Package | Written in | File grouping | Processing\ndotbare | dotbareAUR | Shell (fzf) | repository-wise | No\ndotgit | dotgitAUR | Python | filename-based | No\nhomeshick | homeshick-gitAUR | Bash | repository-wise | No\nhomesick | – | Ruby | repository-wise | No\nPearl | pearl-gitAUR | Python | repository-wise | No\nvcsh | vcsh | Shell | repository-wise | No\nyadm(1) | yadm | Shell | filename-based(by class/OS/distro/hostname/user)[4] | Built-in templates/Jinja2/ESH[5](optional)\ndfm | dfmAUR | Perl | repository-wise | No\n\n1. Supports encryption of confidential files with GPG or OpenSSL. [6]\n\n"
    },
    {
      "title": "User repositories",
      "level": 2,
      "content": "Table content:\nAuthor | Shell (Shell framework) | WM / DE | Editor | Terminal | Multiplexer | Audio | Monitor | Mail | IRC | File Manager | RSS reader\nadamperkowski | Zsh | dwm | Neovim | st | tmux | mpv | custom |  | WeeChat |  | \nananthu | Zsh | bspwm | Neovim | Alacritty |  | mpv | htop, Polybar | Neomutt | WeeChat | ranger | \nayekat | Zsh | karuiwm | Vim | Rxvt-unicode | tmux | ncmpcpp / Mpd | karuibar | Mutt | Irssi |  | \nbachoseven | Zsh | Dwm source | Neovim | St source | tmux | ncmpcpp | bottom | Neomutt | WeeChat | Lf | newsboat\nbamos | Zsh | i3/xmonad | Vim/Emacs | rxvt-unicode | tmux | mpv / cmus | conky / xmobar | mutt | ERC |  | \nbrisbin33 | zsh | xmonad | vim | rxvt-unicode | GNU Screen |  | dzen | mutt | irssi |  | \nchristian-heusel | Zsh | i3 | Neovim | st / terminator | byobu / tmux |  | htop | neomutt/Thunderbird | WeeChat | nemo / ranger | \nCuterThanYou | Zsh | i3 / Hyprland | Neovim | Alacritty / Foot |  | mpv | Polybar / Yambar |  |  | Lf / Thunar | Newsboat\ndikiaap | Zsh | i3-gaps | Neovim | Alacritty | tmux |  | i3blocks |  |  | nnn | \nEarnestly | Zsh | i3/orbment | Vim/Emacs | termite | tmux | mpd | conky | mutt | WeeChat |  | \negnrse | Zsh/Bash | Hyprland | Neovim | Alacritty |  | VLC | bottom / mission-center |  |  | Dolphin | \nErikBjare | Zsh | xmonad/Xfce4 | Vim | terminator | tmux |  | xfce4-panel |  | WeeChat |  | \nerikw | Zsh/Bash | dwm/macOS | Neovim | urxvtc | tmux | mpd |  | mutt | Irssi |  | \nfiliparag | fish | bspwm | Vim | Alacritty | tmux | mpv / playerctl | htop, Polybar | mail-notification |  | PCManFM | \nFreed-Wu | zsh | openbox | Neovim | wezterm | tmux | cmus | bottom | neomutt | WeeChat | Neovim | newsboat\ngraysky | Zsh | Xfce | Vim | terminal |  | ncmpcpp | custom | Thunderbird |  |  | \nhugdru | Zsh | awesome | Neovim | rxvt-unicode | tmux |  |  | Thunderbird | WeeChat |  | \ninsanum | Bash | Herbstluftwm | Vim | evilvte | tmux |  | dzen | mutt-kz |  |  | \nisti115 | pwsh | sway | neovim | alacritty | tmux | mpv / playerctl | waybar / htop / ytop |  |  | ranger | \njasonwryan | Bash/Zsh | dwm | Vim | rxvt-unicode | tmux | ncmpcpp | custom | mutt | Irssi |  | \njdevlieghere | Zsh | xmonad | Vim | terminal | tmux |  | htop | mutt | WeeChat |  | \njelly | Zsh | i3 | Vim | termite | tmux | ncmpcpp |  | mutt-kz-git | WeeChat |  | \njl2 | Zsh | swayfx | geany | foot |  |  | mission-center / eww (bar) |  | srain | thunar | \nkarras | Zsh | Wayfire | Neovim | Terminator |  |  | Waybar |  |  |  | \nMarkusZoppelt | Zsh | GNOME | Neovim | Alacritty | tmux |  |  |  |  |  | \nmaximbaz | Zsh | Sway | kakoune | kitty |  |  | Waybar | neomutt |  | nnn | \nneersighted | fish | i3 | Neovim | Alacritty | tmux | ncmpcpp |  |  |  |  | \nnimaipatel | fish | awesome | Neovim | Alacritty |  | ncmpcpp |  |  |  |  | \noibind | fish | awesome | Neovim | st | tmux |  | htop-vim |  | WeeChat | lf | \norhun | Bash | i3-gaps | Neovim | Alacritty |  |  | i3status |  | WeeChat | tere | \npatri9ck | Zsh | bspwm | Vim | kitty |  |  |  |  |  | Thunar | \npeterzuger | Zsh | i3-gaps | Emacs | rxvt-unicode | GNU Screen | moc | htop |  |  |  | \npolyzen | Zsh | i3 | Neovim | Alacritty | tmux | mpv | i3status / htop | himalaya |  | ranger | Newsboat\npotamides | Bash | awesome | Neovim | termite | tmux | ncmpcpp | conky / htop | mutt | WeeChat | ranger | \nsistematico | Zsh/fish/Bash | i3-gaps | Vim / nano | termite | tmux | ncmpcpp | Polybar | mutt | WeeChat |  | \nthecashewtrader | Eshell | EXWM | Emacs | Emacs (VTerm) | Emacs | Bongo | htop | mu4e | ERC | Dired | Elfeed\nthiagowfx | Bash/Zsh | i3 | Vim | Alacritty | tmux | playerctl | i3status |  |  | ranger | \ntplasdio | bash (ble.sh) | awesome | neovim | alacritty | tmux | mpv, mpvs | htop | neomutt | Weechat | lf | \ntuurep | Zsh | openbox | Neovim | Alacritty |  |  | Polybar |  |  |  | \nunrealapex | Zsh | dwm | Neovim | st |  | ncmpcpp | htop | Neomutt | Irssi | fff | Newsboat\nw0ng | Zsh | dwm | Vim | rxvt-unicode | tmux | ncmpcpp | custom | mutt | Irssi |  | \nwhitelynx | fish | i3 | Neovim | kitty |  |  | i3pystatus |  |  |  | \nwhynothugo | Zsh | Sway | Neovim | Alacritty |  | mpv | Waybar / top | neomutt |  | Nemo | \n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- dotfiles.github.io\n- dotshare.it\n- gregswiki:DotFiles\n- terminal.sexy — Terminal color scheme designer\n- XMonad Config Archive\n\n"
    }
  ]
}