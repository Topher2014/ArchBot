{
  "title": "Mpv",
  "url": "https://wiki.archlinux.org/title/Mpv",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- MPlayer\n- yt-dlp\n\nmpv is a media player based on MPlayer and the now unmaintained mplayer2. It supports a wide variety of video file formats, audio and video codecs, and subtitle types. A detailed (although admittedly incomplete) list of differences between mpv and the aforementioned players can be found here.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the mpv package or mpv-gitAUR for the development version.\n\n"
    },
    {
      "title": "Front ends",
      "level": 3,
      "content": "See List of applications/Multimedia#mpv-based.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "mpv comes with good all-around defaults that should work well on computers with weaker/older video cards. However, if you have a computer with a more modern video card, mpv allows you to do a great deal of configuration to achieve better video quality (limited only by the power of your video card). To do this, one only needs to create a few configuration files (as they do not exist by default).\n\nTo help you get started, mpv provides sample configuration files with default settings. Copy them to use as a starting point:\n\n```\n$ cp -r /usr/share/doc/mpv/ ~/.config/\n```\n\nmpv.conf contains the majority of mpv's settings, input.conf contains key bindings. Read through both of them to get an idea of how they work and what options are available.\n\n"
    },
    {
      "title": "General settings",
      "level": 3,
      "content": "Add the following settings to ~/.config/mpv/mpv.conf.\n\n"
    },
    {
      "title": "Subtitle configurations",
      "level": 4,
      "content": "Enable fuzzy searching:\n\n```\nsub-auto=fuzzy\n```\n\nChange font:\n\n```\nsub-font=\"fontName\"\n```\n\nBold the subtitles to increase readability:\n\n```\nsub-bold=yes\n```\n\n"
    },
    {
      "title": "High quality configurations",
      "level": 4,
      "content": "By default, mpv utilizes settings that balance quality and performance. Additionally, two predefined profiles are available: fast for maximum performance and high-quality for superior rendering quality. You can apply a specific profile using the --profile=name option and inspect its contents using --show-profile=name.\n\n```\nprofile=high-quality\n```\n\nLive statistics showing how well mpv is performing can be brought up with the i key. It is very useful for making sure that your hardware can keep up with your configuration and for comparing different configurations.\n\nThese last two options are a little more complicated. video-sync=display-resample makes it so that if audio and video go out of sync, then instead of dropping video frames, it will resample the audio (a slight change in audio pitch is often less noticeable than dropped frames). The mpv wiki has an in depth article on it titled Display Synchronization. interpolation makes motion appear smoother on your display by changing the way that frames are shown so that the source framerate jives better with your display's refresh rate (not to be confused with SVP's technique which actually converts video to 60fps). The mpv wiki has an in depth article on it titled Interpolation though it is also commonly known as smoothmotion.\n\n```\nprofile=high-quality\nvideo-sync=display-resample\ninterpolation\n```\n\nBeyond this, there is still a lot you can do, but things become more complicated, require more powerful video cards, and are in constant development. As a brief overview, it is possible to load special shaders that perform exotic scaling and sharpening techniques including some that actually use deep neural networks trained on images (for both real world and animated content). To learn more about this, take a look around the mpv wiki, particularly the user shader's section.\n\nThere are also plenty of other options you may find desirable as well. It is worthwhile taking a look at mpv(1). It is also helpful to run mpv from the command line to check for error messages about the config.\n\n"
    },
    {
      "title": "Custom profiles",
      "level": 4,
      "content": "In mpv.conf it is possible to create profiles which are essentially just \"groups of options\" with which you can:\n\n- Quickly switch between different configurations without having to rewrite the file.\n- Create special profiles for special content.\n- nest profiles so that you can make more complicated profiles out of simpler ones.\n\nCreating a profile is easy. The area at the top of mpv.conf is called the top level, any options you write there will kick into effect once mpv is started. However, once you define a profile by writing its name in brackets, every option you write below it (until you define a new profile) is considered part of that profile. Here is an example mpv.conf:\n\n```\nprofile=myprofile2        #Top level area, load myprofile2\nontop=yes                 #Always on top\n\n[myprofile1]              #A simple profile, top level area ends here\nprofile-desc=\"a profile\"  #Optional description for profile\nfs=yes                    #Start in full screen\n\n[myprofile2]              #Another simple profile\nprofile=high-quality      #A built in profile that comes with mpv\nlog-file=~~/log           #Sets a location for writing a log file, ~~/ translates to ~/.config/mpv\n```\n\nThere are only two lines within the top level area and there are two separate profiles defined below it. When mpv starts, it sees the first line, loads the options in myprofile2 (which means it loads the options in high-quality and log-file=~~/log) finally it loads ontop=yes and finishes starting up. Note, myprofile1 is never loaded because it is never called in the top level area.\n\nAlternatively, one could call mpv from the command line with:\n\n```\n$ mpv --profile=myprofile1 video.mkv\n```\n\nand it would ignore all options except the ones for myprofile1.\n\nCertain types of profiles will be loaded automatically based on either the file extension or the protocol used.\n\nThese profiles will be loaded for all files with a matching file extension (for all .mkv and .gif files respectively):\n\n```\n[extension.mkv]\nkeep-open\nvolume-max=150\n\n[extension.gif]\nosc=no\nloop-file\n```\n\nThis profile will be loaded automatically whenever any http or https streams are played (e.g. mpv https://example.com/video.mp4):\n\n```\n[protocol.https]\nspeed=2\nkeep-open\n\n[protocol.http]\nprofile=protocol.https\n```\n\nRun mpv --list-protocols to see the different protocols supported by mpv.\n\n"
    },
    {
      "title": "Key bindings",
      "level": 3,
      "content": "Key bindings are fairly straightforward given the examples in /usr/share/doc/mpv/input.conf and mpv(1) § COMMAND INTERFACE.\n\nAdd the following examples to ~/.config/mpv/input.conf:\n\n```\nshift+s         screenshot each-frame\nShift+UP        seek  600\nShift+DOWN      seek -600\n=               cycle video-unscaled\n-               cycle-values window-scale 2 3 1 .5\nWHEEL_UP        add volume 5\nWHEEL_DOWN      add volume -5\nWHEEL_LEFT      ignore\nWHEEL_RIGHT     ignore\nAlt+RIGHT       add video-rotate 90\nAlt+LEFT        add video-rotate -90\nAlt+-           add video-zoom -0.25\nAlt+=           add video-zoom 0.25\nAlt+j           add video-pan-x -0.05\nAlt+l           add video-pan-x 0.05\nAlt+i           add video-pan-y 0.05\nAlt+k           add video-pan-y -0.05\nAlt+BS          set video-zoom 0; set video-pan-x 0; set video-pan-y 0\n```\n\nFor an attempt to reproduce MPC-HC key bindings in mpv, see [1].\n\n"
    },
    {
      "title": "Additional configuration files",
      "level": 3,
      "content": "In addition there are a few more configuration files and directories that can be created, among which:\n\n- ~/.config/mpv/script-opts/osc.conf manages the on Screen Controller. See mpv(1) § ON SCREEN CONTROLLER for more information.\n- ~/.config/mpv/scripts/script-name.lua for Lua scripts. See [2] for an example.\n\nSee mpv(1) § FILES for information on other files and directories.\n\n"
    },
    {
      "title": "Scripts",
      "level": 2,
      "content": "mpv has a large variety of scripts that extend the functionality of the player. To this end, it has internal bindings for both Lua and JavaScript.\n\nScripts are typically installed by putting them in the ~/.config/mpv/scripts/ directory (you may have to create it first). After that they will be automatically loaded when mpv starts (this behavior can be altered with other mpv options). Some scripts come with their own installation and configuration instructions, so make sure to have a look. In addition some scripts are old, broken, and unmaintained.\n\n"
    },
    {
      "title": "JavaScript",
      "level": 3,
      "content": "JavaScript (ES5 via MuJS) has been supported as an mpv scripting language since 2014. Currently only a few scripts are available, but documentation exists at mpv(1) § JAVASCRIPT for anyone interested in making their own.\n\nTo get started, drop a script with a .js extension in the mpv scripts directory, e.g.:\n\n```\n~/.config/mpv/scripts/fullscreen-off-on-pause.js\n```\n\n```\nfunction onPauseChange (prop, enabled) {\n    if (enabled) {\n        mp.set_property('fullscreen', 'no')\n    }\n}\n\nmp.observe_property('pause', 'bool', onPauseChange)\n```\n\nFor more details, e.g. on using require to load CommonJS modules, see mpv(1) § CommonJS modules and require(id).\n\nJavaScript support is available in the mpv package, as well as some AUR packages, e.g. mpv-fullAUR and mpv-full-gitAUR.\n\n"
    },
    {
      "title": "Lua",
      "level": 3,
      "content": "The development of mpv's Lua scripts is documented in mpv(1) § LUA SCRIPTING with examples in TOOLS/lua, which are installed to /usr/share/mpv/scripts.\n\nFor example, you can enable the builtin script to automatically crop videos with black bars:\n\n```\n$ ln -s /usr/share/mpv/scripts/autocrop.lua ~/.config/mpv/scripts\n```\n\n"
    },
    {
      "title": "mpv-ytdlAutoFormat",
      "level": 4,
      "content": "mpv-ytdlautoformat is a Lua script to auto change ytdl-format for Youtube and Twitch or the domains you desire, to 480p or the quality you desire.\n\n"
    },
    {
      "title": "mpv-webm",
      "level": 4,
      "content": "mpv-webm (or simply webm) is a very easy to use Lua script that allows one to create WebM files while watching videos. It includes several features and does not have any extra dependencies (relies entirely on mpv).\n\n"
    },
    {
      "title": "ytdl-preload",
      "level": 4,
      "content": "ytdl-preload is a Lua script to preload the next ytdl-link in your playlist.\n\n"
    },
    {
      "title": "mpv-mpris",
      "level": 4,
      "content": "The C plugin mpv-mpris allows other applications to integrate with mpv via the MPRIS protocol. For example, with mpv-mpris installed, kdeconnect can automatically pause video playback in mpv when a phone call arrives. Another example is buttons (play\\pause etc) on bluetooth audio-devices.\n\nTo use the plugin, install mpv-mpris.\n\n"
    },
    {
      "title": "Vapoursynth",
      "level": 2,
      "content": "Vapoursynth is an alternative to AviSynth that can be used on Linux and allows for Video manipulation via python scripts. Vapoursynths python scripts can be used as video filters for mpv.\n\nThe mpv package now enables Vapoursynth support by default.\n\n"
    },
    {
      "title": "SVP 4 Linux (SmoothVideoProject)",
      "level": 3,
      "content": "SmoothVideoProject SVP is a program that is primarily known for converting video to 60fps. It is free [as in beer] and full featured for 64bit Linux (costs money for Windows and OS X and is incompatible with 32bit Linux).\n\nIt has three main features and each one can be disabled/enabled as one chooses (you are not forced to use motion interpolation).\n\n1. Motion interpolation (youtube video) - An algorithm that converts video to 60fps. This creates the somewhat controversial \"soap opera effect\" that some people love and others hate. Unfortunately, the algorithm is not perfect and it also introduces more than its share of weird artifacts. The algorithm can be tuned (via a slider) for either performance or quality. It also has some artifact reduction settings that interpolate actual frames with the generated frames reducing the noticeability of the artifacts. The framerate detection can be set to automatic or manual (manual seems to resolve performance issues for some users).\n1. Black bar lighting (youtube video) - If the image has an aspect ratio that produces black bars on your display, SVP will illuminate the black bars with \"lights\" generated by the content on the screen. It has some amount of customization, but the defaults are pretty close to optimal.\n1. LED ambient lighting control (youtube video) - Has the ability to control LED ambient lighting attached to your television.\n\nOnce you have mpv compiled with Vapoursynth support, it is fairly easy to get SVP working with mpv. Simply install svp-binAUR, open the SVP program to let it assess your system performance (you may want to close other programs first so that it gets an accurate reading), and finally add the following mpv profile to your mpv.conf[3]:\n\n```\nmpv.conf\n```\n\n```\n[svp]\ninput-ipc-server=/tmp/mpvsocket     # Receives input from SVP\nhr-seek-framedrop=no                # Fixes audio desync\nwatch-later-options-remove=vf       # Do not remember SVP's video filters\n\n# Can fix stuttering in some cases, in other cases probably causes it. Try it if you experience stuttering.\n#opengl-early-flush=yes\n```\n\nThen, in order to use SVP, you must have the SVP program running in the background before opening the file using mpv with that profile. Either do:\n\n```\n$ mpv --profile=svp video.mkv\n```\n\nor set profile=svp in the top-level portion of the mpv configuration.\n\nIf you want to use hardware decoding, you must use a copy-back decoder since normal decoders are not compatible with Vapoursynth (choose a hwdec option that ends in -copy). For instance:\n\n```\nhwdec=auto-copy\nhwdec-codecs=all\n```\n\nEither way, hardware decoding is discouraged by mpv developers and is not likely to make a significant difference in performance.\n\n"
    },
    {
      "title": "Hardware video acceleration",
      "level": 4,
      "content": "See Hardware video acceleration.\n\nHardware accelerated video decoding is available via the --hwdec=API option. For a list of all supported APIs and other required options, see mpv(1) § hwdec.\n\nTo make it permanent (for example when playing videos from a desktop environment), add it to the configuration file:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nhwdec=auto\n```\n\nTo allow CPU processing with video filters, choose a *-copy API.\n\nUse the keyboard shortcut Ctrl+h while a video is running to toggle hardware decoding.\n\nTo troubleshoot hardware acceleration, adjusting the logging levels (see mpv(1) § msg-level) may be necessary. For instance, --msg-level=vd=v,vo=v,vo/gpu/vaapi-egl=trace enables the following:\n\n- Verbose messages from the video decoder (vd) and video output (vo) modules.\n- Even more detailed trace messages for the module responsible for video decoding. Here, after running mpv once without any log levels adjusted, the module of interest was empirically determined to be vo/gpu/vaapi-egl.\n\n"
    },
    {
      "title": "Quickly cycle between aspect ratios",
      "level": 4,
      "content": "You can cycle between aspect ratios using Shift+a.\n\n"
    },
    {
      "title": "Ignoring aspect ratio",
      "level": 4,
      "content": "You can ignore the aspect ratio using --keepaspect=no. To make the option permanent, add the line keepaspect=no to the configuration file.\n\n"
    },
    {
      "title": "Draw to the root window",
      "level": 4,
      "content": "Run mpv with --wid=0. mpv will draw to the window with a window ID of 0.\n\n"
    },
    {
      "title": "Always show the application window",
      "level": 4,
      "content": "To show the application window even for audio files when launching mpv from the command line, use the --force-window option. To make the option permanent, add the line force-window=yes to the configuration file.\n\n"
    },
    {
      "title": "Disable video output",
      "level": 4,
      "content": "To disable video output when launching from command line, use the --vid=no option, or its alias, --no-video.\n\n"
    },
    {
      "title": "Terminal video",
      "level": 4,
      "content": "- --vo=tct \"Color Unicode art video output driver that works on a text console.\"\n- --vo=caca \"Color ASCII art video output driver that works on a text console.\" libcaca support has been disabled on Arch due to vulnerabilities (see FS#70962) and has not been added back in as its upstream is inactive: install mpv-fullAUR.\n\n"
    },
    {
      "title": "Volume is too low",
      "level": 4,
      "content": "Set volume-max=value in your configuration file to a reasonable amount, such as volume-max=150, which then allows you to increase your volume up to 150%, which is more than twice as loud. Increasing your volume too high will result in clipping artefacts. Additionally (or alternatively), you can utilize dynamic range compression with af=acompressor.\n\n"
    },
    {
      "title": "Specify an audio output",
      "level": 4,
      "content": "Run the following command to get a list of available audio output devices\n\n```\n$ mpv --audio-device=help\n```\n\nThen add one to ~/.config/mpv/mpv.conf. For example:\n\n```\naudio-device=alsa/hdmi:CARD=NVidia,DEV=1\n```\n\n"
    },
    {
      "title": "HD Audio passthrough",
      "level": 4,
      "content": "To enable HD audio codecs like TrueHD and DTS-MA to passthrough to an AV receiver, add the following to ~/.config/mpv/mpv.conf\n\n```\naudio-spdif=ac3,eac3,dts-hd,truehd\n```\n\n"
    },
    {
      "title": "Volume normalization",
      "level": 4,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nDifferent sources may have different or inconsistent loudness, so mpv users may need to configure automatic volume normalization. For example:\n\n```\n~/.config/mpv/input.conf\n```\n\n```\nn cycle_values af loudnorm=I=-30 loudnorm=I=-15 anull\n```\n\nThis binds the key n to cycle the audio filter settings (af) through the specified values:\n\n- loudnorm=I=-30: loudnorm setting with I=-30, soft volume, might be suitable for background music\n- loudnorm=I=-15: louder volume, might be good for the video currently in view\n- anull: reset audio filter to null, i.e., disable the audio filter\n\nAudio filtering in mpv is provided by the FFmpeg backend. See Wikipedia:EBU R 128 and ffmpeg loudnorm filter for details.\n\nSee also upstream issues [5] and [6] which mention different options.\n\n"
    },
    {
      "title": "Improving mpv as a music player with Lua scripts",
      "level": 4,
      "content": "This blog post introduces the music.lua script, which shows how Lua scripts can be used to improve mpv as a music player.\n\n"
    },
    {
      "title": "Save position on quit",
      "level": 3,
      "content": "By default, you can save the position and quit by pressing Shift+q. The shortcut can be changed by setting quit_watch_later in the key bindings configuration file.\n\nTo automatically save the current playback position on quit, start mpv with --save-position-on-quit, or add save-position-on-quit to the configuration file.\n\n"
    },
    {
      "title": "Save position of a playlist and pause on next file",
      "level": 4,
      "content": "A playlist could simply be a list of files, see mpv(1) § playlist. To play a playlist and remember its position:\n\n```\n$ mpv --save-position-on-quit --pause --reset-on-next-file=pause --playlist=/path/to/playlist\n```\n\nWith the option --pause mpv will start in paused state and --reset-on-next-file=pause will reset the pause mode when switching to the next file.\n\n"
    },
    {
      "title": "Play a DVD",
      "level": 3,
      "content": "mpv does not support DVD menus. To start the main stream with the longest title of a video DVD, use the command:\n\n```\n$ mpv dvd://\n```\n\nAn optional title specifier is a number (starting at 0) which selects between separate video streams on the DVD:\n\n```\n$ mpv dvd://[title]\n```\n\nDVDs which have been copied on to a local file system (by e.g. the dvdbackup tool) are accommodated by specifying the path to the local copy: --dvd-device=PATH.\n\nSee the following desktop file example for playing DVDs from a local file system:\n\n```\n[Desktop Entry]\nType=Application\nName=mpv Media Player DVD \nGenericName=Multimedia player\nComment=Play movies and songs\nIcon=mpv\nExec=mpv dvd:// --player-operation-mode=pseudo-gui --force-window --idle --dvd-device=%f\nTerminal=false\nCategories=AudioVideo;Audio;Video;Player;TV;\n# (MimeType and X-KDE-Protocols omitted, see original mpv.desktop file)\n```\n\nBy replacing the Exec line with\n\n```\nExec=mpv dvd://0 dvd://1 dvd://2 dvd://3 dvd://4 dvd://5 dvd://6 dvd://7 dvd://8 dvd://9  --player-operation-mode=pseudo-gui --force-window --idle --dvd-device=%f\n```\n\nthe mpv player will queue DVD title 0 to 9 in the playlist, which allows the user to play the titles consecutively or jump forward and backward in the DVD titles with the mpv GUI.\n\nInstall libdvdcss, to fix the error:\n\n```\n[dvdnav] Error getting next block from DVD 1 (Error reading from DVD.)\n```\n\n"
    },
    {
      "title": "Restoring old OSC",
      "level": 3,
      "content": "Since version 0.21.0, mpv has replaced the on-screen controls by a bottombar. In case you want on-screen controls back, you can edit the mpv configuration as described here.\n\n"
    },
    {
      "title": "Reproducible screenshots",
      "level": 3,
      "content": "The screenshot template option can include the precise timecode (HH:MM:SS.mmm) of the screenshoted frame. The meaningful filename makes it easy to know the origin of the screenshot. It can be set like this:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nscreenshot-template=\"%F - [%P] (%#01n)\"\n```\n\nThis expands to filename - [HH:MM:SS.mmm] (number).jpg. Example result:\n\n```\nGunsmith Cats/\n├── Gunsmith Cats Ep. 01 - [00:00:50.217] (1).jpg\n├── Gunsmith Cats Ep. 01 - [00:22:55.874] (1).jpg\n├── Gunsmith Cats Ep. 01 - [00:22:55.874] (2).jpg\n└── Gunsmith Cats Ep. 02 - [00:15:05.778] (1).jpg\n```\n\nA bonus is it sorts nicely because alphabetically, the timecode is sorted within the episode number.\n\nSee mpv(1) § screenshot-template for more information.\n\n"
    },
    {
      "title": "Creating a single screenshot",
      "level": 3,
      "content": "An example of creating a single screenshot, by using a start time (HH:MM:SS):\n\n```\n$ mpv --no-audio --start=00:01:30 --frames=1 /path/to/video/file --o=/path/to/screenshot.png\n```\n\nScreenshots will be saved in /path/to/screenshot.png.\n\n"
    },
    {
      "title": "Twitch.tv streaming over mpv",
      "level": 4,
      "content": "If yt-dlp or youtube-dlAUR is installed, mpv can directly open a Twitch livestream.\n\nAlternatively, see Streamlink#Twitch.\n\nAnother alternative based on Livestreamer is this Lua script: https://gist.github.com/ChrisK2/8701184fe3ea7701c9cc\n\n"
    },
    {
      "title": "youtube-dl and choosing formats",
      "level": 4,
      "content": "The default --ytdl-format is bestvideo+bestaudio/best. For youtube videos that have 4K resolutions available, this may mean that your device will struggle to decode 4K VP9 encoded video in software even if the attached monitor is much lower resolution.\n\nSetting the right youtube-dl format selectors can fix this easily though. In the following configuration example, only videos with a vertical resolution of 1080 pixels or less will be considered.\n\n```\nytdl-format=\"bestvideo[height<=?1080]+bestaudio/best\"\n```\n\nIf you wish to avoid a certain codec altogether because you cannot hardware-decode it, you can add this to the format selector. For example, we can additionally choose to ignore VP9 as follows:\n\n```\nytdl-format=\"bestvideo[height<=?1080][vcodec!~='vp0?9']+bestaudio/best\"\n```\n\nIf you prefer best quality open codecs (VP9 and Opus), use:\n\n```\nytdl-format=\"((bestvideo[vcodec^=vp9]/bestvideo)+(bestaudio[acodec=opus]/bestaudio[acodec=vorbis]/bestaudio[acodec=aac]/bestaudio))/best\"\n```\n\n"
    },
    {
      "title": "youtube-dl audio with search",
      "level": 4,
      "content": "To find and stream audio from your terminal emulator with yta search terms, put the following function in your .bashrc:\n\n```\nfunction yta() {\n    mpv --ytdl-format=bestaudio ytdl://ytsearch:\"$*\"\n}\n```\n\n"
    },
    {
      "title": "Opening video links from the KDE clipboard",
      "level": 4,
      "content": "If youtube-dlAUR or yt-dlp is installed and KDE Plasma is being used, it is possible to create a custom action in the KDE clipboard to conveniently play links from video sharing sites.\n\n1. Open the clipboard configuration menu (typically by right-clicking its icon in the system tray) and go to the Actions tab.\n1. Click Add Action then enter a regular expression to detect the sites you would like to play video from (e.g. ^http.+(youtu|twitch) to detect YouTube and Twitch URLs).\n1. Click Add Command, under Command enter mpv %s and under Description enter mpv.\n\nNow, you can play video links from your clipboard in mpv by pressing Ctrl+Alt+r and selecting mpv from the context menu. You may need to go to Advanced Settings and remove Firefox from the section Disable Actions for Windows of Type WM_CLASS.\n\n"
    },
    {
      "title": "General debugging",
      "level": 3,
      "content": "If you are having trouble with mpv's playback (or if it is flat out failing to run) then the first three things you should do are:\n\n1. Run mpv from the command line (the -v flag increases verbosity). If you are lucky there will be an error message there telling you what is wrong.$ mpv -v video.mkv\n1. Have mpv output a log file. The log file might be difficult to sift through but if something is broken you might see it there.$ mpv -v --log-file=./log video.mkv\n1. Run mpv without a configuration. If this runs well then the problem is somewhere in your configuration (perhaps your hardware cannot keep up with your settings).$ mpv --no-config video.mkv\n\nIf mpv runs but it just does not run well then a fourth thing that might be worth taking a look at is the live statistics (with i) to see exactly how it is performing.\n\n"
    },
    {
      "title": "Fix jerky playback and tearing",
      "level": 3,
      "content": "mpv defaults to using the OpenGL video output device setting on hardware that supports it. In cases such as trying to play video back on a 4K display using an Intel HD4XXX series card or similar, you will find video playback unreliable, jerky to the point of stopping entirely at times and with major tearing when using any OpenGL output setting. If you experience any of these issues, using the XV (Xorg only) video output device may help:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nvo=xv\n```\n\nIt is possible to increase playback performance even more (especially on lower hardware), but this decreases the video quality dramatically in most cases.\n\nThe following options may be considered to increase the video playback performance:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\nvd-lavc-fast\nvd-lavc-skiploopfilter=skipvalue\nvd-lavc-skipframe=skipvalue\nvd-lavc-framedrop=skipvalue\nvd-lavc-threads=threads\n```\n\n"
    },
    {
      "title": "Problems with window compositors",
      "level": 3,
      "content": "As described in mpv(1) § Window, mpv by default disables any active window compositor while in fullscreen mode. This is done to prevent potential performance issues during playback.\n\nFor window compositors such as KWin or Mutter, it can be advantageous to disable window compositing even while in windowed mode. This can be achieved by using setting the x11-bypass-compositor=yes option.\n\nThere are two disadvantages to disabling compositing:\n\n- Re-enabling compositing may introduce stutter for a period of time, particularly if using KWin compositing.\n- Any effects provided by compositing will be temporarily unavailable (until mpv re-enables it), which in Plasma prevents the default app switcher from working.\n\nTo sidestep these issues, you can try keeping your compositor enabled with x11-bypass-compositor=no\n\n"
    },
    {
      "title": "No volume bar, cannot change volume",
      "level": 3,
      "content": "Spin the mouse wheel over the volume icon.\n\n"
    },
    {
      "title": "GNOME Blank screen (Wayland)",
      "level": 3,
      "content": "mpv may not suspend GNOME's Power Saving Settings if using Wayland resulting in screen saver turning off the monitor during video playback. A workaround is to add gnome-session-inhibit to the beginning of the Exec= line in mpv.desktop.\n\nIn order to inhibit the screensaver only during playback, use mpv_inhibit_gnomeAUR. Alternatively, a mpv lua script based on gnome-session-inhibit may be used.\n\n"
    },
    {
      "title": "Cursor theme not respected under GNOME Wayland",
      "level": 3,
      "content": "See GNOME/Troubleshooting#Cursor size or theme issues on Wayland.\n\n"
    },
    {
      "title": "Error message about missing CUDA libraries on AMD GPUs",
      "level": 3,
      "content": "While using VAAPI hardware acceleration on AMD GPUs on versions v0.34.1 and older, you may see a persistent error message saying Cannot load libcuda.so.1. This can be suppressed by setting gpu-hwdec-interop=vaapi.\n\nRelated bug reports: Github issue #9691, Github issue #8765\n\nThis issue has been fixed upstream in pull request #9842.\n\n"
    },
    {
      "title": "Unable to play audio if PipeWire is masked",
      "level": 3,
      "content": "If mpv crashes or fails to play audio on systems where PipeWire is masked, reporting no outputs or broken pipe, set the --ao option to match your environment. Set it in mpv.conf for persistent configuration.\n\n"
    },
    {
      "title": "mpv will not start playing a DVD from file",
      "level": 3,
      "content": "If mpv will not play a DVD from file in plain VIDEO_TS/VOB structure, there could be a problem with the restore playback position function. Try either cleaning .config/mpv/watch_later folder, or start mpv with the no-resume-playback option and/or set the save-position-on-quit=no option.\n\n"
    },
    {
      "title": "Fix stuttering after resuming playback from pause",
      "level": 3,
      "content": "If video is stuttering with PulseAudio, try the pulse-latency-hacks option discussed at mpv(1) § --pulse-latency-hacks:\n\n```\n~/.config/mpv/mpv.conf\n```\n\n```\npulse-latency-hacks=yes\n```\n\n"
    }
  ]
}