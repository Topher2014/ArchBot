{
  "title": "Instalar a partir de SSH",
  "url": "https://wiki.archlinux.org/title/Instalar_a_partir_de_SSH",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Este artigo possui o intuito de mostrar aos usuários como instalar o Arch através de uma conexão SSH. Considere esta abordagem quando o host está em local remoto ou você quiser usar capacidade de copiar/colar de um cliente SSH para fazer a instalação do Arch.\n\n"
    },
    {
      "title": "Na máquina remota (destino)",
      "level": 2,
      "content": "Inicie a máquina destino em um ambiente Arch live por meio de uma imagem CD/USB Live: isso vai autenticar o usuário como root.\n\nNeste ponto, configure a rede na máquina destino como, por exemplo, sugerido no Guia de instalação#Conectar à internet.\n\nEm seguida, configure uma senha de root que é necessária para uma conexão SSH, já que a senha padrão do Arch para root é vazia:\n\n```\n# passwd\n```\n\nAgora, certifique-se que PermitRootLogin yes está presente (e descomentado) no /etc/ssh/sshd_config. Essa configuração vai permitir o login como root com autenticação com senha no servidor SSH.\n\nFinalmente, inicie o daemon openssh com sshd.service, que está incluído por padrão no live CD.\n\n"
    },
    {
      "title": "Na máquina local",
      "level": 2,
      "content": "Na máquina local, conecte à máquina destino via SSH com o seguinte comando:\n\n```\n$ ssh root@endereço.ip.do.destino\n```\n\nA partir daqui, uma mensagem de boas-vindas do ambiente live será apresentada, e será possível administrar a máquina como se estivesse sentado em frente ao teclado físico. Neste ponto, se a intenção apenas instalar o Arch da mídia live, siga o guia em Guia de instalação. Se a intenção é editar uma instalação Linux existente que está com problemas, siga o artigo wiki Instalar a partir de um Linux existente.\n\n"
    },
    {
      "title": "Instalação em um servidor headless",
      "level": 2,
      "content": "Esta seção descreve a instalação do Arch Linux em um servidor headless (usando a máquina Intel NUC como exemplo) sem teclado, mouse ou monitor. Isso envolve três etapas:\n\n1. Criar uma imagem live do Arch Linux modificada usando Archiso. A modificação é projetada para fazer três coisas: Conectar-se automaticamente à rede Wi-Fi (possivelmente protegida por senha) no momento da inicialização. Executar o daemon SSH no momento da inicialização Criar um arquivo /root/.ssh/authorized_keys para o root que contenha sua chave pública. O padrão /etc/ssh/sshd_config permite que o root efetue login no SSH usando autenticação de chave pública.\n1. Inicializar a máquina headless em um ambiente Arch live, inserindo a mídia de instalação que contém a imagem de inicialização modificada acima e inicializando-a.\n1. Aguardar um minuto ou mais para permitir que o tempo da máquina headless seja inicializado e conectado à rede Wi-Fi. Na sua máquina existente (com teclado e tela), faça acesso via SSH ao ambiente Arch live no servidor headless e conclua a instalação conforme descrito no Guia de instalação.\n\n1. Conectar-se automaticamente à rede Wi-Fi (possivelmente protegida por senha) no momento da inicialização.\n1. Executar o daemon SSH no momento da inicialização\n1. Criar um arquivo /root/.ssh/authorized_keys para o root que contenha sua chave pública. O padrão /etc/ssh/sshd_config permite que o root efetue login no SSH usando autenticação de chave pública.\n\nO restante desta seção descreve a primeira etapa da criação de uma imagem live modificada. Tudo isso feito em uma máquina com uma instalação existente do Arch Linux, que normalmente também será a máquina da qual você planeja fazer o SSH na máquina headless.\n\n- Instale Archiso e, como explicado em Archiso (Português)#Preparar um perfil personalizado, copie o perfil releng para uma pasta adequada:\n\n```\ncp -r /usr/share/archiso/configs/releng/ /root/archlive\n```\n\n- Crie um arquivo definindo o SSID da sua rede, a senha e o arquivo de chave pública. Isso pode ser mesclado no arquivo de script descrito abaixo, mas eu prefiro manter alguma separação entre código e dados.\n\n```\n/root/archlive/my-build-config.sh\n```\n\n```\nSSID=ssid_da_sua_rede_wifi\nPASSWORD=senha_da_sua_rede_wifi\nPUBLIC_KEY=/caminho/para/sua/chave/pública\n```\n\n- Crie um script de compilação personalizado que instale os pacotes necessários, habilite os serviços desejados e copie o arquivo de chave pública para a imagem de inicialização. Este script faz várias modificações na imagem de inicialização: Isso copia a chave pública para o diretório .ssh/allowed_keys. Como explicado em Archiso (Português)#Adicionando arquivos para a imagem, isso deve ser feito criando um diretório skel dentro de airootfs/ e copie os arquivos lá. O SSH é muito específico sobre permissões de arquivo e também devemos definir essas permissões. Isso configura a imagem de inicialização para conectar-se à rede Wi-Fi na inicialização usando NetworkManager e sua interface de linha de comando nmcli. Existem várias etapas envolvidas nisso: Instale o NetworkManager bem como os drivers e firmwares da conexão sem fio o que no caso do Intel NUC é o linux-firmware. Como explicado em Archiso (Português)#Selecionando pacotes, a instalação de pacotes adicionais é realizada adicionando estes pacotes às listas de pacotes em packages.x86_64.\n\n- Isso copia a chave pública para o diretório .ssh/allowed_keys. Como explicado em Archiso (Português)#Adicionando arquivos para a imagem, isso deve ser feito criando um diretório skel dentro de airootfs/ e copie os arquivos lá. O SSH é muito específico sobre permissões de arquivo e também devemos definir essas permissões.\n- Isso configura a imagem de inicialização para conectar-se à rede Wi-Fi na inicialização usando NetworkManager e sua interface de linha de comando nmcli. Existem várias etapas envolvidas nisso: Instale o NetworkManager bem como os drivers e firmwares da conexão sem fio o que no caso do Intel NUC é o linux-firmware. Como explicado em Archiso (Português)#Selecionando pacotes, a instalação de pacotes adicionais é realizada adicionando estes pacotes às listas de pacotes em packages.x86_64.\n\n- Instale o NetworkManager bem como os drivers e firmwares da conexão sem fio o que no caso do Intel NUC é o linux-firmware. Como explicado em Archiso (Português)#Selecionando pacotes, a instalação de pacotes adicionais é realizada adicionando estes pacotes às listas de pacotes em packages.x86_64.\n\n- Inicie o NetworkManager.service na inicialização adicionando o comando necessário systemctl enable a customize_airootfs.sh conforme explicado em Archiso (Português)#Preparar um perfil personalizado Verifique se o comando necessário nmcli dev wifi connect é executado automaticamente na inicialização. A imagem de inicialização é configurada por padrão para fazer login automático para fazer root na inicialização. Quando o root (ou qualquer outro usuário) efetua login, os scripts em /etc/profile.d são executados. Então, tudo o que precisamos fazer é criar um script executável em /etc/profile.d com o comando necessário nmcli dev wifi connect. No script abaixo, a senha está entre um conjunto de aspas misteriosas; essa citação é necessária apenas se a senha for realmente uma senha (com espaços incorporados). Inicie o sshd.service na inicialização adicionando o comando necessário systemctl enable a customize_airootfs.sh conforme explicado em Archiso (Português)#Preparar um perfil personalizado Finalmente, o script de compilação personalizado deve executar o script de compilação original (./build.sh) para criar a imagem de inicialização.\n\n- Inicie o NetworkManager.service na inicialização adicionando o comando necessário systemctl enable a customize_airootfs.sh conforme explicado em Archiso (Português)#Preparar um perfil personalizado Verifique se o comando necessário nmcli dev wifi connect é executado automaticamente na inicialização. A imagem de inicialização é configurada por padrão para fazer login automático para fazer root na inicialização. Quando o root (ou qualquer outro usuário) efetua login, os scripts em /etc/profile.d são executados. Então, tudo o que precisamos fazer é criar um script executável em /etc/profile.d com o comando necessário nmcli dev wifi connect. No script abaixo, a senha está entre um conjunto de aspas misteriosas; essa citação é necessária apenas se a senha for realmente uma senha (com espaços incorporados).\n- Inicie o sshd.service na inicialização adicionando o comando necessário systemctl enable a customize_airootfs.sh conforme explicado em Archiso (Português)#Preparar um perfil personalizado\n- Finalmente, o script de compilação personalizado deve executar o script de compilação original (./build.sh) para criar a imagem de inicialização.\n\n- Inicie o NetworkManager.service na inicialização adicionando o comando necessário systemctl enable a customize_airootfs.sh conforme explicado em Archiso (Português)#Preparar um perfil personalizado\n- Verifique se o comando necessário nmcli dev wifi connect é executado automaticamente na inicialização. A imagem de inicialização é configurada por padrão para fazer login automático para fazer root na inicialização. Quando o root (ou qualquer outro usuário) efetua login, os scripts em /etc/profile.d são executados. Então, tudo o que precisamos fazer é criar um script executável em /etc/profile.d com o comando necessário nmcli dev wifi connect. No script abaixo, a senha está entre um conjunto de aspas misteriosas; essa citação é necessária apenas se a senha for realmente uma senha (com espaços incorporados).\n\n```\n/root/archlive/my-build.sh\n```\n\n```\n# carrega os vakires de SSID PASSWORD PUBLIC_KEY\nsource my-build-config.sh\n\n# copia PUBLIC_KEY para authorized_keys\nmkdir -p airootfs/etc/skel/.ssh\ncp $PUBLIC_KEY airootfs/etc/skel/.ssh/authorized_keys\nchmod 700 airootfs/etc/skel/.ssh\nchmod 600 airootfs/etc/skel/.ssh/authorized_keys\n\n# instala o networkmanager\necho networkmanager >> packages.x86_64\n# instala o linux-firmware (necessário para Intel NUC)\necho linux-firmware >> packages.x86_64\n\n# habilita sshd e NetworkManager\necho systemctl enable sshd.service NetworkManager.service \\\n     >> airootfs/root/customize_airootfs.sh\n# conecta a rede Wi-Fi no login\nmkdir -p airootfs/etc/profile.d\necho nmcli dev wifi connect \"$SSID\" password '\"'\"$PASSWORD\"'\"' \\\n     >> airootfs/etc/profile.d/connect-wifi.sh\nchmod +x airootfs/etc/profile.d/connect-wifi.sh\n\n# executa o script de compilação original\n./build.sh\n```\n\nTorne o script executável e execute-o:\n\n```\ncd /root/archlive\nchmod +x my-build.sh\n./my-build.sh\n```\n\nA imagem de inicialização modificada agora está pronta (na pasta /root/archlive/out/) e pode ser copiada para uma mídia de instalação (unidade USB) usando dd:\n\n```\ndd bs=4M if=out/archlinux_xxxxxx of=/dev/sdxx status=progress oflag=sync\n```\n\n"
    }
  ]
}