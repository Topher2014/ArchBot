{
  "title": "Stateless OpenPGP",
  "url": "https://wiki.archlinux.org/title/Stateless_OpenPGP",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Data-at-rest encryption\n- List of applications/Security#Encryption, signing, steganography\n- OpenPGP\n- OpenPGP card\n\nStateless OpenPGP (SOP) is a standard for command line interface (CLI) tools to perform OpenPGP operations. It is defined in a dedicated IETF draft outlining its features and syntax.\n\nSOP is a lean approach to signing/verification and encryption/decryption operations on messages. Certificates and/or keys for all operations must be explicitly specified.\n\nUsually private key operations use software keys. However, private key material on hardware security devices can also be used with some SOP implementations.\n\nMany SOP implementations exist and are cross-tested in an interoperability test suite.\n\nAlthough implementations provide executables of differing names, they all have the same CLI and the core functionality can be used interchangeably.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Several implementations are available for installation:\n\n- gosop\n- rsop\n- rsop-oct\n- sequoia-sop\n\n"
    },
    {
      "title": "Features",
      "level": 2,
      "content": "While SOP offers a uniform interface, implementations are free to support different subsets of the cryptographic mechanisms that OpenPGP specifies. Different versions of the format as well as hardware backed keys may be supported.\n\nTable content:\nPackage | RFC 4880 (+ RFC 6637) | draft-koch-librepgp | RFC 9580 | Hardware backed keys\ngosop | Yes | No | Yes | No\nrsop | Yes | No | Yes | No\nrsop-oct | Yes | No | No | Yes\nsequoia-sop | Yes | No | No | No\n\n"
    },
    {
      "title": "Hardware device support",
      "level": 3,
      "content": "When using hardware security devices, SOP parameters that usually specify private key material instead only specify public key material.\n\nThis public key material serves as an explicit reference to locate and use a hardware device that provides the corresponding private key material.\n\n"
    },
    {
      "title": "Tips and tricks",
      "level": 2,
      "content": "The below examples assume, that the name of the SOP executable (e.g. gosop, rsop, rsop-oct or sqop) is stored in the environment variable $SOP.\n\n"
    },
    {
      "title": "Create a private key",
      "level": 3,
      "content": "To create an OpenPGP transferable secret key (aka. private key) with the User ID <archie@example.org> use:\n\n```\n$ $SOP generate-key \"<archie@example.org>\" > archie.tsk\n```\n\n"
    },
    {
      "title": "Extract certificate",
      "level": 3,
      "content": "To extract the certificate (aka. public key) from the created transferable secret key use:\n\n```\n$ $SOP extract-cert > archie.cert < archie.tsk\n```\n\n"
    },
    {
      "title": "Create detached signature",
      "level": 3,
      "content": "To create a detached signature for a message use:\n\n```\n$ echo \"Hello world\" | $SOP sign archie.tsk > msg.sig\n```\n\n```\n$ echo \"Hello world\" | rsop-oct sign archie.cert > msg.sig\n```\n\n"
    },
    {
      "title": "Verify detached signature",
      "level": 3,
      "content": "To verify the detached signature, provide the original message, the signature as well as the OpenPGP certificate:\n\n```\n$ echo \"Hello world\" | $SOP verify msg.sig archie.cert\n```\n\n```\n2024-02-27T17:36:28Z 12b7169b5fc99d1a2d546b8755d1f4d8a355f3cb 12b7169b5fc99d1a2d546b8755d1f4d8a355f3cb mode:binary\n```\n\n"
    },
    {
      "title": "Encrypt a message",
      "level": 3,
      "content": "Messages can be encrypted by providing the message and the OpenPGP certificate of the recipient:\n\n```\n$ echo \"Hello world\" | $SOP encrypt archie.cert > encrypted.msg\n```\n\n"
    },
    {
      "title": "Decrypt a message",
      "level": 3,
      "content": "Recipients of encrypted messages can decrypt them by providing the encrypted message and their transferable secret key:\n\n```\n$ $SOP decrypt archie.tsk < encrypted.msg\n```\n\n```\nHello world\n```\n\n```\n$ rsop-oct decrypt archie.cert < encrypted.msg\n```\n\n```\nHello world\n```\n\n"
    },
    {
      "title": "Create cleartext signed message",
      "level": 3,
      "content": "Cleartext signed messages can be created by providing the message and the signer's transferable secret key:\n\n```\n$ echo \"Hello world\" | $SOP inline-sign --as clearsigned archie.tsk\n```\n\n```\n-----BEGIN PGP SIGNED MESSAGE-----\n\nHello world\n\n-----BEGIN PGP SIGNATURE-----\n\nwnUEARYKAB0WIQQStxabX8mdGi1Ua4dV0fTYo1XzywUCZd4eOgAKCRBV0fTYo1Xz\nyyqJAQDUD/lbhqOHL/O0cjtytXQXnMOx5twW3FT3RJPlu9JZUAEA2OAMhzLmX6Bb\nmXz8Tu0eApqbxu64ksieL8YNN20IwQs=\n=77wU\n-----END PGP SIGNATURE-----\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- IETF draft\n- Interoperability test suite\n- OpenPGP for application developers\n\n"
    }
  ]
}