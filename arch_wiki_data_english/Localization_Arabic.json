{
  "title": "Localization/Arabic",
  "url": "https://wiki.archlinux.org/title/Localization/Arabic",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This article describes how to set up Arabic language environment.\n\n"
    },
    {
      "title": "Applications",
      "level": 2,
      "content": "- Locale article explains how to set up system or user locale.\n- Bidirectional text article lists Bidi support status in applications.\n- Keyboard layout: set it by setxkbmap ara,us. Check the article for more info.\n- Ayaspell offers spellchecking extensions. Can be installed system-wide by hunspell-arAUR.\n- Aspell: install aspell-arAUR\n- Dict: For Arabic dictionaries install dict-freedict-eng-araAUR, dict-freedict-ara-engAUR.\n- Islamic tools: for Hijri date conversion.\n- LibreOffice: set up Bidi support. If you are not using a system-wide Arabic dictionary, Ayaspell extension can be installed from Tools > Language > More Dictionaries Online > Arabic. For language pack, install libreoffice-still-ar for the stable branch and libreoffice-fresh-ar for Libreoffice fresh.\n- tesseract: for OCR detection, the default data package tesseract-data-ara is mostly inaccurate. Try tesseract-data-best-araAUR see [1].\n- Thunderbird: install thunderbird-i18n-ar for language pack.\n- Firefox: install firefox-i18n-ar for language pack.\n- dwm: see Dwm#Arabic Letter-shaping\n\n"
    },
    {
      "title": "Shell and Terminal",
      "level": 3,
      "content": "- st: see St#Arabic shaping support\n- mlterm: see Mlterm#Render Arabic script in Xft and Mlterm#Arabic script rendering when using fixed width fonts\n- bash: enables by default \"combining characters\" (1) feature, which merges diacritics with previous character.\n- zsh: to properly display diacritics add setopt COMBINING_CHARS to your .zshrc.\n\n"
    },
    {
      "title": "Vim",
      "level": 3,
      "content": "- See Vim#Bidirectional support for setting up Bidi support.\n- Since Vim does not map Arabic characters given by input method, motion commands do not work. A possible workaround is to set keymap within Vim without changing X11 keymap. This can be done set keymap=arabic, then switching between layouts via Ctrl-^, or by manually set langmap in vimrc:\n\n```\nset langmap=ضصثقفغعهخحجد;qwertyuiop[],شسيبل;asdfg,اتنمكط;hjkl\\;',ئءؤرلا;zxcvb,ىةوزظ;nm،./,لآB,آN,'M,؟?,ِA,ٍS,لأG,أH,ـJ,،K,ًW,ُE,ٌR,لإT,إY,÷I,×O,؛P\n```\n\n"
    },
    {
      "title": "Fonts",
      "level": 2,
      "content": "Check Font configuration/Examples#Arabic for setting up font configuration. Persian fonts like vazirmatn-fontsAUR also include support for Arabic letters. A list of Persian fonts can be checked from Fonts#Persian.\n\nMulti-script (extended Arabic script) fonts:\n\n- noto-fonts - Google Noto fonts includes Noto Kufi Arabic, Noto Sans Arabic, and Noto Kufi Arabic. Use noto-fonts-arAUR for installing these only.\n- ttf-ibm-plex\n- ttf-sil-harmattanAUR\n- ttf-dejavu - Includes the monospace DejaVu Sans Mono' font.\n- ttf-arabeyes-fontsAUR — Collection of free Arabic fonts that includes: KACST fonts Thuluth script font Thabit: monospace font Decorative: AlArabiya, AlBattar, AlHor, and others.\n\n- KACST fonts\n- Thuluth script font\n- Thabit: monospace font\n- Decorative: AlArabiya, AlBattar, AlHor, and others.\n\nSans-Serif:\n\n- ttf-markazi-text-variableAUR\n- ttf-rubikAUR\n- ttf-tajawalAUR\n- ttf-ubuntu-arabicAUR\n\nMonospace:\n\n- vazir-code-fontsAUR - Persian font with good monospace support for Arabic.\n- otf-kawkab-monoAUR\n- ttf-amiri-typewriterAUR - Typewriter Naskh font based on Amiri\n\nBitmap:\n\n- Arabeyes bitmap font\n\nNaskh (~Serif):\n\n- ttf-scheherazade-new — Unicode Arabic font from SIL (Alternative for Traditional Arabic font)\n- ttf-amiriAUR — A classical Arabic typeface in Naskh style pioneered by Amiria Press. Its Latin characters are based on Crimson (otf-crimson) [2] [3]\n- ttf-qurancomplex-fontsAUR — Fonts by King Fahd Glorious Quran Printing Complex in al-Madinah al-Munawwarah\n- ttf-sil-lateefAUR — Unicode Arabic font from SIL\n\nRuq'ah, Kufic (~Sans-Serif):\n\n- ttf-aref-ruqaaAUR - Ruq'ah typeface.\n- ttf-cairoAUR\n- ttf-mada-variableAUR\n- ttf-raqqAUR - A manuscript Kufic typeface.\n- ttf-reem-kufiAUR\n- otf-qahiriAUR\n\n"
    },
    {
      "title": "Kashida justification",
      "level": 2,
      "content": "Kashida justification could be applied either to single letters or in-between letters. For more information, see [4].\n\n- LibreOffice: single-letter Kashida not supported. In-between-letter Kashida is supported by applying paragraph justification.\n- LaTeX: single-letter Kashida not supported. In-between-letter Kashida can be applied using justification=kashida option in Babel package. The following is a sample preamble:\n\n```\n\\usepackage[\n\tenglish,\n\tbidi=basic,\n]{babel}\n\\babelprovide[\n\timport, main,\n\tjustification = kashida,\n\ttransforms = kashida.plain\n]{arabic}\n\\babelfont[arabic]{rm}{Scheherazade New}\n```\n\n- typst: Unsupported\n\n"
    },
    {
      "title": "Tips and tricks",
      "level": 2,
      "content": "- Disable URL encoding for links containing Arabic characters. See Character encoding#URL encoding.\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "Common issues may be solved by checking Locale#Troubleshooting and Character encoding#Troubleshooting first. For problems related to letter-shaping or text direction, check Bidi.\n\n"
    },
    {
      "title": "XKB Lam Alif problem",
      "level": 3,
      "content": "X keyboard layout sends Arabic ligature glyphs as a single glyph. For example, Laa+Alif ligature \"لا\" (U+0644, U+0627) is sent as \"ﻻ\" (U+FEFB), and similarly for (ﻷ، ﻵ، ﻹ). This is due to a known limitation in xkb which does not allow mapping a key to more than one character. To solve this problem, run a supported input method. The input method workaround takes advantage of Compose Sequences. For a technical reading on this, check [5]. These are confirmed to work:\n\n- IBus: supported since v1.5.28.\n- ibus-typing-booster: supported since 2.19.0\n\nFor a more lightweight option, you can use Xim. Add the following to your environment variables:\n\n```\nXIM=none\nXIM_PROGRAM=/bin/true\nXIM_ARGS=\nGTK_IM_MODULE=xim\nQT_IM_MODULE=xim\nSHORT_DESC=\"X compose table\"\n```\n\nAlternatively, you can use IM config wrapper script: im-config -n xim.\n\nSince QT-based programs do not have this issue, it is enough to add export GTK_IM_MODULE=xim to ~/.xsessionrc or ~/.xprofile. The issue is also fixed for GTK4.\n\n"
    },
    {
      "title": "Fix Arabic legibility when using Noto Fonts",
      "level": 3,
      "content": "If Arabic characters are rendered an in an unexpected font (e.g: Nastaliq, Urdu font, etc.), see Font configuration/Examples#Excluding Arabic script from other languages.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Bidirectional text\n- Islamic tools\n- ArabEyes Project\n\n"
    }
  ]
}