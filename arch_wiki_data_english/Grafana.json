{
  "title": "Grafana",
  "url": "https://wiki.archlinux.org/title/Grafana",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Zabbix\n- Munin\n\nGrafana is an open-source, general purpose dashboard and graph composer, which runs as a web application. It supports graphite, InfluxDB, Prometheus or opentsdb as backends.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the grafana package.\n\nAfter that you can enable and start grafana.service and access the application on localhost, e.g.: http://127.0.0.1:3000 . The default username is admin and password admin to access the web frontend.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The default location of the configuration file is /etc/grafana.ini.\n\nAfter making changes, remember to restart grafana.service.\n\n"
    },
    {
      "title": "Installation",
      "level": 4,
      "content": "Follow the instructions to install InfluxDB.\n\n"
    },
    {
      "title": "Aggregate data",
      "level": 4,
      "content": "In case of scaleable server monitoring in combination with Grafana and InfluxDB, one could choose software like collectdAUR. More generally any measurement data can be aggregated with InfluxDB and displayed with Grafana. There are modules and libraries for several programming languages to interact with InfluxDB and one could even store data with a simple http post command using the program curl.\n\nHerefore, create a database named example:\n\n```\n$ curl -G http://localhost:8086/query --data-urlencode \"q=CREATE DATABASE example\"\n```\n\nPost data into the example database:\n\n```\n$ curl -i -XPOST 'http://localhost:8086/write?db=example' --data-binary 'cpu_load_short,host=server01,region=us-west value=0.64 1434055562000000000'\n```\n\n"
    },
    {
      "title": "Add a data source",
      "level": 4,
      "content": "- Click on Data sources in the left menu and then on Add new.\n- Name can be something like influxdb and the type should be set to InfluxDB 0.9. In this example, the URL for the HTTP settings is http://localhost:8086. Database name corresponds to the one earlier chosen, e.g. example. If not changed, username and password are root.\n- Click on Test connection to see everything is working and then on Save.\n\n"
    },
    {
      "title": "Creating a dashboard",
      "level": 4,
      "content": "- Click Home in the left-upper corner and then on New.\n- Hover over and click the little green box on the left side, and then choose: Add panel and Graph.\n- Click on the title of the new graph and select Edit.\n- In the graph settings in Metrics choose influxdb as data source in the lower-right corner.\n- Create a query by selecting your aggregated data. Click on select measurement which is located beside FROM. In the drop-down menu should appear a list of \"tables\" in your database, e.g. the table named localhost. If no suggestions comes up, your connection to InfluxDB might be broken or no data has been aggregated yet.\n- Beside the bold text SELECT click on value and choose for example the measurement data uptime.\n- To save changes, click Back to dashboard, then the floppy disc icon.\n\n"
    }
  ]
}