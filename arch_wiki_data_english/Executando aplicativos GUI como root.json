{
  "title": "Executando aplicativos GUI como root",
  "url": "https://wiki.archlinux.org/title/Executando_aplicativos_GUI_como_root",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Evita executar aplicativos gráficos como root se possível, veja #Contornar aplicativos gráficos como root.\n\n"
    },
    {
      "title": "sudoedit",
      "level": 3,
      "content": "Para editar arquivos como root, use sudoedit.\n\n"
    },
    {
      "title": "GVFS",
      "level": 3,
      "content": "O acesso aos arquivos e diretórios privilegiados é possível através do GVFS especificando o backend admin no esquema de URI[2][3], por exemplo:\n\n```\n$ nautilus admin:///root/\n```\n\nou\n\n```\n$ gedit admin:///etc/fstab\n```\n\n"
    },
    {
      "title": "Xorg",
      "level": 2,
      "content": "Por padrão, e por motivos de segurança, o root não poderá se conectar a um servidor X de usuário não-root. Existem várias maneiras de permitir que o root faça isso, no entanto, se necessário.\n\nA maneira correta e recomendada de executar aplicativos GUI no X com privilégios elevados é criar uma política Polkit, conforme mostrado em neste tópico de fórum. Isto deve, no entanto, \"ser usado somente para programas legados\", como pkexec(1) lembra. Os aplicativos devem \"adiar as operações privilegiadas para um pedaço de código auditável, autocontido, mínimo, que é executado após executar um escalonamento de privilégios e ser descartado quando não for necessário\"[4]. Isso pode ser o objeto de um relatório de bug para o projeto upstream.\n\n"
    },
    {
      "title": "Métodos pontuais",
      "level": 3,
      "content": "Esses métodos envolvem o aplicativo em uma estrutura de elevação e descartam os privilégios adquiridos depois que ele sai:\n\n- kdesu & kde-cli-tools, kdesu(1)\n\n```\n$ kdesu aplicativo\n```\n\n- sudo (deve estar configurado adequadamente)\n\n```\n$ sudo aplicativo\n```\n\n- suxAUR (wrapper do su que transferirá suas credenciais X)\n\n```\n$ sux root aplicativo\n```\n\n"
    },
    {
      "title": "Métodos alternativos",
      "level": 3,
      "content": "Esses métodos permitirão que o root se conecte a um servidor X de usuário não-root, mas apresentam níveis variados de riscos de segurança, especialmente se você executar o ssh. Se você estiver protegido por um firewall, considere-o seguro o suficiente para suas necessidades.\n\n"
    },
    {
      "title": "Xhost",
      "level": 4,
      "content": "Xhost pode ser usado para permitir temporariamente acesso como root.\n\n"
    },
    {
      "title": "Permitir permanentemente acesso de root",
      "level": 4,
      "content": "```\nsession         optional        pam_xauth.so\n```\n\npara /etc/pam.d/su e /etc/pam.d/su-l. Então, mude para seu usuário root usando su ou su -.\n\nAdicione a seguinte linha ao /etc/profile:\n\n```\nXAUTHORITY=/home/usuario/.Xauthority\n```\n\nIsso vai permitir permanentemente que o root se conecte a um servidor X de usuário não-root.\n\nOu meramente especifique um aplicativo em particular:\n\n```\nXAUTHORITY=/home/usuario/.Xauthority nome-do-aplicativo\n```\n\nsendo nome-do-aplicativo o nome do aplicativo em particular (p.ex., kwrite)\n\n"
    },
    {
      "title": "Wayland",
      "level": 2,
      "content": "Tentar executar um aplicativo gráfico como root via su, sudo ou pkexec em uma sessão Wayland (por exemplo, GParted ou Gedit), falhará com um erro semelhante a este:\n\n```\n$ sudo gedit\nNo protocol specified\nUnable to init server: Não foi possível conectar: Conexão recusada\n\n(gedit:2349): Gtk-WARNING **: cannot open display: :0\n```\n\nAntes do Wayland, a execução de aplicativos de GUI com privilégios elevados poderia ser implementada adequadamente criando uma política de Polkit ou, mais perigosamente, executando o comando em um terminal, prefixando o comando com sudo; mas sob (X)Wayland isso não funciona mais, já que o padrão foi feito para permitir que o usuário que iniciou o servidor X conectasse clientes a ele (veja o relatório de erro e os commits upstream aos quais ele se refere).\n\nEvite executar aplicativos gráficos como root se possível, veja #Contornar aplicativos gráficos como root.\n\nUma solução mais versátil, embora mais insegura, permite que qualquer aplicativo gráfico seja executado como root usando o xhost.\n\n"
    },
    {
      "title": "Usar xhost",
      "level": 3,
      "content": "Uma solução mais versátil – embora muito menos segura – é usar xhost para permitir temporariamente que o usuário root acesse a sessão X do usuário local[5]. Para fazer isso, execute o seguinte comando como o usuário atual (não privilegiado):\n\n```\n$ xhost si:localuser:root\n```\n\nPara remover esse acesso após o aplicativo ter sido fechado:\n\n```\n$ xhost -si:localuser:root\n```\n\n"
    }
  ]
}