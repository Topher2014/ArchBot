{
  "title": "QBittorrent",
  "url": "https://wiki.archlinux.org/title/QBittorrent",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "qBittorrent is an open source and cross-platform BitTorrent client written in C++, Qt and Python (optional search engine), using libtorrent-rasterbar library.\n\nIt is fast, stable and light, supports unicode and provides an integrated search engine. It comes with UPnP/NAT-PMP port forwarding, encryption, FAST extension and PeX support.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "There are two packages in official repositories to install qBittorrent with:\n\n- qBittorrent — Qt graphical interface and #Web interface.\n\n- qBittorrent-nox — Without graphical interface (nox -> no X server).\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "A configuration file is created at ~/.config/qBittorrent/qBittorrent.conf upon running the program the first time.\n\n"
    },
    {
      "title": "Running as the package-created qbt user",
      "level": 4,
      "content": "As of qbittorrent-nox-5.0.4-3, an unprivilleged user, qbt, will be created upon installation. The package also ships with qbittorrent-nox.service in which this user is hardcoded.\n\nTo see the OTP to the WebGUI upon starting the daemon, review the output of: systemctl status qbittorrent-nox.\n\nIn order to prevent the legal disclaimer from being written to journalctl, edit /var/lib/qbittorrent/.config/qBittorrent/qBittorrent.conf and add the following:\n\n```\n[LegalNotice]\nAccepted=true\n```\n\n"
    },
    {
      "title": "Running as any user",
      "level": 4,
      "content": "Another option is to run the qbittorrent-nox@.service in which QBittorrent will run as the user defined.\n\n"
    },
    {
      "title": "Search engine",
      "level": 2,
      "content": "The optional search engine may be enabled through the menu View > Search Engine, which opens the Search tab.\n\n"
    },
    {
      "title": "Search plugins",
      "level": 3,
      "content": "Default trackers can be added/enabled in the Search tab by opening the tracker window with Search plugins... (bottom right) and pressing Check for updates. More unofficial search plugins can be found here.\n\n"
    },
    {
      "title": "Default location",
      "level": 3,
      "content": "By default, qBittorrent will listen on all interfaces on port 8080. Thus it is accessible at http://HOST_IP:8080.\n\n"
    },
    {
      "title": "Default username & password",
      "level": 3,
      "content": "The default username is admin and the default password for versions before 5.0.0 is adminadmin. Versions 5.0.0 and above generate a random password visible in console until manually saved to prevent unauthorized access. See here for more information related to this change.\n\n"
    },
    {
      "title": "Allow access without username & password",
      "level": 3,
      "content": "In a home environment, it is often desirable to allow access to the Web UI without having to input a username and password. This can be configured in the Web UI itself after logging in using the default username and password.\n\nAlternatively, to avoid logging in for the first time, add this section to ~/.config/qBittorrent/qBittorrent.conf:\n\n```\n[Preferences]\nWebUI\\AuthSubnetWhitelist=192.168.1.0/24\nWebUI\\AuthSubnetWhitelistEnabled=true\nWebUI\\UseUPnP=false\n```\n\nThe above configuration items will:\n\n- Allow clients logging in from 192.168.1.x to access the Web UI without having to enter a username and password.\n- Disable UPnP for the Web UI, so that the Web UI will not be accessible from outside the network.\n\nAfter that, reload qbittorrent-nox@username.service.\n\n"
    },
    {
      "title": "nginx",
      "level": 4,
      "content": "Refer to qbittorrent wiki\n\n"
    },
    {
      "title": "Unofficial themes",
      "level": 3,
      "content": "- How to use custom UI themes\n- List of known qBittorrent themes\n\n"
    },
    {
      "title": "qBittorrent stopped downloading (after reopening)",
      "level": 3,
      "content": "Sometimes, the nova component of the search engines does not terminate after closing qbittorrent. Doing so, it binds the corresponding port, if one was set. Thus, one has to manually terminate the nova plugins:\n\n```\n$ killall nova\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- qBittorrent official website\n- qBittorrent wiki on GitHub\n- Wikipedia:qBittorrent\n\n"
    }
  ]
}