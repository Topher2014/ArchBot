{
  "title": "Framework Laptop 16",
  "url": "https://wiki.archlinux.org/title/Framework_Laptop_16",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Table content:\nHardware | PCI/USB ID | Working?\niGPU | 1002:15bf | Yes\nWi-Fi | 14c3:0616 | Yes\nAudio | 1002:1640 | Yes\nKeyboard Module - ANSI | 32ac:0012 | Yes\nKeyboard Module - ISO | 32ac:0018 | Yes\nNumpad Module | 32ac:0014 | Yes\nWebcam | 0bda:5634 | Yes\nFingerprint reader | 27c6:609c | Yes\nBluetooth | 0e8d:e616 | Yes\nAccelerometer |  | Untested\nTPM |  | Yes\nAmbient light sensor |  | Yes\n\nThis article covers the installation and configuration of Arch Linux on a Framework 16 Laptop.\n\nFor a general overview of laptop-related articles and recommendations, see Laptop.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Follow the Arch Install Guide upto and including `Prepare an installation medium`. Plug the install media into any of the expansion ports, and press the power button.\n\nThe first boot after assembly can take up to 30 seconds to perform memory training, but if it takes longer (up to a few minuites), refer to Problems Booting\n\nIf you get the error `EFI USB Device (USB_NAME) boot failed`, refer to the Disabling Secure Boot section\n\nContinue with the Arch Install Guide, then read through the rest of this article to setup framework specific hardware.\n\n"
    },
    {
      "title": "Problems Booting",
      "level": 3,
      "content": "The first boot after assembly can take up to 30 seconds to perform memory training, but if it takes longer (up to a few minutes) the LEDs next to the expansion modules should flash an error code. The first part of the code (Diagnosis) can be decoded here, and the second part (POST Code) can be decoded here\n\n"
    },
    {
      "title": "Disabling Secure Boot",
      "level": 3,
      "content": "If you get the error `EFI USB Device (USB_NAME) boot failed`, you may need to disable secure boot.\n\n1. Unplug the install media\n1. Press the power button to power off\n1. After a few seconds press it again to power back on\n1. Press `enter` to clear the error\n1. Select `Administer Secure Boot`\n1. Change `Enforce Secure Boot` to `Disabled`\n1. Re-insert your install media\n1. Press `F10` (You may have to press `fn + F10`) then `enter` to save changes\n\n"
    },
    {
      "title": "Hardware",
      "level": 2,
      "content": "Framework is intended to be a configurable and upgradeable laptop. The lists below is not intended to be an exhaustive list of all the hardware sold with the framework, but rather a list of tested components.\n\n"
    },
    {
      "title": "Wi-Fi",
      "level": 3,
      "content": "You will be limited to 802.11n (Wi-Fi 4) and 2.4GHz bands if you do not configure the regulatory domain.\n\nThere have been reports of Wi-Fi stability and throughput improvements when using iwd on the 13 inch AMD model, either directly or as the NetworkManager backend. It is unclear if these issues persist on the 16 inch model, which uses the exact same Wi-Fi card.\n\n"
    },
    {
      "title": "Display",
      "level": 3,
      "content": "The Framework Laptop 16 has an IPS display manufactured by BOE (BOE NE160QDM-NZ6) with a native resolution of 2560 x 1600, 165Hz variable refresh rate and FreeSync support. The panel is uncalibrated from factory, giving a suboptimal default sRGB coverage. It is thus recommended to apply an ICC profile to have better color reproduction. [1]\n\nFramework 16 ICC color profile: https://www.notebookcheck.net/uploads/tx_nbc2/BOE_CQ_______NE160QDM_NZ6.icm\n\n"
    },
    {
      "title": "Ambient light sensor",
      "level": 2,
      "content": "Should work out of the box, you can check by reading /sys/bus/iio/devices/iio\\:device0/in_illuminance_raw.\n\nOn GNOME, you need to install iio-sensor-proxy and restart the session (or reboot, just in case). Then run monitor-sensor to check if it is working.\n\nIf you do not use GNOME but still want automatic brightness control, check out illuminanced.\n\n"
    },
    {
      "title": "Linux audio compatibility",
      "level": 3,
      "content": "The speakers do not sound very well out of the box. To improve that just enable the linux audio compatibility in the bios.\n\n"
    },
    {
      "title": "Easy Effects",
      "level": 3,
      "content": "To further improve the sound you may use Easy Effects PipeWire#EasyEffects with custom profiles.\n\nFirst install easyeffects and the needed dependencies calf and lsp-plugins. Then just follow the installation instructions on the GitHub page.\n\nThere are some good profiles available:\n\n- Framework 16 profile by amesb just put it in\n\n```\n~/.config/easyeffects/output/amesb fw16 EE profile.json\n```\n\n- Framework 13 profile by cab404 is made for Framework 13 but also works quite well on the Framework 16. Just follow the instructions in the repository.\n\n"
    },
    {
      "title": "Low volume on Audio Expansion Card",
      "level": 3,
      "content": "The volume of the sound of devices attached to the Audio Expansion Card can be very low. This is particularly noticeable with headphones. In this case you might want to try increasing the volume in alsamixer (available in the alsa-utils package).\n\nOpen alsamixer, press F6 to select a sound card and select the one labeled Audio Expansion Card. You should now see a single slider labeled Speaker Volume, increase it to 100%.\n\n"
    },
    {
      "title": "Sensors",
      "level": 2,
      "content": "Framework has a fork of lm-sensors on their GitHub with config files added. Copy and paste config/Framework/Framework16-AMD.conf from this branch into a new file in /etc/sensors.d/ to get sensor labels. This seems to be work in progress so it is probably worth checking back up on it occasionally and see if any updates have been pushed.\n\n"
    },
    {
      "title": "Fan control",
      "level": 2,
      "content": "As of 2024-03-17 the software fw-fanctrl can work with the framework 13 and 16 AMD versions. Just install fw-fanctrl-gitAUR and set your desired config in /etc/fw-fanctrl/config.json.\n\n"
    },
    {
      "title": "Disable while typing",
      "level": 3,
      "content": "Note: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nTo be able to disable the touchpad while typing you can add a quirk:\n\n```\n/usr/share/libinput/50-framework.quirks\n```\n\n```\n[Framework Laptop 16 Keyboard Module]\nMatchName=Framework Laptop 16 Keyboard Module*\nMatchUdevType=keyboard\nMatchDMIModalias=dmi:*svnFramework:pnLaptop16*\nAttrKeyboardIntegration=internal\n```\n\nThen enable the respective setting in your desktop environment and reboot.\n\n"
    },
    {
      "title": "Prevent waking up in backpack",
      "level": 2,
      "content": "Due to a firmware misconfiguration, the Framework16 will wake up when its screen flexes onto the keyboard while carried in a backpack.\n\nYou can disable keyboard and numpad module from waking your device using udev rules, but note that they will stay ON along with their backlight at all times unless you manually turn LED off. Also, this method won't disable the touchpad.\n\n1. Add wakeup rule\n\n```\n/etc/udev/rules.d/90-disable-keyboard-wake.rules\n```\n\n```\n# Framework Laptop 16 Keyboard Module - ANSI\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"32ac\", ATTRS{idProduct}==\"0012\", ATTR{power/wakeup}=\"disabled\"\n\n# Framework Laptop 16 RGB Macropad\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"32ac\", ATTRS{idProduct}==\"0013\", ATTR{power/wakeup}=\"disabled\"\n\n# Framework Laptop 16 Numpad Module\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"32ac\", ATTRS{idProduct}==\"0014\", ATTR{power/wakeup}=\"disabled\"\n\n# Framework Laptop 16 Keyboard Module - ISO\nACTION==\"add\", SUBSYSTEM==\"usb\", ATTRS{idVendor}==\"32ac\", ATTRS{idProduct}==\"0018\", ATTR{power/wakeup}=\"disabled\"\n```\n\n2. Load the new rules\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- ArchWiki vendor page\n- Framework website\n- Framework community thread for Arch Linux\n- Framework community thread for battery life tuning\n- Framework tools and rust libraries for talking to EC and other parts of the system. Get/set keyboard brightness, fingerprint led brightness, battery charge limits, information dumping from battery, usb ports, intrusion switches, privacy switches, output from EC console, firmware info.\n- Framework fork of QMK used as firmware in the keyboard and number pad.\n- Framework input module firmware and software.\n- Git with electrical and mechanical designs for expansion cards.\n- Git with electrical, mechanical, reference designs for gpu expansion bay.\n- Git with electrical, mechanical and schematics for the main board.\n\n"
    }
  ]
}