{
  "title": "Procfs",
  "url": "https://wiki.archlinux.org/title/Procfs",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThe proc file system, also called procfs, is a pseudo file system that is usually mounted at /proc and contains information about the running system:\n\n- Processes, the most prominent use.\n- Kernel information and parameters.\n- System metrics, such as CPU usage.\n\n"
    },
    {
      "title": "Kernel & system information",
      "level": 3,
      "content": "There are many files under /proc which provide a lot of information about the system as well as the kernel. There are too many to cover them all here, but some of them are listed below with brief information about what they are.\n\n- /proc/cpuinfo - informations about CPU\n- /proc/meminfo - information about the physical memory\n- /proc/vmstat - information about the virtual memory\n- /proc/mounts - information about the mounts\n- /proc/filesystems - information about filesystems that have been compiled into the kernel and whose kernel modules are currently loaded\n- /proc/uptime - current system uptime\n- /proc/cmdline - kernel command line\n\n"
    },
    {
      "title": "Processes",
      "level": 3,
      "content": "Inside /proc/pid is stored information about every process currently running. Below is an example showing some of the PIDs currently running:\n\n```\n$ ls -l /proc\n```\n\n```\ntotal 0\ndr-xr-xr-x  9 root    root                  0 Sep  8 18:17 1\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 10\ndr-xr-xr-x  9 daemonx daemonx               0 Sep  9 03:02 1057\ndr-xr-xr-x  9 daemonx daemonx               0 Sep  8 18:18 1077\ndr-xr-xr-x  9 daemonx daemonx               0 Sep  9 03:02 1087\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 11\ndr-xr-xr-x  9 daemonx daemonx               0 Sep  9 03:02 1103\ndr-xr-xr-x  9 daemonx daemonx               0 Sep  9 03:02 1107\ndr-xr-xr-x  9 daemonx daemonx               0 Sep  9 03:02 1159\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 12\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 124\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 125\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 127\ndr-xr-xr-x  9 root    root                  0 Sep  9 03:02 128\n...\n```\n\nLets take for example pid 1057 and see what is inside:\n\n```\n$ ls -l /proc/1057\n```\n\n```\ntotal 0\ndr-xr-xr-x 2 daemonx daemonx 0 Sep  9 03:12 attr\n-rw-r--r-- 1 daemonx daemonx 0 Sep  9 03:12 autogroup\n-r-------- 1 daemonx daemonx 0 Sep  9 03:12 auxv\n-r--r--r-- 1 daemonx daemonx 0 Sep  9 03:12 cgroup\n--w------- 1 daemonx daemonx 0 Sep  9 03:12 clear_refs\n-r--r--r-- 1 daemonx daemonx 0 Sep  9 03:12 cmdline\n-rw-r--r-- 1 daemonx daemonx 0 Sep  9 03:12 comm\n-rw-r--r-- 1 daemonx daemonx 0 Sep  9 03:12 coredump_filter\n-r--r--r-- 1 daemonx daemonx 0 Sep  9 03:12 cpuset\nlrwxrwxrwx 1 daemonx daemonx 0 Sep  9 03:12 cwd -> /home/daemonx\n-r-------- 1 daemonx daemonx 0 Sep  9 03:12 environ\nlrwxrwxrwx 1 daemonx daemonx 0 Sep  9 03:12 exe -> /usr/lib/gvfsd-metadata\ndr-x------ 2 daemonx daemonx 0 Sep  9 03:12 fd\ndr-x------ 2 daemonx daemonx 0 Sep  9 03:12 fdinfo\n-rw-r--r-- 1 daemonx daemonx 0 Sep  9 03:12 gid_map\n-r-------- 1 daemonx daemonx 0 Sep  9 03:12 io\n-r--r--r-- 1 daemonx daemonx 0 Sep  9 03:12 latency\n-r--r--r-- 1 daemonx daemonx 0 Sep  9 03:12 limits\n-rw-r--r-- 1 daemonx daemonx 0 Sep  9 03:12 loginuid\ndr-x------ 2 daemonx daemonx 0 Sep  9 03:12 map_files\n-r--r--r-- 1 daemonx daemonx 0 Sep  9 03:12 maps\n-rw------- 1 daemonx daemonx 0 Sep  9 03:12 mem\n...\n```\n\nSome of the fields:\n\n- cmdline - arguments used to start program.\n- cwd - current working directory for the process.\n- environ - environment variables inside the process (zero-delimited).\n- fd/ - directory containing open file descriptors for the process.\n- exe - symbolic link to process executable.\n- maps - memory mapping of the process.\n- mem - virtual memory of the process.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "You can interact with /proc contents as with regular files.\n\nTo read from a file:\n\n```\n$ cat /proc/cmdline\n```\n\nTo write to a file:\n\n```\n# echo 1 > /proc/sys/kernel/sysrq\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- proc(5)\n- Kernel documentation of procfs\n- Wikipedia:Procfs\n\n"
    }
  ]
}