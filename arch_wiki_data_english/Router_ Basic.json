{
  "title": "Router: Basic",
  "url": "https://wiki.archlinux.org/title/Router:_Basic",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This article is a tutorial for turning a computer into an internet gateway/router. To strengthen its security it should not run any services available to the outside world. Towards the LAN, run only gateway specific services; especially do not run httpd, ftpd, samba, nfsd, etc. as those belong on a server in the LAN since they introduce security risks.\n\nThis article does not attempt to show how to set up a shared connection between two machines using cross-over cables. For a simple internet sharing solution, see Internet sharing.\n\nNote: **intern0** \n\n"
    },
    {
      "title": "Hardware requirements",
      "level": 2,
      "content": "- See Partitioning#Partition scheme for advice on the minimum required disk space.\n- At least two physical network interfaces: a gateway connects two networks with each other (actually a router can be made using a single physical interface that underlays two VLAN interfaces and is connected to a VLAN-aware switch, so-called router-on-a-stick configuration, but it is not covered in this article). You will need to be able to connect those networks to the same physical computer. One interface must connect to the external network, while the other connects to the internal network.\n- A hub, switch or UTP cable: You need a way to connect the other computers to the gateway\n\n"
    },
    {
      "title": "Persistent interface naming",
      "level": 3,
      "content": "systemd automatically chooses unique interface names for all your interfaces. These are persistent and will not change when you reboot. However you might want to rename your interfaces e.g. in order to highlight their different networks to which they connect. Throughout the following sections of this guide, the convention stated below is used:\n\n- intern0: the network card connected to the LAN. On an actual computer it will probably have the name enp2s0, enp1s1, etc.\n- extern0: the network card connected to the external network (or WAN). It will probably have the name enp2s0, enp1s1, etc.\n\nYou may change the assigned names of your devices by following Network configuration#Change interface name. Due to the example-rich nature of this article, you might want to choose the names above.\n\n"
    },
    {
      "title": "With netctl",
      "level": 4,
      "content": "Now you will need to configure the network interfaces. One way to do so, is using netctl profiles. You will need to create two profiles.\n\nNote: **do not need** \n\n```\n/etc/netctl/extern0-profile\n```\n\n```\nDescription='Public Interface.'\nInterface=extern0\nConnection=ethernet\nIP=dhcp\n```\n\n```\n/etc/netctl/intern0-profile\n```\n\n```\nDescription='Private Interface'\nInterface=intern0\nConnection=ethernet\nIP=static\nAddress=('10.0.0.1/24')\n```\n\nNext, we set up the interfaces with netctl:\n\n```\n# netctl enable extern0-profile\n# netctl enable intern0-profile\n```\n\n"
    },
    {
      "title": "With systemd-networkd",
      "level": 4,
      "content": "A straight-forward and simple way to configure network interfaces is via systemd-networkd.\n\n- Apply a DHCP client configuration for the extern0 interface.\n- Apply a static IP configuration for the intern0 interface.\n\nSee systemd-networkd#Configuration files for configuration details and an overview of the available options. Run networkctl reload to apply the configuration changes.\n\n"
    },
    {
      "title": "ADSL connection/PPPoE",
      "level": 3,
      "content": "Using ppp, we can connect an ADSL modem to the extern0 interface of the firewall and have Arch manage the connection. Make sure to put the modem in bridged mode though (either half-bridge or RFC1483), otherwise, the modem will act as a router too. Install the ppp package.\n\nIt should be noted that if you use only PPPoE to connect to the internet (i.e. you do not have another WAN port, except for the one that connects to your modem) you do not need to set up the extern0-profile as the external pseudo-interface will be ppp0.\n\n"
    },
    {
      "title": "PPPoE configuration",
      "level": 4,
      "content": "You can use netctl to setup the PPPoE connection. To get started, do\n\n```\n# cp /etc/netctl/examples/pppoe /etc/netctl/\n```\n\nand start editing. For the interface configuration, choose the interface that connects to the modem. If you only connect to the internet through PPPoE, this will probably be extern0. Fill in the rest of the fields with your ISP information. See the PPPoE section in the netctl.profile(5) man page for more information on the fields.\n\n"
    },
    {
      "title": "DNS and DHCP",
      "level": 2,
      "content": "The following comparison table lists the available DHCP servers and their features:\n\nTable content:\nServer | DHCPv4 | DHCPv6 | IPv6 Router Advertisement | GUI | Interfaces | Storage backend(s) | Note\ndhcpd | Yes | Yes | No | Glass-ISC-DHCP | ? | File | Unmaintained since 2022. Superseded by Kea.\ndnsmasq | Yes | Yes | Yes | No | D-Bus | File | Also DNS, PXE and TFTP.\nKea | Yes | Yes | No | Stork | REST, RADIUS, NETCONF | File, MySQL, PostgreSQL, Cassandra | Also DNS. Supersedes dhcpd.\npi-hole-ftlAUR | Yes | Yes | Yes | Pi-hole#Web interface | ? | SQLite | Component of the Pi-hole project. Fork of dnsmasq.\nsystemd-networkd | Yes | No | Yes | No | D-Bus | File | Installed with systemd.\n\nA comparison of available DNS servers can be found in Domain name resolution#DNS servers.\n\n"
    },
    {
      "title": "dnsmasq",
      "level": 3,
      "content": "To use dnsmasq as DNS server, and optionally DHCP server, for the LAN, install the dnsmasq package.\n\nThe default configuration already enables its DNS server, see Dnsmasq#Configuration for options.\n\nFor this router example, dnsmasq can to be configured to be a DHCP server with a configuration similar to the following:\n\n```\n/etc/dnsmasq.conf\n```\n\n```\ninterface=intern0 # make dnsmasq listen for requests only on intern0 (our LAN)\n#no-dhcp-interface=intern0  # optionally disable the DHCP functionality of dnsmasq and use systemd-networkd instead\nexpand-hosts      # add a domain to simple hostnames in /etc/hosts\ndomain=foo.bar    # allow fully qualified domain names for DHCP hosts (needed when\n                  # \"expand-hosts\" is used)\ndhcp-range=10.0.0.2,10.0.0.255,255.255.255.0,1h # defines a DHCP-range for the LAN:\n                  # from 10.0.0.2 to .255 with a subnet mask of 255.255.255.0 and a\n                  # DHCP lease of 1 hour (change to your own preferences)\n```\n\nSee Dnsmasq#DHCP server for other options. For example, you can also add \"static\" DHCP leases, i.e. assign an IP-address to the MAC-address of a computer on the LAN. This way, whenever the computer requests a new lease, it will get the same IP. That is very useful for network servers with a DNS record. You can also deny certain MACs from obtaining an IP.\n\nNow start and enable the dnsmasq.service.\n\n"
    },
    {
      "title": "systemd-networkd",
      "level": 3,
      "content": "To use systemd-networkd instead of dnsmasq as DHCP server, add a [DHCPServer] section to the configuration file for the intern0 interface. See systemd-networkd#[DHCPServer] for the available options.\n\nTo make systemd-resolved answer DNS requests on the routers interfaces, their addresses have to be added as described in systemd-resolved#Additional listening interfaces.\n\n"
    },
    {
      "title": "Connection sharing",
      "level": 2,
      "content": "Time to tie the two network interfaces together.\n\n"
    },
    {
      "title": "Manual",
      "level": 3,
      "content": "First of all, we need to allow packets to hop from one network interface to the other. For this one needs to have packet forwarding enabled in kernel via sysctl(8). See Internet sharing#Enable packet forwarding for details.\n\nAssuming net.**forwarding is set correctly (i.e. is 1), packets still need to be properly sent and received. Hence, it is necessary to translate the IP addresses between the outward facing network and the subnet used locally. The technique is called masquerading . We also need two forwarding rules to keep connections going and enable LAN to WAN forwarding. For this task, we are going to use iptables.\n\nRefer to the section Internet sharing#Enable NAT for how to masquerade the extern0 interface and packages from intern0 to extern0. Afterwards persist the newly added rules via iptables-save -f /etc/iptables/iptables.rules, see iptables#Configuration and usage for details.\n\nStart and enable iptables.service. The router should now be fully functional and route your traffic. Since it is facing the public Internet, it makes sense to additionally secure it using a Simple stateful firewall.\n\n"
    },
    {
      "title": "With systemd-networkd",
      "level": 3,
      "content": "Amend or create the previously discussed network configuration for intern0 to include the IPMasquerade=ipv4 option in the [Network] section. This configuration will implicitly enable packet forwarding on all interfaces, see systemd.network(5). See systemd-networkd#[DHCPServer] for an example configuration.\n\n"
    },
    {
      "title": "Connection sharing with shorewall",
      "level": 3,
      "content": "See Shorewall for a detailed configuration guide.\n\n"
    },
    {
      "title": "IPv6 tips",
      "level": 2,
      "content": "Note: **This article or section is a candidate for merging with IPv6.** This article or section is a candidate for merging with IPv6.\n\nThis article or section is a candidate for merging with IPv6.\n\nUseful reading: IPv6 and the wikipedia:IPv6.\n\n"
    },
    {
      "title": "Unique Local Addresses",
      "level": 3,
      "content": "You can use your router in IPv6 mode even if you do not have an IPv6 address from your ISP. Unless you disable IPv6, all interfaces should have been assigned a unique fe80::/10 address.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nFor internal networking the block fc00::/7 has been reserved. These addresses are guaranteed to be unique and non-routable from the open Internet. Addresses that belong to the fc00::/7 block are called Unique Local Addresses. To get started generate a ULA /64 block[dead link 2025-03-15 ⓘ] to use in your network. For this example we will use fd00:aaaa:bbbb:cccc::/64. Firstly, we must assign a static IPv6 on the internal interface. Modify the intern0-profile we created above to include the following line:\n\n```\nAddress6=('fd00:aaaa:bbbb:cccc::1/64')\n```\n\nThis will add the ULA to the internal interface. As far as the router goes, this is all you need to configure.\n\n"
    },
    {
      "title": "Global Unicast Addresses",
      "level": 3,
      "content": "If your ISP or WAN network can access the IPv6 Internet, you can additionally assign global link addresses to your router and propagate them through SLAAC to your internal network. The global unicast prefix is usually either static or provided through prefix delegation.\n\n"
    },
    {
      "title": "Static IPv6 prefix",
      "level": 4,
      "content": "If your ISP has provided you with a static prefix, then edit /etc/netctl/extern0-profile and simply add the IPv6 and the IPv6 prefix (usually /64) you have been provided\n\n```\nAddress6=('2002:1:2:3:4:5:6:7/64')\n```\n\nYou can use this in addition to the ULA address described above.\n\n"
    },
    {
      "title": "Acquiring IPv6 prefix via DHCPv6-PD",
      "level": 4,
      "content": "If your ISP handles IPv6 via prefix delegation, then you can follow the instructions in the IPv6#Prefix delegation (DHCPv6-PD) on how to properly configure your router. Following the conventions of this article, the WAN interface is extern0 (or ppp0 if you are connecting through PPPoE) and the LAN interface is intern0.\n\n"
    },
    {
      "title": "Router Advertisement and Stateless Autoconfiguration (SLAAC)",
      "level": 3,
      "content": "To properly hand out IPv6s to the network clients, we will need to use an advertising daemon. Follow the details of the main IPv6 article on how to set up radvd. According to this guide's convention, the LAN-facing interface is intern0. You can either advertise all prefixes or choose which prefixes will be assigned to the local network.\n\n"
    },
    {
      "title": "UPnP",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe above configuration of shorewall does not include UPnP support. Use of UPnP is discouraged as it may make the gateway vulnerable to attacks from within the LAN. However, some applications require this to function correctly.\n\nTo enable UPnP on your router, you need to install an UPnP Internet Gateway Device (IGD) protocol daemon. To get it, install the miniupnpd package.\n\nRead the Shorewall guide on UPnP for more information.\n\n"
    },
    {
      "title": "Remote administration",
      "level": 3,
      "content": "OpenSSH can be used to administer your router remotely. This is useful for running it in headless mode (no monitor or input devices).\n\n"
    },
    {
      "title": "Caching web proxy",
      "level": 3,
      "content": "See Squid for the setup of a web proxy to speed up browsing and/or adding an extra layer of security.\n\n"
    },
    {
      "title": "Time server",
      "level": 3,
      "content": "To use the router as a time server, see System time#Time synchronization for available Network Time Protocol (NTP) server implementations.\n\nThen, configure shorewall or iptables to allow NTP traffic in and out.\n\n"
    },
    {
      "title": "Content filtering",
      "level": 3,
      "content": "Install and configure Privoxy if you need a content filtering solution.\n\n"
    },
    {
      "title": "Traffic shaping",
      "level": 3,
      "content": "Traffic shaping is very useful, especially when you are not the only one on the LAN. The idea is to assign a priority to different types of traffic. Interactive traffic (ssh, online gaming) probably needs the highest priority, while P2P traffic can do with the lowest. Then there is everything in between.\n\n"
    },
    {
      "title": "Traffic shaping with shorewall",
      "level": 4,
      "content": "See Shorewall#Traffic shaping.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Simple stateful firewall\n- Internet sharing\n- Router Security\n\n"
    }
  ]
}