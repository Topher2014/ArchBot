{
  "title": "Duplicity",
  "url": "https://wiki.archlinux.org/title/Duplicity",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- GnuPG\n- OpenPGP\n- Synchronization and backup programs\n\nDuplicity is a network backup program.\n\nIt can save snapshots of directories and files to a remote OpenPGP encrypted tar file, which acts as a backup repository. Connecting with the remote backup repository can take place through any of the following protocols: rsync, ftp, HSI, WebDAV, Tahoe-LAFS, or Amazon S3.\n\nBackups are granularly incremental, meaning that only changes in files (since the last snapshot) are stored.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the duplicity package.\n\n"
    },
    {
      "title": "Front-ends",
      "level": 3,
      "content": "- Duply — A shell front end for duplicity. It manages backup job settings in profiles and allows to batch execute commands.\n\n- Déjà Dup Backups — Simple backup tool, that hides the complexity of backing up the Right Way and uses duplicity as the backend.\n\n"
    },
    {
      "title": "Doing backups",
      "level": 3,
      "content": "To backup the local folder /home/me to the remote location /usr/backup on host other.host through the scp/ssh protocol, use:\n\n```\n$ duplicity /home/me scp://uid@other.host//usr/backup\n```\n\nThe first time this command is run, it will create a full backup. Running the exact same command again causes an incremental backup to the existing backup repository.\n\nAdditional command-line options options allow to:\n\n- include or exclude specific files and directories from the backup (using shell patterns or regular expressions)\n- fine-tune encryption and signing of the backups\n\n"
    },
    {
      "title": "Restoring files from backup",
      "level": 3,
      "content": "To restore the local folder /home/me to the state of the last snapshot saved in the remote repository /usr/backup on host other.host, do:\n\n```\n$ duplicity scp://uid@other.host//usr/backup /home/me\n```\n\nNote the reversed ordering of the arguments compared to the backup command above. The URL argument is always treated as the backup repository, and the local path argument as the directory to sync with the backup. (A local backup repository would need to be explicitly specified using the file:// protocol prefix!)\n\nAdditional command-line option exist to allow:\n\n- restore a specific file instead of the whole repository\n- restore file(s) to the state they had on a specific date, rather than to the most recent available snapshot\n\n"
    },
    {
      "title": "Repository inspection and house-keeping",
      "level": 3,
      "content": "Some additional command-line options exist for comparing the repository state to the state of the local files, and to delete old snapshots so as to only keep a fixed amount of snapshots or only ones that are newer than a given date.\n\nSee duplicity(1) for details.\n\n"
    },
    {
      "title": "Example backup script",
      "level": 3,
      "content": "```\n#!/bin/sh\n## Remote backup script. Requires duplicity and gpg-agent with the keys and passphrases loaded as root.\n## Uses separate encryption and signing keys\n## Usage:  'backup_remote.sh'\n\nenc_key=44D79E41\nsign_key=F5C978E3\nsrc=\"/mnt/backup/\"\ndest=\"scp://destination.com//backups/homeserver\"\n\n# Keychain is used to source the ssh-agent keys when running from a cron job\ntype -P keychain &>/dev/null || { echo \"I require keychain but it's not installed.  Aborting.\" >&2; exit 1; }\neval `keychain --eval web_rsa` || exit 1\n## Note: can't use keychain for gpg-agent because it doesn't currently (2.7.1) read in all the keys correctly.\n## Gpg will ask for a passphrase twice for each key...once for encryption/decryption and once for signing.\n## This makes unattended backups impossible, especially when trying to resume an interrupted backup.\nif [ -f \"${HOME}/.gnupg/gpg-agent-info\" ]; then\n      . \"${HOME}/.gnupg/gpg-agent-info\"\n      export GPG_AGENT_INFO\nfi\n\nduplicity --use-agent \\\n         --verbosity notice \\\n         --encrypt-key \"$enc_key\" \\\n         --sign-key \"$sign_key\" \\\n         --full-if-older-than 60D \\\n         --num-retries 3 \\\n         --asynchronous-upload \\\n         --volsize 100 \\\n         --archive-dir /root/.cache/duplicity \\\n         --log-file /var/log/duplicity.log \\\n         --exclude /mnt/backup/fsarchiver \\\n         --exclude '**rdiff-backup-data' \\\n         \"$src\" \"$dest\"\n```\n\nIf you want to start gpg-agent on root login and then cache the passphrases for gpg-agent at your convenience, you can add these functions to your /root/.bashrc:\n\n```\nfunction gpg_start {\n       gnupginf=\"${HOME}/.gnupg/gpg-agent-info\"\n       if pgrep -u \"${USER}\" gpg-agent >/dev/null 2>&1; then\n           eval \"$(cat $gnupginf)\"\n           eval \"$(cut -d= -f1 < $gnupginf | xargs echo export)\"\n       else\n           eval \"$(gpg-agent -s --daemon --write-env-file $gnupginf)\"\n       fi\n}\nfunction keys {\n       touch test-gpg.txt\n       touch test-gpg.txt1\n       gpg -r 'Duplicity Encryption Key' -e test-gpg.txt\n       gpg -r 'Duplicity Signature Key' -e test-gpg.txt1\n       gpg -u <signing key> --detach-sign test-gpg.txt\n       gpg -u <encryption key> --detach-sign test-gpg.txt1\n       gpg -d test-gpg.txt.gpg\n       gpg -d test-gpg.txt1.gpg\n       rm test-gpg.txt*\n}\ngpg_start\n```\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "If you get gpg errors revolving around “inappropriate ioctl for device” it most likely has to do with changes to the gpg agent behavior from gpg version 2.1 up. See this thread for more information. Generally speaking one needs to explicitly allow programs to provide the passphrase to gpg agent instead of prompting the user.\n\nThe steps to remediate this issue are outlined in GnuPG#Unattended passphrase.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Duplicity home page\n- Wikipedia:Duplicity (software)\n- Déjà Dup home page\n\n"
    }
  ]
}