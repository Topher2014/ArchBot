{
  "title": "StumpWM",
  "url": "https://wiki.archlinux.org/title/StumpWM",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Window manager\n\nStumpWM is a tiling, keyboard driven X11 window manager written entirely in Common Lisp.\n\nThe successor to the cult classic Ratpoison, StumpWM adds all the flexibility and hackability of Common Lisp, allowing the user to make modifications to the source of the window manager even while it is running. It is also known as \"the emacs of WMs.\"\n\nFrom StumpWM's homepage:\n\n- Hack the good hack\n- Debug your good hack\n- Customize your window manager\n\nWant to see it in action? A StumpWM user created a video.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "A runnable StumpWM installation consists of 3 parts:\n\n- Common Lisp REPL\n- StumpWM Lisp package and its dependencies\n- Executable file as entry point\n\n"
    },
    {
      "title": "Install via Package Manager",
      "level": 3,
      "content": "Install stumpwm or stumpwm-gitAUR.\n\nIf you are installing without an AUR helper, you should install these packages in the following order:\n\n- sbcl\n- cl-alexandria-gitAUR\n- clx-gitAUR\n- cl-ppcre\n- stumpwm or stumpwm-gitAUR\n\nAfter installing put exec stumpwm in your ~/.xinitrc and run startx. To quit, with the default configuration press C-t ; then type quit and press enter.\n\nBoth packages will install an xsession entry in /usr/share/xsessions so if you use a display manager that checks that directory, you should be good to go.\n\nFor a list of commonly used key-bindings, press C-t ?.\n\n"
    },
    {
      "title": "Install via Roswell",
      "level": 3,
      "content": "It is highly recommended to use roswell to manage your Lisp REPL.\n\nThis method makes it easy to upgrade StumpWM together with other Lisp packages using ql:update-all-dists.\n\nto start REPL in roswell run ros run in terminal, to install stumpwm run (ql:quickload :stumpwm) inside REPL\n\nin order to launch it through login manager or ~/.xinitrc, an executable file must be created. create new project using roswell :\n\nros init stumpwm\n\nCreate stumpwm.ros:\n\n```\nstumpwm.ros\n```\n\n```\n#!/bin/sh\n#|-*- mode:lisp -*-|#\n#|\nexec ros -Q -- $0 \"$@\"\n|#\n\n(progn \n  #+quicklisp (ql:quickload '(stumpwm) :silent t))\n\n(defpackage :ros.script.stumpwm.3749863733\n  (:use :cl))\n(in-package :ros.script.stumpwm.3749863733)\n\n(defun main (&rest argv)\n  (declare (ignorable argv))\n  (stumpwm:stumpwm))\n```\n\nThen place stumpwm.ros file to wherever you like and make it the entry point of this awesome WM.\n\nTo add stumpwm to the Login Manager, create stumpwm.desktop in /usr/share/xsessions/:\n\n```\nstumpwm.desktop\n```\n\n```\n[Desktop Entry]\nEncoding=UTF-8\nName=StumpWM\nComment=Login using StumpWM\nExec=/path/to/stumpwm.ros\nType=XSession\n```\n\nor you can just start using ~/.xinitrc\n\n```\nexec /path/to/stumpwm.ros\n```\n\n"
    },
    {
      "title": "Documentation and support",
      "level": 2,
      "content": "There is a TeXInfo manual included in the AUR packages, the source, and online.\n\nThere is also a wiki, an IRC channel #stumpwm on Libera Chat, and a mailing list. For more information, see the project's website.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "StumpWM stores its configuration in ~/.stumpwmrc or you can use ~/.config/stumpwm/config\n\n"
    },
    {
      "title": "Change cursor from default X shape",
      "level": 3,
      "content": "By default StumpWM leaves the cursor as XOrg's standard X shape with the hotspot in the centre. You can have the more usual left-facing pointer by running\n\n```\n$ xsetroot -cursor_name left_ptr\n```\n\nYou can also put this in your configuration file\n\n```\n(run-shell-command \"xsetroot -cursor_name left_ptr\")\n```\n\n"
    },
    {
      "title": "Change window focus on mouse click",
      "level": 3,
      "content": "Clicking on another window will send the click event to that window, but it will not get focus meaning any keyboard input will go to whichever window has focus. The following line makes focus change to any window that is clicked on.\n\n```\n(setf *mouse-focus-policy* :click)\n```\n\n"
    },
    {
      "title": "Enable modeline",
      "level": 3,
      "content": "This sets up a basic modeline with the group name followed by window names on the left and the date and time on the right.\n\nFirst set the window name format and overall modeline format\n\n```\n(setf *window-format* \"%m%n%s%c\")\n(setf *screen-mode-line-format* (list \"[^B%n^b] %W^>%d\"))\n```\n\nThe date format is constructed using the same format specifiers as strftime(3) e.g.\n\n```\n(setf *time-modeline-string* \"%a %b %e %k:%M\")\n```\n\nOptionally change how often the modeline updates on its own, in seconds (it also updates whenever you do something with StumpWM like switch window).\n\n```\n(setf *mode-line-timeout* 2)\n```\n\nFinally enable the modeline (this must come after you have set the options you wanted)\n\n```\n(enable-mode-line (current-screen) (current-head) t)\n```\n\n"
    },
    {
      "title": "Set font for messages and modeline",
      "level": 3,
      "content": "StumpWM uses the default XOrg font which is probably small and pixelated. You can set font by calling, for example,\n\n```\n(set-font \"-xos4-terminus-medium-r-normal-*-20-*-*-*-*-*-*-*\")\n```\n\nwhere the string is generated by xorg-xfontsel.\n\nAnother way is to use the ttf-fonts module to set a custom font. Note that the performance in the result is not as great, and that it requires another lisp module clx-truetype, which is not in the quicklisp distribution any more. Get a copy of it from a backed up repository, put it under your ~/quicklisp/local-projects/, and run\n\n```\n(ql:quickload \"clx-truetype\")\n(load-module \"ttf-fonts\")\n(xft:cache-fonts)Â ;; Tell clx-truetype about the fonts you have installed. You really only need to do this once, but putting it here means you will not forget in the future.\n(set-font (make-instance 'xft:font :family \"DejaVu Sans Mono\" :subfamily \"Book\" :size 11))\n```\n\n- You need to install the quicklisp package for it to work.\n- You need to install the ttf-fonts modules from stumpwm-contrib (see #Tweaking).\n\n"
    },
    {
      "title": "Tweaking",
      "level": 2,
      "content": "See the wiki for a variety of useful tweaks for your .stumpwmrc.\n\nAdditionally, the stumpwm-contrib repository contains many useful utilities, and can be installed via stumpwm-contrib-gitAUR. For example, if you are an emacs user, you will find an emacs minor mode for editing StumpWM files (and interfacing with the program stumpish, but more on that below).\n\nstumpish is the STUMP window manager Interactive SHell. It is a program that allows the user to interact with StumpWM while it is running, from the comfort of a terminal (or using the emacs mode). It is installed with StumpWM in /usr/bin/.\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "- If you have problems configuring multiple monitors, maybe you need to install 'xorg-xdpyinfo' package.\n\n- If you cannot start stumpwm and get\n\n```\ndebugger invoked on a SB-INT:SIMPLE-PARSE-ERROR in thread\n       #:\n       no non-whitespace characters in string \"\".\n       Type HELP for debugger help, or (SB-EXT:QUIT) to exit from SBCL.\n       (no restarts: If you did not do this on purpose, please report it as a bug.)\n       (PARSE-INTEGER \"\" :START 0 :END NIL :RADIX 10 :JUNK-ALLOWED NIL)\n```\n\nin the REPL, it can be solved by deleting ~/.Xauthority. See this issue on github\n\n- If you have an issue with the SBCL_HOME being set to NIL, you may need to set it manually\n\nNote: find / | grep sbcl.core\n\nfind / | grep sbcl.core\n\n```\n$ export SBCL_HOME=/usr/lib/sbcl/\n```\n\nThen you may reinstall stumpwm\n\n- If you cannot use the mousewheel to scroll in some programs, try adding\n\n```\n(setf (getenv \"GDK_CORE_DEVICE_EVENTS\") \"1\")\n```\n\nto your .stumpwmrc (source: [1])\n\n- Quicklisp will not work in StumpWM if you installed it after installing StumpWM - in that case uninstall and reinstall StumpWM\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- StumpWM Web Site\n- StumpWM Community Wiki\n- Awesome StumpWM: A list of high-quality docs/modules/configs for StumpWM\n\n"
    }
  ]
}