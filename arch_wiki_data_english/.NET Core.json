{
  "title": ".NET Core",
  "url": "https://wiki.archlinux.org/title/.NET_Core",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": ".NET (previously named .NET Core) is a FOSS software framework from Microsoft for C#, Visual Basic, and F#. It is designed to be cross-platform, modular and apt for modern applications, as opposed to its predecessor, the .NET Framework.\n\nThe .NET source is available at dotnet/dotnet on GitHub.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "If you only want to run .NET managed applications, install the dotnet-runtime package.\n\nTo build apps with .NET, install dotnet-sdk as well.\n\nLastly, to build dynamic web sites, applications, and services using ASP.NET Core, install aspnet-runtime.\n\nMicrosoft recommends using Visual Studio Code , their Electron-based IDE, to build & debug .NET apps.\n\nTo use .NET 6.0 instead suffix above package with \"-6.0\" such as dotnet-runtime-6.0, dotnet-sdk-6.0 and aspnet-runtime-6.0\n\n"
    },
    {
      "title": "Version differences",
      "level": 3,
      "content": ".NET SDKs are published under several version schemes. Only SDK versions 1xx can be built from source and will be available in the official repositories. Should you require any other version you will need one of the *-bin packages from AUR.\n\n"
    },
    {
      "title": "Install multiple versions manually",
      "level": 3,
      "content": "You can install multiple versions of the .NET SDK or runtime side by side by using the dotnet-install.sh script provided by the .NET Foundation. You can find the documentation of the script here.\n\nFor instance, this command would install the latest version found in the \"STS\"(Standard Term Support) channel in /usr/share/dotnet:\n\n```\n# ./dotnet-install.sh --install-dir /usr/share/dotnet -channel STS -version latest\n```\n\nYou may want to simulate the installation first by using the -Dryrun flag.\n\nOnce installed, you can verify the SDKs available:\n\n```\n$ dotnet --list-sdks\n```\n\n```\n2.2.108 [/usr/share/dotnet/sdk]\n3.0.103 [/usr/share/dotnet/sdk]\n```\n\n```\n$ dotnet --version\n```\n\n```\n3.0.103\n```\n\n"
    },
    {
      "title": "Uninstall manually installed version",
      "level": 3,
      "content": "You may want to remove outdated versions installed with dotnet-install.sh. The automated .NET Uninstall Tool does still not support Linux, so the deinstallation has to be done manually.\n\n```\n$ dotnet --list-sdks\n```\n\n```\n5.0.100 [/usr/share/dotnet/sdk]\n5.0.102 [/usr/share/dotnet/sdk]\n```\n\nDeinstallation of the sdk:\n\n```\n$ SDK_VERSION=\"5.0.100\"\n$ DOTNET_UNINSTALL_PATH=\"/usr/share/dotnet\"\n# rm -rf $DOTNET_UNINSTALL_PATH/sdk/$SDK_VERSION\n```\n\nUsing dotnet-install.sh also dotnet host and shared packages are getting installed, which may have to get removed additionally depending on the release.\n\nComplete deinstallation of the .NET Version (sdk, host, shared):\n\n```\n$ SDK_VERSION=\"5.0.100\"\n$ DOTNET_VERSION=\"5.0.0\"\n$ DOTNET_UNINSTALL_PATH=\"/usr/share/dotnet\"\n# rm -rf $DOTNET_UNINSTALL_PATH/sdk/$SDK_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/shared/Microsoft.NETCore.App/$DOTNET_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/shared/Microsoft.AspNetCore.All/$DOTNET_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/shared/Microsoft.AspNetCore.App/$DOTNET_VERSION\n# rm -rf $DOTNET_UNINSTALL_PATH/host/fxr/$DOTNET_VERSION\n```\n\n"
    },
    {
      "title": "Install multiple versions via AUR",
      "level": 3,
      "content": "Some of the AUR dotnet packages are made to be installed alongside each other. Only one host package (dotnet-host-binAUR or dotnet-host) is needed containing the command-line tool and you can install any of the available SDKs and Runtimes (latest packages of all major versions) next to it. List of compatible packages:\n\n- dotnet-host-binAUR, dotnet-runtime-binAUR, aspnet-runtime-binAUR, dotnet-sdk-binAUR\n- dotnet-host-preview-binAUR, dotnet-runtime-preview-binAUR, aspnet-runtime-preview-binAUR, dotnet-sdk-preview-binAUR\n- dotnet-runtime-8.0-binAUR, aspnet-runtime-8.0-binAUR, dotnet-sdk-8.0-binAUR,\n- dotnet-runtime-7.0-binAUR, aspnet-runtime-7.0-binAUR, dotnet-sdk-7.0-binAUR,\n- dotnet-runtime-3.0AUR, aspnet-runtime-3.0AUR, dotnet-sdk-3.0AUR,\n- dotnet-runtime-2.2AUR, aspnet-runtime-2.2AUR, dotnet-sdk-2.2AUR, dotnet-sdk-2.2-vs2017AUR\n- dotnet-runtime-2.1AUR, aspnet-runtime-2.1AUR, dotnet-sdk-2.1AUR\n\n"
    },
    {
      "title": "Install PowerShell Core",
      "level": 3,
      "content": "You can install PowerShell Core as a \"global\" tool also [1] [2]\n\n```\n# dotnet tool install --global PowerShell\n```\n\nto update to the current version\n\n```\n# dotnet tool update --global PowerShell\n```\n\nSee also PowerShell.\n\n"
    },
    {
      "title": "Telemetry",
      "level": 2,
      "content": "The Microsoft build of the .NET SDK collects telemetry, by default. AUR .NET SDK packages (the *-bin variants) are based on Microsoft builds of .NET. .NET runtime components do not collect telemetry in any scenario.\n\nCommunity builds (including those in Arch; starting with .NET 7) do not collect telemetry, per a change to the .NET SDK by Red Hat.\n\nTelemetry can be disabled by setting environment variable DOTNET_CLI_TELEMETRY_OPTOUT=1.\n\n"
    },
    {
      "title": "Tab-completion",
      "level": 2,
      "content": "All dotnet programs that use System.CommandLine.Parser to parse their arguments have auto-complete support. Enabling it just requires adding a few lines to your .bashrc / .zshrc file, as described in their documentation. Instructions for standalone binaries are here.\n\n"
    },
    {
      "title": "It was not possible to find any compatible framework version",
      "level": 3,
      "content": "If you get the following error when you try to run a newly created project, you no longer need to set a DOTNET_ROOT variable as described in the solutions of various GitHub issues. Arch's dotnet package (as of 3.1) installs it to the Microsoft recommended location of /usr/share/dotnet.\n\n```\n$ dotnet run\n```\n\n```\nIt was not possible to find any compatible framework version\nThe framework 'Microsoft.AspNetCore.App', version '3.1.0' was not found.\n  - No frameworks were found.\n\nYou can resolve the problem by installing the specified framework and/or SDK.\n\nThe specified framework can be found at:\n  - https://aka.ms/dotnet-core-applaunch?framework=Microsoft.AspNetCore.App&framework_version=3.1.0&arch=x64&rid=arch-x64\n```\n\nThis is caused because the runtime is shipped as a separate package in Arch. You just need to make sure you have the aspnet-runtime package installed as well.\n\n"
    },
    {
      "title": "\"the required library libhostfxr.so could not be found\" error",
      "level": 3,
      "content": "Some of the dotnet SDK tools (for example libman, dotnet-watch etc.) may expect you to have the environment variable DOTNET_ROOT pre-configured. If it is not, an error like this one could be observed: [3]\n\n```\nA fatal error occurred, the required library libhostfxr.so could not be found.\nIf this is a self-contained application, that library should exist in [/home/my_user/.dotnet/tools/.store/microsoft.web.librarymanager.cli/1.0.172/microsoft.web.librarymanager.cli/1.0.172/tools/netcoreapp2.1/any/].\nIf this is a framework-dependent application, install the runtime in the default location [/usr/share/dotnet] or use the DOTNET_ROOT environment variable to specify the runtime location.\n```\n\nThe workaround is to manually export DOTNET_ROOT in your shell:\n\n```\n~/.bashrc\n```\n\n```\nexport DOTNET_ROOT=/opt/dotnet\n```\n\n"
    },
    {
      "title": "Error MSB4019: The imported project \"/usr/share/dotnet/sdk/.../Sdks/Microsoft.NET.Sdk/targets/Microsoft.NET.Sdk.Common.targets\" was not found. Confirm that the expression in the Import declaration ... is correct, and that the file exists on disk.",
      "level": 3,
      "content": "This happens after an update. The currently running shell / login session is storing environment variables for the dotnet SDK version different from one installed. Restarting the shell or logging in again should fix this.\n\n"
    },
    {
      "title": "SDK specified could not be found",
      "level": 3,
      "content": "This is believed to be caused by a conflict between the Mono and MSBuild SDK libs and the dotnet ones. To fix this export the path manually in your shell (replacing the version number as necessary) e.g:\n\n```\n~/.bashrc\n```\n\n```\nexport MSBuildSDKsPath=$( echo /usr/share/dotnet/sdk/3.*/Sdks );\n```\n\n"
    },
    {
      "title": "dotnet command still installed",
      "level": 3,
      "content": "Installed packages do not uninstall dotnet-host, so uninstall dotnet-host\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- .NET homepage\n- The .NET Foundation\n- .NET API Browser\n\n"
    }
  ]
}