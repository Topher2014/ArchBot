{
  "title": "Localectl",
  "url": "https://wiki.archlinux.org/title/Localectl",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Environment variables\n- Localization\n\nLocales are used by glibc and other locale-aware programs or libraries for rendering text, correctly displaying regional monetary values, time and date formats, alphabetic idiosyncrasies, and other locale-specific standards.\n\n"
    },
    {
      "title": "Generating locales",
      "level": 2,
      "content": "Locale names are typically of the form language[_territory][.codeset][@modifier], where language is an ISO 639 language code, territory is an ISO 3166 country code, and codeset is a character set or encoding identifier like ISO-8859-1 or UTF-8. See setlocale(3).\n\nFor a list of enabled locales, run:\n\n```\n$ locale --all-locales\n```\n\nBefore a locale can be enabled on the system, it must be generated. This can be achieved by uncommenting applicable entries in /etc/locale.gen, and running locale-gen. Equivalently, commenting entries disables their respective locales. While making changes, consider any localisations required by other users on the system, as well as specific #Variables.\n\nFor example for German, uncomment de_DE.UTF-8 UTF-8 (in addition to en_US.UTF-8 UTF-8 which is commonly used as a fallback for various tools):\n\n```\n/etc/locale.gen\n```\n\n```\n...\n#de_CH ISO-8859-1  \nde_DE.UTF-8 UTF-8  \n#de_DE ISO-8859-1  \n...\n#en_SG ISO-8859-1\nen_US.UTF-8 UTF-8\n#en_US ISO-8859-1\n...\n```\n\nSave the file, and generate the locale:\n\n```\n# locale-gen\n```\n\n- locale-gen also runs with every update of glibc. [1]\n- UTF-8 is recommended over other character sets. [2]\n\n"
    },
    {
      "title": "Setting the locale",
      "level": 2,
      "content": "To display the currently set locale and its related environmental settings, type:\n\n```\n$ locale\n```\n\nThe locale to be used, chosen among the previously generated ones, is set in locale.conf files. Each of these files must contain a new-line separated list of environment variable assignments, having the same format as output by locale.\n\nTo list available locales which have been previously generated, run:\n\n```\n$ localedef --list-archive\n```\n\nAlternatively, using localectl(1):\n\n```\n$ localectl list-locales\n```\n\n"
    },
    {
      "title": "Setting the system locale",
      "level": 3,
      "content": "To set the system locale, write the LANG variable to /etc/locale.conf, where en_US.UTF-8 belongs to the first column of an uncommented entry in /etc/locale.gen:\n\n```\n/etc/locale.conf\n```\n\n```\nLANG=en_US.UTF-8\n```\n\nAlternatively, run:\n\n```\n# localectl set-locale LANG=en_US.UTF-8\n```\n\nSee #Variables and locale.conf(5) for details.\n\n"
    },
    {
      "title": "Overriding system locale per user session",
      "level": 3,
      "content": "The system-wide locale can be overridden in each user session by creating or editing $XDG_CONFIG_HOME/locale.conf (usually ~/.config/locale.conf).\n\nThe precedence of these locale.conf files is defined in /etc/profile.d/locale.sh.\n\n- This can also allow keeping the logs in /var/log/ in English while using the local language in the user environment.\n- You can create a /etc/skel/.config/locale.conf file so that any new users added using useradd and the -m option will have ~/.config/locale.conf automatically generated. See Users and groups#Changing user defaults.\n\n"
    },
    {
      "title": "Make locale changes immediate",
      "level": 3,
      "content": "Once system and user locale.conf files have been created or edited, their new values will take effect for new sessions at login. To have the current environment use the new settings unset LANG and source /etc/profile.d/locale.sh:\n\n```\n$ unset LANG\n$ source /etc/profile.d/locale.sh\n```\n\n"
    },
    {
      "title": "Other uses",
      "level": 3,
      "content": "Locale variables can also be defined with the standard methods as explained in Environment variables.\n\nFor example, in order to test or debug a particular application during development, it could be launched with something like:\n\n```\n$ LC_ALL=C.UTF-8 ./my_application.sh\n```\n\nSimilarly, to set the locale for all processes run from the current shell (for example, during system installation):\n\n```\n$ export LC_ALL=C.UTF-8\n```\n\n"
    },
    {
      "title": "Variables",
      "level": 2,
      "content": "locale.conf files support the following environment variables.\n\n- LANG\n- LANGUAGE\n- LC_ADDRESS\n- LC_COLLATE\n- LC_CTYPE\n- LC_IDENTIFICATION\n- LC_MEASUREMENT\n- LC_MESSAGES\n- LC_MONETARY\n- LC_NAME\n- LC_NUMERIC\n- LC_PAPER\n- LC_TELEPHONE\n- LC_TIME\n\nFull meaning of the above LC_* variables can be found on manpage locale(7), whereas details of their definition are described on locale(5).\n\n"
    },
    {
      "title": "LANG: default locale",
      "level": 3,
      "content": "The locale set for this variable will be used for all the LC_* variables that are not explicitly set.\n\n"
    },
    {
      "title": "LANGUAGE: fallback locales",
      "level": 3,
      "content": "Programs which use gettext for translations respect the LANGUAGE option in addition to the usual variables. This allows users to specify a list of locales that will be used in that order. If a translation for the preferred locale is unavailable, another from a similar locale will be used instead of the default. For example, an Australian user might want to fall back to British rather than US spelling:\n\n```\nlocale.conf\n```\n\n```\nLANG=en_AU.UTF-8\nLANGUAGE=en_AU:en_GB:en\n```\n\n"
    },
    {
      "title": "LC_TIME: date and time format",
      "level": 3,
      "content": "If LC_TIME is set to en_US.UTF-8, for example, the date format will be \"MM/DD/YYYY\". If wanting to use the ISO 8601 date format of \"YYYY-MM-DD\" use:\n\n```\nlocale.conf\n```\n\n```\nLC_TIME=en_DK.UTF-8\n```\n\nYou can print the current timestamp using your locale date and time format with date +\"%c\".\n\nglibc 2.29 fixed a bug, en_US.UTF-8 started showing in 12-hour format, as was intended. If wanting to use 24-hour format, use LC_TIME=C.UTF-8.\n\n"
    },
    {
      "title": "LC_COLLATE: collation",
      "level": 3,
      "content": "This variable governs the collation rules used for sorting and regular expressions.\n\nSetting the value to C.UTF-8 can for example make the ls command sort dotfiles first, followed by uppercase and lowercase filenames:\n\n```\nlocale.conf\n```\n\n```\nLC_COLLATE=C.UTF-8\n```\n\nSee also [4].\n\nTo get around potential issues, Arch used to set LC_COLLATE=C in /etc/profile, but this method is now deprecated.\n\n"
    },
    {
      "title": "LC_ALL: troubleshooting",
      "level": 3,
      "content": "The locale set for this variable will always override LANG and all the other LC_* variables, whether they are set or not. If LC_ALL is set to C or C.UTF-8, it will also override LANGUAGE.\n\nLC_ALL is the only LC_* variable which cannot be set in locale.conf files: it is meant to be used only for testing or troubleshooting purposes, for example in /etc/profile.\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "For encoding problems, check Character encoding#Troubleshooting.\n\n"
    },
    {
      "title": "My system is still using wrong language",
      "level": 3,
      "content": "It is possible that the environment variables are redefined in other files than locale.conf. See Environment variables#Defining variables for details.\n\nIf you are using a desktop environment, such as GNOME, its language settings may be overriding the settings in locale.conf.\n\nKDE Plasma also allows to change the UI's language through the system settings. If the desktop environment is still using the default language after the modification, deleting the file at ~/.config/plasma-localerc (previously: ~/.config/plasma-locale-settings.sh) should resolve the issue.\n\nIf you are using a display manager in combination with accountsservice, follow the instructions in Display manager#Set language for user session.\n\nLightDM will automatically use accountsservice to set a user's locale if it is installed. Otherwise, LightDM stores the user session configuration in ~/.dmrc. It is possible that an unwanted locale setting is retrieved from there as well.\n\n"
    },
    {
      "title": "Using a custom locale causes problems",
      "level": 3,
      "content": "When installing a locale that is not officially supported (e.g., locale-en_xxAUR), some problems can occur, like dead/compose keys not working in some applications or applications reporting missing locales. After installing a custom locale, manual intervention is required to resolve these problems. There are two approaches (replace en_XX.UTF-8 with the identifier of your custom locale):\n\n"
    },
    {
      "title": "Set LC_CTYPE",
      "level": 4,
      "content": "Set LC_CTYPE to an officially supported locale (like en_US.UTF-8), e.g.:\n\n```\n/etc/locale.conf\n```\n\n```\nLANG=en_XX.UTF-8\nLC_CTYPE=en_US.UTF-8\n```\n\n"
    },
    {
      "title": "Modify the Xlib database",
      "level": 4,
      "content": "Modify the Xlib database by adding the following:\n\n```\n/usr/share/X11/locale/locale.dir\n```\n\n```\nen_US.UTF-8/XLC_LOCALE en_XX.UTF-8\nen_US.UTF-8/XLC_LOCALE: en_XX.UTF-8\n```\n\n```\n/usr/share/X11/locale/compose.dir\n```\n\n```\nen_US.UTF-8/Compose en_XX.UTF-8\nen_US.UTF-8/Compose: en_XX.UTF-8\n```\n\n"
    },
    {
      "title": "Metric measurements with US locale",
      "level": 4,
      "content": "In some tools, like nvme-cli, the unit type is selected based on the locale settings; hence, temperatures are shown in Fahrenheit if US locales are used. If you wish to use Metric measurements with a US locale, to get temperatures in Celsius for example, adding LC_MEASUREMENT=metric to /etc/locale.conf should work if the tool searches for LC_MEASUREMENT rather than simply the country. [5]\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Locales - glibc wiki\n- Gentoo:Localization/Guide\n- Supposedly 2008, or earlier, Gentoo wiki article\n- ICU's interactive collation testing\n- Free Standards Group Open Internationalisation Initiative\n- The POSIX definition of a locale\n- Locale environment variables\n\n"
    }
  ]
}