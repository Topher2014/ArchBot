{
  "title": "Gnome Color Chooser",
  "url": "https://wiki.archlinux.org/title/Gnome_Color_Chooser",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Qt\n- Uniform look for Qt and GTK applications\n\nFrom the GTK website:\n\nGTK was initially made by the GNU Project for GIMP, but it is now a very popular toolkit with bindings for many languages. This article will explore the tools used to configure the GTK theme, style, icon, font and font size, and also detail manual configuration.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Multiple versions of GTK are currently available. They can be installed with the following packages:\n\n- GTK 4.x is available with the gtk4 package.\n- GTK 3.x is available with the gtk3 package.\n- GTK 2.x is available with the gtk2 package.\n- GTK 1.x is available with the gtkAUR package.\n\n"
    },
    {
      "title": "GTK 3 and GTK 4",
      "level": 3,
      "content": "In GTK 3 and GTK 4, the default theme is Adwaita, but HighContrast and HighContrastInverse themes are also included.\n\nTo apply a specific theme, set the gtk-theme property in the org.gnome.desktop.interface namespace via a dconf editor:\n\n```\n$ gsettings set org.gnome.desktop.interface gtk-theme Adwaita\n```\n\nIf you are not using a dconf property, you can use GTK_THEME to apply a GTK 3 and GTK 4 themes. For example to launch GNOME Calculator with the dark variant of Adwaita:\n\n```\n$ GTK_THEME=Adwaita:dark gnome-calculator\n```\n\n"
    },
    {
      "title": "GTK 2",
      "level": 3,
      "content": "In GTK 2, the default theme is Raleigh, but Arch Linux has a custom configuration file at /usr/share/gtk-2.0/gtkrc, which sets the default theme to Adwaita.\n\nTo change the GTK 2 theme, use GTK2_RC_FILES. For example to launch GIMP with the theme Raleigh:\n\n```\n$ GTK2_RC_FILES=/usr/share/themes/Raleigh/gtk-2.0/gtkrc gimp\n```\n\nMore themes can be installed from the official repositories or the AUR. Manually extracted themes go in ~/.themes/ or ~/.local/share/themes/ directory.\n\n"
    },
    {
      "title": "Themes supporting GTK 2 and GTK 3",
      "level": 3,
      "content": "- Adapta — An adaptive GTK theme based on Material Design Guidelines. Includes: Adapta, Adapta-Eta, Adapta-Nokto, Adapta-Nokto-Eta\n\n- Arc — A flat theme with a modern look and transparent elements. Includes: Arc, Arc-Dark, Arc-Darker\n\n- Bluebird — Blue Desktop Suite for Xfce.\n\n- Breeze — GTK version of KDE's default widget theme. Includes: Breeze, Breeze-Dark\n\n- Deepin — Default theme for the Deepin desktop. Includes: deepin, deepin-dark\n\n- GNOME Extra Themes — Extra themes for the GNOME desktop. Includes: Adwaita, Adwaita-dark, HighContrast\n\n- Greybird — A grey and blue Xfce theme, used by default in Xubuntu 12.04.\n\n- Materia — A Material Design-like flat theme for GTK3, GTK2, and GNOME-Shell.\n\n- MATE Themes — Default themes for the MATE desktop. Includes: BlackMATE, Blue-Submarine, BlueMenta, ContrastHighInverse, Green-Submarine, GreenLaguna, Menta, TraditionalGreen, TraditionalOk\n\n- Numix — A flat and light theme with a modern look (GNOME, Openbox, Unity, Xfce). Includes: Numix\n\n- Vertex — Theme for GTK 3, GTK 2, Gnome-Shell and Cinnamon.\n\n- Zuki — Themes for GTK, gnome-shell and more.\n\nThere are a number of additional GTK themes in the AUR, example: search for gtk-theme.\n\n"
    },
    {
      "title": "GTK and Qt",
      "level": 3,
      "content": "If you have GTK and Qt (KDE) applications on your desktop then you know that their looks do not blend well. If you wish to make your GTK styles match your Qt styles please read Uniform look for Qt and GTK applications.\n\n"
    },
    {
      "title": "Configuration tools",
      "level": 2,
      "content": "Most major desktop environments provide tools to configure the GTK theme, icons, font and font size, and manage these settings via XSettings:\n\n- If you use Cinnamon, use Themes tool (cinnamon-settings themes): go to System Settings > Themes.\n- If you use Enlightenment: go to Settings > All > Look > Application Theme.\n- If you use GNOME, use GNOME Tweaks (gnome-tweaks): install gnome-tweaks.\n- If you use MATE, use the Appearance Preferences tool (mate-appearance-properties): go to System > Settings > Appearance.\n- If you use Xfce, use the Appearance tool: go to Settings > Appearance.\n\nOther GUI tools generally overwrite the configuration files.\n\nBoth GTK 2 and GTK 3 are supported:\n\n- nwg-look — GTK3 settings editor adapted to work in the wlroots environment.\n\n- KDE GTK Configurator — Application that allows you to change style and font of GTK 2 and GTK 3 applications.\n\n- LXAppearance — Desktop independent GTK 2 and GTK 3 style configuration tool from the LXDE project (it does not require other parts of the LXDE desktop).\n\n- Oo-mox — Graphical application for generating different color variations of Numix and Flat-Plat themes (GTK 2 and 3), Archdroid and Gnome-Colors icon themes. Also allows generating pre-scaled GTK 2 themes for HiDPI displays.\n\nOnly GTK 2 is supported:\n\n- GTK Change Theme — Little program that lets you change your GTK 2.0 theme (considered a better alternative to switch2).\n\n- GTK Preference Tool — GTK theme selector and font switcher.\n\n- GTK Theme Switch — Simple GTK theme switcher.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "GTK settings can be specified manually in configuration files, but desktop environments and applications can override these settings. Depending on GTK version, these files are located at:\n\n- GTK 2 user specific: $GTK2_RC_FILES, ~/.gtkrc-2.0\n- GTK 2 system wide: /etc/gtk-2.0/gtkrc\n- GTK 3 user specific: $XDG_CONFIG_HOME/gtk-3.0/settings.ini, or $HOME/.config/gtk-3.0/settings.ini if $XDG_CONFIG_HOME is not set\n- GTK 3 system wide: /etc/gtk-3.0/settings.ini\n\n- See the GTK4 and GTK3 GtkSettings properties (and GTK 2 properties) in the GTK programming reference manual for the full list of currently supported GTK configuration options.\n- Some of the settings described below (such as gtk-icon-sizes) are deprecated and ignored since GTK 3.10.\n- If you edit your GTK configuration files, only newly started applications will display the changes.\n\n"
    },
    {
      "title": "Basic theme configuration",
      "level": 3,
      "content": "To manually change the GTK theme, icons, font and font size, add the following to the configuration files, for example:\n\n- GTK 2:\n\n```\n~/.gtkrc-2.0\n```\n\n```\ngtk-icon-theme-name = \"Adwaita\"\ngtk-theme-name = \"Adwaita\"\ngtk-font-name = \"DejaVu Sans 11\"\n```\n\n- GTK 3:\n\n```\n$XDG_CONFIG_HOME/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-icon-theme-name = Adwaita\ngtk-theme-name = Adwaita\ngtk-font-name = DejaVu Sans 11\n```\n\nIf the theme is not applied for GTK 3, use gsettings in addition:\n\n```\n$ gsettings set org.gnome.desktop.interface gtk-theme theme_name\n```\n\nSimilarly, if the icon theme is not applied for GTK 3 , use gsettings:\n\n```\n$ gsettings set org.gnome.desktop.interface icon-theme icon_theme_name\n```\n\nFor downloading and installing icons manually, see Icons.\n\n"
    },
    {
      "title": "Dark theme variant",
      "level": 3,
      "content": "Some GTK 3 themes contain a dark theme variant, but it is only used by default when the application requests it explicitly. To use dark theme variant with all GTK 3 applications, set:\n\n```\ngtk-application-prefer-dark-theme = true\n```\n\nFor GTK 4, use:\n\n```\n$ gsettings set org.gnome.desktop.interface color-scheme prefer-dark\n```\n\n"
    },
    {
      "title": "Keyboard shortcuts",
      "level": 3,
      "content": "Keyboard shortcuts (otherwise known as accelerators in GTK) may be changed by hovering the mouse over the respective menu item, and pressing the desired key combination. To enable this feature, set:\n\n```\ngtk-can-change-accels = 1\n```\n\n"
    },
    {
      "title": "Emacs key bindings",
      "level": 4,
      "content": "To have Emacs-like key bindings in GTK applications add the following:\n\n```\n~/.gtkrc-2.0\n```\n\n```\ngtk-key-theme-name = \"Emacs\"\n```\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-key-theme-name = Emacs\n```\n\nFor GTK3 also run:\n\n```\n$ gsettings set org.gnome.desktop.interface gtk-key-theme \"Emacs\"\n```\n\nXFCE has a similar setting:\n\n```\n$ xfconf-query -c xsettings -p /Gtk/KeyThemeName -s Emacs\n```\n\n"
    },
    {
      "title": "Declaring keybinds",
      "level": 4,
      "content": "The configuration files e.g. in /usr/share/themes/Emacs/ determine what the Emacs bindings are, and can be changed.\n\n```\n/usr/share/themes/Emacs/gtk-2.0-key/gtkrc\n```\n\n```\nbinding \"gtk-emacs-text-entry\"\n{\n  bind \"<ctrl>b\" { \"move-cursor\" (logical-positions, -1, 0) }\n  ...\n}\n```\n\n```\n/usr/share/themes/Emacs/gtk-3.0/gtk-keys.css\n```\n\n```\n@binding-set gtk-emacs-text-entry\n{\n  bind \"<ctrl>b\" { \"move-cursor\" (logical-positions, -1, 0) };\n  ...\n}\n```\n\nCopying sections to the users ~/.gtkrc-2.0 and ~/.themes/your-new-key-theme/gtk-3.0/gtk-keys.css for GTK 2 and 3 respectively, allows for changes on a per user basis.\n\n"
    },
    {
      "title": "GNOME menu delay",
      "level": 3,
      "content": "This setting controls the delay between pointing the mouse at a menu and that menu opening. This delay is measured in milliseconds.\n\n```\ngtk-menu-popup-delay = 0\n```\n\n"
    },
    {
      "title": "Reduce widget sizes",
      "level": 3,
      "content": "If you have a small screen or you just do not like big icons and widgets, you can resize things easily.\n\nTo have icons without text in toolbars (valid values), use\n\n```\ngtk-toolbar-style = GTK_TOOLBAR_ICONS\n```\n\nTo use smaller icons, use a line like this:\n\n```\ngtk-icon-sizes = \"panel-menu=16,16:panel=16,16:gtk-menu=16,16:gtk-large-toolbar=16,16\\\n:gtk-small-toolbar=16,16:gtk-button=16,16\"\n```\n\nOr to remove icons from buttons completely:\n\n```\ngtk-button-images = 0\n```\n\nYou can also remove icons from menus:\n\n```\ngtk-menu-images = 0\n```\n\nSee also [1] and [2].\n\n"
    },
    {
      "title": "Hide CSD buttons",
      "level": 3,
      "content": "To remove the client-side decorations (CSD)[3] minimize and maximize buttons from gtk3 windows:\n\n```\ngtk-decoration-layout=menu:close\n```\n\nSee GTK docs.\n\n"
    },
    {
      "title": "Disable mouse paste",
      "level": 3,
      "content": "To turn off pasting from the clipboard (PRIMARY selection) when the middle mouse button is clicked:\n\n```\ngtk-enable-primary-paste=false\n```\n\n"
    },
    {
      "title": "File-chooser start-up location",
      "level": 3,
      "content": "Open the file-chooser within the current working directory and not the recent location. Normally the current working directory is the Home directory.\n\nGTK 3\n\nChange setting with the following command:\n\n```\n$ gsettings set org.gtk.Settings.FileChooser startup-mode cwd\n```\n\nGTK 2\n\nAdd the following to ~/.config/gtk-2.0/gtkfilechooser.ini:\n\n```\nStartupMode=cwd\n```\n\n"
    },
    {
      "title": "Legacy scrolling behavior",
      "level": 3,
      "content": "Prior to GTK 3.6, clicking on either side of the slider in the scrollbar would move the scrollbar in the direction of the click by approximately one page. Since GTK 3.6, the slider will move directly to the position of the click. This behaviour can be reverted in some applications by creating the file with the content below:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-primary-button-warps-slider = false\n```\n\n"
    },
    {
      "title": "Disable overlay scrollbars",
      "level": 3,
      "content": "Since GTK 3.15, overlay scrollbars are enabled by default, meaning that scrollbars will be shown only on mouseover in GTK 3 applications. This behavior can be reverted by setting the following environment variable: GTK_OVERLAY_SCROLLING=0. See Environment variables#Graphical environment.\n\nAlternatively, overlay scrollbars can be disabled in the GTK 3 settings since GTK 3.24.9. To do so, the value of gtk-overlay-scrolling has to be set to false in the [Settings] section of the settings file:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-overlay-scrolling = false\n```\n\nGTK 4 will no longer support GTK_OVERLAY_SCROLLING. It has already been dropped from master. As of GTK 4, the overlay nature of the scrollbars is part of the toolkit. The blanket toggle has been removed to prevent developers from breaking applications that have not been tested with both combinations. To allow application developers to decide what their applications should look like, the toolkit instead provides a mechanism to opt-out or add a setting for users. The function gtk_scrolled_window_set_overlay_scrolling() can be used to enable/disable overlay scrolling on a per-application basis. Application developers can optionally use GSettings to have a user setting bound to the property.\n\n"
    },
    {
      "title": "Remove overlay scroll indicators",
      "level": 4,
      "content": "The positions of the overlay scrollbars are indicated by thin dashed lines in the application window. These dashed lines will be present even when overlay scrolling is disabled using the environment variable discussed in the section above. To remove the indicator lines, create the following file:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\n/* Remove dotted lines from GTK 3 applications */\nundershoot.top, undershoot.right, undershoot.bottom, undershoot.left { background-image: none; }\n```\n\n"
    },
    {
      "title": "Examples",
      "level": 3,
      "content": "GTK example configurations:\n\n```\n~/.gtkrc-2.0\n```\n\n```\ngtk-theme-name=\"Arc-Dark\"\ngtk-icon-theme-name=\"breeze-dark\"\ngtk-font-name=\"Sans 11\"\ngtk-cursor-theme-name=\"Breeze_Amber\"\ngtk-cursor-theme-size=0\ngtk-toolbar-style=GTK_TOOLBAR_BOTH_HORIZ\ngtk-toolbar-icon-size=GTK_ICON_SIZE_SMALL_TOOLBAR\ngtk-button-images=0\ngtk-menu-images=0\ngtk-enable-event-sounds=0\ngtk-enable-input-feedback-sounds=0\ngtk-xft-antialias=1\ngtk-xft-hinting=1\ngtk-xft-hintstyle=\"hintslight\"\ngtk-xft-rgba=\"rgb\"\n```\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-theme-name=Arc-Dark\ngtk-icon-theme-name=breeze-dark\ngtk-font-name=Sans 11\ngtk-cursor-theme-name=Breeze_Amber\ngtk-cursor-theme-size=0\ngtk-toolbar-style=GTK_TOOLBAR_BOTH_HORIZ\ngtk-toolbar-icon-size=GTK_ICON_SIZE_SMALL_TOOLBAR\ngtk-button-images=0\ngtk-menu-images=0\ngtk-enable-event-sounds=0\ngtk-enable-input-feedback-sounds=0\ngtk-xft-antialias=1\ngtk-xft-hinting=1\ngtk-xft-hintstyle=hintslight\ngtk-xft-rgba=rgb\n# gtk-decoration-layout=menu:close\n# gtk-application-prefer-dark-theme=1\n```\n\n"
    },
    {
      "title": "GDK backends",
      "level": 2,
      "content": "GDK (the underlying abstraction layer of GTK) supports multiple backends to display GTK applications.\n\n"
    },
    {
      "title": "Wayland backend",
      "level": 3,
      "content": "The GDK Wayland backend is supported only by gtk3 or newer and is the default backend when using Wayland display server.\n\nApplications that use versions of GTK prior to gtk3 do not have Wayland support, and need to use Xwayland in order to run on a Wayland session using the X11 backend.\n\nWhen using the Wayland backend, some variables are not sourced from settings.ini. Any key that is present in the GSettings schema org.gnome.desktop.interface are read from there instead of settings.ini.\n\nAn example of such variables are gtk-color-scheme and icon-theme, which must have their keys set with GSettings in order to theme GTK Applications under Wayland. Alternatively, if only the theme needs to be customized, the environment variable GTK_THEME can be set.\n\nSee the relevant article on the sway wiki for more details on this.\n\n"
    },
    {
      "title": "Xorg backend",
      "level": 3,
      "content": "If Xorg display server is in use, the backend defaults to x11 automatically.\n\nIt is possible to force GTK3 applications running on a wayland session to use the X11 backend through Xwayland by setting the environment variable GDK_BACKEND=x11.\n\n"
    },
    {
      "title": "Broadway backend",
      "level": 3,
      "content": "The GDK Broadway backend provides support for displaying GTK applications in a web browser, using HTML5 and web sockets. [4]\n\nWhen using broadwayd, specify the display number to use, prefixed with a colon, similar to X. The default display number is 0 (zero).\n\n```\n$ display_number=:5\n```\n\nStart it.\n\n```\n$ broadwayd $display_number\n```\n\nPort used by default\n\n```\nport = 8080 + $display_number\n```\n\nPoint your browser to http://127.0.0.1:port\n\nTo Start applications\n\n```\n$ GDK_BACKEND=broadway BROADWAY_DISPLAY=$display_number <<application>>\n```\n\nAlternatively can set address and port\n\n```\n$ broadwayd --port $port_number --address $address $display_number\n```\n\n"
    },
    {
      "title": "Different themes between GTK 2 and GTK 3 applications",
      "level": 3,
      "content": "In general, if a selected theme has support for both GTK 2 and GTK 3, the theme will be applied to all GTK 2 and GTK 3 applications. If a selected theme has support for only GTK 2, it will be used for GTK 2 applications and the default GTK theme will be used for GTK 3 applications. If the selected theme has support for only GTK 3, it will be used for GTK 3 applications and the default GTK theme will be used for GTK 2 applications. Thus for application theme consistency, it is best to use a theme which has support for both GTK 2 and GTK 3.\n\nYou could find what themes installed on your system have both an GTK 2 and GTK 3 version by using this command (does not work with names containing spaces):\n\n```\nfind $(find ~/.themes /usr/share/themes/ -wholename \"*/gtk-3.0\" | sed -e \"s/^\\(.*\\)\\/gtk-3.0$/\\1/\") -wholename \"*/gtk-2.0\" | sed -e \"s/.*\\/\\(.*\\)\\/gtk-2.0/\\1\"/\n```\n\n"
    },
    {
      "title": "Theme not applied to root applications",
      "level": 3,
      "content": "As user theme files ($XDG_CONFIG_HOME/gtk-3.0/settings.ini, ~/.gtkrc-2.0) are not read by other accounts, the selected theme will not apply to X applications run as root. Possible solutions include:\n\n- Create symlinks, e.g\n\n```\n# ln -s $HOME/.gtkrc-2.0 /etc/gtk-2.0/gtkrc\n# ln -s $HOME/.config/gtk-3.0/settings.ini /etc/gtk-3.0/settings.ini\n```\n\n- Configure system-wide theme files: /etc/gtk-3.0/settings.ini (GTK 3) or /etc/gtk-2.0/gtkrc (GTK 2)\n- Adjust the theme as root\n\n```\n# lxappearance\n```\n\n- Use a settings daemon (this is what most desktop environments do). A desktop-agnostic variant using XSettings is available with xsettingsd-gitAUR.\n\n"
    },
    {
      "title": "Client-side decorations",
      "level": 3,
      "content": "GTK 3.12 introduced client-side decorations, which move the title-bar away from the window manager. This may present issues such as double title-bars, no title-bar at all, double shadows with compositing enabled, or being unable to move a frozen application.\n\nTo remove the shadow and gap around windows (for example in combination with a tiling window manager), create the following file:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\n.window-frame, .window-frame:backdrop {\n box-shadow: 0 0 0 black;\n border-style: none;\n margin: 0;\n border-radius: 0;\n}\n\n.titlebar {\n border-radius: 0;\n}\n\n.window-frame.csd.popup {\n  box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2), 0 0 0 1px rgba(0, 0, 0, 0.13);\n}\n\n.header-bar {\n  background-image: none;\n  background-color: #ededed;\n  box-shadow: none;\n}\n/* You may want to use this if you do not like the double title.\nGtkLabel.title {\n    opacity: 0;\n}*/\n```\n\nNote that if visual problems persist, you may want to use the GTK Inspector to find the offending elements as explained here [5].\n\nTo adjust the buttons in the header bar, use the gtk-decoration-layout setting. [6] The below examples removes all buttons:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\ngtk-decoration-layout=menu:\n```\n\nTo remove client-side decorations altogether, you can use gtk3-classicAUR which contains a patch that disables them by default. To enable client-side decorations, set the GTK_CSD environment variable with any value.\n\nAlternatively, you can use gtk3-nocsd-gitAUR, see README for details.\n\n"
    },
    {
      "title": "cedilla ç/Ç instead of ć/Ć",
      "level": 3,
      "content": "See [7], and [8] for a workaround using Xcompose (US international layout).\n\n"
    },
    {
      "title": "Suppress warning about accessibility bus",
      "level": 3,
      "content": "If you do not use any Gnome Accessibility features, you may receive warnings like:\n\n```\nWARNING **: Couldn't connect to accessibility bus:\n```\n\nTo suppress these warnings, execute programs with NO_AT_BRIDGE=1 or set that as a global environment variable.\n\n"
    },
    {
      "title": "Titlebar background color mismatch",
      "level": 3,
      "content": "If you are using a window manager which uses a window decoration theme that mimics the GTK theme background color, you may find that the titlebar color no longer completely matches the application color in some GTK 3 applications. As a workaround, create the following file:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\n/* Always use background color */\nGtkWindow {\n    background-color: @theme_bg_color;\n}\n\n/* Fix tooltip background override */\n.tooltip {\n    background-color: rgba(0, 0, 0, 0.8);\n}\n\n.tooltip * {\n    background-color: transparent;\n}\n\n/* Fix Nautilus desktop window background override */\nNautilusWindow {\n     background-color: transparent; \n}\n```\n\n"
    },
    {
      "title": "Wrong focus events with tiling window managers",
      "level": 3,
      "content": "Define GDK_CORE_DEVICE_EVENTS=1 to use GTK2 style input, instead of xinput2. [10]\n\n"
    },
    {
      "title": "Thumbnail support for GTK file dialog",
      "level": 3,
      "content": "Install gtk2-patched-filechooser-icon-viewAUR and gtk3-patched-filechooser-icon-viewAUR to have the option to view files as thumbnails instead of list in the GTK file chooser.\n\n"
    },
    {
      "title": "Button and menu icons",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nFor some applications in GNOME's Wayland session, your ~/.config/gtk-3.0/settings.ini file is misconfigured. This can happen if you try other GTK based desktop environments. These are the offending values:\n\n```\n~/.config/gtk-3.0/settings.ini\n```\n\n```\n[Settings]\ngtk-button-images=1\ngtk-menu-images=1\n```\n\nSimply set them to 0 or remove the whole file to use GNOME defaults.\n\n"
    },
    {
      "title": "GTK 3 without polkit",
      "level": 3,
      "content": "GTK3 depends on polkit through colord, which is required for printing. However printing works fine without polkit installed; at least with a monochrome printer and package versions gtk3-print-backends=3.22.19-2 and colord=1.4.1-1.\n\n"
    },
    {
      "title": "Some GTK 2 themes only change the UI color palette",
      "level": 3,
      "content": "Depending on the theme of choice's support for GTK 2, UI controls may still have the default Raleigh appearance, possibly with a different color palette. This is due to these themes requiring the GTK 2 Murrine engine, which is missing (GTK 2 programs should complain about it on their standard error output). Install the gtk-engine-murrine package.\n\n"
    },
    {
      "title": "Patching GTK file chooser to use regular type ahead",
      "level": 3,
      "content": "GTK file chooser uses the same type-ahead-find feature as GNOME/Files. This can be very jarring and does not fit in very well with other desktop enviroments.\n\nSome applications support XDG Desktop Portal which allows application to use the native file chooser. If that does not work you can restore type-ahead functionality by using a patched GTK, for example gtk3-classicAUR.\n\n"
    },
    {
      "title": "Text in GTK 4 applications is blurry or renders incorrectly",
      "level": 3,
      "content": "GTK 4 switched to grayscale antialiasing without hinting when rendering fonts. A setting is available that will restore some of the GTK 3 behavior [11]. It is on by default for non-HiDPI screens (as of August, 2023), which should produce good results for most users. Subpixel antialiasing is not available.\n\n```\n~/.config/gtk-4.0/settings.ini\n```\n\n```\n[Settings]\ngtk-hint-font-metrics=1\n```\n\n"
    },
    {
      "title": "GTK 4 applications are slow",
      "level": 3,
      "content": "Because GTK switched to a new GPU renderer ngl (and vulkan in later versions), whose performance are worse than the old gl renderer(#6438, #6682, #6644, #6324 and possibly more issues), GTK 4 applications may feel sluggish and consume more resources than before.\n\nThis can be reverted by setting the environment variables below:\n\n```\nGSK_RENDERER=gl\nGDK_DEBUG=gl-no-fractional\n```\n\n"
    },
    {
      "title": "Rendering and scaling issues with GTK4",
      "level": 3,
      "content": "Users of amdvlk have reported seeing black borders and an abnormally big cursor since version 4.15.3 of gtk4.\n\nThis can be fixed by replacing amdvlk with vulkan-radeon, though using the GSK_RENDERER=ngl environment variable has also been reported as a fix by some people.\n\n"
    },
    {
      "title": "GTK4 applications using the dGPU on NVIDIA Optimus setups",
      "level": 3,
      "content": "Recent GTK4 versions have switched to the vulkan renderer; this is problematic for users with an NVIDIA dGPU, as these will be used by default now due to GTK selecting the first usable GPU when enumerating devices and NVIDIA usually presenting the dGPU as the first one. The most reliable solution for the time being is to revert to one of the OpenGL-based renderers; this can be done by setting the GSK_RENDERER=ngl environment variable (or GSK_RENDERER=gl for the old GL backend, which may perform better).\n\nAlternatively, set the GDK_VULKAN_DEVICE=device_index environment variable; run a GTK application with GDK_VULKAN_DEVICE=list set first to find the correct device index. This has the downside of still waking up the dGPU on application start/shutdown and is more likely to break in some way if using a MUX switch to switch to the dGPU-only mode.\n\nFinally, NVIDIA driver can be told to put the dGPU last in Vulkan device enumeration with __NV_PRIME_RENDER_OFFLOAD=1 __VK_LAYER_NV_optimus=non_NVIDIA_only environment variables. While it works, it is a very bad idea to set this globally, as it will make all OpenGL applications use the dGPU (__VK_LAYER_NV_optimus=non_NVIDIA_only is only respected if __NV_PRIME_RENDER_OFFLOAD=1 is set, and the latter causes OpenGL applications to use the dGPU).\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- The official GTK website\n- Wikipedia article about GTK\n\n"
    }
  ]
}