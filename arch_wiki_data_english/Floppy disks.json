{
  "title": "Floppy disks",
  "url": "https://wiki.archlinux.org/title/Floppy_disks",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nFrom Wikipedia:\n\nCommon tasks with floppy disks are described below, with available tools to accomplish them.\n\n"
    },
    {
      "title": "Kernel module",
      "level": 3,
      "content": "Most of the floppy drives should be supported by stock kernel. The module floppy is used as a driver for floppy drives (for classical floppy controllers). USB floppy drives do not need this as they appear as standard USB mass storage devices.\n\nThe floppy module might not be loaded by default. In such case, it could be loaded with the following command:\n\n```\n# modprobe floppy\n```\n\n"
    },
    {
      "title": "Packages",
      "level": 3,
      "content": "There are two packages in the Arch package repository related with floppy disks:\n\n- dosfstools\n- mtools\n\nIn addition, for low level formatting on USB attached floppy drives you will need ufiformatAUR.\n\n"
    },
    {
      "title": "Common tasks",
      "level": 2,
      "content": "Here are the commands needed to perform the most common tasks. In all examples is assumed that /dev/fd0 is the Linux device for the floppy drive. By default, all these tasks need to be performed as root. Note that USB based floppy drives will show up as /dev/sdx for some varying value of x.\n\n"
    },
    {
      "title": "Low level format",
      "level": 3,
      "content": "When it comes to floppies (and some very early hard drives) it was possible to perform a \"low level format\". This would create various markers on the disk for sectors and tracks. This is performed on a level below file systems.\n\nFor USB based floppy drives use ufiformatAUR:\n\n```\n# ufiformat /dev/sdx\n```\n\nAdditional flags can be used to adjust which format to use, by default it uses the same as is already on the disk. Note that USB floppy drives in general only support very few formats (unlike traditional floppy controllers). Supported formats can be listed using ufiformat -i /dev/sdx\n\nFor classical floppy controllers on the motherboard fdformat could perform this, which used to be part of util-linux, but is no longer included in the package by default and you would have to rebuild it yourself.\n\n"
    },
    {
      "title": "File system creation",
      "level": 3,
      "content": "```\n# mkfs.fat /dev/fd0\n```\n\n"
    },
    {
      "title": "Mount",
      "level": 3,
      "content": "```\n# mount -t vfat /dev/fd0 /media/floppy\n```\n\n"
    },
    {
      "title": "Flux images",
      "level": 2,
      "content": "It is possible to read and write non-native floppy formats (such as Amiga disks on a PC floppy drive) using special hardware adapters that works on the magnetic level (commonly referred to as \"flux images\"). This is possible as the floppy controller handles most of the low level tasks rather than the drives directly. Note that these do not work with USB floppy drives. While the adapter itself connects to the (modern) PC using USB, it needs to connect to a classic floppy drive with a ribbon cable on the other side.\n\nThese adapters also require specialised software to control them. Depending on which such hardware adapter you have one of these packages may be relevant:\n\n- greaseweazleAUR: For the Greaseweazle open hardware project\n- fluxengine-gitAUR: For the FluxEngine open hardware project. Also some support for Greaseweazle.\n- kryofluxAUR: For the proprietary Kryoflux adapter.\n- fluxvisAUR: Open source software to visualise flux images.\n\n"
    },
    {
      "title": "Unable to get diskette geometry",
      "level": 3,
      "content": "```\n# mkfs.fat /dev/fd0\n```\n\n```\nmkfs.fat 4.1 (2017-01-24)\nmkfs.fat: unable to get diskette geometry for '/dev/fd0'\n```\n\nIn such case, is probably that the diskette is physically damaged.\n\n"
    },
    {
      "title": "/dev/sg* family: No such file or directory",
      "level": 3,
      "content": "```\n# ufiformat /dev/sdX\n```\n\n```\n/dev/sg* family: No such file or directory\n```\n\nIf the above error occurs, the sg module may not be loaded. If it is, run this command to load the module.\n\n```\n# modprobe sg\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://github.com/dosfstools/dosfstools - DOS filesystem utilities\n- https://www.gnu.org/software/mtools/ - a collection of utilities to access MS-DOS disks from Unix without mounting them\n- https://github.com/tedigh/ufiformat/blob/master/README.md - ufiformat/README.md\n\n"
    }
  ]
}