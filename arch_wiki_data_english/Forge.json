{
  "title": "Forge",
  "url": "https://wiki.archlinux.org/title/Forge",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Minecraft is a multiplayer game. It uses the client-server model in which the game itself is a client which can be played standalone, or can be played with other players when the client connects to a public server.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "The Java Edition Minecraft server can be installed via the minecraft-serverAUR package. It provides additional systemd unit files and includes a small control script.\n\nAlso see #Alternatives for an overview of alternative programs to host Minecraft.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "In the installation process, the minecraft user and group are created. Establishing a Minecraft-specific user is recommended for security reasons. By running Minecraft under an unprivileged user account, anyone who successfully exploits your Minecraft server will only get access to that user account, and not yours. However, you may safely add your user to the minecraft group and add group write permission to the directory /srv/minecraft (default) to modify Minecraft server settings. Make sure that all files in the /srv/minecraft directory are either owned by the minecraft user, or that the user has by other means read and write permissions. The server will error out if it is unable to access certain files and might even have insufficient rights to write an according error message to the log.\n\nThe package provides a systemd service and timer to take automatic backups. By default, the backups are located in the backup folder under the server root directory. Though to keep the disk footprint small only the 10 most recent backups are preserved (configurable via KEEP_BACKUPS). The related systemd files are minecraftd-backup.timer and minecraftd-backup.service. They may easily be adapted to your liking, e.g. to follow a custom backup interval.\n\n"
    },
    {
      "title": "Starting the server",
      "level": 3,
      "content": "To start the server, you may either use systemd or run it directly from the command line. Either way, the server is encapsulated in a tmux session which is owned by the minecraft user. Using systemd, you may start/enable the included minecraftd.service. Alternatively, run\n\n```\n# minecraftd start\n```\n\n"
    },
    {
      "title": "Accepting the EULA",
      "level": 3,
      "content": "In order to run the Minecraft server, you must accept the End User License Agreement. This only needs to happen once after installation. The EULA file resides under /srv/minecraft/eula.txt after being created by the package. You will need to edit this file to state that you have agreed to the contract in order to run the server. All you need to do is change:\n\n```\neula=false\n```\n\nto the value true. Here is an example of an accepted EULA:\n\n```\n/srv/minecraft/eula.txt\n```\n\n```\n#By changing the setting below to TRUE you are indicating your agreement to our EULA (https://account.mojang.com/documents/minecraft_eula).\n#Sat Sep 11 11:11:11 PDT 2011\neula=true\n```\n\n"
    },
    {
      "title": "Firewall configuration",
      "level": 3,
      "content": "There are three settings in the server.properties which determine ports that your server will use.\n\nserver-port determines the TCP port at which the server will listen for incoming connections. The default port is 25565.\n\nquery.port determines the UDP port at which the server will share game info/advertising information. The default port is 25565. Note that since the server and query ports are TCP and UDP, they can share the same port. To enable query, you also have to specify enable-query=true.\n\nrcon.port determines the TCP port if you choose to allow remote access to admin console. The default port is 25575. To enable rcon, you also have to specify enable-rcon=true and rcon.password=....\n\nYou will need to allow incoming connections at least on the server-port. It is advisable to allow query and its query.port. On the other hand, enabling remote console access is a security risk, and you should be careful of allowing it.\n\nThe above information is for the official Minecraft server. If you are using an alternative server, please see its documentation for details about its configuration.\n\nSee [1] and [2] for more information.\n\n"
    },
    {
      "title": "Server management script",
      "level": 3,
      "content": "To easily control the server, you may use the provided minecraftd script. It is capable of doing basic commands like start, stop, restart or attaching to the session with console. Moreover, it may be used to display status information with status, backup the server world directory with backup, restore world data from backups with restore or run single commands in the server console with command do-something.\n\n"
    },
    {
      "title": "Tweaking",
      "level": 3,
      "content": "To tweak the default settings (e.g. the maximum RAM, number of threads etc.), edit the file /etc/conf.d/minecraft.\n\nFor example, more advanced users may wish to enable IDLE_SERVER by setting it to true. This will enable the management script to suspend the server if no player was online for at least IDLE_IF_TIME (defaults to 20 minutes). When the server is suspended, an idle_server will listen on the Minecraft port using ncat(1) from nmap (or any other implementation of netcat) and will immediately start the server at the first incoming connection. Though this obviously delays joining for the first time after suspension, it significantly decreases the CPU and memory usage leading to more reasonable resource and power consumption levels.\n\n"
    },
    {
      "title": "Spigot (respectively Craftbukkit)",
      "level": 3,
      "content": "Spigot is the most widely-used modded Minecraft server in the world. It can be installed with the spigotAUR package. The spigot PKGBUILD builds on top of the files from the minecraft-serverAUR package. This means that the spigot server provides its own systemd unit files, spigot script and corresponding script configuration file. The binary is called spigot and is capable of fulfilling the same commands as minecraftd. The configuration file resides under /etc/conf.d/spigot.\n\nBe sure to read #Configuration and replace minecraftd with spigot wherever you encounter it.\n\nIt is somewhat affiliated with Bukkit and has grown in popularity since Bukkit's demise.\n\n"
    },
    {
      "title": "Cuberite",
      "level": 3,
      "content": "Cuberite is a highly efficient and extensively moddable Minecraft server, written in C++ and Lua. It achieves much better performances than the vanilla Minecraft server, but it is not fully compatible with the latest Minecraft client (some game aspects might be missing or not working).\n\nThe Cuberite Minecraft server can be installed as a cuberiteAUR package, which provides a simple web interface by default at port 8080 with which most server operations can easily be done through the browser. The cuberite PKGBUILD builds on top of the files from the minecraft-serverAUR package. This means that the cuberite server provides its own systemd unit files, cuberite script and corresponding script configuration file. The binary is called cuberite and is capable of fulfilling the same commands as minecraftd. The configuration file resides under /etc/conf.d/cuberite.\n\nBe sure to read #Configuration and replace minecraftd with cuberite wherever you encounter it.\n\n"
    },
    {
      "title": "PaperMC",
      "level": 3,
      "content": "PaperMC is a Minecraft server, compatible with Spigot plugins which aims to offer better performance. It can be installed via papermcAUR.\n\nBe sure to read #Configuration and replace minecraftd with papermc wherever you encounter it.\n\n"
    },
    {
      "title": "Forge",
      "level": 3,
      "content": "Forge is a widely used Minecraft modding API. The following server packages are available:\n\n- forge-serverAUR for the latest Minecraft version (1.19.x)\n- forge-server-1.15.2AUR for Minecraft 1.15.2\n- forge-server-1.14.4AUR for Minecraft 1.14.4\n- forge-server-1.12.2AUR for Minecraft 1.12.2\n- forge-server-1.11.2AUR for Minecraft 1.11.2\n- forge-server-1.10.2AUR for Minecraft 1.10.2\n- forge-server-1.9.4AUR for Minecraft 1.9.4\n- forge-server-1.8.9AUR for Minecraft 1.8.9\n- forge-server-1.7.10AUR for Minecraft 1.7.10\n\nBe sure to read #Configuration and replace minecraftd with forged (forge-x.x.xd for legacy versions) wherever you encounter it.\n\n"
    },
    {
      "title": "Fabric",
      "level": 3,
      "content": "Fabric is a lightweight, experimental modding toolchain for Minecraft. The server package can be installed via fabric-serverAUR.\n\nBe sure to read #Configuration and replace minecraftd with fabricd wherever you encounter it.\n\n"
    },
    {
      "title": "Quilt",
      "level": 3,
      "content": "Quilt is an open-source, community-driven modding toolchain designed primarily for Minecraft. The server package can be installed via quilt-serverAUR.\n\nBe sure to read #Configuration and replace minecraftd with quiltd wherever you encounter it.\n\nIt is originally forked from Fabric, meaning it is mostly backwards compatible with Fabric mods.\n\n"
    },
    {
      "title": "Minecraft server port",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nBy default Minecraft servers run on port 25565, this port is assumed if an address is entered without a port specified.\n\nMost Minecraft server providers will charge a premium for a server with the default minecraft port, therefore if your port differs from 25565 you must specify the port by appending a colon (:) to the end of the hostname or address followed by the port which was allocated to your server, for example if you address was 43.12.122.96 and port was 28543 you would connect to 43.12.122.96:28543.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- There are several server wrappers available providing everything from automatic backup to managing dozens of servers in parallel; refer to Server Wrappers for more information. However, the management script provided by the AUR packages should suffice most needs.\n- You might want to set up a systemd timer with e.g. mapper to generate periodic maps of your world.\n- Be sure to take periodic backups e.g. using the provided management script (see #Configuration) or plain rsync.\n\n"
    }
  ]
}