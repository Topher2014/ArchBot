{
  "title": "OpenPGP-card-tools",
  "url": "https://wiki.archlinux.org/title/OpenPGP-card-tools",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- GnuPG#Smartcards\n- Nitrokey\n- OpenPGP\n- OpenPGP card\n- Smartcards\n- YubiKey\n\nOpenpgp-card-tools is a software package offering the commandline tool oct(1) for interacting with OpenPGP smartcards (using ccid).\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the openpgp-card-tools package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The oct(1) tool relies on pcsclite and ccid. It requires to enable and start the pcscd.socket.\n\n"
    },
    {
      "title": "Interact with OpenPGP cards",
      "level": 2,
      "content": "The oct(1) tool provides several subcommands, which provide functionality related to OpenPGP cards:\n\n- oct-list(1) to list connected cards\n- oct-status(1) to show information about data on a card\n- oct-info(1) to show technical details about a card\n- oct-ssh(1) to show a card's authentication key as an SSH public key\n- oct-admin(1) to administer data on a card that require the admin PIN\n- oct-pin(1) to manage PINs of a card\n- oct-decrypt(1) to decrypt data using a card\n- oct-sign(1) to sign data using a card\n- oct-attestation(1) to attest that keys have been generated on a card (YubiKey only)\n- oct-system(1) to interact with low-level card functionality\n\n"
    },
    {
      "title": "Machine readable output",
      "level": 3,
      "content": "The oct(1) tool offers machine readable output format for all subcommands by using the --output-format option.\n\nTo list attached cards in JSON output format:\n\n```\n$ oct --output-format=json list\n```\n\n"
    },
    {
      "title": "Import an OpenPGP private key",
      "level": 3,
      "content": "With oct-admin-import(1) it is possible to directly import an OpenPGP private key.\n\nTo import a private key with the fingerprint 0123456789012345678901234567890123456789 to the card with the identifier 0123:01234567:\n\n```\n$ oct admin --card 0123:01234567 import <(gpg --export-secret-key 0123456789012345678901234567890123456789)\n```\n\n"
    },
    {
      "title": "Export SSH public key",
      "level": 3,
      "content": "With oct-ssh(1) it is possible to export the SSH public key (among other data) for the authentication slot of the card.\n\nThe below provides an example with dummy data:\n\n```\n$ oct ssh\n```\n\n```\nOpenPGP card 0123:01234567\n\nAuthentication key fingerprint:\nD3C4B18828E34FE079273C27DFEA102BC0BF7122\n\nSSH public key:\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN3SwnYBGotQMbGxG6VRWc8vj6uq24Q2tUGvjkU4BGCd opgpcard:0123:01234567\n```\n\nTo strip all data unnecessary for an ~/.ssh/authorized_keys file (see ssh(1) ยง FILES), use the --key-only option:\n\n```\n$ oct ssh -c 0123:01234567 --key-only\n```\n\n```\nssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIN3SwnYBGotQMbGxG6VRWc8vj6uq24Q2tUGvjkU4BGCd opgpcard:0123:01234567\n```\n\n"
    },
    {
      "title": "Sign data",
      "level": 3,
      "content": "With oct-sign(1) it is possible to sign data using a signing key on a card.\n\nThe following commands use an example card to sign the file hello.txt:\n\n```\n$ echo \"hello world\" > hello.txt\n$ oct sign --card 0123:01234567 detached hello.txt 2>/dev/null\nEnter User PIN:\n-----BEGIN PGP MESSAGE-----\n\nwr0EABYKAG8FgmVcxgQJEHwxCjP5RdJLRxQAAAAAAB4AIHNhbHRAbm90YXRpb25z\nLnNlcXVvaWEtcGdwLm9yZ8BSR6PrXSIRnrQl6r6HEetWVjCVXQtR1Z3PzD9EfbWY\nFiEEuFXqMwYb6iFIyl2ufDEKM/lF0ksAAOY2AQC7+Tuh8Gal+kCCfVChD0VV+GUA\nyd+leLeylIySXV7qVwD9H2x5QBrgyF/vODNp1tdorTvPwieV/Bop9FCkHYbHJg8=\n=cOQ/\n-----END PGP MESSAGE-----\n```\n\n"
    },
    {
      "title": "Decrypt encrypted data",
      "level": 3,
      "content": "With oct-decrypt(1) it is possible to decrypt data using the encryption slot of a card.\n\nIn the below example a message is encrypted using sq-encrypt(1), using the OpenPGP public key alice.pub.\n\n```\n$ echo \"hey alice\" | sq encrypt --recipient-file alice.pub > message.pgp\n$ oct decrypt --card 0123:01234567 message.pgp\nEnter User PIN:\nhey alice\n```\n\n"
    },
    {
      "title": "Switch identities of a Nitrokey Start",
      "level": 3,
      "content": "The Nitrokey Start offers using three separate identities on a single hardware token, each with their separate signing, encryption and authentication slot. Effectively, this is equal to having three separate OpenPGP smartcards with separate card identifiers.\n\nWith oct-system-set-identity(1) it is possible to switch between these identities.\n\nTo switch to the second identity, use:\n\n```\n$ oct system set-identity --card FFFE:01234567 1\n```\n\nTo switch back to the first identity, use:\n\n```\n$ oct system set-identity --card FF01:01234567 0\n```\n\n"
    },
    {
      "title": "Debug smartcard setup",
      "level": 3,
      "content": "Use oct-list(1) to list all connected cards that are available to pcscd(8). If the connected card is not showing up, it is likely that it is blocked by another process, such as scdaemon. The scdaemon(1) can be terminated using\n\n```\n$ gpgconf --kill scdaemon\n```\n\n"
    }
  ]
}