{
  "title": "Amule",
  "url": "https://wiki.archlinux.org/title/Amule",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "aMule is an eMule-like client for the eDonkey Network and Kademlia networks, supporting multiple platforms.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the amule package.\n\namuled is a full featured aMule daemon, running without any user interface (GUI). It is controlled by remote access through aMuleGUI (GTK), aMuleWeb, or aMuleCmd.\n\n"
    },
    {
      "title": "Services",
      "level": 2,
      "content": "The package provides two systemd services: amuled and amuleweb. First you need to configure it. You need to provide passwords for external connection and admin password for amuleweb. Start amuled service and amuleweb if you require it. Enable them to start aMule every boot.\n\nOnce amulweb service is started, it is available at http://127.0.0.1:4711 (or with external address of your host).\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "At package installation time a new user account amule created. This account is used to run systemd services.\n\nAll configuration and temporary files are kept in amule home directory /var/lib/amule among them:\n\n- for amuled /var/lib/amule/.aMule/amule.conf\n- for amuleweb /var/lib/amule/.aMule/remote.conf\n\nAt the package installation time pacman generates a simple amule.conf file with preset external connection password. The same password is used for amuleweb configuration file. One can use the password for connecting amule from other remote clients such as amule-gui.\n\nTo generate password, run:\n\n```\n$ echo -n your password here | md5sum | cut -d ' ' -f 1\n```\n\nThe output of the above command is the encrypted password. Now you edit the configuration file by adding following lines under section [ExternalConnect]:\n\n```\n/var/lib/amule/.aMule/amule.conf\n```\n\n```\n[ExternalConnect]\nAcceptExternalConnections=1\nECPassword=<encrypted password>\n```\n\nDo not forget that all files under /var/lib/amule should be owned by amule user.\n\n```\n# chown amule:amule -R /var/lib/amule\n```\n\n"
    },
    {
      "title": "Create configuration files",
      "level": 3,
      "content": "Start amuleweb using the user you just created to create the configuration file:\n\n```\n[amule]$ amuleweb --write-config --password=password here --admin-pass=web password here\n```\n\nThis command will write the configuration file. The password here is the unencrypted password you used to configure amuled. The password for the log in on the web interface will be set to web password here.\n\n"
    },
    {
      "title": "amulegui",
      "level": 2,
      "content": "Amulegui is a GTK interface for aMule.\n\n"
    },
    {
      "title": "Configuring notifications",
      "level": 3,
      "content": "Some automatic actions settings are avaible through Settings > Events. The command notify-send is useful to set notifications, using some amule variables. In example, set the core command in the section Download completed for a notification when a download is complete to:\n\n```\nnotify-send -i amule \"%NAME completed (%SIZE bytes)\"\n```\n\nThe option -i amule includes the amule icon (a custom file may be specified adding its path between apostrophes, instead of \"amule\" icon filename).\n\n"
    },
    {
      "title": "Docker",
      "level": 2,
      "content": "A Docker image is available, see https://hub.docker.com/r/ngosang/amule.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Getting_Started at aMule wiki.\n\n"
    }
  ]
}