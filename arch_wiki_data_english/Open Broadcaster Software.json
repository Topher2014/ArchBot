{
  "title": "Open Broadcaster Software",
  "url": "https://wiki.archlinux.org/title/Open_Broadcaster_Software",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- FFmpeg\n- Screen capture#Screencast software\n\nOpen Broadcaster Software (OBS) is an open source cross-platform video recording and live-streaming application. It provides an easy to pick up and extensible workflow with customizable scenes, volume mixers, transitions, filters and more.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nInstall one of the following packages:\n\n- obs-studio - latest OBS release.\n- obs-studio-gitAUR - latest commit to master.\n- obs-studio-tytan652AUR\n- obs-studio-browserAUR\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "For easy configuration, Tools > Auto-Configuration Wizard can quickly set up base settings for both recording and live-streaming. The wizard auto-selects bitrate, resolution and encoder based on your hardware (and network connection if streaming was set up).\n\n"
    },
    {
      "title": "Hardware video acceleration",
      "level": 3,
      "content": "Hardware-accelerated encoding and decoding is best for performance, CPU/GPU usage and quality. The encoder can be changed in Settings > Output > Streaming > Encoder (may have to first set Settings > Output > Output Mode to Advanced). See Hardware video acceleration if a hardware encoder is not detected.\n\n"
    },
    {
      "title": "Recording output",
      "level": 3,
      "content": "By default, OBS will output recordings in the user's home path with spaces in the video filename and the same encoder selected for streaming. The output path, filesize, file format, filename style and more can be changed in Settings > Output > Recording.\n\n"
    },
    {
      "title": "Hotkeys",
      "level": 3,
      "content": "By default, OBS assigns no hotkeys. All hotkey pairs highlighted in red upon selection can use the same keybind for toggling the pair's function.\n\n"
    },
    {
      "title": "Virtual camera output",
      "level": 3,
      "content": "Starting from version 26.1, OBS supports virtual camera output on Linux. To use it, install v4l2loopback, then the Start Virtual Camera button will appear in OBS. If the v4l2loopback kernel module is not loaded yet, OBS will automatically try to load it and ask for administrative privileges to do so (using pkexec(1)).\n\n"
    },
    {
      "title": "Wayland",
      "level": 3,
      "content": "Since OBS is a Qt application, see Wayland#Qt to make it work under Wayland. OBS has upgraded from Qt 5 to Qt 6 since version 28, so installation of qt6-wayland is required for the newer versions. See PipeWire#WebRTC screen sharing to enable Wayland screen capture.\n\n"
    },
    {
      "title": "Global shortcuts in KDE not working",
      "level": 4,
      "content": "The global shortcuts set in OBS only work when OBS is in focus. As a workaround, you can control OBS through its WebSocket interface, which can be enabled in OBS by going to Tools > WebSocket Server Settings and selecting Enable WebSocket server.\n\nThe WebSocket can then be controlled with obsws-python or obs-websocket-py (version >=1.0). Either of them can be installed with pip. Then in System Settings > Shortcuts, you can add the following command for obsws-python to set your custom shortcut to toggle recording:\n\nNote: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\n```\npython -c \"import obsws_python;obsws_python.ReqClient(host='localhost',port=4455,password='yourwebsocketpassword').toggle_record()\"\n```\n\nOr the following command if you're using obs-websocket-py:\n\n```\npython -c \"from obswebsocket import obsws,requests;c=obsws('localhost',4455,'yourwebsocketpassword');c.connect();c.call(requests.ToggleRecord());c.disconnect()\"\n```\n\nThe WebSocket password and port can be found in WebSocket Server Settings > Show Connect Info.\n\nIf you want to avoid complex one-liners, use recording-toggle.py script.\n\nIf you want to use standard python and no additional obs-specific python dependencies, use the obs-control.py script.\n\n"
    },
    {
      "title": "Browser source",
      "level": 3,
      "content": "The obs-browser plugin gives the ability to use a webpage within the canvas, typically for web-based overlays. The webpage can be interacted with and works like any other source type.\n\nThe default obs-studio package does not provide this plugin. It can be added via other clients or plugin packages:\n\n- obs-studio-gitAUR compiles with the browser plugin.\n- obs-studio-tytan652AUR is a custom client that provides the browser plugin as well as browser docks, along with other general improvements.\n\n"
    },
    {
      "title": "Capturing via Vulkan/OpenGL",
      "level": 3,
      "content": "The obs-vkcapture plugin adds the capability to capture Vulkan or OpenGL programs by hooking into those APIs directly, rather than using generic Xorg or Wayland window capture APIs. To use it, install obs-vkcaptureAUR, as well as lib32-obs-vkcaptureAUR if capturing 32-bit applications. Follow the instructions in the GitHub repository to setup a Game Capture using the plugin.\n\n"
    },
    {
      "title": "Encoding using GStreamer",
      "level": 3,
      "content": "obs-gstreamer is a project which provides:\n\n- An encoder plugin for using GStreamer for encoding.\n- Plugins for using a GStreamer pipeline as a source, video filter, or audio filter. This is an advanced capability intended for users familiar with GStreamer usage.\n\nTo use obs-gstreamer for encoding, install obs-gstreamerAUR (or obs-vaapiAUR to get the standalone plugins) and change OBS' encoder to VAAPI H.26x/VPx/AV1 on <device name>. If OBS gives an error regarding encoders you might need to install the gstreamer-vaapi package.\n\n"
    },
    {
      "title": "Manual plugins installation",
      "level": 3,
      "content": "You can manually install plugin to the ~/.config/obs-studio/plugins/. The folder structure is the following:\n\n```\n~/.config/obs-studio/plugins/plugin_name/bin/64bit/plugin_name.so\n~/.config/obs-studio/plugins/plugin_name/data/locale/en-US.ini\n```\n\n"
    },
    {
      "title": "Record rectangular area",
      "level": 3,
      "content": "If you use KDE, you can select rectangular area for the recording using the helper script obs-rectangle-area-selector.\n\n"
    },
    {
      "title": "QuickSync returns \"Error creating a MFX session\"",
      "level": 3,
      "content": "This error can occur if the right Intel QuickSync drivers are not installed.\n\n```\n[AVHWDeviceContext @ 0x6111a37c1040] Error creating a MFX session: -9.\nDevice creation failed: -1313558101.\n```\n\nTo use QuickSync, install intel-media-sdk for Iron Lake (Gen5) to Ice Lake (Gen10) GPUs, or vpl-gpu-rt for Tiger Lake (Gen11) and newer GPUs.\n\nFor more information, refer to FFmpeg#Intel QuickSync (QSV).\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- OBS Wiki\n- Fixing The Missing OBS Features On Arch Linux\n\n"
    }
  ]
}