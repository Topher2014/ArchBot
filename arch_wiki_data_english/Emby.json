{
  "title": "Emby",
  "url": "https://wiki.archlinux.org/title/Emby",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Emby is a personal media server, which has clients for many platforms. It is used to organize personal home media, as well as playback on other devices. There are a large amount of channels that are supported by the community, and can even be used with PVR and Tuner cards to provide TV streaming remotely.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the emby-server package.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Enable and start emby-server.service.\n\nAccess Emby through the browser by navigating to http://localhost:8096/\n\n"
    },
    {
      "title": "Write permissions",
      "level": 2,
      "content": "Emby runs under the user and user group emby using systemd's DynamicUser feature. By default, Emby will have at most read permissions to your media files thanks to systemd's filesystem abstraction.\n\nYou might want to give emby write permissions and enable media deletion, local metadata saving, subtitle downloading and more.\n\nYou will need to create a dedicated group for your media files, or use one you already belong to, and give it access to your folders like so:\n\n```\n# create the media group\ngroupadd media\n\n# optionally add your_user to the media group\nusermod -aG media your_user\n\n# give ownership of your media files to the media group\nchgrp -R media /mnt/media_files\n\n# make the files writeable to the media group\nfind /mnt/media_files -type f -exec chmod 664 {} +\n\n# make the directories writeable to the media group\nfind /mnt/media_files -type d -exec chmod 775 {} +\n\n# add the sticky group bit so that newly created directories belong to the media group\nfind /mnt/media_files -type d -exec chmod g+s {} +\n```\n\nThen extend the unit:\n\n```\n/etc/systemd/system/emby-server.service.d/write-permissions.conf\n```\n\n```\n[Service]\nSupplementaryGroups=media\nReadWritePaths=/mnt/media_files\nUMask=0002\n```\n\nThis will add the emby user to the media group, and enable write permission to the /mnt/media_files directory through systemd. Rinse and repeat for any additional media folders you might have.\n\n"
    },
    {
      "title": "Hardware acceleration",
      "level": 2,
      "content": "Emby supports hardware accelerated transcoding using the GPU. This greatly reduces CPU usage when transcoding, and is for some systems the only option if the CPU itself is not powerful enough.\n\nTo check whether hardware acceleration is available, navigate to the transcoding settings in the Emby web interface, and select Advanced under Enable hardware acceleration when available. A list of available hardware encoders and decoders will appear. If nothing is detected, see the following GPU-specific instructions.\n\n"
    },
    {
      "title": "Intel",
      "level": 3,
      "content": "To enable hardware accelerated video transcoding/decoding for Intel GPUs, install the intel-media-sdk package.\n\nConfirm that hardware acceleration is detected with:\n\n```\n$ ffdetect-emby qsvenc\n```\n\nThe output should list detected encoding profiles along with other information.\n\n"
    },
    {
      "title": "Nvidia",
      "level": 3,
      "content": "To enable hardware accelerated video transcoding/decoding for Nvidia GPUs, the proprietary Nvidia drivers are required. Install either the nvidia or the nvidia-dkms package.\n\nConfirm that hardware acceleration is detected with:\n\n```\n$ ffdetect-emby nvenc\n```\n\nThe output should list detected encoding profiles along with other information.\n\n"
    },
    {
      "title": "nginx Example",
      "level": 2,
      "content": "```\n# Based on example from https://emby.media/community/index.php?/topic/47508-how-to-nginx-reverse-proxy/\nserver {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n    server_name emby.yourdomain.com;\n\n    ssl_certificate /etc/letsencrypt/live/emby.yourdomain.com/fullchain.pem; # managed by Certbot\n    ssl_certificate_key /etc/letsencrypt/live/emby.yourdomain.com/privkey.pem; # managed by Certbot\n    include /etc/letsencrypt/options-ssl-nginx.conf;\n    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;\n    add_header Strict-Transport-Security \"max-age=31536000\" always;\n    ssl_trusted_certificate /etc/letsencrypt/live/emby.yourdomain.com/chain.pem;\n    ssl_stapling on;\n    ssl_stapling_verify on;\n\n    # Security / XSS Mitigation Headers\n    add_header X-Frame-Options \"SAMEORIGIN\";\n    add_header X-XSS-Protection \"1; mode=block\";\n    add_header X-Content-Type-Options \"nosniff\";\n\n    location = / {\n        return 302 https://$host/web/;\n    }\n\n    location / {\n        # Proxy main emby traffic\n        proxy_pass http://127.0.0.1:8096;\n\n        proxy_hide_header X-Powered-By;\n        proxy_set_header Range $http_range;\n        proxy_set_header If-Range $http_if_range;\n\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n        proxy_set_header X-Forwarded-Protocol $scheme;\n        proxy_set_header X-Forwarded-Host $http_host;\n\n        # Disable buffering when the nginx proxy gets very resource heavy upon streaming\n        proxy_buffering off;\n\n        # Next three lines allow websockets\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n    }\n\n}\n```\n\n"
    },
    {
      "title": "No such file or directory",
      "level": 3,
      "content": "Make sure directory referenced by ReadWritePaths exists. If it does not exist emby-server.service will fail to start with errors. For example if /mnt/media_files does not exist systemd will try to use it as a mount:\n\n```\nemby-server.service: Failed to set up mount namespacing: /run/systemd/unit-root/mnt/media_files: No such file or directory\nemby-server.service: Failed at step NAMESPACE spawning /usr/bin/emby-server: No such file or directory\n```\n\n"
    }
  ]
}