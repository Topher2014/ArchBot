{
  "title": "Pekwm",
  "url": "https://wiki.archlinux.org/title/Pekwm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Window manager\n\npekwm is a X window manager written by Claes NÃ¤sten. The code is based on the aewm++ window manager, but it has evolved enough that it no longer resembles aewm++ at all. It also has an expanded feature-set, including window grouping (not unlike to pwm, or even fluxbox), auto properties, xinerama and keygrabber that supports keychains, and much more.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the pekwm package.\n\n"
    },
    {
      "title": "Starting",
      "level": 2,
      "content": "Run pekwm with xinit.\n\n"
    },
    {
      "title": "Configuring PekWM",
      "level": 2,
      "content": "The main configuration file is stored in the file ~/.pekwm/config. It controls the workspace and viewports settings, the menu and harbour behaviour, window edge resistance, and more. There is an example file with complete documentation in the pekwm documentation.\n\n"
    },
    {
      "title": "Menus",
      "level": 3,
      "content": "PekWM comes with pre-created menus by default stored in ~/.pekwm/menu. These do not reflect an existing system and as such are likely to be inaccurate. These should be seen as an example only.\n\n"
    },
    {
      "title": "MenuMaker",
      "level": 4,
      "content": "One way to automatically set up menus for your installed applications is menumaker. To set up menus of all your installed applications run it with the following command:\n\n```\nmmaker --no-desktop pekwm\n```\n\nTo see a full list of options, run mmaker --help\n\nNow you can modify the menu file by hand, or simply regenerate the list whenever you install new software.\n\n"
    },
    {
      "title": "Manually",
      "level": 4,
      "content": "The menu file is ~/.pekwm/menu. The syntax is fairly straightforward; a simple entry has the following structure:\n\n```\nEntry = \"NAME\" { Actions = \"Exec COMMAND &\" }\n```\n\nA submenu has the following syntax:\n\n```\nSubmenu = \"NAME\" {\n     Entry = \"NAME\" { Actions = \"Exec COMMAND &\" }\n     Entry = \"NAME\" { Actions = \"Exec COMMAND &\" }\n}\n```\n\nTo add a separator line to the menu, use the following:\n\n```\nSeparator {}\n```\n\nPekWM also supports dynamic menus. These are menu entries or submenus that display the output of a run script every time the entry or submenu is accessed. Check the exact syntax each menu requires, as they may vary.\n\nYou can find dynamic menus for Gmail and network connections, and one to display the time and date.\n\nThere used to be a project called pekwm_menu_tools which aimed to be a set of useful applications for generating dynamic menus for pekwm.\n\n"
    },
    {
      "title": "Hotkeys",
      "level": 3,
      "content": "The hotkey settings are stored in ~/.pekwm/keys. This file controls all the keyboard bindings and keychains used in PekWM. You can add keyboard bindings to launch programs or to perform actions in PekWM, such as show a menu, move a window, switch desktops, etc. For a full list of pekwm's actions, see the documentation.\n\nYou can have more than one action assigned to one key combination. To do so, just separate the actions by a semicolon. Here is an example:\n\n```\nKeyPress = \"Ctrl Mod1 R\" { Actions = \"Exec osdctl -s 'Reconfiguring'; Reload\" }\n```\n\nWhen you press Ctrl+Alt+R Pekwm will display on the screen the text 'Reconfiguring' (osdctl -s 'Reconfiguring') and reconfigure (Reload). (Note that this requires osdsh to be installed)\n\nThe next example will bind a media key to lower the volume:\n\n```\nKeyPress = \"XF86AudioLowerVolume\" { Actions = \"exec amixer set Master 5%- unmute &\" }\n```\n\nYou can also do \"chains\" of keys, so for example the code\n\n```\nChain = \"Ctrl Mod1 C\" {\n     KeyPress = \"Q\" { Actions = \"MoveToEdge TopLeft\" }\n     KeyPress = \"W\" { Actions = \"MoveToEdge TopCenterEdge\" }\n}\n```\n\nWould make it so that if you first press Ctrl+Alt+c and then q you move the active window to the top left corner of the screen, and if you press Ctrl+Alt+c and then w you move the window to the top center edge.\n\n"
    },
    {
      "title": "Mouse",
      "level": 3,
      "content": "The Mouse settings are stored in ~/.pekwm/mouse. This file is also rather self-explanatory in its layout. For example:\n\n```\nFrameTitle {\n     ButtonRelease = \"1\" { Actions = \"Raise; Focus\" }\n}\n```\n\nmeans that if you release button 1 (usually left mouse button) over the frame title of a window the window will be \"Raised\" above the other windows and it will become the focused window.\n\nOne of the things PekWM is set up to do by default is to focus windows when the mouse moves over them (as opposed to the \"click to focus\" style). This is one thing that quite a few users would like to change to the more \"traditional\" way. To change this, look for the following lines in the file and do what they say (there are quite a few of the first, but only one occurrence of the second):\n\n```\n# Remove the following line if you want to use click to focus.\n# Uncomment the following line if windows should raise when clicked.\n```\n\n"
    },
    {
      "title": "Autostart",
      "level": 3,
      "content": "The autostart file is ~/.pekwm/start. If you would like to display a wallpaper or launch a panel whenever Pekwm is started, you can add entries for these things in that file. Note, though, that these applications are run every time Pekwm is started -- including when you run Restart in the root menu. The commands are executed only after Pekwm is started.\n\nTo add an application, use the following structure:\n\n```\nnameofapplication &\n```\n\nThe & at the end is crucial, or anything after it will not be run. Here is an example:\n\n```\nxfce4-panel &\nconky &\nhsetroot -fill ~/images/darkwood.jpg &\n```\n\nBefore you can use this file, you will have to make it executable.\n\n"
    },
    {
      "title": "Variables",
      "level": 3,
      "content": "The Variables file contains the general variables used in PekWM, the default entry should explain it quite clearly:\n\n```\n$TERM=\"xterm -fn fixed +sb -bg white -fg black\"\n```\n\nWhenever the variable $TERM is used in any of PekWM's configuration files, the command xterm -fn fixed +sb -bg white -fg black will be run. For example changing it to:\n\n```\n$TERM=\"urxvt\"\n```\n\nwould mean that urxvt would be loaded for terminal commands.\n\n"
    },
    {
      "title": "Autoproperties",
      "level": 3,
      "content": "If you would like certain applications to open on certain workspaces, have a certain title, skip the (window) menus, or be automatically tabbed together, you can specify all that here. It is probably the most confusing configuration file in PekWM, but it is also the most powerful file. The amount of things that can be set in this file are far too great to fit here, but it is explained in detail in the autoproperties page of the documentation. The default ~/.pekwm/autoproperties file also contains a crash course to autopropping.\n\n"
    },
    {
      "title": "Themes",
      "level": 2,
      "content": "A collection of themes for pekwm is available on the official homepage [1], a more comprehensive list of themes is available at Box-Look.org but they are not always verified against the current version of pekwm.\n\nTo install a theme, extract the theme archive to one of the theme paths:\n\n- global: /usr/share/pekwm/themes\n- user only: ~/.pekwm/themes\n\n"
    },
    {
      "title": "Setting a wallpaper",
      "level": 2,
      "content": "With the release pekwm 0.2.0 a background setting application is included named pekwm_bg.\n\nSetting a scaled background image:\n\n```\n$ pekwm_bg Image image.png#scaled\n```\n\nSetting 3 horizontal lines:\n\n```\n$ pekwm_bg LinezHors 33% #afadbf #9f9daf #afadbf\n```\n\npekwm 0.1.X releases did not come with a background setting application and required you to use a separate program to set a desktop wallpaper. See List of applications/Other#Wallpaper setters.\n\n"
    },
    {
      "title": "When using Nvidia TwinView, windows maximize across both screens",
      "level": 3,
      "content": "Edit ~/.pekwm/config and look for the line:\n\n```\nHonourRandr = \"True\"\n```\n\nand change it to\n\n```\nHonourRandr = \"False\"\n```\n\n"
    },
    {
      "title": "Scrolling does not work in GTK 3 applications",
      "level": 3,
      "content": "Try setting the environment variable GDK_CORE_DEVICE_EVENTS. See pekwm issue #4.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- pekwm Homepage\n- Howto: Install and configure Pekwm\n\n"
    }
  ]
}