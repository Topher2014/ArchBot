{
  "title": "Dbus",
  "url": "https://wiki.archlinux.org/title/Dbus",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nD-Bus is a message bus system that provides an easy way for inter-process communication. It consists of a daemon, which can be run both system-wide and for each user session, and a set of libraries to allow applications to use D-Bus.\n\ndbus is pulled and installed as a dependency of systemd and user session bus is started automatically for each user.\n\n"
    },
    {
      "title": "Implementations",
      "level": 2,
      "content": "Arch provides two D-Bus message broker implementations. Initially, user will be asked to choose a desired dbus-units provider during installation of systemd package. Only one implementation can be installed at a time.\n\n"
    },
    {
      "title": "dbus-broker",
      "level": 3,
      "content": "dbus-broker is currently the default implementation for Arch [1] [2]. It is a drop-in replacement for the reference implementation, which aims \"to provide high performance and reliability, while keeping compatibility to the D-Bus reference implementation\".\n\nSelect dbus-broker-units when asked for dbus-units provider, or install it explicitly.\n\n"
    },
    {
      "title": "Reference implementation",
      "level": 3,
      "content": "The reference implementation is still officially supported by Arch.\n\nSelect dbus-daemon-units when asked for dbus-units provider, or install it explicitly.\n\n"
    },
    {
      "title": "Override dbus service",
      "level": 3,
      "content": "This is useful when specifying a particular service among other services providing the same well-known bus name. See KeePass#Autostart and KDE Wallet#Automatic D-Bus activation for example.\n\nD-Bus services can be masked by setting Exec=/bin/false in service files of $XDG_DATA_HOME/dbus-1/services. For example, to mask gvfsd,\n\n```\n$ cp /usr/share/dbus-1/services/org.gtk.vfs.Daemon.service ~/.local/share/dbus-1/services\n$ sed -i 's|^Exec=.*|Exec=/bin/false|' ~/.local/share/dbus-1/services/org.gtk.vfs.Daemon.service\n```\n\nIf the service is already launched, the override will not work. The existing service's process must be killed, or launched earlier.\n\n"
    },
    {
      "title": "Debugging",
      "level": 2,
      "content": "- Bustle — Draws sequence diagrams of D-Bus activity. It shows signal emissions, method calls and their corresponding returns, with time stamps for each individual event and the duration of each method call.\n\n- D-Feet — Easy to use D-Bus debugger GUI tool. Discontinued.\n\n- D-Spy — Easy to use D-Bus debugger GUI tool. D-Spy can be used to inspect D-Bus interfaces of running programs and invoke methods on those interfaces.\n\n- Qt D-Bus Viewer — GUI D-Bus debugger. Can be used to inspect D-Bus services and invoke methods on them.\n\nYou can also use busctl(1) from systemd.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://freedesktop.org/wiki/Software/dbus/\n- https://freedesktop.org/wiki/IntroductionToDBus/\n- https://uyha.github.io/technical/dbus-systemd.html systemd uses DBus as the mechanism to interact with it. This article introduces just enough DBus concepts and the usage of busctl to communicate with systemd.\n\n"
    }
  ]
}