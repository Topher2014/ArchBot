{
  "title": "Forgejo",
  "url": "https://wiki.archlinux.org/title/Forgejo",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Gitea\n- Gogs\n- Git\n\nForgejo is a hard fork of Gitea managed by the non-profit organization Codeberg, lightweight code hosting solution written in Go and published under the MIT license.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the forgejo or forgejo-gitAUR package.\n\nForgejo requires the use of a database backend, the following are supported:\n\n- MariaDB/MySQL\n- PostgreSQL\n- SQLite\n- MSSQL (Not supported since v8.0)\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The user configuration file is located at /etc/forgejo/app.ini.\n\nSee the Forgejo docs for more configuration examples.\n\nIf you are migrating from Gitea see the migration guide for Forgejo\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 3,
      "content": "Install and configure PostgreSQL.\n\nChoose between TCP or UNIX Socket, and jump to the corresponding section.\n\n"
    },
    {
      "title": "With TCP socket",
      "level": 4,
      "content": "Create the new user while connecting to the server as postgres user (you will be prompted for a password for the new user):\n\n```\n[postgres]$ createuser -P forgejo\n```\n\nCreate the Forgejo database, owned by forgejo user:\n\n```\n[postgres]$ createdb -O forgejo forgejo\n```\n\nPostgreSQL#Configure PostgreSQL to be accessible from remote hosts\n\nVerify it works:\n\n```\n$ psql --host=ip_address --dbname=forgejo --username=forgejo --password\n```\n\nConfigure Forgejo either through the first-run installer or update app.ini:\n\n```\n/etc/forgejo/app.ini\n```\n\n```\nDB_TYPE             = postgres\nHOST                = hostadress:port\nNAME                = forgejo\nUSER                = forgejo\n; Use PASSWD = `your password` for quoting if you use special characters in the password.\nPASSWD              = password\n```\n\n"
    },
    {
      "title": "With Unix socket",
      "level": 4,
      "content": "Create the new user while connecting to the server as postgres user:\n\n```\n[postgres]$ createuser forgejo\n```\n\nCreate the Forgejo database, owned by forgejo user:\n\n```\n[postgres]$ createdb -O forgejo forgejo\n```\n\nSetup the Unix socket by adding the following line to /var/lib/postgres/data/pg_hba.conf:\n\n```\n/var/lib/postgres/data/pg_hba.conf\n```\n\n```\nlocal    forgejo           forgejo           peer\n```\n\nRestart postgresql.service.\n\nVerify it works:\n\n```\n[forgejo]$ psql --dbname=forgejo --username=forgejo\n```\n\nConfigure Forgejo either through the first-run installer or update app.ini:\n\n```\n/etc/forgejo/app.ini\n```\n\n```\nDB_TYPE             = postgres\nHOST                = /run/postgresql/\nNAME                = forgejo\nUSER                = forgejo\nPASSWD              =\n```\n\n"
    },
    {
      "title": "MariaDB/MySQL",
      "level": 3,
      "content": "The following is an example of setting up MariaDB, setting your desired password:\n\n```\n$ mysql -u root -p\n```\n\n```\nmysql> CREATE DATABASE `forgejo` DEFAULT CHARACTER SET `utf8mb4` COLLATE `utf8mb4_unicode_ci`;\nmysql> CREATE USER `forgejo`@'localhost' IDENTIFIED BY 'password';\nmysql> GRANT ALL PRIVILEGES ON `forgejo`.* TO `forgejo`@`localhost`;\nmysql> FLUSH PRIVILEGES;\nmysql> \\q\n```\n\nTry connecting to the new database with the new user:\n\n```\n$ mysql -u forgejo -p -D forgejo\n```\n\nConfigure MariaDB either through the first-run installer or update app.ini:\n\n```\n/etc/forgejo/app.ini\n```\n\n```\nDB_TYPE  = mysql\nHOST     = 127.0.0.1:3306Â ; or /var/run/mysqld/mysqld.sock\nNAME     = forgejo\nUSER     = forgejo\nPASSWD   = password\n```\n\n"
    },
    {
      "title": "SQLite",
      "level": 3,
      "content": "No specific configuration needed for SQLite itself.\n\nConfigure SQLite either through the first-run installer or update app.ini:\n\n```\n/etc/forgejo/app.ini\n```\n\n```\nDB_TYPE = sqlite3\nPATH= /var/lib/forgejo/data/forgejo.db\n```\n\n"
    },
    {
      "title": "MSSQL",
      "level": 3,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nThe database must be created with collation _CS_AS (Case-sensitive, accent-sensitive)\n\nSuch as:\n\n```\nTSQL\n```\n\n```\nCREATE DATABASE forgejo\nCOLLATE SQL_Latin1_General_CP1_CS_AS;\n```\n\nConfigure MSSQL either through the first-run installer or update app.ini\n\n```\n/etc/forgejo/app.ini\n```\n\n```\nDB_TYPE  = mssql\nHOST     = 10.0.0.2:1433 ;Update IP Address\nNAME     = forgejo\nUSER     = forgejo\nPASSWD   = password\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Start/enable forgejo.service, the webinterface should listen on http://localhost:3000.\n\nWhen running Forgejo for the first time, it should redirect to http://localhost:3000/install.\n\n- You might want to configure a reverse proxy to access remotely, e.g. nginx.\n- If you want Forgejo to listen on all interfaces, set HTTP_ADDR = 0.0.0.0 in /etc/forgejo/app.ini.\n\n"
    },
    {
      "title": "Local Shell Client (forgejo)",
      "level": 3,
      "content": "Forgejo comes packages with a local shell administration tool. Binary is located in /bin/forgejo\n\nMore information can be found at https://forgejo.org/docs/latest/admin/command-line/\n\n"
    },
    {
      "title": "Enable SSH Support",
      "level": 3,
      "content": "Make sure SSH is properly configured and running.\n\n"
    },
    {
      "title": "Setup your domain",
      "level": 4,
      "content": "You might want to set SSH_DOMAIN, e.g.:\n\n```\n/etc/forgejo/app.ini\n```\n\n```\nSSH_DOMAIN                 = git.domain.tld\n```\n\n"
    },
    {
      "title": "Configure SSH",
      "level": 4,
      "content": "By default, Forgejo will run as the user forgejo; this account will also be used for ssh repository access. For ssh access to work, you have to enable PAM. Alternatively, you might have to unlock service account.\n\n```\n/etc/ssh/sshd_config\n```\n\n```\n...\nUsePAM yes\n...\n```\n\nIf you use AllowUsers in your SSH configuration, add AllowUsers forgejo to it, e.g.:\n\n```\n/etc/ssh/sshd_config\n```\n\n```\n...\nAllowUsers archie forgejo\n...\n```\n\nRestart sshd.service if you use it (nothing to do if you use sshd.socket).\n\n"
    },
    {
      "title": "Disable HTTP protocol",
      "level": 3,
      "content": "By default, the ability to interact with repositories by HTTP protocol is enabled. You may want to disable HTTP-support if using SSH, by setting DISABLE_HTTP_GIT to true.\n\n"
    },
    {
      "title": "Binding on restricted ports",
      "level": 3,
      "content": "If you use the built-in SSH server and want Forgejo to bind it on port 22, or if you want to bind Forgejo webserver directly on ports 80/443 (that is in a setup without proxy), you will need to add a drop-in systemd unit override:\n\n```\n/etc/systemd/system/forgejo.service.d/override.conf\n```\n\n```\n[Service]\nAmbientCapabilities=CAP_NET_BIND_SERVICE\nCapabilityBoundingSet=CAP_NET_BIND_SERVICE\nPrivateUsers=false\n```\n\n"
    },
    {
      "title": "Enable Dark Theme",
      "level": 3,
      "content": "In the ui section, you can set the DEFAULT_THEME to forgejo-dark for making the web interface use a dark background.\n\n"
    },
    {
      "title": "Customize the appearance of Forgejo",
      "level": 3,
      "content": "See the Forgejo docs[1] for more detail.\n\nThe appearance of forgejo is highly customizable using Go templates. First, create the /var/lib/forgejo/custom directory. Templates can be overridden by editing files in /var/lib/forgejo/custom/templates. The default templates can be found in the Forgejo source code under the templates directory. For instance, to customize the home page, copy templates/home.tmpl from the source code to /var/lib/forgejo/custom/templates/home.tmpl and edit the template as desired.\n\nIn addition, the logo and favicon can be changed by creating the following files: /var/lib/forgejo/custom/public/img/logo.svg and /var/lib/forgejo/custom/public/img/favicon.svg\n\nForgejo needs to be restarted after any changes to these files.\n\n"
    },
    {
      "title": "Configure reverse proxy",
      "level": 3,
      "content": "For additional information and examples, see the Reverse Proxies section on the Forgejo documentation website [2].\n\n"
    },
    {
      "title": "nginx",
      "level": 4,
      "content": "The following is an example of using nginx as reverse proxy for Forgejo over unix socket (you need to provide the SSL certificate):\n\n```\n/etc/nginx/servers-available/forgejo.conf\n```\n\n```\nserver {\n    listen 443 ssl;\n    listen [::]:443 ssl;\n    http2 on;\n    server_name git.domain.tld;\n\n    ssl_certificate /path/to/fullchain.pem;\n    ssl_certificate_key /path/to/privkey.pem;\n\n    location / {\n        client_max_body_size 512M;\n        proxy_pass http://unix:/run/forgejo/forgejo.socket;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n    }\n}\n```\n\nUpdate the [server] and [session] section of app.ini:\n\n```\n/etc/forgejo/app.ini\n```\n\n```\n[server]\nPROTOCOL                   = http+unix\nDOMAIN                     = git.domain.tld\nROOT_URL                   = https://git.domain.tld\nHTTP_ADDR                  = /run/forgejo/forgejo.socket\nLOCAL_ROOT_URL             =\n\n[session]\nCOOKIE_SECURE              = true\n```\n\n"
    },
    {
      "title": "Apache HTTP Server",
      "level": 4,
      "content": "The following is an example of using the Apache HTTP Server as reverse proxy for Forgejo over unix socket. To forward domain.tld to the Forgejo server, use\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nProxyPreserveHost On\nProxyRequests off\nAllowEncodedSlashes NoDecode\nProxypass / unix:/run/forgejo/forgejo.socket|http://domain.tld nocanon\nProxypassReverse / unix:/run/forgejo/forgejo.socket|http://domain.tld nocanon\n```\n\nwhere domain.tld should be replaced by your domain name (this entry is only passed as a header to the proxy, and does not seem to matter for this setup).\n\n```\n/etc/forgejo/app.ini\n```\n\n```\n[server]\nPROTOCOL                   = http+unix\nDOMAIN                     = domain.tld\nROOT_URL                   = https://domain.tld\nHTTP_ADDR                  = /run/forgejo/forgejo.socket\nLOCAL_ROOT_URL             =\n```\n\nTo forward a subpath such as domain.tld/git to the Forgejo server, use\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\n<Proxy *>\n  Order allow,deny\n  Allow from all\n</Proxy>\nAllowEncodedSlashes NoDecode\nProxypass /git unix:/run/forgejo/forgejo.socket|http://domain.tld nocanon\nProxypassReverse /git unix:/run/forgejo/forgejo.socket|http://domain.tld nocanon\n```\n\n```\n/etc/forgejo/app.ini\n```\n\n```\n[server]\nPROTOCOL                   = http+unix\nDOMAIN                     = domain.tld\nROOT_URL                   = https://git.domain.tld\nHTTP_ADDR                  = /run/forgejo/forgejo.socket\nLOCAL_ROOT_URL             =\n```\n\n"
    },
    {
      "title": "Setup for custom data directory",
      "level": 3,
      "content": "As of now, you cannot use a custom path like /srv/forgejo as your server home, since the shipped forgejo.service unit file marks everything read-only.\n\nTo enable these custom paths, create a drop-in snippet with your server home directory as a new ReadWriteDirectories directive:\n\n```\n/etc/systemd/system/forgejo.service.d/data-directory.conf\n```\n\n```\n[Service]\nReadWriteDirectories=/srv/forgejo\n```\n\nThen do a daemon-reload and restart forgejo.service for the changes to take effect.\n\n"
    },
    {
      "title": "Service failing with permission denied",
      "level": 3,
      "content": "If you manually create the forgejo user with a usual home folder /home/forgejo the forgejo service will not start and output an error like :\n\n```\nSep 04 04:44:32 systemd[1]: forgejo.service: Failed with result 'exit-code'.\nSep 04 04:44:32 systemd[1]: forgejo.service: Main process exited, code=exited, status=200/CHDIR\nSep 04 04:44:32 (forgejo)[30727]: forgejo.service: Failed at step CHDIR spawning /usr/bin/forgejo: Permission denied\nSep 04 04:44:32 (forgejo)[30727]: forgejo.service: Changing to the requested working directory failed: Permission denied\n```\n\nThe service needs the home folder of the user to be the main forgejo folder, the default being /var/lib/forgejo a fix would be:\n\n```\n$ usermod -d /var/lib/forgejo forgejo\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Forgejo Documentation\n\n"
    }
  ]
}