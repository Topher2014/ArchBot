{
  "title": "Bar-aint-recursive",
  "url": "https://wiki.archlinux.org/title/Bar-aint-recursive",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "lemonbar is a lightweight bar based on XCB. It provides foreground/background color switching along with text alignment and colored under/overlining of text, full UTF-8 support and reduced memory footprint. Nothing less and nothing more.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the lemonbar-gitAUR package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Configuration of lemonbar is now completely done via screenrc-like format strings and command line options as opposed to older versions, where configuration took place at compile-time.\n\nSee lemonbar(1) for a short overview of those configuration options.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "lemonbar prints no information on its own. To get any text into lemonbar you need to pipe text into it. The following example would write the text \"Hello World\" into your bar.\n\n```\n#!/bin/sh\n\n# Echo the text\necho \"Hello World\"\n```\n\nIf you want the text in lemonbar to update through a script, you need to add the -p option. This prevents lemonbar from exiting after stdin is closed.\n\n"
    },
    {
      "title": "Colors",
      "level": 3,
      "content": "lemonbar uses the following commands to color the text, background or the under/overline. Colors can be specified via the formats #RRGGBB, #AARRGGBB (with an alpha channel; this requires a compositor to be running), or even #RGB.\n\nThe special color - indicates the default color (which is set by command-line flags, or is otherwise the default white text on a black background).\n\nTable content:\nCommand | Meaning\n%{Fcolor} | Use color as the foreground/font color\n%{Bcolor} | Use color as the background\n%{Ucolor} | Use color for under/overlining the text\n\n"
    },
    {
      "title": "Text alignment",
      "level": 3,
      "content": "lemonbar also supports alignment of text. It uses the following commands to align the text\n\nTable content:\nCommand | Meaning\n%{l} | Aligns the text to the left\n%{c} | Aligns the text to the center\n%{r} | Aligns the text to the right\n\n"
    },
    {
      "title": "Examples",
      "level": 3,
      "content": "The following example prints the date and time in the middle of the bar, the font's color being yellow and the background blue and changes the font/background color back to the default color afterwards. Run it with /path/to/script/example.sh | lemonbar -p\n\n```\nexample.sh\n```\n\n```\n#!/bin/sh\n\n# Define the clock\nClock() {\n        DATETIME=$(date \"+%a %b %d, %T\")\n\n        printf \"$DATETIME\"\n}\n\n# Print the clock\n\nwhile true; do\n        echo \"%{c}%{F#FFFF00}%{B#0000FF} $(Clock)Â %{F-}%{B-}\"\n        sleep 1\ndone\n```\n\nAnother example showing the battery percentage. To use this script you need to install acpi.\n\n```\nexample.sh\n```\n\n```\n#!/bin/sh\n\n#Define the battery\nBattery() {\n        BATPERC=$(acpi --battery | cut -d, -f2)\n        echo \"$BATPERC\"\n}\n\n# Print the percentage\nwhile true; do\n        echo \"%{r}$(Battery)\"\n        sleep 1;\ndone\n```\n\n"
    },
    {
      "title": "XFT fonts",
      "level": 3,
      "content": "The default lemonbar version does not support XFT fonts. To get support for XFT fonts, you need to install lemonbar-xft-gitAUR, which replaces lemonbar-gitAUR.\n\nTo use different font with lemonbar, you need to pass -f option when starting lemonbar e.g. lemonbar -f \"Roboto Medium\".\n\n"
    },
    {
      "title": "Font Awesome icons",
      "level": 4,
      "content": "With XFT support, you can also add Font Awesome icons to your bar. You need to install ttf-font-awesome before using the icons and pass -f 'Font Awesome 6 Free' -f 'Font Awesome 6 Brands' -f 'Font Awesome 6 Free Solid' (or the appropriate version instead of '6') to lemonbar. Please note, that you also need to specify one more font (e.g. -f \"Roboto Medium\") to be used for other symbols than font awesome icons if you want something else visible in your lemonbar as font awesome does not contain other symbols.\n\nBefore adding an icon to lemonbar, you need to look up its unicode id on the icon list and pass it to lemonbar string. Here is a script that displays icon with Unicode id f242 in lemonbar:\n\n```\nfontawesome.sh\n```\n\n```\n#!/usr/bin/sh\necho -e \"\\uf242 Battery: 0\"\n```\n\nPay extra attention to echo -e flag, as it is necessary to properly use echo with escape sequences.\n\nAnd corresponding lemonbar command: lemonbar -f \"Roboto Medium\" -f 'Font Awesome 6 Free' -f 'Font Awesome 6 Brands' -f 'Font Awesome 6 Free Solid'\n\n"
    }
  ]
}