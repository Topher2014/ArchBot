{
  "title": "Puppet",
  "url": "https://wiki.archlinux.org/title/Puppet",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Puppet Server\n\nFrom Puppet web site:\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the puppet package.\n\nIf you want to install a puppet master you can install the puppetserverAUR package, the documentation for which is in Puppet server.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Puppet's main configuration file is puppet.conf which is located at /etc/puppetlabs/puppet/puppet.conf.\n\nThere are 3 sections to place settings depending if it is a master/agent: [main], [agent] and [master].\n\nBare minimum of settings are:\n\n- server: The hostname of the puppet server. Default: puppet\n- report: Most users should set this to true.\n- pluginsync: Most users should set this to true.\n- certname: The certified name of the machine (unique identifier). Default: fqdn\n\nPuppet will look for node configuration in /etc/puppetlabs/code/environments/production/manifests/site.pp.\n\nAfter starting puppet by daemon/cron/standalone, it will generate certificates in /etc/puppetlabs/puppet/ssl/ directory. You need to accept this certificate in the puppet master:\n\n```\n# puppet cert sign name\n```\n\nNotes on bindaddress for puppet master.\n\nThe default value for bindaddress is 0.0.0.0, which makes puppet listen on IPv4 only: bindaddress = 0.0.0.0\n\nTo make puppet master listen on IPv6, set the bindaddress value to: bindaddress = ::\n\nTo make puppet listen on both interface, set the value to: bindaddress = *\n\n"
    },
    {
      "title": "Facter",
      "level": 2,
      "content": "Facter is a companion program of puppet that gathers facts about the system it runs on.\n\nCommands:\n\n```\n# puppet facts find facter\n# facter -p\n```\n\n"
    },
    {
      "title": "Packages",
      "level": 3,
      "content": "Pacman is supported by puppet. Installing packages works out of the box since puppet 3.1.0.\n\n"
    },
    {
      "title": "Services",
      "level": 3,
      "content": "Since puppet 3.2.1, systemd on Arch Linux is fully supported.\n\nSee systemctl for details on how to use the provided units.\n\n"
    },
    {
      "title": "Puppet Bolt",
      "level": 2,
      "content": "Puppet Bolt is standalone piece of software that was introduced by puppet to allow applying tasks without the need for puppet agent and puppet server (like Ansible/Salt). Of course many advantages of the master/agent-design are then lost, but if you need to send one-time commands, puppet bolt is the right tool for you.\n\nFor example restarting a webserver or deleting the mailqueue is done better with puppet bolt whereas keeping a package to the most current version should be done with standard puppet configuration management.\n\n"
    },
    {
      "title": "Installing Bolt on Arch",
      "level": 3,
      "content": "To use Bolt on Arch to run tasks (that may target the local system or remote targets), the only needed package is puppet-boltAUR. More information can be found in its Documentation and official hands-on lab.\n\n"
    },
    {
      "title": "Targeting Arch with Bolt",
      "level": 3,
      "content": "When Bolt is run against an Arch target (regardless of whether Bolt itself is invoked on Arch), some functionality does not work out of the box. In general, when diagnosing mysterious Bolt failures on Arch targets, information about the cause of the failure is available via the debug log level, for example:\n\n```\n$ bolt apply --target arch --log-level debug ...\n```\n\nExecute bolt help for the command nomenclature.\n\n"
    },
    {
      "title": "Using Bolt to install Puppet",
      "level": 4,
      "content": "The puppet_agent::install Bolt task (which is invoked automatically as part of bolt apply and several other pieces of Bolt functionality) does not support installing the Puppet agent on Arch Linux. Attempts to do this may encounter errors like Sorry Arch is not supported yet in the Bolt debug logs.\n\nFortunately, Bolt can use a pre-installed version of Puppet. To set this up, install Puppet manually using the instructions in the \"Installation\" section above, then ensure that which is installed. which is required due to this Bolt issue; if it is not present the Sorry Arch is not supported yet error may continue to occur in Bolt even after Puppet is correctly installed on the target.\n\n"
    },
    {
      "title": "Bolt Binary-location Expectations",
      "level": 4,
      "content": "A lot of Bolt functionality, including bolt apply, expects several Puppet-related binaries to be installed in /opt/puppetlabs/bin, which is not done by the default puppet package. Until this is resolved, errors like this may occur in the Bolt debug logs:\n\n```\n/tmp/7b7dae3f-c3d9-4482-af14-a7e94a98b6cd/custom_facts.rb: bad interpreter: /opt/puppetlabs/puppet/bin/ruby: no such file or directory\n```\n\nTo work around this issue, symlink the installed Ruby into the expected location:\n\n```\n$ mkdir -p /opt/puppetlabs/puppet/bin\n$ ln -s $(type -p ruby) /opt/puppetlabs/puppet/bin/ruby\n```\n\nIf additional Bolt failures occur due to other binaries not being installed in that folder, you can symlink /usr/bin to it:\n\n```\n$ rm /opt/puppetlabs/puppet/bin/ruby\n$ rm -r /opt/puppetlabs/puppet/bin\n$ ln -s /usr/bin /opt/puppetlabs/puppet/bin\n```\n\n"
    }
  ]
}