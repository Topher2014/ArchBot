{
  "title": "NoMachine",
  "url": "https://wiki.archlinux.org/title/NoMachine",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "NoMachine enables you to access a graphical desktop of a computer over the network.\n\nUntil version 3.x, NoMachine was known as NX and available under GPL. There are derivatives based on core NX libraries like FreeNX and X2Go. The major drawback of these is that they utilise a built-in X server of nxagent, which originates from the year 2005 and some current X applications cannot run due to unsupported features available only in newer versions of X libraries.\n\nUnlike some other remote desktop solutions (e.g. TeamViewer), NoMachine does not require an intermediary server to establish the connection.\n\nSince NoMachine version 4, the software is proprietary and currently two editions are available: Free and Enterprise. Clients exist for Linux, MS Windows, macOS, Android and iOS.\n\nThe free edition allows to connect to an existing X display (also known as display shadowing of a live session with a physical display) or, if no X display is available (e.g. on head-less machines), NoMachine tries to start its own X server with the default Desktop environment automatically. The major limitation of the free edition is that only a single remote desktop session may run on the server.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the nomachineAUR package.\n\nIt includes both server and client tar balls. Note that the setup actually takes place by a post-installation script and therefore the list of files shown by command pacman -Ql nomachine is not complete!\n\nIn particular, the majority of NoMachine files are kept within /usr/NX directory, but a few more are added:\n\n```\n/etc/NX\n/etc/pam.d/nx\n/usr/lib/systemd/system/nxserver.service\n/usr/local/share/applications/NoMachine*.desktop\n/usr/share/polkit-1/actions/org.freedesktop.pkexec.nomachine.policy\n```\n\nThe files created by NoMachine Player are stored in:\n\n```\n$HOME/.nx\n$HOME/Documents/NoMachine\n```\n\nThe post-install script also creates a new user nx.\n\nIf you have X2Go or FreeNX installed as well, do not get confused that some files use similar names (i.e. /usr/bin/nx).\n\nThe nxserver.service does not need to be enabled and started on computers which will be used only as the client, but it must run on the server.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "On the target computer, start/enable nxserver.service via systemd, or via menu in your desktop: Internet > NoMachine > NoMachine Service, which does the same via a GUI and offers extra info and configuration.\n\nOn the client, start the \"Player\" (menu Internet > NoMachine > NoMachine. Or start it with\n\n```\n/usr/NX/bin/nxplayer\n```\n\nIt will search the LAN for available NoMachine servers or, if disabled or in a different subnet/WAN, you can type in the target hostname or IP address manually. The login credentials are the same as used for the user on the target computer.\n\n"
    },
    {
      "title": "Headless server",
      "level": 3,
      "content": "Install the xorg-xauth package\n\nFor correct environment setup those changes are needed:\n\n```\n/etc/pam.d/nx\n```\n\n```\nauth       include       system-remote-login\naccount    include       system-remote-login\npassword   include       system-remote-login\nsession    include       system-remote-login\n```\n\nChange DefaultDesktopCommand in /usr/NX/etc/node.cfg and add the following in front of your starting command:\n\n```\nenv DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus\n```\n\nExample for starting Xfce:\n\n```\nDefaultDesktopCommand \"env DBUS_SESSION_BUS_ADDRESS=unix:path=/run/user/$(id -u)/bus /usr/bin/startxfce4\"\n```\n\n"
    },
    {
      "title": "Separate NoMachine X session in parallel with existing X session",
      "level": 3,
      "content": "In default setup, the Free edition of NoMachine connects the client directly to an existing X session on the remote computer, even if it runs the X Display Manager only. This may be unwanted, because no other user may use the target computer locally at the same moment and because any person with physical access to the target computer can see on the physical display, what the remotely connected user is doing.\n\nHowever, it is possible to setup NoMachine to check only for a particular DISPLAY, e.g. DISPLAY :10 and it will ignore the existing X session on DISPLAY :0 (standard setup in Arch Linux) and start a new virtual session for the remotely connecting user.\n\nTo do so, edit the key PhysicalDisplays in /usr/NX/etc/node.cfg:\n\n```\nPhysicalDisplays :10\n```\n\n"
    },
    {
      "title": "Problems with default keyboard in display manager",
      "level": 3,
      "content": "When NoMachine connects to the display manager on the target computer and the user tries to login as if sitting at the target computer, the user authentication may fail due to a different keymap. A workaround is to type the user's password e.g. in a text editor and copy it via clipboard to the NoMachine session.\n\nOnce the user is logged in to the remote desktop environment, running setxkb cz ('cz' stands for the Czech keyboard as an example) should resolve the problem with key mappings.\n\n"
    },
    {
      "title": "Connecting via SSH",
      "level": 3,
      "content": "The free edition of NoMachine does not allow to use the SSH protocol to connect to the target computer and only NX protocol (listening on port 4000 by default) is used.\n\nIf it is not preferred to open yet another port on the firewall, a workaround is to create a standard SSH tunnel between client and target computer and connect through it:\n\nOn the client computer, for example:\n\n```\n$ ssh -L 4000:localhost:4000 user@targetmachine -fN\n```\n\nThen, start NoMachine Player and try to connect to localhost with the NX protocol. The connection will be tunneled to the targetmachine and redirected to the server's localhost port 4000.\n\n"
    },
    {
      "title": "Virtualbox guest audio stream lost on reconnection",
      "level": 3,
      "content": "If using PulseAudio audio interface, nxserver will restart pulseaudio on client disconnection, virtualbox guest machine can not connect to the new pulseaudio automatically, thus audio stream lost. A workaround is to provide a dummy pulseaudio in your PATH for nxserver.\n\n```\n$ ln -s /usr/bin/true /some/path/prior/to/usr/bin/pulseaudio\n$ which -a pulseaudio\n/some/path/prior/to/usr/bin/pulseaudio\n/usr/bin/pulseaudio\n```\n\nThen reinstall the nomachineAUR package to regenerate /usr/NX/etc/node.cfg, and recheck the pulseaudio start command.\n\n```\n$ grep -i pulse /usr/NX/etc/node.cfg\nAudioInterface pulseaudio\nCommandStartPulseAudio \"/some/path/prior/to/usr/bin/pulseaudio --high-priority=no\"\n```\n\nFinally restart nxserver.service.\n\n"
    },
    {
      "title": "PackageKit keeps asking for authentication in discover after uninstalling nomachine",
      "level": 3,
      "content": "The nomachineAUR uninstaller leaves a polkit rules file behind, causing PackageKit to prompt for authentication every time it refreshes system repositories. To restore the previous behavior, you can manually remove this file after uninstalling NoMachine.\n\n```\n# rm /usr/share/polkit-1/rules.d/55-org.nomachine.rules\n```\n\n"
    },
    {
      "title": "Graphical issues (especially with Wayland) after uninstalling NoMachine",
      "level": 3,
      "content": "See this forum post. NoMachine alters some permissions by means of files in /etc/udev/rules.d and /etc/X11/xorg.conf.d, but these don't get removed properly after uninstalling NoMachine. This leads to graphical issues under X, and not booting properly at all under Wayland (with errors like libEGL warning: failed to open /dev/dri/renderD128: Permission denied). To solve this, remove the following directories and files:\n\n```\n/etc/opt/VirtualGL\n/usr/share/gdm/greeter/autostart/virtualgl.desktop\n/etc/modprobe.d/virtualgl.conf\n/etc/udev/rules.d/99-virtualgl-dri.rules\n/etc/X11/xorg.conf.d/99-virtualgl-dri\n```\n\nAlso remove the line regarding nomachine in the file /usr/share/sddm/scripts/Xsetup.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Solution headless setup #1\n- Solution headless setup #2\n\n"
    }
  ]
}