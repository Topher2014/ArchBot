{
  "title": "Yt-dlp",
  "url": "https://wiki.archlinux.org/title/Yt-dlp",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- mpv\n- FFmpeg\n\nyt-dlp is a command-line program that lets you easily download videos and audio from more than a thousand websites. See the list of supported sites.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the yt-dlp package, or yt-dlp-gitAUR for the development version. It is recommended to also install FFmpeg as it is used for muxing for some sites. See the optional dependencies.\n\nThere are also various graphical frontends to yt-dlp, such as parabolic-gtkAUR, tartubeAUR and yt-dlg-gitAUR.\n\nYou can also install yt-dlp-drop-inAUR which provides a dummy /usr/bin/youtube-dl executable (that just redirects to yt-dlp) for outdated programs that still look for a youtube-dl executable.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The system-wide configuration file is /etc/yt-dlp.conf and the user-specific configuration file is ~/.config/yt-dlp/config. The syntax is simply one command-line option per line. Example configuration:\n\n```\n--ignore-errors\n# --no-playlist\n\n# Save in ~/Videos\n-o ~/Videos/%(title)s.%(ext)s\n\n# Prefer 1080p or lower resolutions\n-f bestvideo[height<=?1080]+bestaudio/best\n```\n\nSee [1] for more information.\n\nA custom configuration file can also be specified with:\n\n```\n$ yt-dlp URL --config-locations PATH\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "See yt-dlp(1) for the manual.\n\n```\n$ yt-dlp [OPTIONS] URL\n```\n\n"
    },
    {
      "title": "Format selection",
      "level": 3,
      "content": "When multiple formats of a video are available, youtube-dl will download the best ones by default.\n\nTo get a list of the available formats:\n\n```\n$ yt-dlp -F URL\n```\n\nTo select a specific one to download:\n\n```\n$ yt-dlp -f format URL\n```\n\n"
    },
    {
      "title": "Extract audio",
      "level": 3,
      "content": "Use -x for audio-only downloads (requires FFmpeg):\n\n```\n$ yt-dlp -x -f bestaudio URL\n```\n\nDepending on the available source streams, this will often correct the audio-only container. If an audio-only stream is not available, exclude -f bestaudio from the example above. This will download the video and copy its audio as post process. By default this will remove the downloaded video, include -k to keep it.\n\nTo also include album art (requires atomicparsley):\n\n```\n$ yt-dlp -x -f bestaudio[ext=m4a] --add-metadata --embed-thumbnail URL\n```\n\n"
    },
    {
      "title": "Subtitles",
      "level": 3,
      "content": "To see which languages are available:\n\n```\n$ yt-dlp --list-subs URL\n```\n\nTo download a video with selected subtitles (comma separated):\n\n```\n$ yt-dlp --write-sub --sub-lang LANG URL\n```\n\nFor auto-generated subtitles:\n\n```\n$ yt-dlp --write-auto-sub --sub-lang LANG URL\n```\n\nAdd --skip-download to get only subtitles.\n\n"
    },
    {
      "title": "Cookies",
      "level": 3,
      "content": "To import cookies add the --cookies-from-browser <browser>\n\nExample of importing cookies from chromium\n\n```\n$ yt-dlp --cookies-from-browser chromium URL\n```\n\n"
    },
    {
      "title": "Faster downloads",
      "level": 3,
      "content": "Some websites throttle transfer speeds. You can often get around this by choosing non DASH streams or by using aria2, an external downloader which supports multi-connection downloads. For example:\n\n```\n$ yt-dlp --downloader aria2c --downloader-args '-c -j 3 -x 3 -s 3 -k 1M' URL\n```\n\n"
    },
    {
      "title": "Playlist",
      "level": 3,
      "content": "Using youtube-dl for a playlist usually boils down to the following options:\n\n```\n$ yt-dlp --ignore-errors --continue --no-overwrites --download-archive progress.txt usual options URL\n```\n\nThis set of options allow for the download to effectively continue even after interruption. If you are archiving, add the usual --write-xxx and --embed-xxx options you may have.\n\n"
    },
    {
      "title": "Trim (partial download)",
      "level": 3,
      "content": "Parts of videos can be downloaded by using the output of yt-dlp -g -f format URL as ffmpeg input with the -ss (for input), -t and -c copy options.\n\n"
    },
    {
      "title": "URL from clipboard",
      "level": 3,
      "content": "A shell alias, a desktop launcher or a keyboard shortcut can be set to download a video (or audio) of a selected (or copied) URL by outputting it from the X selection. See Clipboard#Tools.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GitHub repository for documentation.\n\n"
    }
  ]
}