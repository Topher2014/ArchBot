{
  "title": "MSI GS66 11UH/11UG/11UE",
  "url": "https://wiki.archlinux.org/title/MSI_GS66_11UH/11UG/11UE",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nTouchpad | 06cb:cdad | Yes\nKeyboard | 1038:1122 | Yes\nDisplay |  | Yes\nGPU (Intel) | 8086:9a60 | Yes\nGPU (NVIDIA) | 10de:249d | Yes\nWebcam | 5986:2127 | Yes\nEthernet | 10ec:3000 | Yes\nBluetooth | 8087:0032 | Yes\nThunderbolt | 8086:9a31 | Yes\nAudio | 8086:43c8 | Partial\nWireless | 8086:2725 | Yes\n\nMSI has released refreshed GS66 laptops with 11th Intel processors and NVIDIA Ampere graphics. Exact models are 11UH, 11UG and 11UE. Note that these models should not be confused with 10UX models as they are reported to work out of the box with Linux.\n\nFor a general overview of laptop-related articles and recommendations, see Laptop.\n\n"
    },
    {
      "title": "Preparation",
      "level": 2,
      "content": "Useful shortcuts:\n\n- Pressing INSERT during startup will open BIOS.\n- Pressing F11 during startup will open boot menu.\n- Pressing LEFT ALT + RIGHT CTRL + RIGHT SHIFT + F2 while in BIOS will show advanced settings.\n\n"
    },
    {
      "title": "BIOS configuration",
      "level": 3,
      "content": "Before installing Arch Linux, several steps need to be done in BIOS:\n\n- Secure Boot must be disabled in BIOS > Security > Secure Boot.\n- VMD controller must be enabled in BIOS > Advanced > VMD controller.\n\n"
    },
    {
      "title": "Install audio firmware",
      "level": 3,
      "content": "Arch Linux will not detect audio hardware unless you install Sound Open Firmware.\n\n"
    },
    {
      "title": "Keyboard RGB control",
      "level": 3,
      "content": "Install msi-perkeyrgbAUR and see the project's README#usage. Using the --model gs65 argument works fine with GS66 11UX models that have an US keyboard. This has not been tested with all other keyboards, but it does not work with Spanish keyboards.\n\n"
    },
    {
      "title": "Disable fan when idle",
      "level": 3,
      "content": "Laptop fan never powers off, even when system is completely idle. This can be fixed by installing iswAUR package, configuring EC register to be available with write support and issuing this command on boot:\n\n```\n# isw -s 0x72 0\n```\n\n"
    },
    {
      "title": "MSI Center replacement (MControlCenter)",
      "level": 3,
      "content": "This device has quite some features, controllable via software, such as fan speed control, fan turbo mode, battery charge thresholds as well as power modes. All of these can be controlled via MControlCenter (mcontrolcenter-binAUR) application. For more information, see Fan_speed_control.\n\n"
    },
    {
      "title": "Mux switch",
      "level": 3,
      "content": "By default, this device operates in Hybrid graphics which works completely fine, but one of the key features of this device is mux switch. In short, it allows physically wiring NVIDIA GPU to the display, which eliminates the need for the integrated graphics processor and resulting in improved performance.\n\nMSI only provides Windows application (UWP or ZIP) to switch between Hybrid graphics (Intel + NVIDIA) and discrete graphics (NVIDIA) mode. Basically it sets some sort of a flag (presumably in EC register) and reboots. During the reboot, it seem to temporarily boot into BIOS, change the graphics mode and reboot back to Windows. Some reverse engineering to achieve the same functionality has been done on a similar model (see the GitHub issue and the GitHub project), but there was no success for this specific model.\n\nWhile there is an option in BIOS to change such graphics, it is greyed out. Fortunately, BIOS version E16V4IMS.107 (mirror) is the most up-to-date version that does not have such option greyed out and allows to change graphics. Note that you will need to activate advanced options, allow BIOS downgrading and flash this BIOS file as a regular BIOS update.\n\n"
    },
    {
      "title": "CPU Undervolting",
      "level": 3,
      "content": "CPU undervolting is done via intel-undervolt as described in Undervolting_CPU. However, it will not work until overclocking is enabled in BIOS. To enable it, go to BIOS, enable advanced settings and search for overclocking support. Once enabled, saved and rebooted, you can undervolt CPU within Linux. Note that re-connecting battery will reset overclocking support and it needs to be enabled within BIOS again.\n\n"
    },
    {
      "title": "Audio clipping",
      "level": 3,
      "content": "The audio device exhibits issues under Linux, whereby audio may be lost at the start or end of playback. During continuous playback, the device behaves as expected.\n\nThis occurs using ALSA directly, meaning it is independent of software mixers like PulseAudio or PipeWire, and also occurs in legacy mode, using driver options snd-intel-dspcfg dsp_driver=1, and with power management disabled. It is unknown what is required to make the device operate optimally under Linux.\n\n"
    },
    {
      "title": "External display glitches/artifacts/false framerate",
      "level": 3,
      "content": "When external display is connected, especially high framerate (e.g. 240Hz) via HDMI or DisplayPort, it reports true refresh rate, but only cursor seems to be at the reported refresh rate, while the rest stays at ~120Hz. Other issues include artifacts and glitches.\n\nIn order to fix this, switch to dedicated Nvidia GPU (using Mux switch, via BIOS or via Windows) as a workaround. Also see upstream issue here.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- TLP - general power usage optimization for notebooks.\n\n"
    }
  ]
}