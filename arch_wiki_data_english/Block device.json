{
  "title": "Block device",
  "url": "https://wiki.archlinux.org/title/Block_device",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Persistent block device naming\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nFrom Wikipedia:\n\nOn Linux they are in the /dev directory, according to the Filesystem Hierarchy Standard.\n\nOn Arch Linux the device nodes are managed by udev.\n\n"
    },
    {
      "title": "Block devices",
      "level": 2,
      "content": "A block device is a special file that provides buffered access to a hardware device. For a detailed description and comparison of virtual file system devices, see Wikipedia:Device file#Block devices.\n\n"
    },
    {
      "title": "Block device names",
      "level": 3,
      "content": "The beginning of the device name specifies the kernel's used driver subsystem to operate the block device.\n\n"
    },
    {
      "title": "SCSI",
      "level": 4,
      "content": "Storage devices, like hard disks, SSDs and flash drives, that support the SCSI command (SCSI, SAS, UASP), ATA (PATA, SATA) or USB mass storage connection are handled by the kernel's SCSI driver subsystem. They all share the same naming scheme.\n\nThe name of these devices starts with sd. It is then followed by a lower-case letter starting from a for the first discovered device (sda), b for the second discovered device (sdb), and so on.\n\nExamples:\n\n- /dev/sda - device a, the first discovered device.\n- /dev/sde - device e, the fifth discovered device.\n\n"
    },
    {
      "title": "NVMe",
      "level": 4,
      "content": "The name of storage devices, like SSDs, that are attached via NVM Express (NVMe) starts with nvme. It is then followed by a number starting from 0 for the device controller, nvme0 for the first discovered NVMe controller, nvme1 for the second, and so on. Next is the letter \"n\" and a number starting from 1 expressing the namespace on a controller, i.e. nvme0n1 for first discovered namespace on first discovered controller, nvme0n2 for second discovered namespace on first discovered controller, and so on.\n\nExamples:\n\n- /dev/nvme0n1 - device 1 on controller 0, the first discovered device on the first discovered controller.\n- /dev/nvme2n5 - device 5 on controller 2, the fifth discovered device on the third discovered controller.\n\n"
    },
    {
      "title": "MMC",
      "level": 4,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nSD cards, MMC cards and eMMC storage devices are handled by the kernel's mmc driver and name of those devices start with mmcblk. It is then followed by a number starting from 0 for the device, i.e. mmcblk0 for first discovered device, mmcblk1 for second discovered device and so on.\n\nExamples:\n\n- /dev/mmcblk0 - device 0, the first discovered device.\n- /dev/mmcblk4 - device 4, the fifth discovered device.\n\n"
    },
    {
      "title": "SCSI optical disc drive",
      "level": 4,
      "content": "The name of optical disc drives (ODDs), that are attached using one of the interfaces supported by the SCSI driver subsystem, start with sr. The name is then followed by a number starting from 0 for the device, ie. sr0 for the first discovered device, sr1 for the second discovered device, and so on.\n\nUdev also provides /dev/cdrom that is a symbolic link to /dev/sr0. The name will always be cdrom regardless of the drive's supported disc types or the inserted media.\n\nExamples:\n\n- /dev/sr0 - optical disc drive 0, the first discovered optical disc drive.\n- /dev/sr4 - optical disc drive 4, the fifth discovered optical disc drive.\n- /dev/cdrom - a symbolic link to /dev/sr0.\n\n"
    },
    {
      "title": "virtio-blk",
      "level": 4,
      "content": "The name of drives attached to a virtio block device (virtio-blk) interface start with vd. It is then followed by a lower-case letter starting from a for the first discovered device (vda), b for the second discovered device (vdb), and so on.\n\nExamples:\n\n- /dev/vda - device a, the first discovered device.\n- /dev/vde - device e, the fifth discovered device.\n\n"
    },
    {
      "title": "Partition",
      "level": 4,
      "content": "Partition device names are a combination of the drive's device name and the partition number assigned to them in the partition table, i.e. /dev/drivepartition. For drives whose device name ends with a number, the drive name and partition number is separated with the letter \"p\", i.e. /dev/driveppartition.\n\nExamples:\n\n- /dev/sda1 - partition 1 on /dev/sda.\n- /dev/nvme2n5p3 - partition 3 on /dev/nvme2n5.\n- /dev/mmcblk3p4 - partition 4 on /dev/mmcblk3.\n- /dev/vda1 - partition 1 on /dev/vda.\n- /dev/loop0p2 - partition 2 on /dev/loop0.\n\n"
    },
    {
      "title": "lsblk",
      "level": 4,
      "content": "The util-linux package provides the lsblk(8) utility which lists block devices, for example:\n\n```\n$ lsblk --fs\n```\n\n```\nNAME   FSTYPE   LABEL       UUID                                 MOUNTPOINT\nsda\n├─sda1 vfat                 C4DA-2C4D                            /boot\n├─sda2 swap                 5b1564b2-2e2c-452c-bcfa-d1f572ae99f2 [SWAP]\n└─sda3 ext4                 56adc99b-a61e-46af-aab7-a6d07e504652 /\n```\n\nIn the example above, only one device is available (sda), and that device has three partitions (sda1 to sda3), each with a different file system.\n\nYou can use the -o/--output option to enable a specific list of output columns:\n\n```\n# lsblk --output NAME,PTTYPE,PARTLABEL,FSTYPE,FSVER,LABEL,FSSIZE,FSAVAIL,FSUSE%,MOUNTPOINTS\n```\n\n```\nNAME             PTTYPE PARTLABEL       FSTYPE      FSVER LABEL          FSSIZE FSAVAIL FSUSE% MOUNTPOINTS\nsda              gpt                                                                           \n└─sda1           gpt    cryptdata1      crypto_LUKS 2                                          \n  └─data1                               btrfs             data1            7.3T    2.3T    68% /mnt/data\nsdb              gpt                                                                           \n└─sdb1           gpt    cryptdata2      crypto_LUKS 2                                          \n  └─data2                               btrfs             data1                                \nsdc              gpt                                                                           \n└─sdc1           gpt    cappdata        crypto_LUKS 2                                          \n  └─appdata                             ext4        1.0   appdata          3.6T    3.4T     0% /mnt/appdata\nsdd              gpt                                                                           \n└─sdd1           gpt    cappdata_backup crypto_LUKS 2                                          \n  └─appdata_back                        ext4        1.0   appdata_backup                       \nnvme1n1          gpt                                                                           \n├─nvme1n1p1      gpt    BACKUP_EFI      vfat        FAT32 EFI                4G    3.9G     2% /boot\n├─nvme1n1p2      gpt    backup_swap                                                            \n├─nvme1n1p3      gpt    csys1           crypto_LUKS 2                                          \n│ └─sys1                                btrfs             arch1                                \n└─nvme1n1p4      gpt    cext1           crypto_LUKS 2                                          \n  └─ext1                                btrfs             ext0fs                               \nnvme0n1          gpt                                                                           \n├─nvme0n1p1      gpt    EFI             vfat        FAT32 EFI                                  \n├─nvme0n1p2      gpt    cswap                                                                  \n├─nvme0n1p3      gpt    csys0           crypto_LUKS 2     sys0parent                           \n│ └─sys0                                btrfs             arch0             60G   56.2G     3% /\n└─nvme0n1p4      gpt    cext0           crypto_LUKS 2                                          \n  └─ext0                                btrfs             ext0fs         389.2G  388.1G     0% /home\n```\n\nThe above is based on the options provided by the -f/--fs argument with removal of UUID and addition of partition label and disk size, which are useful when identifying multiple disks. See lsblk --help for a full list of supported columns.\n\n"
    },
    {
      "title": "wipefs",
      "level": 4,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nwipefs can list or erase file system, RAID or partition-table signatures (magic strings) from the specified device to make the signatures invisible for libblkid(3). It does not erase the file systems themselves nor any other data from the device.\n\nSee wipefs(8) for more information.\n\nFor example, to erase all signatures from the device /dev/sdb and create a signature backup ~/wipefs-sdb-offset.bak file for each signature:\n\n```\n# wipefs --all --backup /dev/sdb\n```\n\n"
    },
    {
      "title": "Pseudo-devices",
      "level": 2,
      "content": "Device nodes that do not have a physical device.\n\n- /dev/random, see random(4)\n- /dev/shm\n- /dev/null, /dev/zero, see null(4)\n- /dev/full, see full(4)\n- /dev/ttyX, where X is a number\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Linux allocated devices — The Linux Kernel documentation\n- Gentoo:Device file\n\n"
    }
  ]
}