{
  "title": "FoundryVTT",
  "url": "https://wiki.archlinux.org/title/FoundryVTT",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Foundry VTT is a standalone application built for experiencing multiplayer tabletop RPGs using a feature-rich and modern self-hosted application where your players connect directly through the browser.\n\nFoundry VTT is proprietary software. A paid license must be acquired before using the software.\n\nThese instructions show one of the possible ways to install Foundry VTT in an Arch Linux system. At the end of the process, the service should be accessible from a browser using a secure connection.\n\n"
    },
    {
      "title": "Requirements",
      "level": 3,
      "content": "Before installing Foundry VTT, you should have a working installation of nginx and Node.js.\n\n"
    },
    {
      "title": "Creating directories",
      "level": 3,
      "content": "First of all, create these directories to install the software and its data. You can create these directories under /home, for example:\n\n```\n# mkdir -p /home/foundry/{foundryvtt,foundrydata}\n```\n\n"
    },
    {
      "title": "Creating a system user",
      "level": 3,
      "content": "Foundry VTT will be run by a system user. First, create a system user with the name foundry or any other name.\n\n```\n# useradd -r -s /usr/bin/nologin foundry\n```\n\n"
    },
    {
      "title": "Downloading",
      "level": 3,
      "content": "Once you have registered in foundryvtt.com and have purchased a license, you need to go to the \"Purchased Software Licenses\" section of your profile page. There you will see different packages for the software. You need to download the Node.js version.\n\nYou may notice a small 'chain' link icon next to the download links on the download page. Clicking this chain icon generates a temporary link which can be used to download Foundry VTT via a terminal or shell interface using wget.\n\nWhen downloading the link using a command line utility such as wget it is important to wrap the link in double-quotes. This ensures that the link is read correctly by the command. For example:\n\n```\n# wget -O foundryvtt.zip \"https://your-download-link-from-foundry-vtt.com-here/\"\n```\n\nThe downloaded file must be uncompressed to the foundryvtt directory that you created before. Once this directory is populated, you need to set the proper permissions:\n\n```\n# unzip foundryvtt.zip -d /home/foundry/foundryvtt\n# chown -R foundry:foundry /home/foundry/foundryvtt\n# chown -R foundry:foundry /home/foundry/foundrydata\n```\n\nThis archive is also required when using the foundryvttAUR package from the AUR.\n\n"
    },
    {
      "title": "Running the software without a proxy",
      "level": 3,
      "content": "Now you can test if the software works. Run the server as the user foundry:\n\n```\n# su - foundry -s /bin/bash -c \"node foundryvtt/resources/app/main.js --dataPath=/home/foundry/foundrydata\"\n```\n\nWhile it is running, you should be able to connect to the server from a browser, using port 30000. If you wish, you can now set your admin password and save your license key.\n\nNow stop the server using Ctrl+c.\n\n"
    },
    {
      "title": "Creating a service",
      "level": 3,
      "content": "One of the ways to run the software is using systemd#Writing unit files. You can create a simple service for Foundry VTT:\n\n```\n[Unit]\nDescription=Foundry VTT\n\n[Service]\nType=simple\nExecStart=node /home/foundry/foundryvtt/resources/app/main.js --dataPath=/home/foundry/foundrydata\nRestart=on-failure\nUser=foundry\n\n[Install]\nWantedBy=multi-user.target\n```\n\nAs suggested in the installation instructions, edit the software options to prepare it to be accessed through a proxy server:\n\nSet the following options, keeping the other ones, where hostname is e.g a.domain.tld:\n\n```\n/home/foundry/foundrydata/Config/options.json\n```\n\n```\n\"hostname\": \"hostname\",\n\"routePrefix\": null,\n\"sslCert\": null,\n\"sslKey\": null,\n\"port\": 30000,\n\"proxyPort\": 443,\n\"proxySSL\": true\n```\n\n"
    },
    {
      "title": "Configuring nginx",
      "level": 3,
      "content": "To configure a nginx proxy server for Foundry VTT you can use this example from the official documentation:\n\n```\n# This goes in a file within /etc/nginx/sites-available/. By convention,\n# the filename would be either \"your.domain.com\" or \"foundryvtt\", but it\n# really does not matter as long as it's unique and descriptive for you.\n\n# Define Server\nserver {\n\n    # Enter your fully qualified domain name or leave blank\n    server_name             your.hostname.com;\n\n    # Listen on port 443 using SSL certificates\n    listen                  443 ssl;\n    listen                  [::]:443 ssl;\n    ssl_certificate         \"/etc/letsencrypt/live/your.hostname.com/fullchain.pem\";\n    ssl_certificate_key     \"/etc/letsencrypt/live/your.hostname.com/privkey.pem\";\n\n    # Sets the Max Upload size to 300 MB\n    client_max_body_size 300M;\n\n    # Proxy Requests to Foundry VTT\n    location / {\n\n        # Set proxy headers\n        proxy_set_header Host $host;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Proto $scheme;\n\n        # These are important to support WebSockets\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"Upgrade\";\n\n        # Make sure to set your Foundry VTT port number\n        proxy_pass http://localhost:30000;\n    }\n}\n\n# Optional, but recommend. Redirects all HTTP requests to HTTPS for you\nserver {\n    if ($host = your.hostname.com) {\n        return 301 https://$host$request_uri;\n    }\n\n    listen 80;\n    listen [::]:80;\n\n    server_name your.hostname.com;\n    return 404;\n}\n```\n\nYou can get your certificates using certbot.\n\n"
    },
    {
      "title": "Running the service",
      "level": 3,
      "content": "Now start/enable both foundryvtt.service and nginx.service.\n\nAt this point you should be able to access the service from a browser by pointing it at the hostname set earlier.\n\n"
    }
  ]
}