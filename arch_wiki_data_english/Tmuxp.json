{
  "title": "Tmuxp",
  "url": "https://wiki.archlinux.org/title/Tmuxp",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- tmux\n\ntmuxp is a session manager for the tmux terminal multiplexer. Compare to tmuxinator or teamocil.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the tmuxp package.\n\n"
    },
    {
      "title": "Configurations",
      "level": 2,
      "content": "tmuxp accepts both JSON and YAML configurations. The YAML markup is similar to tmuxinator's.\n\nYou can put configurations in any directory to access them via 3 ways:\n\n1. Via absolute or relative file path tmuxp load file, tmuxp load ../myconfig\n1. tmuxp checks for files in $XDG_CONFIG_HOME/tmuxp (usually $HOME/.config/tmuxp), and $TMUXP_CONFIGDIR path (default $HOME/.tmuxp). Files inside can be loaded via filename, e.g. tmuxp load basename. So $HOME/.tmuxp/myconfig.yaml would be loadable via tmuxp load myconfig.\n1. Via .tmuxp.yaml in a project or directory (so you can store configs in a VCS per-project / folder. And then tmuxp load path/to/dir\n\nA sample YAML configuration with 4 panes:\n\n```\nsession_name: 4-pane-split\nwindows:\n- window_name: dev window\n  layout: tiled\n  shell_command_before:\n    - cd ~/                    # run as a first command in all panes\n  panes:\n    - shell_command:           # pane no. 1\n        - cd /var/log          # run multiple commands in this pane\n        - ls -al | grep \\.log\n    - echo second pane         # pane no. 2\n    - echo third pane          # pane no. 3\n    - echo forth pane          # pane no. 4\n```\n\ntmuxp is also capable of running arbitrary scripts before building tmux sessions via before_script. In this example, from the tmuxp project itself, a bootstrap script runs which creates a virtualenv (python package environment) for the project and installs dependency packages. In addition, the session configures all panes to source the project's virtualenv:\n\n```\nsession_name: tmuxp\nstart_directory: ./ # load session relative to config location (project root).\nbefore_script: ./bootstrap_env.py # ./ to load relative to project root.\nwindows:\n- window_name: tmuxp\n  focus: True\n  layout: main-horizontal\n  options:\n    main-pane-height: 35\n  shell_command_before:\n    - '[ -d .venv -a -f .venv/bin/activate ] && source .venv/bin/activate'\n  panes:\n  - focus: true\n  - pane \n  - make watch_test\n- window_name: docs\n  layout: main-horizontal\n  options:\n    main-pane-height: 35\n  start_directory: doc/\n  shell_command_before: \n    - '[ -d ../.venv -a -f ../.venv/bin/activate ] && source ../.venv/bin/activate'\n  panes:\n  - focus: true\n  - pane\n  - make serve\n  - make watch\n```\n\nMore examples are available in the documentation showcasing YAML, as well as JSON configurations.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official Homepage, including documentation and examples\n- GitHub\n- PyPI package\n\n"
    }
  ]
}