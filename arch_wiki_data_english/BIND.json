{
  "title": "BIND",
  "url": "https://wiki.archlinux.org/title/BIND",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Domain name resolution\n\nBIND (or named) is the most widely used Domain Name System (DNS) server.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the bind package.\n\nStart/enable the named.service systemd unit.\n\nTo use the DNS server locally, use the 127.0.0.1 nameserver (meaning clients like Firefox resolve via 127.0.0.1), see Domain name resolution. This will however require you to #Allow recursion while a firewall might block outside queries to your local named.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nBIND is configured in /etc/named.conf. The available options are documented in named.conf(5).\n\nReload the named.service unit to apply configuration changes.\n\n"
    },
    {
      "title": "Enable rndc access",
      "level": 3,
      "content": "In order to control BIND using rndc(8), you need to set up TSIG key for it and tell BIND to allow name server control with that key.\n\nFirst, generate TSIG key for this purpose:\n\n```\n$ tsig-keygen console\nkey \"console\" {\n    algorithm hmac-sha256;\n    secret \"secret\";\n};\n```\n\nCopy the output to both /etc/named.conf and /etc/rndc.conf.\n\nIn /etc/rndc.conf, append default name server connection:\n\n```\n/etc/rndc.conf\n```\n\n```\n...\noptions {\n    default-key \"console\";\n    default-server 127.0.0.1;\n    default-port 953;\n};\n```\n\nAllow rndc control from localhost in /etc/named.conf:\n\n```\n/etc/named.conf\n```\n\n```\n...\ncontrols {\n    inet 127.0.0.1 port 953 allow { 127.0.0.1; } keys { \"console\"; };\n};\n...\n```\n\nNow you can use rndc to control the local DNS server. For example, to check server status:\n\n```\n$ rndc status\n```\n\nReloading server configuration can also be done by:\n\n```\n# rndc reload\n```\n\n"
    },
    {
      "title": "Restrict access to localhost",
      "level": 3,
      "content": "BIND by default listens on port 53 of all interfaces and IP addresses. To only allow connections from localhost, add the following line to the options section in /etc/named.conf:\n\n```\nlisten-on { 127.0.0.1; };\nlisten-on-v6 { ::1; };\nallow-recursion { 127.0.0.1; ::1; };\n```\n\n"
    },
    {
      "title": "Set up DNS forwarding",
      "level": 3,
      "content": "To make BIND forward DNS queries to another DNS server, add the forwarders clause to the options section.\n\nFor example, to make BIND forward to the Google Public DNS servers using DNS over TLS:\n\n```\ntls google {\n    remote-hostname \"dns.google\";\n};\n\noptions {\n...\n    forward only;\n    forwarders port 853 tls google {\n        8.8.8.8; 2001:4860:4860::8888;\n        8.8.4.4; 2001:4860:4860::8844;\n    };\n};\n```\n\n"
    },
    {
      "title": "Serve DNS over TLS or HTTPS",
      "level": 3,
      "content": "To enable serving DNS over TLS or HTTPS in BIND, define a tls block specifying your certificate, then add listen-on clauses enabling DNS over TLS and HTTPS listeners (as well as a standard DNS listener).\n\n```\n/etc/named.conf\n```\n\n```\ntls mycert {\n    cert-file \"<path>.crt\";\n    key-file \"<path>.key\";\n};\n\noptions {\n    // Standard port 53 listeners need to be re-added explicitly\n    listen-on    { any; };\n    listen-on-v6 { any; };\n    \n    // Add a DNS over TLS listener on standard port 853\n    listen-on    tls mycert { any; };\n    listen-on-v6 tls mycert { any; };\n    \n    // Add a DNS over HTTPS listener on standard HTTPS port 443\n    listen-on    tls mycert http default { any; };\n    listen-on-v6 tls mycert http default { any; };\n    \n    // If needed, add a cleartext HTTP listener for a reverse proxy\n    //listen-on    port 8443 tls none http default { 127.0.0.1; };\n    //listen-on-v6 port 8443 tls none http default { ::1; };\n};\n...\n```\n\nNote that tls{} is defined at the top level, not inside the options{} block.\n\n"
    },
    {
      "title": "A configuration template for running a domain",
      "level": 2,
      "content": "Following is a simple home nameserver being set up, using domain.tld as the domain being served world-wide like this wiki's archlinux.org domain is.\n\nA more elaborate example is DNS server with BIND9, while this shows how to set up internal network name resolution.\n\n"
    },
    {
      "title": "Creating a zonefile",
      "level": 3,
      "content": "Create /var/named/domain.tld.zone.\n\n```\n$ORIGIN domain.tld.\n$TTL 2h\n\n@               SOA     ns1 hostmaster (\n                                2018111111 ; Serial\n                                8h         ; Refresh\n                                30m        ; Retry\n                                1w         ; Expire\n                                1h )       ; Negative Cache TTL\n                NS      ns1\n                NS      ns2\n                \n@               A       203.0.113.1\n                AAAA    2001:db8:113::1\n                MX      10 mail\n                TXT     \"v=spf1 mx\"\n\nwww             A       203.0.113.1\n                AAAA    2001:db8:113::1\n\nns1             A       203.0.113.4\n                AAAA    2001:db8:113::4\n\nns2             A       198.51.100.5\n                AAAA    2001:db8:5100::5\n\nmail            A       198.51.100.6\n                AAAA    2001:db8:5100::6\nimap            CNAME   mail\nsmtp            CNAME   mail\n```\n\n$ORIGIN defines the default suffix for all names which do not already end with a . (dot), e.g. mail will be expanded to mail.$ORIGIN ⇒ mail.domain.tld. everywhere.\n\n$TTL defines the default time-to-live (i.e. cache expiry time) for all records which do not have their own TTL specified. Here it is 2 hours.\n\nSerial must be incremented manually before reloading named every time you change a resource record for the zone. Otherwise secondary servers (replicas or slaves) will not re-transfer the zone: they only do it if the serial is greater than that of the last time they transferred the zone. This example uses the somewhat common YYYYMMDDXX format, but this is not required; the serial number can also just start at 1.\n\n"
    },
    {
      "title": "Configuring primary server",
      "level": 3,
      "content": "Add your zone to /etc/named.conf:\n\n```\nzone \"domain.tld\" IN {\n         type primary;\n         file \"domain.tld.zone\";\n         allow-update { none; };\n };\n```\n\nReload the named.service unit to apply the configuration change.\n\n"
    },
    {
      "title": "Configuring secondary server",
      "level": 3,
      "content": "In case you have two or more servers, you can set up all but one of them as secondary, where the zone is retrieved from primary via AXFR transfer.\n\nOn primary, explicitly allow zone transfers from secondary:\n\n```\nzone \"domain.tld\" IN {\n        ...\n        allow-transfer { 198.51.100.5; 20001:db8:113::4; };\n};\n```\n\nOn secondary, add the zone to /etc/named.conf:\n\n```\nzone \"domain.tld\" IN {\n        type secondary;\n        file \"domain.tld.zone\";\n        primaries { 203.0.113.4; 2001:db8:113::4; };\n};\n```\n\nReload named.service or use rndc(8) to reload both primary and secondary servers configuration.\n\n"
    },
    {
      "title": "Allow recursion",
      "level": 2,
      "content": "If you are running your own DNS server, you might as well use it for all DNS lookups, or even #Serve the root zone locally by yourself. The former will require the ability to do recursive lookups. In order to prevent DNS Amplification Attacks, recursion is turned off by default for most resolvers. The default Arch /etc/named.conf file allows for recursion only on the loopback interface:\n\n```\nallow-recursion { 127.0.0.1; ::1; };\n```\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIf you want to provide name service for your local network; e.g. 192.168.0.0/24, you must add the appropriate range of IP addresses to /etc/named.conf:\n\n```\nallow-recursion {\n    192.168.0.0/24;\n    fd01:2345:6789::/64;\n    127.0.0.1;\n    ::1;\n};\n```\n\n"
    },
    {
      "title": "Configuring BIND to serve DNSSEC signed zones",
      "level": 2,
      "content": "BIND makes it easy to serve DNSSEC-signed zones with Key and Signing Policy (KASP) facility, where it takes care of zone signing and key management automatically for you using user-defined policy.\n\nCreate separate directory to store keys, writable by the server:\n\n```\n# mkdir /var/named/keys\n# chown named:named /var/named/keys\n```\n\nInstruct BIND to store keys in aforementioned directory:\n\n```\n/etc/named.conf\n```\n\n```\noptions {\n    ...\n    key-directory \"/var/named/keys\";\n    ...\n};\n```\n\nNow zones can be signed by applying the desired policy. In most cases, you can apply up-to-date DNSSEC best practices with default policy:\n\n```\n/etc/named.conf\n```\n\n```\nzone \"domain.tld\" IN {\n        ...\n        dnssec-policy default;\n};\n```\n\nThis will sign the zone with single ecdsap256sha256 combined signing key (CSK) with unlimited key lifetime, signed via inline-signing where the server generates the signed zone separately without having to set-up dynamic DNS.\n\nIf needed, a custom policy can be defined with dnssec-policy block. For example, the main policy signs the zone with traditional key signing key (KSK, rotated yearly) and zone signing key (ZSK, rotated monthly) split, alongside with timing parameters and NSEC3 denial-of-existence:\n\n```\n/etc/named.conf\n```\n\n```\ndnssec-policy main {\n    keys {\n        ksk lifetime P1Y algorithm ecdsap256sha256;\n        zsk lifetime P1M algorithm ecdsap256sha256;\n    };\n    publish-safety 1h;\n    retire-safety 1h;\n    purge-keys 1h;\n    signatures-refresh P3D;\n    signatures-validity P3W;\n    signatures-validity-dnskey P3W;\n    inline-signing yes;\n    nsec3param iterations 0 optout no salt-length 0;\n};\n...\n```\n\nThe custom policy can be applied in the same way as default policy earlier:\n\n```\n/etc/named.conf\n```\n\n```\nzone \"domain.tld\" IN {\n    ...\n    dnssec-policy main;\n};\n```\n\nIncrement the zone's serial and reload the server configuration.\n\nThe last step is to establish chain of trust with parent zone. First, check DNSSEC status of the zone:\n\n```\n$ rndc dnssec -status domain.tld\ndnssec-policy: main\ncurrent time:  Tue Mar 25 08:51:53 2025\n\nkey: 58785 (ECDSAP256SHA256), KSK\n  published:      yes - since Tue Mar 25 08:47:23 2025\n  key signing:    yes - since Tue Mar 25 08:47:23 2025\n\n  Next rollover scheduled on Wed Mar 25 06:42:23 2026\n  - goal:           omnipresent\n  - dnskey:         rumoured\n  - ds:             hidden\n  - key rrsig:      rumoured\n\nkey: 5017 (ECDSAP256SHA256), ZSK\n  published:      yes - since Tue Mar 25 08:47:23 2025\n  zone signing:   yes - since Tue Mar 25 08:47:23 2025\n\n  Next rollover scheduled on Fri Apr 25 06:42:23 2025\n  - goal:           omnipresent\n  - dnskey:         rumoured\n  - zone rrsig:     rumoured\n```\n\nHere, the KSK key ID is 58785. Yours will be different.\n\nGenerate the DS record (replace key ID as appropriate):\n\n```\n$ dnssec-dsfromkey -2 /var/named/keys/Kdomain.tld.+013+58785\ndomain.tld. IN DS 58785 13 2 hash\n```\n\nSubmit DS to the parent zone (for example, by filling the web form on your registrar).\n\nWhen you've confirmed that the DS record has been published in the parent zone, you can signal BIND as such by:\n\n```\n$ rndc dnssec -checkds -key 58785 published domain.tld\n```\n\n"
    },
    {
      "title": "Automatically listen on new interfaces",
      "level": 2,
      "content": "By default bind scan for new interfaces and stop listening on interfaces which no longer exist every hour. You can tune this value by adding :\n\n```\ninterface-interval rescan-timeout-in-minutes;\n```\n\nparameter into named.conf options section, the max value is 28 days (40320 min). You can disable this feature by setting its value to 0.\n\nThen restart the service.\n\n"
    },
    {
      "title": "Running BIND in a chrooted environment",
      "level": 2,
      "content": "Running in a chroot environment is not required but improves security.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Creating the jail house",
      "level": 3,
      "content": "In order to do this, we first need to create a place to keep the jail, we shall use /srv/named, and then put the required files into the jail.\n\n```\n# mkdir -p /srv/named/{dev,etc,usr/lib/engines,var/{run,log,named}}\n```\n\nCopy over required system files:\n\n```\n# cp -av /etc/{localtime,named.conf} /srv/named/etc/\n# cp -av /usr/lib/engines-1.1/* /srv/named/usr/lib/engines/\n# cp -av /var/named/* /srv/named/var/named/.\n```\n\nSet up required nodes in /dev/:\n\n```\n# mknod /srv/named/dev/null c 1 3\n# mknod /srv/named/dev/random c 1 8\n```\n\nSet ownership of the files:\n\n```\n# chown -R named:named /srv/named\n```\n\nThis should create the required file system for the jail.\n\n"
    },
    {
      "title": "Service unit",
      "level": 3,
      "content": "Next we need a replacement unit file so that the service calls bind which will allow force bind into the chroot:\n\n```\n/etc/systemd/system/named-chroot.service\n```\n\n```\nExecStart=/usr/bin/named -4 -f -u named -t \"/srv/named\"\n```\n\nNow, reload systemd with daemon-reload, and start the named-chroot.service.\n\n"
    },
    {
      "title": "Serve the root zone locally",
      "level": 2,
      "content": "If you do not want to rely on third-party DNS services, you can serve the root zone locally following RFC:7706. This can be achieved by using BIND as a DNS recursive resolver.\n\nTo manage a recursive resolver, you typically need to configure a root hints file. This file contains the names and IP addresses of the authoritative name servers for the root zone.\n\nGrab the file from IANA website and place it into /var/named.\n\nEdit your server config, adding the respective file:\n\n```\n/etc/named.conf\n```\n\n```\nzone \".\" IN {\n    type hint;\n    file \"named.root\";\n};\n```\n\nRecursion also should be allowed in the config. See #Allow recursion.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- BIND 9 Administrator Reference Manual (ARM)\n- BIND ARM on readthedocs\n- BIND knowledgebase\n- Internet Systems Consortium, Inc. (ISC)\n- Pro DNS and BIND with abbreviated version online\n- DNS Glossary\n- Archived mailing list discussion on BIND's future\n- root zone transfer made simple - serve root@home copy the /etc/named.conf, restart BIND & enjoy!\n- DNSSEC\n\n"
    }
  ]
}