{
  "title": "Plank",
  "url": "https://wiki.archlinux.org/title/Plank",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Plank is a lightweight and minimal dock. Plank will not work if you are using Wayland.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install plank or plank-gitAUR for the development version.\n\n"
    },
    {
      "title": "Running Plank",
      "level": 3,
      "content": "```\n$ plank\n```\n\nOn Wayland, it may fail with the following error:\n\n```\n[CRITICAL] [AbstractMain:255] Only X11 environments are supported.\n```\n\nIn this case, it needs the following environment variable to be set[1]:\n\n```\nXDG_SESSION_TYPE=x11\n```\n\n"
    },
    {
      "title": "Adding new dock icons",
      "level": 2,
      "content": "- Application icon: drag and drop a shortcut to the dock, or right click a running application's icon and select \"Keep in dock\".\n\n- Folder or file icon: drag and drop it to the dock.\n\n- Docklets: use their tab in the Preferences dialog.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Preferences can be opened by holding Ctrl and right-clicking on the dock. Select Preferences in the context menu that opens.\n\nAlthough the preferences of each dock is stored in the dconf database and not in plain text, sometimes it makes sense to get and store that information anyway and then feed it back at some point. Eg. backing up the settings or migrating the settings, etc.\n\nTherefore one may want to save all the docks:\n\n```\n$ dconf dump /net/launchpad/plank/docks/ > /path/where/to/save/plank/docks.ini\n```\n\nAnd then one may want to reload the saved settings:\n\n```\n$ cat /path/where/saved/plank/docks.ini | dconf load /net/launchpad/plank/docks/\n```\n\n"
    },
    {
      "title": "Setting themes",
      "level": 3,
      "content": "The theme can be changed by selecting a choice in the drop-down menu of Preferences > Appearance > Theme. Themes are stored globally under /usr/share/plank/themes/ or locally under ~/.local/share/plank/themes/.\n\nThese custom themes can be installed to give your plank dock an eyecandy touch. Search for \"plank-theme\" on AUR, for example plank-theme-arcAUR is an Arc theme for Plank.\n\n"
    },
    {
      "title": "Multiple Docks",
      "level": 3,
      "content": "It is possible to run multiple plank docks at once.\n\nDirectories for each dock are stored under ~/.config/plank/. Under these directories, there is a directory named 'launchers'. Going further, under this directory, docklets are stored. When the plank command is run, it either defaults to the dock1 directory or creates it if it is non-existent. If you were to run:\n\n```\n$ plank -n newdock\n```\n\nA new directory named 'newdock' would be created under ~/.config/plank and docklets stored under ~/.config/plank/newdock/launchers/ is displayed on the dock, unless a directory under that name has already been created. This makes it possible to have multiple docks each with their own settings and preferences by specifying the name under the -n flag.\n\nFor example:\n\n```\n$ plank -n primdock \n$ plank -n secondock\n```\n\n"
    },
    {
      "title": "Applications Docklet",
      "level": 3,
      "content": "Plank's Applications Docklet looks for the file 'applications.menu' by default, and if that doesn't exist it will just say \"No applications available\". Some desktop managers, like cinnamon-desktop do not create this file, but it is very easy to fix.\n\n```\n$ ln -s ~/.config/menus/cinnamon-applications.menu ~/.config/menus/applications.menu\n```\n\nLuckily the xml format is identical, the only difference is the name. Once you have created the symlink your Applications Docklet should work as expected!\n\n"
    }
  ]
}