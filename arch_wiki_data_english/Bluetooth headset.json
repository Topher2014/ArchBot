{
  "title": "Bluetooth headset",
  "url": "https://wiki.archlinux.org/title/Bluetooth_headset",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Bluetooth\n\nThere are three Bluetooth audio systems:\n\n- A2DP (advanced audio distribution) provides music-grade stereo output (sink), typically without input (source). A2DP can use a variety of codecs. The standard SBC has a poor quality-bitrate tradeoff, but much better, open-source alternatives (LDAC, AptX) have become widespread. AVRCP is used on top of A2DP to provide playback control.\n- HFP/HSP (hands-free/headset) provides voice-grade mono output and input. HFP builds on top of HSP.\n- LE Audio is a low-energy audio standard announced in 2020. The standard codec is LC3.\n\n- A2DP can use a variety of codecs. The standard SBC has a poor quality-bitrate tradeoff, but much better, open-source alternatives (LDAC, AptX) have become widespread.\n- AVRCP is used on top of A2DP to provide playback control.\n\nThe kernel, BlueZ 5, and PipeWire support all three profiles. Older sound servers such as PulseAudio and ALSA only support A2DP and HFP/HSP. Although Bluetooth is infamous for being unreliable [1], many implementations have seen massive improvements, making it a somewhat less excruciating experience on well-established hardware like Intel Bluetooth chips.\n\n"
    },
    {
      "title": "Headset via PipeWire",
      "level": 2,
      "content": "PipeWire acts as a drop-in replacement for PulseAudio and offers an easy way to set up Bluetooth headsets. It includes out-of-the-box support for A2DP sink profiles using SBC/SBC-XQ, AptX, LDAC or AAC codecs, and HFP/HSP.\n\nInstall pipewire-pulse (which replaces pulseaudio and pulseaudio-bluetooth).\n\nThe daemon will be started automatically as a user service. Use pavucontrol or your desktop environment's settings for configuration. For more information, see PipeWire#Bluetooth devices.\n\nAs of February 2025, the LE audio system is still experimental and therefore the LC3 codec is disabled by default, but with some effort it could be used. See the PipeWire wiki [2] for updates. Alternatively, monitor this thread [3].\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 3,
      "content": "Note: **This article or section is a candidate for merging with PipeWire#Troubleshooting.** This article or section is a candidate for merging with PipeWire#Troubleshooting.\n\nThis article or section is a candidate for merging with PipeWire#Troubleshooting.\n\n"
    },
    {
      "title": "High audio volume due to synchronization between headphones and PipeWire",
      "level": 4,
      "content": "Since version 0.3.26, PipeWire uses \"hardware volume\" to link the volume of the headphones with the system, making it impossible to change one without the other. On some devices, this may result in the lowest possible volume being uncomfortably loud, and volume controls becoming too coarse. Hardware volume can be disabled using either WirePlumber or Pipewire Media Session.\n\nIf it does not exist, create the directory and file /etc/wireplumber/wireplumber.conf.d/80-bluez-properties.conf to disable hardware volume system-wide, or ~/.config/wireplumber/wireplumber.conf.d/80-bluez-properties.conf to disable it only for your user. Edit the file to contain the following:\n\n```\nmonitor.bluez.properties = {\n  bluez5.enable-hw-volume = false\n}\n```\n\nReboot the system or restart the PipeWire and WirePlumber services for the changes to take effect.\n\nIf it does not exist, create the directory /etc/pipewire/media-session.d/ to disable hardware volume system-wide, or ~/.config/pipewire/media-session.d/ to disable it only for your user. Then, copy /usr/share/pipewire/media-session.d/bluez-monitor.conf to the directory you created. Edit the file, and add the line\n\n```\nbluez5.enable-hw-volume = false\n```\n\nReboot the system or the PipeWire services for the changes to take effect.\n\n"
    },
    {
      "title": "Headset via Bluez5/PulseAudio",
      "level": 2,
      "content": "Note: **This article or section is a candidate for merging with Bluetooth.** This article or section is a candidate for merging with Bluetooth.\n\nThis article or section is a candidate for merging with Bluetooth.\n\nInstall the pulseaudio-alsa, pulseaudio-bluetooth and bluez-utils packages, the last of which provides the bluetoothctl utility.\n\n"
    },
    {
      "title": "Configuration via CLI",
      "level": 3,
      "content": "Start bluetooth.service.\n\nNow we can use the bluetoothctl command line utility to pair and connect. For troubleshooting and more detailed explanations of bluetoothctl see the Bluetooth article. Run\n\n```\n$ bluetoothctl\n```\n\nto be greeted by its internal command prompt. Then enter:\n\n```\n[bluetooth]# power on\n[bluetooth]# agent on\n[bluetooth]# default-agent\n[bluetooth]# scan on\n```\n\nNow make sure that your headset is in pairing mode. It should be discovered shortly. For example,\n\n```\n[NEW] Device 00:1D:43:6D:03:26 Lasmex LBT10\n```\n\nshows a device that calls itself \"Lasmex LBT10\" and has MAC address \"00:1D:43:6D:03:26\". We will now use that MAC address to initiate the pairing:\n\n```\n[bluetooth]# pair 00:1D:43:6D:03:26\n```\n\nAfter pairing, you also need to explicitly connect the device (if this does not work, try the trust command below before attempting to connect):\n\n```\n[bluetooth]# connect 00:1D:43:6D:03:26\n```\n\nIf you are getting a connection error org.bluez.Error.Failed retry by killing existing PulseAudio daemon first:\n\n```\n$ pulseaudio -k\n[bluetooth]# connect 00:1D:43:6D:03:26\n```\n\nFinally, if you want to automatically connect to this device in the future:\n\n```\n[bluetooth]# trust 00:1D:43:6D:03:26\n```\n\nIf everything works correctly, you now have a separate output device in PulseAudio.\n\nYou can now redirect any audio through that device using the \"Playback\" and \"Recording\" tabs of pavucontrol.\n\nYou can now disable scanning again and exit the program:\n\n```\n[bluetooth]# scan off\n[bluetooth]# exit\n```\n\n"
    },
    {
      "title": "Setting up auto connection",
      "level": 4,
      "content": "To make your headset auto connect you need to enable PulseAudio's switch-on-connect module. Do this by adding the following lines to /etc/pulse/default.pa:\n\n```\n/etc/pulse/default.pa\n```\n\n```\n### Automatically switch to newly-connected devices\nload-module module-switch-on-connect\n```\n\n"
    },
    {
      "title": "Configuration via GNOME Bluetooth",
      "level": 3,
      "content": "You can use GNOME Bluetooth graphical front-end to easily configure your bluetooth headset.\n\nFirst, you need to be sure that bluetooth.service systemd unit is running.\n\nOpen GNOME Bluetooth and activate the bluetooth. After scanning for devices, you can connect to your headset selecting it on the device list. You can directly access to sound configuration panel from the device menu. On the sound panel, a new sink should appear when your device is connected.\n\n"
    },
    {
      "title": "LDAC/aptX",
      "level": 3,
      "content": "LDAC/aptX codecs are supported as of PulseAudio 15.0. You can verify the codec you are using for connection as follows:\n\n```\n$ pactl list | grep a2dp_codec\n```\n\n"
    },
    {
      "title": "Bad sound / Static noise / \"Muddy\" sound",
      "level": 4,
      "content": "If you experience bad sound quality with your headset, it could in all likelihood be because your headset is not set to the correct profile. See #Switch between HSP/HFP and A2DP setting to solve the problem.\n\nIf you suspect the bad sound quality is due to a poor bluetooth connection, you might compensate for it by switching to a lower bit-rate and lower audio quality codec such as SBC or aptX using pactl:\n\n```\n$ pactl send-message /card/bluez_card.XX_XX_XX_XX_XX_XX/bluez switch-codec '\"sbc\"'\n```\n\nwhere a list of available codecs can be obtained by:\n\n```\n$ pactl send-message /card/bluez_card.XX_XX_XX_XX_XX_XX/bluez list-codecs\n```\n\n"
    },
    {
      "title": "Selected audio profile, but headset inactive and audio cannot be redirected",
      "level": 4,
      "content": "Deceptively, this menu is available before the device has been connected; annoyingly it will have no effect. The menu seems to be created as soon as the receiver recognizes the device.\n\nMake sure to run bluetoothctl as root and connect the device manually. There may be configuration options to remove the need to do this each time, but neither pairing nor trusting induce automatic connecting for me.\n\n"
    },
    {
      "title": "Pairing fails with AuthenticationFailed",
      "level": 4,
      "content": "If pairing fails, you can try enabling or disabling SSPMode with:\n\n```\n# btmgmt ssp off\n```\n\nor\n\n```\n# btmgmt ssp on\n```\n\nYou may need to turn off Bluetooth while you run this command.\n\n"
    },
    {
      "title": "Pairing works, but connecting does not",
      "level": 4,
      "content": "You might see the following error in bluetoothctl:\n\n```\n[bluetooth]# connect 00:1D:43:6D:03:26\nAttempting to connect to 00:1D:43:6D:03:26\nFailed to connect: org.bluez.Error.Failed\n```\n\nTo further investigate, check the unit status of bluetooth.service or have a look at the log as follows:\n\n```\n# journalctl -n 20\n```\n\nYou might see a message like this:\n\n```\nbluetoothd[5556]: a2dp-sink profile connect failed for 00:1D:43:6D:03:26: Protocol not available\n```\n\nThis may be due to the pulseaudio-bluetooth package not being installed. Install it if it is missing, then restart PulseAudio.\n\nIt can also be due to permission, especially if starting PulseAudio as root allows you to connect. See /usr/share/dbus-1/system.d/bluetooth.conf for reference.\n\nIf the issue is not due to the missing package, the problem in this case is that PulseAudio is not catching up. A common solution to this problem is to restart PulseAudio. Note that it is perfectly fine to run bluetoothctl as root while PulseAudio runs as user. After restarting PulseAudio, retry to connect. It is not necessary to repeat the pairing.\n\nIf restarting PulseAudio does not work, you need to load module-bluetooth-discover.\n\n```\n# pactl load-module module-bluetooth-discover\n```\n\nThe same load-module command can be added to /etc/pulse/default.pa.\n\nIf that still does not work, or you are using PulseAudio system-wide mode, also load the following PulseAudio modules (again these can be loaded via your default.pa or system.pa):\n\n```\nmodule-bluetooth-policy\nmodule-bluez5-device\nmodule-bluez5-discover\n```\n\nIt is also possible there are no write permissions for the owner of /var/lib/bluetooth/. If this is the case, you may get the device to work by removing and re-pairing it, but the issue will return after rebooting. Restoring write permissions fixes this issue:\n\n```\n# chmod -R u+w /var/lib/bluetooth\n```\n\n"
    },
    {
      "title": "Connecting works, but there are sound glitches all the time",
      "level": 4,
      "content": "This is very likely to occur when the Bluetooth and the Wi-Fi share the same chip as they share the same physical antenna and possibly band range (2.4GHz). Although this works seamlessly on Windows, this is not the case on Linux.\n\nA possible solution is to move your Wi-Fi network to 5GHz so that there will be no interference. If your card/router does not support this, you can upgrade your Wi-Fi drivers/firmware.\n\nIf nothing of the previous is possible, a less effective mitigation is to tweak the fragment size and the latency on PulseAudio output port, trying to compensate interference. Reasonable values must be chosen, because these settings can make the audio out of sync (e.g. when playing videos). To change the latency of the bluetooth headset's port (e.g. to 125000 microseconds in the following example):\n\n```\n$ pactl set-port-latency-offset <bluez_card> headset-output 125000\n```\n\nwhere the identifier of the card can be found with\n\n```\n$ pacmd list-sinks | grep -Eo 'bluez_card[^>]*'\n```\n\nThe fragment size can be set in /etc/pulse/daemon.conf and takes effect after a restart of PulseAudio (for more details please see PulseAudio/Troubleshooting#Setting the default fragment number and buffer size in PulseAudio).\n\nPerhaps it will help to add options ath9k btcoex_enable=1 to the /etc/modprobe.d/ath9k.conf (with the appropriate bluetooth adapter):\n\n```\n/etc/modprobe.d/ath9k.conf\n```\n\n```\n# possibly fix for sound glitches\noptions ath9k btcoex_enable=1\n```\n\nThen restart.\n\n"
    },
    {
      "title": "Connecting works, but there is no sound",
      "level": 4,
      "content": "Make sure that you see the following messages in your journal:\n\n```\nbluetoothd[5556]: Endpoint registered: sender=:1.83 path=/MediaEndpoint/A2DPSource\nbluetoothd[5556]: Endpoint registered: sender=:1.83 path=/MediaEndpoint/A2DPSink\n```\n\nIf you see a message similar to this, you can go on and investigate your PulseAudio configuration. Otherwise, go back and ensure the connection is successful.\n\nNote: **This article or section is a candidate for merging with PulseAudio/Troubleshooting.** This article or section is a candidate for merging with PulseAudio/Troubleshooting.\n\nThis article or section is a candidate for merging with PulseAudio/Troubleshooting.\n\nWhen using GDM, another instance of PulseAudio is started, which \"captures\" your bluetooth device connection. This can be prevented by masking the PulseAudio socket for the GDM user by doing the following:\n\n```\n# mkdir -p  /var/lib/gdm/.config/systemd/user\n# ln -s /dev/null  /var/lib/gdm/.config/systemd/user/pulseaudio.socket\n```\n\nOn next reboot the second instance of PulseAudio will not be started.\n\nIt may happen that bluez wrongly considers a headset as not a2dp capable. In this case, search the index of the bluetooth device with\n\n```\n$ pacmd ls\n```\n\nAmong the output there should be a section related to the bluetooth headset, containing something similar to\n\n```\n$ pacmd ls\n```\n\n```\nindex: 2\n        name: <bluez_card.XX_XX_XX_XX_XX_XX>\n        driver: <module-bluez5-device.c>\n        owner module: 27\n        properties:\n                device.description = \"SONY MDR-100ABN\"\n                device.string = \"XX:XX:XX:XX:XX:XX\"\n                device.api = \"bluez\"\n                device.class = \"sound\"\n                ...\n```\n\nTo manually set the profile, run\n\n```\n$ pacmd set-card-profile 2 a2dp_sink\n```\n\nwhere 2 is the index of the device retrieved through pacmd ls.\n\n"
    },
    {
      "title": "Connecting works, but the device does not show up in PulseAudio sinks",
      "level": 4,
      "content": "If the headphones connect successfully (which can be confirmed via bluetoothctl) but do not show up as an output/input sink in pavucontrol, you can try adding (or creating) the following policy to your Bluetooth configuration file /etc/bluetooth/audio.conf:\n\n```\n/etc/bluetooth/audio.conf\n```\n\n```\n[General]\nEnable=Control,Gateway,Headset,Media,Sink,Socket,Source\n```\n\nRestart the bluetooth.service, then reconnect the headphones.\n\nSome users report that this has solved their problem.\n\n"
    },
    {
      "title": "Connecting works, sound plays fine until headphones become idle, then stutters",
      "level": 4,
      "content": "If the headphones play sound correctly until they become idle and then stutter on resume (e.g. because the sound is paused, or because no sound is played for a while), try disabling PulseAudio's automatic sink/source suspension on idle.\n\nSome user reports huge delays or even no sound when the Bluetooth connection does not send any data. This is due to the module-suspend-on-idle module, which automatically suspends sinks/sources on idle. As this can cause problems with headset, the responsible module can be deactivated.\n\nTo disable loading of the module-suspend-on-idle module, comment out the following line in the configuration file in use (~/.config/pulse/default.pa or /etc/pulse/default.pa):\n\n```\n~/.config/pulse/default.pa\n```\n\n```\n### Automatically suspend sinks/sources that become idle for too long\n#load-module module-suspend-on-idle\n```\n\nFinally restart PulseAudio to apply the changes.\n\n"
    },
    {
      "title": "UUIDs has unsupported type",
      "level": 4,
      "content": "During pairing you might see this output in bluetoothctl:\n\n```\n[CHG] Device 00:1D:43:6D:03:26 UUIDs has unsupported type\n```\n\nThis message is a very common one and can be ignored.\n\n"
    },
    {
      "title": "PC shows device as paired, but is not recognized by device",
      "level": 4,
      "content": "This might be due to the device not supporting bluetooth LE for pairing.\n\nTry setting ControllerMode = bredr in /etc/bluetooth/main.conf. See [5].\n\n"
    },
    {
      "title": "Device connects, then disconnects after a few moments",
      "level": 4,
      "content": "If you see messages like the following in the journal, and your device fails to connect or disconnects shortly after connecting:\n\n```\nbluetoothd: Unable to get connect data for Headset Voice gateway: getpeername: Transport endpoint is not connected (107)\nbluetoothd: connect error: Connection refused (111)\n```\n\nThis may be because you have already paired the device with another operating system using the same bluetooth adapter (e.g., dual-booting). Some devices cannot handle multiple pairings associated with the same MAC address (i.e., bluetooth adapter). You can fix this by re-pairing the device. Start by removing the device:\n\n```\n$ bluetoothctl\n[bluetooth]# devices\nDevice XX:XX:XX:XX:XX:XX My Device\n[bluetooth]# remove XX:XX:XX:XX:XX:XX\n```\n\nThen restart bluetooth.service, turn on your bluetooth adapter, make your device discoverable, re-scan for devices, and re-pair your device. Depending on your bluetooth manager, you may need to perform a full reboot in order to re-discover the device.\n\n"
    },
    {
      "title": "Apple AirPods have low volume",
      "level": 4,
      "content": "Create a drop-in file for bluetooth.service with the following contents:\n\n```\n/etc/systemd/system/bluetooth.service.d/noplugin-avrc.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/lib/bluetooth/bluetoothd --noplugin=avrcp\n```\n\nThen, restart bluetooth.service, reload its configuration, and reconnect your headset.\n\nAdditionally, for AirPods Pro, disable the spatial audio and enable Mono in the settings of your iPhone.\n\nThis can also solve issues with some devices that are unable to be controlled through AVRCP.\n\n"
    },
    {
      "title": "Apple AirPods Pro working with PulseAudio as A2DP Sink but not with HSP/HFP",
      "level": 4,
      "content": "If you find that AirPods Pro are working with PulseAudio, but are incapable of using the HSP/HFP configurations (in pavucontrol's Configurations tab, usually listed as unavailable), try switching to pipewire-pulse.\n\nNote that switching to pipewire-pulse (and restarting your computer or the appropriate user-level systemd services) should enable HSP/HFP, but may also disable A2DP. (When selecting A2DP Sink in the Configurations tab, the option is instantly deselected and becomes Off.) If you encounter this issue, try removing/renaming the /var/lib/bluetooth folder like so:\n\n```\n# mv /var/lib/bluetooth /var/lib/bluetooth.bak\n```\n\nRe-pair your AirPods Pro (and other devices) afterwards. This should make all configurations (HSP/HFP and A2DP) available again and easily accessible from pavucontrol and pacmd.\n\n"
    },
    {
      "title": "HSP problem: the bluetooth sink and source are created, but no audio is being transmitted",
      "level": 4,
      "content": "You may be missing firmware or the SCO (audio protocol of HSP and HFP) routing might be wrong. See [6] - the firmware for BCM20702 can be installed via bcm20702a1-firmwareAUR or bcm20702b0-firmwareAUR.\n\n"
    },
    {
      "title": "Error: Failed to start discovery org.bluez.Error.InProgress",
      "level": 4,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIf your headset is discovered, but fails to connect with the error \"Failed to start discovery org.bluez.Error.InProgress\", install bluez-deprecated-tools and run\n\n```\n$ hciconfig hciX up\n$ hciconfig hciX reset\n```\n\nwhere X is the identifier of your computer's bluetooth device (typically 0).\n\nYou should then be able to connect following the steps in #Configuration via CLI.\n\n"
    },
    {
      "title": "High audio volume due to synchronization between headphones and PulseAudio",
      "level": 4,
      "content": "As of PulseAudio 15, \"Absolute Volume\" interlocks the audio volume of your headphones with PulseAudio, making it impossible to change one without the other. On some headphones, e.g. on the Hoco W25, this may result in irritating loudness. To disable \"Absolute Volume\", edit /etc/pulse/default.pa and change the line\n\n```\nload-module module-bluetooth-discover\n```\n\nto\n\n```\nload-module module-bluetooth-discover avrcp_absolute_volume=false\n```\n\n"
    },
    {
      "title": "Switch between HSP/HFP and A2DP setting",
      "level": 2,
      "content": "This can easily be achieved by the following command where the card_number can be obtained by running pacmd list-cards.\n\n```\n$ pacmd set-card-profile card_number a2dp_sink\n```\n\nNote that the different profiles might have different volumes and you need to increase the volume of the new profile before you hear something again.\n\nFor enabling automatic profile switching from A2DP to HSP when a recording stream appears without any role set, you can append auto_switch=2 to load-module module-bluetooth-policy in /etc/pulse/default.pa.\n\nFor more information about PulseAudio profiles, see PulseAudio Documentation.\n\n"
    },
    {
      "title": "Socket interface problem",
      "level": 4,
      "content": "If PulseAudio fails when changing the profile to A2DP with bluez 4.1+ and PulseAudio 3.0+, you can try disabling the Socket interface from /etc/bluetooth/main.conf by removing the line Enable=Socket and adding line Disable=Socket.\n\n"
    },
    {
      "title": "A2DP sink profile is unavailable",
      "level": 4,
      "content": "When the A2DP sink profile is unavailable it will not be possible to switch to the A2DP sink (output) with a PulseAudio front-end and the A2DP sink will not even be listed. This can be confirmed with pactl.\n\n```\n$ pactl list | grep -C2 A2DP\n     Profiles:\n             headset_head_unit: Headset Head Unit (HSP/HFP) (sinks: 1, sources: 1, priority: 30, available: yes)\n             a2dp_sink: High Fidelity Playback (A2DP Sink) (sinks: 1, sources: 0, priority: 40, available: no)\n             off: Off (sinks: 0, sources: 0, priority: 0, available: yes)\n        Active Profile: headset_head_unit\n```\n\nTrying to manually set the card profile with pacmd will fail.\n\n```\n$ pacmd set-card-profile bluez_card.C4_45_67_09_12_00 a2dp_sink\nFailed to set card profile to 'a2dp_sink'.\n```\n\nThis is known to happen from version 10.0 of PulseAudio when connecting to Bluetooth headphones via Bluedevil or another BlueZ front-end. See related bug report.\n\nThis issue also appears after initial pairing of Headphones with some Bluetooth controllers (e.g. 0a12:0001, Cambridge Silicon Radio) which might default to the Handsfree or Headset - HS service and will not allow switching to the A2DP PulseAudio sink that requires the AudioSink service.\n\nPossible solutions:\n\n- For some headsets, using the headset's volume or play/pause controls while connected can trigger the A2DP profile to become available.\n- Try starting with the normal linux or linux-lts kernel if you are using something else.\n- It is possible that connecting to a headset via bluetoothctl from bluez-utils will make the A2DP sink profile available. There is an automation for this every time a bluetooth device is connected: fix-bt-a2dpAUR (detailed usage)\n\n```\n[bluetooth]# connect headset_MAC_address\n```\n\n- Manually switching to Bluetooth's AudioSink service which would make the A2DP profile and its A2DP PulseAudio sink available. This can be done with blueman-manager which included in blueman or by registering the UUID of the AudioSink service with bluetoothctl.\n\n```\n$ bluetoothctl\n[bluetooth]# menu gatt\n[bluetooth]# register-service 0000110b-0000-1000-8000-00805f9b34fb\n[bluetooth]# quit\n```\n\n- Disable the headset profile\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n[General]\nDisable=Headset\n```\n\n- Enable MultiProfile support. This may help with headsets that support A2DP as well as Headset audio.\n\n```\n/etc/bluetooth/main.conf\n```\n\n```\n[General]\nMultiProfile=multiple\n```\n\n- Sometimes, none of the steps above will work. You may have tried rebooting and powering bluetooth off and on to no avail. In this case, try restarting the bluetooth.service.\n- For some headphone models with audio control panel, the A2DP profile must be enabled by pressing the Play/Pause button on the panel.\n\n"
    },
    {
      "title": "Gnome with GDM",
      "level": 4,
      "content": "The instructions below were tested on Gnome 3.24.2 and PulseAudio 10.0 however they may still be applicable and useful for other versions.\n\nIf PulseAudio fails when changing the profile to A2DP while using GNOME with GDM, you need to prevent GDM from starting its own instance of PulseAudio:\n\n- Prevent PulseAudio clients from automatically starting a server if one is not running by adding the following:\n\n```\n/var/lib/gdm/.config/pulse/client.conf\n```\n\n```\nautospawn = no\ndaemon-binary = /bin/true\n```\n\n- Prevent systemd from starting PulseAudio anyway with socket activation:\n\n```\n$ sudo -ugdm mkdir -p /var/lib/gdm/.config/systemd/user\n$ sudo -ugdm ln -s /dev/null /var/lib/gdm/.config/systemd/user/pulseaudio.socket\n```\n\n- Restart, and check that there is no PulseAudio process for the gdm user using:\n\n```\n$ pgrep -u gdm pulseaudio\n```\n\nFurther discussion about this problem and alternative fixes can be found at [7] and [8]. Alternatively, one may try and install fix-bt-a2dpAUR.\n\n"
    },
    {
      "title": "HFP not working with PulseAudio",
      "level": 3,
      "content": "HFP-only bluetooth headsets may not be usable in the standard configuration of PulseAudio. The respective profiles occur, but they are not available:\n\n```\nbluetoothctl info\n```\n\n```\nUUID: Audio Sink                (0000110b-0000-1000-8000-00805f9b34fb)\nUUID: A/V Remote Control Target (0000110c-0000-1000-8000-00805f9b34fb)\nUUID: A/V Remote Control        (0000110e-0000-1000-8000-00805f9b34fb)\nUUID: Handsfree                 (0000111e-0000-1000-8000-00805f9b34fb)\n```\n\n```\npactl list\n```\n\n```\n...\nProfiles:\n      ...\n      headset_head_unit: Headset Head Unit (HSP/HFP) (sinks: 1, sources: 1, priority: 30, available: no)\n```\n\nTo solve the respective issue, update PulseAudio and BlueZ to latest versions. Then install ofonoAUR and phonesimAUR then create / activate a fake modem as described here [10]:\n\n- Create /etc/ofono/phonesim.conf with:\n\n```\n[phonesim]\nAddress=127.0.0.1\nDriver=phonesim\nPort=12345\n```\n\n- Start as user:\n\n```\n$ phonesim -p 12345 /usr/share/phonesim/default.xml &\n```\n\n- Enable/start the ofono.service.\n- Power modem:\n\n```\n$ dbus-send --print-reply --system --dest=org.ofono /phonesim org.ofono.Modem.SetProperty string:\"Powered\" variant:boolean:true\n```\n\n- Activate modem:\n\n```\n$ dbus-send --print-reply --system --dest=org.ofono /phonesim org.ofono.Modem.SetProperty string:\"Online\" variant:boolean:true\n```\n\n- To check the results, use the test commands from ofonoAUR installed in /usr/lib/ofono/test/. To power, activate, and test the modem you can use:\n\n```\n$ /usr/lib/ofono/test/enable-modem /phonesim\n$ /usr/lib/ofono/test/online-modem /phonesim\n$ /usr/lib/ofono/test/list-modems\n```\n\nThe output of the respective modem section should be like this:\n\n```\n...\n[ /phonesim ]\n  Online = 1\n  Powered = 1\n  Lockdown = 0\n  Emergency = 0\n  Manufacturer = MeeGo\n  ...\n```\n\n- Finally, restart PulseAudio and reconnect headset. Now, HFP should be available:\n\n```\nheadset_head_unit: Headset Head Unit (HSP/HFP) (sinks: 1, sources: 1, priority: 30, available: yes)\n```\n\n"
    },
    {
      "title": "Disable PulseAudio auto switching headset to HSP/HFP",
      "level": 3,
      "content": "When using a bluetooth headset that supports multiple profiles, some applications switch to HSP/HFP profile automatically. If this behaviour is undesired you can disable this by appending the auto_switch=false parameter to the bluetooth-policy module:\n\n```\n/etc/pulse/default.pa\n```\n\n```\nload-module module-bluetooth-policy auto_switch=false\n```\n\n"
    },
    {
      "title": "Disable PipeWire HSP/HFP profile",
      "level": 3,
      "content": "Unlike PulseAudio, PipeWire does not automatically switch between A2DP and HSP/HFP in response to input events. However, rather than to enable automatically switching to the (lower audio quality) HSP/HFP profile if A2DP fails, you may prefer to disable the former altogether. To do so, create or edit a bluez configuration as shown below.\n\n```\n/etc/wireplumber/wireplumber.conf.d/51-mitigate-annoying-profile-switch.conf (or ~/.config/wireplumber/wireplumber.conf.d/51-mitigate-annoying-profile-switch.conf)\n```\n\n```\n## In WirePlumber there's a bug where some applications trigger switching to Headset Profile\n## --\n## See issue #634, #645, #630, #629, #613\n## --\n## This config mitigates the issue by completely disabling the switching and support for Headset Profile (HFP)\n## Using this would only make sense if you never plan on using the microphone that comes with your headset.\n\nwireplumber.settings = {\n  ## Whether to use headset profile in the presence of an input stream.\n  ## --\n  ## Disable for now, as it causes issues. See note at the top as to why.\n  bluetooth.autoswitch-to-headset-profile = false\n}\n\nmonitor.bluez.properties = {\n  ## Enabled roles (default: [ a2dp_sink a2dp_source bap_sink bap_source hfp_hf hfp_ag ])\n  ##\n  ## Currently some headsets (Sony WH-1000XM3) are not working with\n  ## both hsp_ag and hfp_ag enabled, so by default we enable only HFP.\n  ##\n  ## Supported roles: hsp_hs (HSP Headset),\n  ##                  hsp_ag (HSP Audio Gateway),\n  ##                  hfp_hf (HFP Hands-Free),\n  ##                  hfp_ag (HFP Audio Gateway)\n  ##                  a2dp_sink (A2DP Audio Sink)\n  ##                  a2dp_source (A2DP Audio Source)\n  ##                  bap_sink (LE Audio Basic Audio Profile Sink)\n  ##                  bap_source (LE Audio Basic Audio Profile Source)\n  ## --\n  ## Only enable A2DP here and disable HFP. See note at the top as to why.\n  bluez5.roles = [ a2dp_sink a2dp_source ]\n}\n```\n\nAs suggested in this comment on the Wireplumber issue tracker.\n\n"
    },
    {
      "title": "Alternative: A2DP duplex channel",
      "level": 3,
      "content": "FastStream, AptX LL, and \"Opus 05 Pro\" (a pipewire invention) have a \"duplex\" channel that allows for sending microphone audio back without needing to go into HSP/HFP and tolerate the sound quality degradation. PipeWire, but not PulseAudio, has support for this feature. Support is automatic upon feature detection. Interaction with existing profile switcher (WirePlumber) is unknown.\n\n"
    },
    {
      "title": "Tips and tricks",
      "level": 2,
      "content": "The following applies to both PipeWire and PulseAudio.\n\n"
    },
    {
      "title": "Battery level reporting",
      "level": 3,
      "content": "To get the current battery level of your headset reported to upower, you must enable bluez' D-Bus experimental features as described in Bluetooth#Enabling experimental features.\n\n"
    },
    {
      "title": "Media controls",
      "level": 3,
      "content": "To use the media controls they may be forwarded to MPRIS, where they can be picked up by media players that support MPRIS for external control. See MPRIS#Bluetooth for details.\n\n"
    },
    {
      "title": "AVRCP Media controls",
      "level": 3,
      "content": "This may be desired for bluetooth headsets with overly sensitive touch controls, and AVRCP playback controls can be disabled through the inhibited sysfs file corresponding to the virtual AVRCP input device, for example /sys/devices/virtual/input/input877/inhibited. The correct virtual input can be identified via the name attribute, /sys/devices/virtual/input/input877/name, which may for example be \"Soundcore Life P3 (AVRCP)\". Echoing 1 to this file inhibits/disables AVRCP, and echoing 0 re-enables it. This can be changed dynamically at runtime without restarting bluetoothd or disconnecting your device.\n\nThis will be reset on device disconnect and reconnect, so it is likely desired to automatically set it via a udev rule such as:\n\n```\nSUBSYSTEM==\"input\" ATTR{name}==\"Soundcore Life P3 (AVRCP)\" ATTR{inhibited}=\"1\"\n```\n\nIf you want to be able to change this attribute as a regular user, see udev#Allowing regular users to use devices\n\n"
    }
  ]
}