{
  "title": "Microsoft Surface Pro 3",
  "url": "https://wiki.archlinux.org/title/Microsoft_Surface_Pro_3",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nNote: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nGPU | 8086:0a16 | Yes\nWi-Fi | 11ab:2b38 | Yes\nBluetooth | 1286:204b | Yes\nWebcam (front) | 045e:07be | Yes\nWebcam (rear) | 045e:07bf | Yes\n\nThis page aims to document all relevant information on getting Arch Linux working on the Microsoft Surface Pro 3 tablet.\n\n"
    },
    {
      "title": "Booting into the installer",
      "level": 2,
      "content": "To boot from USB, you will need to instruct the tablet to boot from USB or SD Card. Also, you may want to avoid disabling Secure Boot as this will cause each boot to display an ugly bright red background intentionally clashing with the \"Surface\" splash logo.\n\nThere are three types of boots in the Surface Pro 3 explained here:\n\n1. Normal mode Just leave the computer go. You can change it from \"Alternate Boot order\" in the UEFI Setup\n1. Boot into the UEFI Setup With the device powered off (or rebooting, but better play safe) Press & hold Volume up Press power button Wait until the surface logo appears Release Volume up You will be presented with the UEFI Setup Menu\n1. Boot into the USB/SD card Power off the device Press & hold Volume down Press power button Wait until the surface logo appears Release Volume down\n\n1. Just leave the computer go. You can change it from \"Alternate Boot order\" in the UEFI Setup\n\n1. With the device powered off (or rebooting, but better play safe)\n1. Press & hold Volume up\n1. Press power button\n1. Wait until the surface logo appears\n1. Release Volume up\n1. You will be presented with the UEFI Setup Menu\n\n1. Power off the device\n1. Press & hold Volume down\n1. Press power button\n1. Wait until the surface logo appears\n1. Release Volume down\n\n"
    },
    {
      "title": "Disable Secure Boot",
      "level": 3,
      "content": "Note: **unless** \n\nBoot into the UEFI setup, and select Secure Boot Control > Disable. Now continue with the installation. See the Microsoft steps for more information.\n\n"
    },
    {
      "title": "Boot with Secure Boot",
      "level": 3,
      "content": "See Secure Boot.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Note: **This article or section is a candidate for merging with UEFI#Secure Boot.** This article or section is a candidate for merging with UEFI#Secure Boot.\n\nThis article or section is a candidate for merging with UEFI#Secure Boot.\n\nI have done the installation with systemd's bootctl Systemd-boot (old Gummiboot). After completing the Installation guide, you should do two more things. Booting in Secure Boot will not work for the new installation, as the vmlinuz has not been registered within its loader.\n\nThe easiest way is to do all the setup is the following, just before rebooting:\n\n1. Exit from the chroot but do not umount anything\n1. Move /mnt/boot/EFI/boot/bootx64.efi to /mnt/boot/EFI/boot/loader.efi\n1. Copy /boot/EFI/boot/bootx64.efi and HashTool.efi to /mnt/boot/EFI/boot/\n\n(If you are unable to find HashTool in /boot, try in /usr/run)\n\nHere, we have enabled Preloader to boot our gummiboot loader, and if it detects that something has not been signed, it will boot the HashTool.efi to sign the vmlinuz-image binary.\n\nThe idea is, we take the systemd bootloader and make it the one that PreLoader will boot (the one in its same folder, named loader.efi). Then, we copy both the PreLoader (which is the archiso's bootx64.efi) and the HashTool (already with that name).\n\nThis way, with Secure Boot enabled, you will be able to boot your kernel whenever you wish to, signed or not, repeating the hash storing procedure on the next boot.\n\n"
    },
    {
      "title": "Enabling Touchpad",
      "level": 3,
      "content": "Ref: GitHub In order to enable full functionality of the touchpad (e.g. two-finger scrolling, right click), you need to Install the xf86-input-synaptics package, have the kernel patch applied as well as add the following to /etc/X11/xorg.conf.d/10-multitouch.conf:\n\n```\nSection \"InputClass\"\n  Identifier \"Default clickpad buttons\"\n  MatchDriver \"synaptics\"\n  Option \"ClickPad\" \"true\"\n  Option \"SoftButtonAreas\" \"50% 0 82% 0 0 0 0 0\"\n  Option \"SecondarySoftButtonAreas\" \"58% 0 0 15% 42% 58% 0 15%\"\nEndSection\n```\n\n"
    },
    {
      "title": "Tuning the Pen",
      "level": 3,
      "content": "The pen buttons might not work out of the box. Install the xf86-input-wacom package and comment the MatchIsTablet section in /usr/share/X11/xorg.conf.d/10-evdev.conf. Furthermore add 1B96:1B05 Pen in the MatchProduct line of N-Trig in /usr/share/X11/xorg.conf.d/50-wacom.conf. Note that the purple bluetooth button is recognized but able to be bound to an action. Ref:Reddit\n\n"
    },
    {
      "title": "Virtual Keyboard",
      "level": 3,
      "content": "Depending on the desktop environment you are using, you might want to use different virtual keyboard. onboard provides a reliable and comfortable experience. A guide for optical tweaking is provided here. If you are using GNOME, these two extension (1, 2) provide a better integration.\n\n"
    },
    {
      "title": "Booting with Secure Boot Enabled",
      "level": 3,
      "content": "Note: **This article or section is a candidate for merging with Secure Boot.** This article or section is a candidate for merging with Secure Boot.\n\nThis article or section is a candidate for merging with Secure Boot.\n\nThe recommended bootloader for UEFI with Secure Boot enabled is systemd-boot\n\nTo boot with Secure Boot, you will need the following packages: efibootmgr efitools\n\nSee Surface Pro 3 and Secure Boot post-install\n\nCopy /boot/EFI/systemd/systemd-bootx64.efi to /boot/EFI/systemd/loader.EFI. Copy /usr/lib/prebootloader/HashTool.efi and /usr/lib/prebootloader/PreLoader.efi to /boot/EFI/systemd/. Create an NVRAM entry for PreLoader.efi:\n\n```\nefibootmgr -d /dev/sdX -p Y -c -L Preloader -l /EFI/systemd/PreLoader.efi\n```\n\nVerify the entry was made and that it is first in the boot order:\n\n```\nefibootmgr\n```\n\nEnrolling your kernel in the bootloader: Secure Boot Enroll HashTool.efi and vmlinuz-linux, and then reboot to system. You should now be able to boot with Secure Boot enabled.\n\n- Since PreLoader.efi is the default boot option per efibootmgr, if you change the kernel you will be presented with PreLoader to enroll the new kernel with HashTool again\n- Ensure that you add the entry in /boot/loader/entries/ so that you are presented the option to boot with the new kernel\n\n"
    },
    {
      "title": "Enabling Wi-Fi and Bluetooth",
      "level": 3,
      "content": "The package linux-firmware-marvell is required for the Wi-Fi and Bluetooth since the linux-firmware 20220119 update.\n\n"
    },
    {
      "title": "Accessibility",
      "level": 2,
      "content": "The appearance of the BIOS is pretty simple and not very colorful, so it might work well with OCR software.\n\nThe BIOS can be configured with a keyboard, mouse, or using the touch screen.\n\n"
    },
    {
      "title": "Invalid signature detected check secure boot policy in setup",
      "level": 3,
      "content": "This happened to me after deleting the Secure Boot database and initializing it with Microsoft & CAs. I also had to do the recovery of the BitLocker partition, but I would follow these steps:\n\n1. After the reset, switch off and try to boot from the SD/USB. If you do not succeed and get the message many times: Leaving all TPM & Secure Boot enabled and SSD Only alternate system order Do another database reset Enroll the Microsoft and CAs again reboot into SD/USB with volume down It should work now\n1. Follow steps in the Secure Boot installation\n1. After the full installation of Arch Linux, when you have it working, do the BitLocker recovery\n\n1. Leaving all TPM & Secure Boot enabled and SSD Only alternate system order\n1. Do another database reset\n1. Enroll the Microsoft and CAs again\n1. reboot into SD/USB with volume down\n1. It should work now\n\nIf after doing these steps does not still work. Flash the Archiso image once more and try again,\n\n"
    },
    {
      "title": "Keyboard Cover not working",
      "level": 3,
      "content": "This can happen sometimes when you restart. The solution was to shutdown and reboot. (not restart)\n\n"
    },
    {
      "title": "Pen/Touchscreen issues in Xournal",
      "level": 3,
      "content": "When using the xf86-input-wacom package there is a bug in the last official release of xournalAUR (0.48.2) where it will incorrectly detect the Surface Pen as the touchscreen device. However it has been fixed in the latest Xournal source as per this bug. Installing the AUR package xournal-gitAUR builds the latest source including this fix. Note that you will need to select 'NTRG0001:01 1B96:1B05' as the touchscreen device (Options > Pen and Touch).\n\n"
    }
  ]
}