{
  "title": "Sfdisk",
  "url": "https://wiki.archlinux.org/title/Sfdisk",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- File systems\n- gdisk\n- GNU Parted\n- Partitioning\n- dd\n\nutil-linux fdisk is a dialogue-driven command-line utility that creates and manipulates partition tables and partitions on a hard disk. Hard disks are divided into partitions and this division is described in the partition table.\n\nThis article covers fdisk(8) and its related sfdisk(8) utility.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "fdisk and its associated utilities are provided by the util-linux package, which is a dependency of the base meta package.\n\n"
    },
    {
      "title": "List partitions",
      "level": 2,
      "content": "To list partition tables and partitions on a block device, you can run the following, where device is a name like /dev/sda, /dev/nvme0n1, /dev/mmcblk0, etc.:\n\n```\n# fdisk -l /dev/sda\n```\n\n"
    },
    {
      "title": "Backup and restore partition table",
      "level": 2,
      "content": "Before making changes to a hard disk, you may want to backup the partition table and partition scheme of the drive. You can also use a backup to copy the same partition layout to numerous drives.\n\nFor both GPT and MBR you can use sfdisk to save the partition layout of your device to a file with the -d/--dump option. Run the following command for device /dev/sda:\n\n```\n# sfdisk -d /dev/sda > sda.dump\n```\n\nThe file should look something like this for a single ext4 partition that is 1 GiB in size:\n\n```\nsda.dump\n```\n\n```\nlabel: gpt\nlabel-id: AAAAAAAA-BBBB-CCCC-DDDD-EEEEEEEEEEEE\ndevice: /dev/sda\nunit: sectors\nfirst-lba: 34\nlast-lba: 1048576\nsector-size: 512\n\n/dev/sda1Â : start=2048, size=1048576, type=0FC63DAF-8483-4772-8E79-3D69D8477DE4, uuid=BBF1CD36-9262-463E-A4FB-81E32C12BDE7\n```\n\nTo later restore this layout you can run:\n\n```\n# sfdisk /dev/sda < sda.dump\n```\n\n"
    },
    {
      "title": "Create a partition table and partitions",
      "level": 2,
      "content": "The first step to partitioning a disk is making a partition table. After that, the actual partitions are created according to the desired partition scheme. See the partition table article to help decide whether to use MBR or GPT.\n\nBefore beginning, you may wish to backup your current partition table and scheme.\n\nfdisk performs partition alignment automatically on a 2048 512-byte sector (1 MiB) block size base which should be compatible with all Advanced Format HDDs and the vast majority of SSDs if not all. This means that the default settings will give you proper alignment.\n\nTo use fdisk, run the program with the name of the block device you want to change/edit. This example uses /dev/sda:\n\n```\n# fdisk /dev/sda\n```\n\nThis opens the fdisk dialogue where you can type in commands.\n\n"
    },
    {
      "title": "Create new table",
      "level": 3,
      "content": "- Check that your NVMe drives and Advanced Format hard disk drives are using the optimal logical sector size before partitioning.\n- Consider performing SSD memory cell clearing before partitioning an SSD.\n\nTo create a new partition table and clear all current partition data type g at the prompt for a GUID Partition Table (GPT) or o for an MBR partition table. Skip this step if the table you require has already been created.\n\n"
    },
    {
      "title": "Create partitions",
      "level": 3,
      "content": "Create a new partition with the n command. You must enter a partition number, starting sector, and an ending sector. If formatting with MBR, it may also require a partition type.\n\n"
    },
    {
      "title": "Partition type",
      "level": 4,
      "content": "When using MBR, fdisk will ask for the MBR partition type. Specify it, type p to create a primary partition or e to create an extended one. There may be up to four primary partitions.\n\nfdisk does not ask for the partition type ID and uses 'Linux filesystem' by default; you can change it later.\n\n"
    },
    {
      "title": "Partition number",
      "level": 4,
      "content": "A partition number is the number assigned to a partition, e.g. a partition with number 1 on a disk /dev/sda would be /dev/sda1, /dev/nvme0n1p1 on /dev/nvme0n1 and /dev/mmcblk0p1 on /dev/mmcblk0. See Device file#Partition for details on the naming scheme. Partition numbers may not always match the order of partitions on disk, in which case they can be sorted.\n\nIt is advised to choose the default number suggested by fdisk.\n\n"
    },
    {
      "title": "First and last sector",
      "level": 4,
      "content": "The first sector must be specified in absolute terms using sector numbers. The last sector can be specified using the absolute position in sector numbers or as positions measured in kibibytes (K), mebibytes (M), gibibytes (G), tebibytes (T), or pebibytes (P);\n\nThe position of the last sector can be specified in:\n\n- absolute terms from the start of the disk. E.g. 40M as a first sector specifies a position 40 MiB from the start of the disk.\n- relative terms by preceding the size with +size or -size. E.g. +2G to specify a point 2 GiB after the start sector, or -200M to specify a point 200 MiB before the last available sector.\n\nPressing the Enter key with no input specifies the default value, which is the start of the largest available block for the first sector and the end of the same block for the last sector.\n\n- When partitioning it is always a good idea to follow the default value for a partition's first sector. Additionally, make sure to specify partition sizes with the +size{M,G,T,P} notation and do not use sizes smaller than 1 MiB. Such partitions will always be aligned according to the device properties.\n- EFI system partition requires the partition type EFI System.\n- GRUB requires a BIOS boot partition with partition type BIOS boot when installing GRUB to a GPT partitioned disk on a BIOS-based system.\n\nRepeat this procedure until you have the partitions you desire.\n\n"
    },
    {
      "title": "Change partition type",
      "level": 3,
      "content": "Each partition is associated with a type. MBR uses partition IDs; GPT uses Partition type GUIDs.\n\nPress t to change the type of a partition. You can use an alias for common partition types:\n\n- uefi for the ESP\n- xbootldr for an XBOOTLDR partition\n- home for the home partition\n- swap for the swap partition\n- linux for other partitions\n\n- Press L to show fdisk's internal code list.\n- When using GPT, it is advised to follow the Discoverable Partitions Specification. This allows using GPT automounting.\n\n"
    },
    {
      "title": "Make an MBR partition bootable",
      "level": 3,
      "content": "You can make an MBR partition bootable (aka active) by typing a.\n\n"
    },
    {
      "title": "Review and write changes to the partition table",
      "level": 3,
      "content": "- Print changes via the p command.\n- Abort changes via the q command.\n- Write changes to disk and exit via the w command.\n\n"
    },
    {
      "title": "Create a file system",
      "level": 3,
      "content": "To create a file system on the new partition, see File systems#Create a file system.\n\n"
    },
    {
      "title": "Moving partitions",
      "level": 2,
      "content": "In order to move a partition, you need to have free space available where the partition will be moved. If necessary, you can make room by shrinking your partitions and the filesystems on them. See Parted#Shrinking partitions. To relocate a partition:\n\n```\n# echo '+sectors,' | sfdisk --move-data device -N number\n```\n\nWhere sectors is the number of sectors to move the partition (the + indicates moving it forward), device is the device that holds the partition, and number is the partition number. Note that if you add a new partition in the middle or at the beginning of your disk, you will likely want to renumber the partitions. See #Sort partitions or the \"extra functionality\" mode of fdisk.\n\n"
    },
    {
      "title": "Sort partitions",
      "level": 3,
      "content": "This applies for when a new partition is created in the space between two partitions or a partition is deleted. /dev/sda is used in this example.\n\n```\n# sfdisk -r /dev/sda\n```\n\nAfter sorting the partitions if you are not using Persistent block device naming, it might be required to adjust the /etc/fstab and/or the /etc/crypttab configuration files.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Managing partitions in Linux with fdisk\n\n"
    }
  ]
}