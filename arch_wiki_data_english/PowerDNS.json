{
  "title": "PowerDNS",
  "url": "https://wiki.archlinux.org/title/PowerDNS",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "PowerDNS is a DNS server, written in C++ and licensed under the GPL. PowerDNS features a large number of different backends ranging from simple BIND style zonefiles to relational databases and load balancing/failover algorithms.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the powerdns package.\n\nNext you can review the configuration file located at /etc/powerdns/pdns.conf.\n\n"
    },
    {
      "title": "Backends",
      "level": 2,
      "content": "To configure PowerDNS to use specific backend you will need to set the launch option in configuration file. Also depending on particular backend you use, you will have to configure it.\n\nFor PostgreSQL, MySQL and SQLite you can find database table creation SQL files located at /usr/share/doc/powerdns.\n\n"
    },
    {
      "title": "PostgreSQL backend",
      "level": 3,
      "content": "Firstly you will need to create a user and database where PowerDNS can store data.\n\nThen execute \"schema.pgsql.sql\" file to create tables.\n\n```\npsql -U <user> -d <database name> -a -f /usr/share/doc/powerdns/schema.pgsql.sql\n```\n\nAnd finally update configuration file\n\n```\nlaunch=gpgsql\ngpgsql-host=/run/postgresql # if PostgreSQL is listening to unix socket\n# gpgsql-host=127.0.0.1\n# gpgsql-port=5432\ngpgsql-dbname=<database name>\ngpgsql-user=<user to use>\ngpgsql-password=\n```\n\n"
    },
    {
      "title": "MySQL backend",
      "level": 3,
      "content": "Install and run a MySQL server. Create a new user, and a new database and import the schema into the db:\n\n```\nmysql -u root -p pdns < /usr/share/doc/powerdns/schema.mysql.sql\n```\n\nThen, configure Powerdns to use MySQL:\n\n```\n/etc/powerdns/pdns.conf\n```\n\n```\nlaunch=gmysql\ngmysql-host=127.0.0.1\ngmysql-socket=/run/mysqld/mysqld.sock\ngmysql-user=pdns\ngmysql-password=Pa$$w0rd\ngmysql-dbname=pdns\n# Add this for dnssec support\n# gmysql-dnssec=yes\n```\n\nYou could also use localhost instead of 127.0.0.1, but this causes PowerDNS to use the socket file. As PowerDNS runs in a chroot by default, the socket file is not available.\n\n"
    },
    {
      "title": "SQLite backend",
      "level": 3,
      "content": "Configure Powerdns to use sqlite:\n\n```\n/etc/powerdns/pdns.conf\n```\n\n```\nlaunch=gsqlite3\ngsqlite3-database=/var/lib/powerdns/pdns.sqlite3\n```\n\nCreate the database:\n\n```\n# mkdir /var/lib/powerdns\n# sqlite3 /var/lib/powerdns/pdns.sqlite3 < /usr/share/doc/powerdns/schema.sqlite3.sql\n# chown -R powerdns:powerdns /var/lib/powerdns\n```\n\n"
    },
    {
      "title": "Startup",
      "level": 2,
      "content": "Start/enable pdns.service.\n\n"
    },
    {
      "title": "Bind address and/or port",
      "level": 3,
      "content": "The default /etc/powerdns/pdns.conf binds to 0.0.0.0:53 (all IP addresses). This will conflict with any other process bound to port 53, for example systemd-resolved uses 127.0.0.53:53. This will result in an error:\n\n```\nUnable to bind UDP socket to '0.0.0.0:53': Address already in use\n```\n\nThis can be resolved in a number of ways, for example changing either/both local-address or local-port options:\n\n```\n/etc/powerdns/pdns.conf\n```\n\n```\nlocal-address=127.0.0.1:54\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- PowerDNS manual\n\n"
    }
  ]
}