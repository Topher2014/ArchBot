{
  "title": "BackupPC",
  "url": "https://wiki.archlinux.org/title/BackupPC",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "BackupPC is a high-performance, enterprise-grade system for backing up Unix, Linux, WinXX, and MacOSX PCs, desktops and laptops to a server's disk. BackupPC is highly configurable and easy to install and maintain.\n\nGiven the ever decreasing cost of disks and raid systems, it is now practical and cost effective to backup a large number of machines onto a server's local disk or network storage. For some sites this might be the complete backup solution. For other sites additional permanent archives could be created by periodically backing up the server to tape.\n\nNote that BackupPC only provides file-based backups and restores. In particular, it is not suitable out-of-the-box for \"hot\" database backups (although pre-backup hooks can be used to dump databases and do \"cold\" backups); you will need tools like xtrabackup for that purpose. Also, BackupPC only offers limited handling of opened files. Make sure to read about the limitations of BackupPC and test a backup-and-restore cycle before you actually need to resort to it for real.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install backuppc. Install rsync and perl-file-rsyncp if you want to use rsync as a transport, and rrdtool to display usage data in the CGI interface.\n\nThen start/enable backuppc.service.\n\n"
    },
    {
      "title": "Placing data directories on a separate partition",
      "level": 3,
      "content": "The BackupPC pool is stored by default under /var/lib/backuppc, which also serves as the home directory for the backuppc user. This path can be changed via the $Conf{TopDir} entry in /etc/backuppc/config.pl. Typical reasons are that you keep your system on a fast, but expensive and small, SSD and need to store the backups on a traditional hard disk, or that you want to keep the backup pool on a partition managed by an LVM to be able to resize to partition according to changing demands.\n\nThe documentation suggests to not change the $Conf{TopDir} entry, but instead use symlinks. However, be careful when doing so because package upgrades for backuppc will replace symlinks for both /var/lib/backuppc or any of the default subdirectories cpool, pc or pool by empty directories without any warning.\n\nThus, it is recommended to either use bind mounts in fstab instead of symlinks, or to deliberately ignore the recommendation in /etc/backuppc/config.pl and change $Conf{TopDir} nevertheless. Alternatively, use pacman's pre- and post-transaction hooks such as the following (remember to make the shell scripts executable):\n\n```\n/etc/pacman.d/hooks/backuppc-restore-symlinks-post.hook\n```\n\n```\n[Trigger]\nOperation = Upgrade\nType = Package\nTarget = backuppc\n\n[Action]\nDescription = Restore symlinks for BackupPC pool directories\nWhen = PostTransaction\nExec = /etc/pacman.d/hooks/backuppc-restore-symlinks-post.sh\n```\n\n```\n/etc/pacman.d/hooks/backuppc-restore-symlinks-post.sh\n```\n\n```\n#!/usr/bin/bash\n\nif [Â ! -d /tmp/backuppc-symlinks-cache ]; then\n    exit 0\nfi\n\nif [ -L /tmp/backuppc-symlinks-cache/backuppc ]; then\n    rmdir /var/lib/backuppc/{cpool,pc,pool,}\n    mv /tmp/backuppc-symlinks-cache/backuppc /var/lib/\n    echo \"==> Restored /var/lib/backuppc => $(readlink /var/lib/backuppc)\"\nfi\n\nfor dir in cpool pc pool; do\n    if [ -L /tmp/backuppc-symlinks-cache/$dir ]; then\n        rmdir /var/lib/backuppc/$dir\n        mv /tmp/backuppc-symlinks-cache/$dir /var/lib/backuppc/\n        echo \"==> Restored /var/lib/backuppc/${dir} => $(readlink /var/lib/backuppc/$dir)\"\n    fi\ndone\n\nif [ -f /tmp/backuppc-symlinks-cache/was-running ]; then\n    echo '==> BackupPC service was stopped for upgrade.'\n    echo '==> Check the configuration and run `systemctl start backuppc.service` to restart the service.'\n    rm -f /tmp/backuppc-symlinks-cache/was-running\nfi\n\nrmdir --ignore-fail-on-non-empty /tmp/backuppc-symlinks-cache &>/dev/null\n```\n\n```\n/etc/pacman.d/hooks/backuppc-restore-symlinks-pre.hook\n```\n\n```\n[Trigger]\nOperation = Upgrade\nType = Package\nTarget = backuppc\n\n[Action]\nDescription = Stash symlinks for BackupPC pool directories\nWhen = PreTransaction\nExec = /etc/pacman.d/hooks/backuppc-restore-symlinks-pre.sh\n```\n\n```\n/etc/pacman.d/hooks/backuppc-restore-symlinks-pre.sh\n```\n\n```\n#!/usr/bin/bash\n\nif systemctl is-active backuppc.service &>/dev/null; then\n    systemctl stop backuppc.service\n    mkdir -p /tmp/backuppc-symlinks-cache\n    touch /tmp/backuppc-symlinks-cache/was-running\nfi\n\nfor dir in /var/lib/backuppc/{cpool,pc,pool,}; do\n    if [ -L $dir ]; then\n        mkdir -p /tmp/backuppc-symlinks-cache\n        mv $dir /tmp/backuppc-symlinks-cache\n    fi\ndone\n```\n\n"
    },
    {
      "title": "Apache configuration",
      "level": 2,
      "content": "BackupPC has a web interface that allows you to easily control it. You can access it using Apache and mod_perl or a C wrapper but other webservers like lighttpd works too. Install apache.\n\n"
    },
    {
      "title": "Edit Apache configuration",
      "level": 3,
      "content": "BackupPC's web UI needs to run as the user backuppc, but Apache normally runs under the user http. There are several ways to fix this. The two demonstrated here are common for single-purpose servers (Apache is only used to serve the BackupPC UI) or for multi-purpose servers (Apache may also server other websites under the regular http user).\n\nSetting up Apache for single-purpose use is a bit easier but not as flexible.\n\n"
    },
    {
      "title": "General settings",
      "level": 4,
      "content": "Edit /etc/backuppc/config.pl. Set administrator name:\n\n```\n$Conf{CgiAdminUsers} = 'admin';\n```\n\nNext, we need to add a users file and set the admin password:\n\n```\n# htpasswd -c /etc/backuppc/backuppc.users admin\n```\n\nThe BackupPC-Webfrontend is initially configured so that you can only access it from the localhost. If you want to access it from all machines in your network, you have to edit /etc/httpd/conf/extra/backuppc.conf. Edit the line:\n\n```\nRequire ip 127.0.0.1\n```\n\nto:\n\n```\nRequire ip 127.0.0.1 192.168.0\n```\n\nwhere you have to replace 192.168.0 to your corresponding IP-Adresses you want to gain access from. After one of the configuration steps below has also been performed, [re]start the Apache service.\n\n"
    },
    {
      "title": "Single-purpose Apache settings",
      "level": 4,
      "content": "Install mod_perlAUR.\n\nEdit the Apache configuration file to load mod_perl, tell Apache to run as user backuppc and to include /etc/httpd/conf/extra/backuppc.conf:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule perl_module modules/mod_perl.so\nUser backuppc\nGroup backuppc\nInclude conf/extra/backuppc.conf\n```\n\n"
    },
    {
      "title": "Multi-purpose Apache settings",
      "level": 4,
      "content": "Instead of globally changing the Apache user and group like in the example above, we will instead make Apache run just the BackupPC CGI script as the backuppc user and leave the default user alone. This method uses mod_cgi to call a wrapper written in C instead of using the extra mod_perl dependency. You still need to have perl itself installed so the wrapper can run the BackupPC scripts.\n\nMake sure Apache can run CGI programs (the line loading mod_cgi is not commented) and that it reads the BackupPC configuration by including it in /etc/httpd/conf/extra/backuppc.conf:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule cgi_module modules/mod_cgi.so\nInclude conf/extra/backuppc.conf\n```\n\nThe current setup of BackupPC, the webserver needs to run as backuppc user and this can be a problem on many setups where the webserver is used for other sites. In the past one could suid a Perl script, but it was blocked globally due security problems several years ago. To workaround that, perl-suid was used, but again blocked due the same problem more recently, scripts cannot be run securely with suid bit. Still there is another way, this time using a simple binary program that is suid as a launcher, that will run the backuppc Perl scripts already with the correct user. This isolates the Perl script from the environment and it is considered safe.\n\nYou need to replace the original backuppc CGI with the below C code compiled program and move the backuppc CGI to another place.\n\nMove the real CGI /usr/share/backuppc/cgi-bin/BackupPC_Admin to the lib directory /usr/share/backuppc/lib/real-BackupPC_Admin.cgi.\n\nSave the C code below to a file named wrapper.c (please update the CGI path if needed) and compile it with:\n\n```\n$ gcc -o BackupPC_Admin wrapper.c\n```\n\n```\n$ gcc -std=c89 -o BackupPC_Admin wrapper.c\n```\n\nThe wrapper C code:\n\n```\n#include <unistd.h>\n#define REAL_PATH \"/usr/share/backuppc/lib/real-BackupPC_Admin.cgi\"\nint main(ac, av)\nchar **av;\n{\n   execv(REAL_PATH, av);\n   return 0;\n}\n```\n\nPlace the new binary BackupPC_Admin in the cgi-bin directory and chown the binary CGI to backuppc:http and set the suid bit:\n\n```\n# chown backuppc:http /usr/share/backuppc/cgi-bin/BackupPC_Admin\n# chmod 4750 /usr/share/backuppc/cgi-bin/BackupPC_Admin\n```\n\nDo not forget to clear the suid bit on the original Perl script if it was set (or the CGI page will not load):\n\n```\n# chmod 0755 /usr/share/backuppc/lib/real-BackupPC_Admin.cgi\n```\n\nKeep your web server with its usual user and backup should now be able to run correctly.\n\n"
    },
    {
      "title": "Alternative nginx configuration",
      "level": 2,
      "content": "Install nginx-mainline and fcgiwrap.\n\nCreate those two directories :\n\n```\n# mkdir /etc/nginx/sites-available\n# mkdir /etc/nginx/sites-enabled\n```\n\nEdit nginx configuration file to include the configuration files from sites-enabled, by adding this at the end of the http block :\n\n```\n/etc/nginx/nginx.conf\n```\n\n```\nhttp {\n    ...\n    include sites-enabled/*;\n}\n```\n\n```\n/etc/nginx/sites-available/backuppc\n```\n\n```\nserver {\n    listen <your_server_port>;\n    server_name <your_server_name>;\n\n    root  /usr/share/backuppc/html;\n    index /index.cgi;\n\n    access_log  /var/log/nginx/backuppc.access.log;\n    error_log   /var/log/nginx/backuppc.error.log;\n\n    location / {\n        allow 127.0.0.1/32;\n        # allow 192.168.0.0/24;\n        deny all;\n\n        # auth_basic \"Backup\";\n        # auth_basic_user_file conf/backuppc.users;\n\n        location /backuppc {\n            alias /usr/share/backuppc/html;\n        }\n\n        location ~ \\.cgi$ {\n            include fastcgi_params;\n            fastcgi_pass unix:/run/fcgiwrap.sock;\n\n            fastcgi_param REMOTE_ADDR     $remote_addr;\n            fastcgi_param REMOTE_USER     $remote_user;\n            fastcgi_param SCRIPT_FILENAME /usr/share/backuppc/cgi-bin/BackupPC_Admin;\n        }\n    }\n}\n```\n\nAnd symlink to sites-enabled:\n\n```\n# ln -s /etc/nginx/sites-available/backuppc /etc/nginx/sites-enabled\n```\n\nEdit the executing user in fcgiwrap.service file to backuppc.\n\nEnable/start nginx.service and fcgiwrap.socket.\n\nIf you want to use basic authentication, uncomment the corresponding lines above and create the file /etc/nginx/conf/backuppc.users containing all allowed users :\n\n```\n# echo -n 'myuser:' >> /etc/nginx/conf/backuppc.users\n# openssl passwd -apr1 >> /etc/nginx/conf/backuppc.users\n```\n\nFollow Certbot#Nginx to create a Let's Encrypt certificate and configure a TLS certificate.\n\n"
    },
    {
      "title": "Alternative lighttpd configuration",
      "level": 2,
      "content": "```\n/etc/lighttpd/lighttpd.conf\n```\n\n```\nserver.port             = 81\n server.username         = \"backuppc\"\n server.groupname        = \"backuppc\"\n server.document-root    = \"/srv/http\"\n server.errorlog         = \"/var/log/lighttpd/error.log\"\n dir-listing.activate    = \"enable\"\n index-file.names        = ( \"index.html\", \"index.php\", \"index.cgi\" )\n mimetype.assign         = ( \".html\" => \"text/html\", \".txt\" => \"text/plain\", \".jpg\" => \"image/jpeg\", \".png\" => \"image/png\", \"\" => \"application/octet-stream\" )\n \n server.modules = (\"mod_alias\", \"mod_cgi\", \"mod_auth\", \"mod_access\" )\n \n alias.url               = ( \"/BackupPC_Admin\" => \"/usr/share/backuppc/cgi-bin/BackupPC_Admin\" )\n alias.url               += ( \"/backuppc\" => \"/usr/share/backuppc/html\" )\n \n cgi.assign              += ( \".cgi\" => \"/usr/bin/perl\" )\n cgi.assign              += ( \"BackupPC_Admin\" => \"/usr/bin/perl\" )\n \n auth.backend = \"plain\"\n auth.backend.plain.userfile = \"/etc/lighttpd/passwd\"\n auth.require = ( \"/BackupPC_Admin\" => ( \"method\" => \"basic\", \"realm\" => \"BackupPC\", \"require\" => \"user=admin\" ) )\n```\n\n```\n/etc/lighttpd/passwd\n```\n\n```\nadmin:yourpassword\n```\n\nAnd create log file:\n\n```\n# touch /var/log/lighttpd/error.log\n# chown backuppc:backuppc /var/log/lighttpd/error.log\n```\n\n"
    },
    {
      "title": "Accessing the admin page",
      "level": 2,
      "content": "Before accessing the admin page you have to specify which users/groups will be able to edit BackupPC's configuration.\n\n```\n/etc/backuppc/config.pl\n```\n\n```\n$Conf{CgiAdminUserGroup} = '<authorized groups>';\n$Conf{CgiAdminUsers}     = '<authorized users>';  # <-- set to '*' if the webserver is not autenticating users\n```\n\nBrowse to http://localhost/BackupPC_Admin respectively http://your_backuppc_server_ip/BackupPC_Admin.\n\n"
    },
    {
      "title": "Website view problem",
      "level": 2,
      "content": "Due an Apache directive, the web interface may not shown properly. If that is your case, just modify the line in your /etc/httpd/conf/httpd.conf that avoids .htaccess and .htpasswd from viewed for clients or change directory name /usr/share/backuppc/html for /usr/share/backuppc/files and update /etc/httpd/conf/extra/backuppc.conf with the new path, as it follows:\n\n```\n/etc/httpd/conf/extra/backuppc.conf\n```\n\n```\nAlias           /BackupPC/images        /usr/share/BackupPC/files/\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- BackupPC Home page\n- BackupPC documentation\n\n"
    }
  ]
}