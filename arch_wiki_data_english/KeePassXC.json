{
  "title": "KeePassXC",
  "url": "https://wiki.archlinux.org/title/KeePassXC",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "KeePass is an encrypted password database format. It is an alternative to online password managers and is supported on all major platforms.\n\nThere are two versions of the format: KeePass 1.x (Classic) and KeePass 2.x\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "There are three major implementations of KeePass available in the official repositories:\n\n- KeePass — A cross-platform password manager that has autotype and clipboard support when respectively xdotool and xsel are installed. It lets you import many formats and has many plugins.\n\n- KeePassXC — Fork of KeePassX that is actively maintained and has additional features like browser integration, support for SSH agent, secret service, Yubikey, finger-print reader, TOTP generator and KeeShare. Also provides a CLI.\n\n- secrets — A modern GNOME password manager built on top of of KeePass.\n\nOther lesser-known alternatives can be found in the AUR:\n\n- keepassc — A curses-based password manager compatible to KeePass v.1.x and KeePassX. It uses xsel for clipboard functions.\n\n- kpcli — A command line interface for KeePass database files *.kdb or *.kdbx.\n\n- keepmenu — Dmenu/Rofi frontend for Keepass database files.\n\n- AuthPass — KeePass compatible password manager based on Flutter. Comes with default sync suport for Gdrive, Dropbox, and WebDav.\n\n- keeweb — A web app (online / Electron) compatible with KeePass 2.x. KeeWeb comes with default Sync support for major cloud services, Gdrive, Onedrive, Dropbox etc. No active development since release of 1.18.7 on July 18th 2021.\n\n- KeePassX — Started as a Linux port of KeePass. keepassx2AUR uses the KeePass 2.x format, but can import 1.x databases. It also lets you import PwManager and KWallet XML databases. It does not support plugins. [1] No active development since 2016. [2]\n\n"
    },
    {
      "title": "Integration",
      "level": 2,
      "content": "Many plugins and extensions are available for integrating KeePass to other software. KeePassX and KeePassXC do not have a plugin interface, but KeePassXC has various integrations built-in.\n\n"
    },
    {
      "title": "Plugin installation in KeePass",
      "level": 3,
      "content": "KeePass is by default installed at /usr/share/keepass/. Copy plugin.plgx to a plugins sub-directory under the KeePass installation directory as demonstrated below:\n\n```\n# mkdir /usr/share/keepass/plugins\n# cp plugin.plgx /usr/share/keepass/plugins\n```\n\n"
    },
    {
      "title": "keepassxc-browser for KeePassXC",
      "level": 4,
      "content": "keepassxc-browser is the browser extension of KeePassXC’s built-in browser integration using native-messaging and transport encryption using libsodium. It was developed to replace KeePassHTTP, as KeePassHTTP’s protocol has fundamental security problems.\n\nThe developers provide the browser extension on\n\n- Firefox Add-ons (for Firefox and Tor Browser) and\n- in the chrome web store (for Chromium, Google Chrome, Vivaldi and Brave).\n\nSupport for Firefox and Chromium forks is available. For librewolfAUR, open KeePassXC, go to Tools > Settings > Browser Integration > Advanced > Config Location:, and add ~/.librewolf/native-messaging-hosts.\n\nThe source code and an explanation how it works can be found on GitHub, the KeePassXC developers provide a configuration guide on their website.\n\n"
    },
    {
      "title": "keepassxc-browser for KeePass",
      "level": 4,
      "content": "keepassxc-browser can also be used with KeePass through Keepass-natmsg Plugin from AUR (keepass-natmsgAUR) and is recommended as successor of KeePassHTTP.\n\n"
    },
    {
      "title": "KeePassRPC and Kee",
      "level": 4,
      "content": "Kee (GitHub repo) is a browser extension for Firefox and Chromium which integrates KeePass through KeePassRPC, a KeePass plugin from the same developers.\n\nThe KeePass plugin is available from GitHub or from the AUR (keepass-plugin-rpcAUR).\n\nThe browser extension can be found on GitHub, Firefox Add-ons and the chrome web store.\n\n"
    },
    {
      "title": "Via autotype feature",
      "level": 4,
      "content": "An alternative to having a direct channel between browser and KeePass(XC) is using the autotype feature.\n\nTo enable the autotype feature on Wayland, edit /usr/share/applications/org.keepassxc.KeePassXC.desktop and change the value of Exec to keepassxc -platform xcb. Alternatively, set the QT_QPA_PLATFORM=xcb environment variable before launching KeePassXC. However, native Wayland applications will not work with autotype. For example, autotype works when running Firefox without Wayland, but not with.\n\nThere are browser extensions which support this way by putting the page URL into the window name:\n\n- KeePass Helper or TitleURL for Firefox\n- URL in title for Chromium\n\n"
    },
    {
      "title": "Nextcloud",
      "level": 3,
      "content": "- Keeweb for Nextcloud (nextcloud-app-keewebAUR)\n\n"
    },
    {
      "title": "Yubikey",
      "level": 3,
      "content": "YubiKey can be integrated with KeePass thanks to contributors of KeePass plugins. KeepassXC provides built-in support for Yubikey Challenge-Response without plugins.\n\n"
    },
    {
      "title": "Configuration with KeePass",
      "level": 4,
      "content": "1. StaticPassword Configure one of Yubikey slots to store static password. You can make the password as strong as 65 characters (64 characters with leading \"!\"). This password can then be used as master password for your KeePass database.\n1. one-time passwords (OATH-HOTP) Download plugin from KeePass website: https://keepass.info/plugins.html#otpkeyprov Use yubikey-personalization-gui-gitAUR to setup OATH-HOTP In advanced mode untick OATH Token Identifier In KeePass additional option will show up under Key file / provider called One-Time Passwords (OATH HOTP) Copy secret, key length (6 or 8), and counter (in Yubikey personalization GUI this parameter is called Moving Factor Seed) You may need to setup Look-ahead count option to something greater than 0, please see this thread for more information See this video for more help\n1. Challenge-Response (HMAC-SHA1) Get the plugin from AUR: keepass-plugin-keechallengeAUR In KeePass additional option will show up under Key file / provider called Yubikey challenge-response Plugin assumes slot 2 is used\n\n1. Download plugin from KeePass website: https://keepass.info/plugins.html#otpkeyprov\n1. Use yubikey-personalization-gui-gitAUR to setup OATH-HOTP\n1. In advanced mode untick OATH Token Identifier\n1. In KeePass additional option will show up under Key file / provider called One-Time Passwords (OATH HOTP)\n1. Copy secret, key length (6 or 8), and counter (in Yubikey personalization GUI this parameter is called Moving Factor Seed)\n1. You may need to setup Look-ahead count option to something greater than 0, please see this thread for more information\n1. See this video for more help\n\n1. Get the plugin from AUR: keepass-plugin-keechallengeAUR\n1. In KeePass additional option will show up under Key file / provider called Yubikey challenge-response\n1. Plugin assumes slot 2 is used\n\n"
    },
    {
      "title": "SSH agent",
      "level": 3,
      "content": "KeePassXC offers SSH agent support, a similar feature is also available for KeePass using the KeeAgent plugin.\n\nThe feature allows to store SSH keys in KeePass databases, KeePassXC/KeeAgent acts as OpenSSH Client and dynamically adds and removes the key to the Agent.\n\nThe feature in KeePassXC is documented in its FAQ. First configure SSH agent to start on login and make sure the SSH_AUTH_SOCK variable is set. Then logout and log back in. Now, in KeePassXC settings, enable SSH agent integration. The SSH_AUTH_SOCK value exposed in the UI should correspond to what you configured earlier.\n\n"
    },
    {
      "title": "Secret Service",
      "level": 3,
      "content": "KeePassXC contains a Freedesktop.org Secret Service integration. It can be enabled by going into the settings (under the Tools menu), and selecting which group(s) you want to share (for each database, open Database > Database Settings..., then go to the Secret Service Integration tab).\n\nKeePassXC will refuse to enable its integration if it detects that another program (such as GNOME/Keyring) is already providing that service. You should first stop that program; for example, for gnome-keyring, stopping gnome-keyring-daemon.service user unit.\n\nNote that you will likely want to disable the program permanently, otherwise KeePassXC's integration will fail on the next reboot. Again, for gnome-keyring, disabling the gnome-keyring-daemon.socket (still for the systemd/User).\n\nNote: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nTo ensure also dbus doesn't active gnome-keyring again (bypassing the systemd socket for some odd reason...) delete these files:\n\n- /usr/share/dbus-1/services/org.gnome.keyring.service\n- /usr/share/dbus-1/services/org.gnome.keyring.PrivatePrompter.service\n- /usr/share/dbus-1/services/org.gnome.keyring.SystemPrompter.service\n- /usr/share/dbus-1/services/org.freedesktop.secrets.service\n- /usr/share/dbus-1/services/org.freedesktop.impl.portal.Secret.service\n- /etc/xdg/autostart/gnome-keyring-secrets.desktop\n- /etc/xdg/autostart/gnome-keyring-pkcs11.desktop\n- /etc/xdg/autostart/gnome-keyring-ssh.desktop\n\nand edit your pacman config prevent it from recreating these conflicting files when reinstalling or updating packages:\n\n```\n/etc/pacman.conf\n```\n\n```\nNoExtract   = usr/share/dbus-1/services/org.gnome.keyring.service usr/share/dbus-1/services/org.gnome.keyring.PrivatePrompter.service usr/share/dbus-1/services/org.gnome.keyring.SystemPrompter.service usr/share/dbus-1/services/org.freedesktop.secrets.service usr/share/dbus-1/services/org.freedesktop.impl.portal.Secret.service etc/xdg/autostart/gnome-keyring-secrets.desktop etc/xdg/autostart/gnome-keyring-pkcs11.desktop etc/xdg/autostart/gnome-keyring-ssh.desktop\n```\n\n"
    },
    {
      "title": "Autostart",
      "level": 4,
      "content": "KeePassXC will not be automatically started when an application requests secrets, which may cause them to break. A D-Bus auto-start file can be created:\n\n```\n${XDG_DATA_HOME:-$HOME/.local/share}/dbus-1/services/org.freedesktop.secrets.service\n```\n\n```\n[D-BUS Service]\nName=org.freedesktop.secrets\nExec=/usr/bin/keepassxc\n```\n\n"
    },
    {
      "title": "Disable your clipboard manager",
      "level": 3,
      "content": "If you are an avid user of clipboard managers, you may need to disable your clipboard manager before you launch Keepass and then re-start your clipboard manager afterwards.\n\nKeePassXC implementations has the option to auto-clear the clipboard manager after an amount of time, enough to paste copied items.\n\n"
    },
    {
      "title": "Dark theme",
      "level": 3,
      "content": "To enable the dark theme for KeePass, install keepass-keethemeAUR. After installation, the plugin will get compiled upon starting KeePass. It can then be activated via Tools > Dark Theme, or by pressing Ctrl+t.\n\n"
    },
    {
      "title": "User interface scaling issues with KeePassXC 2.6",
      "level": 3,
      "content": "If the user interface elements are not scaled properly, see HiDPI#Qt 5 and upstream bug report.\n\n"
    },
    {
      "title": "Greyed-out options",
      "level": 3,
      "content": "Some options like Start minimized and locked may appear greyed-out. According to a discussion on SourceForge, since version 2.31, KeePass has disabled two options because of their broken behaviors on Mono.\n\nTo force these features to be enabled, launch KeePass with the -wa-disable:1418 argument.\n\n"
    },
    {
      "title": "Wrongly scaled tray icons",
      "level": 3,
      "content": "In some desktop environments, the tray icon of KeePass may appear too big or too small due to Mono's bug, according to a bug report on SourceForge.\n\nKeebuntu contains three plugins to provide desktop integration:\n\n- keepass2-plugin-tray-iconAUR: For Cinnamon and MATE;\n- keepass-plugin-statusnotifier-gitAUR: For Plasma and GNOME with gnome-shell-extension-appindicator;\n- keepass2-plugin-launcher: For the plank dock.\n\nAfter installing one of these plugins, it is sometimes necessary to hide the original tray icon to prevent duplicate icons in the system tray.\n\n"
    },
    {
      "title": "Secret Service Integration",
      "level": 3,
      "content": "First, check that the group under which your passwords are stored is exposed; the Tools > Settings menu contains a list of groups enabled for each database. If a database isn't exposing the proper group, select its tab, open Database > Database Settings..., then select the group in the Secret Service Integration tab).\n\nNote that merging a database can cause it to stop exposing any groups.\n\n"
    },
    {
      "title": "Graphical glitches with KeePassXC, Plasma6 and Wayland",
      "level": 3,
      "content": "If you are experiencing graphical glitches, install the qt5-wayland package. KeePassXC (as of version v2.7.7) still uses Qt5.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- List of applications/Security#Password managers\n\n"
    }
  ]
}