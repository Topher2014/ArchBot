{
  "title": "Cacti",
  "url": "https://wiki.archlinux.org/title/Cacti",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Cacti is a web-based system monitoring and graphing solution.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "To use cacti, you need a working web server (e.g. Nginx or Apache HTTP Server) setup, that forwards requests to an application server (e.g. uWSGI or php-fpm).\n\nNext, install cacti and configure MariaDB, if a local MySQL server will be used.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "To serve cacti top level instead of under /cacti/ (i.e. https://example.tld/ instead of https://example.tld/cacti/) use the $url_path configuration option:\n\n```\n/etc/webapps/cacti/config.php\n```\n\n```\n$url_path = '/';\n```\n\n"
    },
    {
      "title": "PHP",
      "level": 3,
      "content": "Cacti requires the following PHP extensions to be enabled:\n\n```\n/etc/php/php.ini\n```\n\n```\nextension=gd\nextension=gettext\nextension=gmp\nextension=ldap\nextension=mysqli\nextension=pdo_mysql\nextension=snmp\nextension=sockets\n```\n\nCacti needs certain directories and executables in PHP's open_basedir [2] to function properly:\n\n```\n/tmp/:/usr/share/webapps/cacti:/etc/webapps/cacti:/var/cache/cacti:/var/lib/cacti:/var/log/cacti:/proc/meminfo:/usr/bin/rrdtool:/usr/bin/snmpget:/usr/bin/snmpwalk:/usr/bin/snmpbulkwalk:/usr/bin/snmpgetnext:/usr/bin/snmptrap:/usr/bin/sendmail:/usr/bin/php:/usr/bin/spine:/usr/share/fonts/TTF/\n```\n\nCacti requires date.timezone to be set in /etc/php/php.ini. Check upstream documentation [3] and time zone for reference.\n\n"
    },
    {
      "title": "SNMP",
      "level": 3,
      "content": "If it is necessary for cacti to monitor the machine that it is running on, configure snmpd.\n\n"
    },
    {
      "title": "MySQL",
      "level": 3,
      "content": "Cacti needs its own database in which to store its data, and a database user account to access the database.\n\nRun the following commands as root:\n\n```\n# mysqladmin -u root -p create cactidb\n# mysql -u root -p cactidb </usr/share/webapps/cacti/cacti.sql\n# mysql -u root -p\nmysql> GRANT ALL ON cactidb.* TO cactiuser@localhost IDENTIFIED BY 'some_password';\nmysql> FLUSH PRIVILEGES;\nmysql> exit\n```\n\nAlternatively, use PhpMyAdmin to achieve the same results:\n\n- Create an empty database called cactidb.\n- Import the file /usr/share/webapps/cacti/cacti.sql into the cactidb database.\n- Create a user cactiuser, and grant this user privileges to access the cactidb database.\n\nAdd the database details:\n\n```\n/etc/webapps/cacti/config.php\n```\n\n```\n$database_type = \"mysql\";\n$database_default = \"cactidb\";\n$database_username = \"cactiuser\";\n$database_password = \"some_password\";\n```\n\n"
    },
    {
      "title": "Apache",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe apache web server can serve dynamic web applications with the help of modules, such as mod_proxy_fcgi or mod_proxy_uwsgi.\n\n"
    },
    {
      "title": "php-fpm",
      "level": 4,
      "content": "Install and configure Apache HTTP Server with php-fpm. Use a pool run as user and group cacti. The socket file should be accessible by the http user and/or group, but needs to be located below /run/cacti.\n\nInclude the following configuration in your Apache HTTP Server configuration (i.e. /etc/httpd/conf/httpd.conf) and restart the web server:\n\n```\n/etc/httpd/conf/cacti.conf\n```\n\n```\nAlias /cacti \"/usr/share/webapps/cacti\"\n<Directory \"/usr/share/webapps/cacti\">\n    DirectoryIndex index.html index.php\n    <FilesMatch \\.php$>\n        SetHandler \"proxy:unix:/run/cacti/cacti.sock|fcgi://localhost/\"\n    </FilesMatch>\n    AllowOverride All\n    Options FollowSymlinks\n    Require all granted\n</Directory>\n```\n\nThe file /usr/share/webapps/cacti/.htaccess also controls access. Configure or remove it.\n\n"
    },
    {
      "title": "Nginx",
      "level": 3,
      "content": "Nginx can proxy application servers such as php-fpm and uWSGI, that run a dynamic web application. The following examples describe a folder based setup over a non-default port (for simplicity).\n\n"
    },
    {
      "title": "php-fpm",
      "level": 4,
      "content": "Install php-fpm. Setup nginx with php-fpm and use a pool run as user and group cacti. The socket file should be accessible by the http user and/or group, but needs to be located below /run/cacti. This can be achieved by adding the following lines to the php-fpm configuration and restarting it.\n\n```\n/etc/php/php-fpm.d/www.conf\n```\n\n```\n[cacti]\nuser = cacti\ngroup = cacti\nlisten = /run/cacti/cacti.sock\nlisten.owner = http\nlisten.group = http\npm = ondemand\npm.max_children = 4\n```\n\nAdd the following configuration for nginx and restart it.\n\n```\n/etc/nginx/sites-available/cacti.conf\n```\n\n```\nserver {\n  listen 8081;\n  server_name cacti;\n  root /usr/share/webapps/cacti/;\n  index index.php;\n  charset utf-8;\n     \n  access_log /var/log/nginx/cacti-access.log;\n  error_log /var/log/nginx/cacti-error.log;\n     \n  location / {\n    try_files $uri $uri/ index.php;\n  }\n   \n  location ~* \\.php$ {\n    fastcgi_split_path_info ^(.+\\.php)(/.+)$;\n    include fastcgi_params;\n    fastcgi_pass unix:/run/cacti/cacti.sock;\n    fastcgi_index index.php;\n    include fastcgi_params;\n    fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n    fastcgi_buffer_size 16k;\n    fastcgi_buffers 4 16k;\n  }\n}\n```\n\n"
    },
    {
      "title": "uWSGI",
      "level": 4,
      "content": "Install uwsgi-plugin-php, create a per-application socket for uWSGI (see UWSGI#Accessibility of uWSGI socket for reference) and activate the cacti@uwsgi-secure.socket unit.\n\nAdd the following configuration for nginx and restart nginx.\n\n```\n/etc/nginx/sites-available/cacti.conf\n```\n\n```\nserver {\n      listen 8081;\n      server_name cacti;\n      root /usr/share/webapps/cacti/;\n      index index.php;\n      charset utf-8;\n     \n      access_log /var/log/nginx/cacti-access.log;\n      error_log /var/log/nginx/cacti-error.log;\n     \n      location / {\n        try_files $uri $uri/ index.php;\n      }\n\n      # pass all .php or .php/path urls to uWSGI\n      location ~ ^(.+\\.php)(.*)$ {\n        include uwsgi_params;\n        uwsgi_modifier1 14;\n        uwsgi_pass unix:/run/cacti/cacti.sock;\n      }\n    }\n```\n\n"
    },
    {
      "title": "Setup",
      "level": 2,
      "content": "Open a browser and go to http://your_server/cacti/. You should be welcomed with the cacti installer.\n\n- Login with username \"admin\" and password \"admin\".\n- Change the password as requested, click Save.\n- Follow the remaining install steps and recommendations.\n- (Optional) If you chose to install spine, follow these instructions to set it up. Click on Settings, on the left panel of the Console tab. Select the Poller tab. Change Poller Type to spine. Adjust any other settings on the page as desired, then click Save. Select the Paths tab. Set Spine Poller File Path to /usr/bin/spine and click Save.\n\n- Click on Settings, on the left panel of the Console tab.\n- Select the Poller tab.\n- Change Poller Type to spine.\n- Adjust any other settings on the page as desired, then click Save.\n- Select the Paths tab.\n- Set Spine Poller File Path to /usr/bin/spine and click Save.\n\n"
    },
    {
      "title": "Spine",
      "level": 3,
      "content": "Optionally, install cacti-spineAUR, a faster poller for cacti. configure it with database access details:\n\n```\n/etc/spine.conf\n```\n\n```\nDB_User cactiuser\nDB_Pass some_password\n```\n\n"
    },
    {
      "title": "Systemd",
      "level": 3,
      "content": "Cacti uses a poller to collect data, so create a Systemd service to run poller.php, and a timer to run the service every 5 minutes:\n\n```\n/etc/systemd/system/cacti_poller.service\n```\n\n```\n[Unit]\nDescription=Cacti Poller\n\n[Service]\nUser=cacti\nType=simple\nExecStart=/usr/bin/php /usr/share/webapps/cacti/poller.php\n```\n\n```\n/etc/systemd/system/cacti_poller.timer\n```\n\n```\n[Unit]\nDescription=Cacti Poller Timer\n\n[Timer]\nOnCalendar=*:0/5:0\nUnit=cacti_poller.service\nAccuracySec=1\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```\nSep 27 15:50:00 hoom php[4072]: OK u:0.00 s:0.01 r:0.35\nSep 27 15:50:00 hoom php[4072]: OK u:0.00 s:0.01 r:0.38\nSep 27 15:50:00 hoom php[4072]: OK u:0.00 s:0.01 r:0.40\nSep 27 15:50:01 hoom php[4072]: 09/27/2015 03:50:01 PM - SYSTEM STATS: Time:0.6176 Method:cmd.php Processes:1 Threads:N/A Hosts:5 HostsPerProcess:5 DataSources:169 RRDsProcessed:15\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://cacti.net\n\n"
    }
  ]
}