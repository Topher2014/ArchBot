{
  "title": "OpenDMARC",
  "url": "https://wiki.archlinux.org/title/OpenDMARC",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "OpenDMARC is an open source implementation of the Domain-based Message Authentication, Reporting and Conformance (DMARC) specification.\n\nDMARC is a policy for mail transfer, which is already supported by some common mail providers. It depends on Sender Policy Framework and DKIM. DMARC provides a policy for outgoing mail and checks incoming mails for compliance with that policy. The policy is published via a DNS TXT record. It is explained in #DMARC Record. Validation is done in a daemon. For more info see RFC:7489.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the opendmarc package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Main configuration file is /etc/opendmarc/opendmarc.conf\n\nChange the following options:\n\n```\n/etc/opendmarc/opendmarc.conf\n```\n\n```\nSocket                  unix:/run/opendmarc/opendmarc.sock\n```\n\nAdd the socket directory and make it accessible to the user the SMTP server run as (likely postfix or mail:\n\n```\n# mkdir /run/opendmarc\n# chown opendmarc:postfix /run/opendmarc\n```\n\nTo have this socket directory created automatically, create the file /etc/tmpfiles.d/opendmarc.conf with the following contents:\n\n```\nD /run/opendmarc 0750 opendmarc postfix\n```\n\nTo run the opendmarc.service as the SMTP server user (default is opendmarc:mail) create /etc/systemd/system/opendmarc.service.d/override.conf:\n\n```\n[Service]\nGroup=\nGroup=postfix\n```\n\n- Enable/start the opendmarc.service.\n\n"
    },
    {
      "title": "Postfix integration",
      "level": 2,
      "content": "Add the following lines to main.cf:\n\n```\n/etc/postfix/main.cf\n```\n\n```\nnon_smtpd_milters   = unix:/run/opendkim/opendkim.sock, unix:/run/opendmarc/opendmarc.sock\nsmtpd_milters       = unix:/run/opendkim/opendkim.sock, unix:/run/opendmarc/opendmarc.sock\n```\n\nMake sure that the DMARC milter is declared after the DKIM milter.\n\n"
    },
    {
      "title": "DMARC Record",
      "level": 2,
      "content": "To enable DMARC for a domain, add a new TXT record to its DNS zone. Below is an example of a DMARC policy, processed one step after another.\n\nFirst testing, no harm as (sub)policy is \"none\", but start to receive aggregated reports and failing reports (SPF and DKIM):\n\n```\n_dmarc.example.com TXT v=DMARC1; rua=mailto:postmaster@example.com; ruf=mailto:forensic@example.com; adkim=s; fo=1\n```\n\nAfter a certain time, after analyzing these reports enable the policy, for example, for 10% of e-mail traffic.\n\n```\n_dmarc.example.com TXT v=DMARC1; p=quarantine; rua=mailto:postmaster@example.com; ruf=mailto:forensic@example.com; adkim=s; fo=1; pct=10\n```\n\nThen slowly raise the percentage and finalize with policy 100% enabled and only failing reports:\n\n```\n_dmarc.example.com TXT v=DMARC1; p=quarantine; ruf=mailto:forensic@example.com; adkim=s; fo=1\n```\n\n"
    },
    {
      "title": "DMARC options in detail",
      "level": 3,
      "content": "All fields are OPTIONAL unless \"v\" which is RECOMMENDED.\n\nTable content:\nTag name | Purpose | Sample\nv | Protocol version | v=DMARC1\np | Policy for organizational domain (default \"none\") | p=quarantine\nsp | Policy for subdomains (default value of \"p\" field) | sp=reject\nrua | Reporting URI of aggregate reports | rua=mailto:postmaster@example.com\nruf | Reporting URI for forensic reports | ruf=mailto:forensic@example.com\nadkim | Alignment mode for DKIM (default \"r\") | adkim=s\naspf | Alignment mode for SPF (default \"r\") | aspf=r\nri | Reporting interval of aggregate reports (default \"86400\" ; often disregarded to default value) | ri=86400\nfo | Forensic report options (default \"0\") | fo=1\nrf | Reporting format. (default \"afrf\") | rf=afrf\npct | Percentage of messages subjected to filtering (default 100) | pct=20\n\nThe alignment modes for DKIM and SPF can be:\n\n- \"s\" for strict: means \"strict\". Domains from From: shall match DKIM/SPF identifier.\n- \"r\" for relaxed: means \"relaxed\". Organizational domains from From: and DKIM/SPF shall match.\n\nwhere the latter allows a subdomain in the \"From\" header while the former does not.\n\nThe domain policy (p) and subdomain policy (sp) might be one of:\n\n- \"none\" (for monitor mode)get at\n- \"quarantine\"\n- \"reject\"\n\nThe forensic report options are:\n\n- \"0\" to generate reports if all underlying authentication mechanisms (SPF and DKIM) fail to produce a DMARC pass result\n- \"1\" to generate reports if any mechanisms (SPF or DKIM) fail\n- \"d\" to generate report if the DKIM signature failed to verify\n- \"s\" if SPF failed.\n\n"
    },
    {
      "title": "Weblinks",
      "level": 2,
      "content": "- DMARC Inspector\n- IETF RFC 7489\n- dmarc_report â€” Command line tool to generate clean DMARC report from emailed XML reports.\n\n"
    }
  ]
}