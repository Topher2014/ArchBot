{
  "title": "Rtlsdr",
  "url": "https://wiki.archlinux.org/title/Rtlsdr",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- DVB-T\n- GNU Radio\n\nRTL-SDR is a set of tools that enables DVB-T USB dongles based on the Realtek RTL2832U chipset to be used as cheap software defined radios, given that the chip allows transferring raw I/Q samples from the tuner straight to the host device.\n\nSee the RTL-SDR wiki for exact technical specifications.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "The latest stable RTL-SDR version can be installed from rtl-sdr.\n\nBleeding edge is on rtl-sdr-gitAUR.\n\nudev rules are installed at /usr/lib/udev/rules.d/10-rtl-sdr.rules and set the proper permissions such that non-root users can access the device.\n\nrngd claims rtlsdr devices by default - exclude it's use in /etc/conf.d/rngd with RNGD_OPTS=\"--exclude rtlsdr\"\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Performing a simple test, and make sure the dongle works and that there are no lost samples:\n\n```\n$ rtl_test\n```\n\nRaw samples can be captured directly to file (or fifo), for example to tune to 123.4MHz and capture 1.8M samples/sec:\n\n```\n$ rtl_sdr capture.bin -s 1.8e6 -f 123.4e6\n```\n\nTune to your favorite radio station and pipe to sox for audio:\n\n```\n$ rtl_fm -f 102.7e6 -M wbfm -s 200000 -r 48000 - | aplay -r 48000 -f S16_LE\n```\n\n"
    },
    {
      "title": "Using on a headless server",
      "level": 3,
      "content": "To use an RTL SDR device over ssh, add the user you are logging in as to the rtlsdr user group.\n\nNow, log out and back into a new ssh session. The groups that your user is a member of can be listed with the following:\n\n```\n# groups\n```\n\nIf the rtlsdr group shows up, the current user should now be able to use any application that uses the RTL SDR USB device over ssh.\n\nNote that being a member of the rtlsdr group is not necessary if you are logging into your system over a TTY or through a GUI login manager. In that case, the TAG+=\"uaccess\" piece of the /usr/lib/udev/rules.d/10-rtl-sdr.rules config file handles giving you access to the RTL SDR USB device. More details on this are available in archlinux/packaging/packages/rtl-sdr#1.\n\n"
    },
    {
      "title": "Applications",
      "level": 2,
      "content": "Some popular applications that use RTL-SDR:\n\n- gqrx - a popular SDR receiver with waterfall GUI for Linux\n- urh - complete suite for wireless protocol investigation with native support for many common SDR\n- dump1090-gitAUR - a lightweight ModeS (1090Mhz) decoder\n- multimon-ng - a decoder for various digital modes\n- rtl_433 - protocol aware receiver for multiple devices. Supports automatic packet interception and protocol analyzers for reverse engineering.\n- rng-tools - Random number generator related utilities\n- sdrpp-gitAUR - SDR receiver application with a number of features.\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "When using certain tuners (like generic/unbranded \"DVB\" devices), the signal can get overloaded very easily even at low gain levels. This is an issue starting with version 2.0.1 of the official rtl-sdr package, which switched from a fork to the official Osmocom repository. To fix this, the package must be downgraded to version 0.8.0-6, or alternatively use the rtl-sdr-librtlsdr-gitAUR package which points to the fork repository which does not have this issue. Any applications which use the libraries from the rtl-sdr package must be re-built against the alternative package.\n\n"
    }
  ]
}