{
  "title": "Modoboa",
  "url": "https://wiki.archlinux.org/title/Modoboa",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nModoboa is a mail hosting and management platform including a modern and simplified Web User Interface designed to work with Postfix and Dovecot.\n\nFor context, please see List of applications/Internet#Mail servers\n\nWhen setting up this program is seems like the aur repo is a basic way to install the dependencies but lacks a lot of the system setup that you currently have to do manually. Here is a few details on how to setup modoboa as a system service.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "To install modoboa through pip please create a python-virtualenv. You can also make a modoboa user if you want to encapsulate the program.\n\nFind a place to put modoboa then run:\n\n```\nmkdir modoboa\ncd /modoboa\nvirtualenv env\n. env/bin/activate.fish\n```\n\nThen once you are in the virtual environment install modoboa:\n\n```\npip install modoboa\n```\n\nIf you feel inclined you can read the documentation. Additionally here is a link to the github for reference: Modoboa-Github.\n\nOnce installing modoboaAUR you will have access to two command line utilities:\n\n- modoboa-cli\n- modoboa-admin.py\n\n"
    },
    {
      "title": "Databases",
      "level": 3,
      "content": "Modoboa requires one of these databases:\n\n- PostgreSQL\n- MariaDB or MySQL\n- SQLite\n\nPlease follow the installation process for whichever database you want to use and set it up before continuing.\n\n"
    },
    {
      "title": "Using PostgreSQL",
      "level": 4,
      "content": "If you use PostgreSQL you must install the python dependency [1]\n\n```\npip install psycopg[binary]>=3.1\n```\n\nThen create a user and datbase for modoboa to use:\n\n```\nsudo -l -u postgres createuser --no-createdb modoboa\nsudo -l -u postgres createdb --owner=modoboa modoboa\n```\n\n"
    },
    {
      "title": "Using MySQL or MariaDB",
      "level": 4,
      "content": "For MySQL or MariaDB you must install the python dependency [2]\n\n```\npip install mysqlclient\n```\n\nOnce installed create an associated user:\n\n```\nCREATE DATABASE modoboa;\nCREATE USER 'modoboa'@'localhost' IDENTIFIED  BY 'my-strong-password-here';\nGRANT ALL PRIVILEGES ON modoboa.* TO 'modoboa'@'localhost';\n```\n\n"
    },
    {
      "title": "Using SQLite",
      "level": 4,
      "content": "No required dependencies besides installing SQLite.\n\n"
    },
    {
      "title": "Making a Modoboa Instance",
      "level": 2,
      "content": "To start with Modoboa, until the aur repo is fixed follow the instructions above on installing a virtual environment and pip install modoboa. Then you can proceed to creating the Django project.\n\n"
    },
    {
      "title": "Building your Instance",
      "level": 3,
      "content": "Now deploy your modoboa. Once you have everything installed you can create an instance of the Django web-server using the command modoboa-admin.py deploy instance .... This will create a Django project in the directory ./instance in your working directory.\n\nBy default without introducing any database arguments Modoboa, it will prompt you for which database you want to use through an interactive console. If you use the SQLite method it will create a database in your working directory under the name ./instance.\n\n```\nmodoboa-admin.py deploy instance --collectstatic --domain <hostname of your server>\n```\n\nThe interactive prompt will ask you which database you want and to start you can just use sqlite3 while you are setting up your system:\n\n```\nConfiguring database connection: default\nDatabase type (mysql, postgres or sqlite3): sqlite3\n```\n\n"
    },
    {
      "title": "Specifying a Sqlite Location",
      "level": 4,
      "content": "Alternatively, you can specify the location of your SQLite database.\n\n```\nmodoboa-admin.py deploy instance --collectstatic --domain <hostname of your server> --dburl default:sqlite:////full/path/to/your/database/file.sqlite\n```\n\n"
    },
    {
      "title": "Other Databases",
      "level": 4,
      "content": "If you are going to use an alternative database use this syntax <mysql|postgres>://[user:pass@][host:port]/dbname for the connection string. Here is a filled out example,\n\n```\nmodoboa-admin.py deploy instance_name --collectstatic --domain example.com --dburl default:postgres://user:pass@[localhost]/modoboa\n```\n\nFor more information on running the different databases see\n\n```\nmodoboa-admin.py help deploy\n```\n\nOr read the documentation\n\n"
    },
    {
      "title": "Running the Django Instance",
      "level": 3,
      "content": "Before you can run modoboa you need to setup your webserver because it is dependent on your domain.\n\nOnce you have used modoboa-admin.py to create a instance directory, you can cd into the directory and there will be a manage.py file which would be familiar to anyone who uses Django.\n\nTo view the various services in the django project you can run in the instance directory:\n\n```\npython manage.py\n```\n\n"
    },
    {
      "title": "Setting up Nginx",
      "level": 3,
      "content": "In this example we will use Gunicorn to run a unix socket for the modoboa webserver. While in the virtual environment for modoboa, please install gunicorn to host the webserver. You can also use uwsgi.\n\n```\npip install gunicorn\n```\n\nThen we can setup a Nginx config accordingly. Make your configuration file however you do it. I have a /etc/nginx/available directory that I place config files then system link them to /etc/nginx/enables which is included in the /etc/nginx/nginx.conf.\n\nI placed the the following in /etc/nginx/available/modoboa.conf\n\n```\nupstream modoboa {\n     server      unix:/var/run/gunicorn/modoboa.sock fail_timeout=0;\n```\n\n}\n\n```\nserver {\n     server_name domain.com;\n     root <modoboa_instance_path>;\n\n     access_log  /var/log/nginx/modoboa.access.log;\n     error_log /var/log/nginx/modoboa.error.log;\n\n     location /sitestatic/ {\n             autoindex on;\n     }\n\n     location /media/ {\n             autoindex on;\n     }\n\n     location / {\n             proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n             proxy_set_header Host $http_host;\n             proxy_redirect off;\n             proxy_set_header X-Forwarded-Protocol ssl;\n             proxy_pass http://modoboa;\n     }\n}\n```\n\nNow for ssl you need to install certbot and the nginx plugin certbot-nginx. Then run\n\n```\nsudo certbot --nginx run\n```\n\nTo enable tls.\n\n"
    }
  ]
}