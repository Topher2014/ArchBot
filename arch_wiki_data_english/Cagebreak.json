{
  "title": "Cagebreak",
  "url": "https://wiki.archlinux.org/title/Cagebreak",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Wayland#Compositors\n- Window manager\n\nCagebreak is a tiling compositor for Wayland, based on cage and inspired by ratpoison, which is easily controlled through the keyboard and a UNIX domain socket.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install cagebreakAUR or cagebreak-binAUR. Alternatively, download the release tarball or clone the repository.\n\n"
    },
    {
      "title": "Optional dependencies",
      "level": 3,
      "content": "- wl-clipboard for copy/paste capabilities\n- xorg-xwayland for allowing Xorg applications to run under cagebreak\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The general configuration for cagebreak is located in $XDG_CONFIG_PATH/cagebreak/config. This defaults to ~/.config/cagebreak/config.\n\nRead cagebreak-config(5) for detailed information. Note that you can also add configuration by using #Interaction through socket.\n\nAn example configuration file may be found on GitHub.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Start cagebreak like any other binary.\n\n"
    },
    {
      "title": "Getting started",
      "level": 3,
      "content": "The following is an example of how to install and use cagebreak with the configuration file provided on GitHub.\n\n1. Follow #Installation.\n1. Copy the example configuration from GitHub to $XDG_CONFIG_PATH/cagebreak/config. Documentation is provided in cagebreak-config(5).\n1. Install xterm or replace xterm with your preferred terminal emulator in the configuration file.\n1. Run XKB_DEFAULT_LAYOUT=us cagebreak or autostart it to run cagebreak on login (see #Keyboard layout for details).\n1. Cagebreak should start up and display the terminal emulator you specified above. Press C-t t to open a new terminal or C-t S to split the screen. You can also use Alt-n to switch to the workspace n. For a full list of available keybindings, read the configuration file and cagebreak-config(5).\n1. If you wish, you may also interact with cagebreak using the UNIX domain socket. See #Interaction through socket for further information.\n1. Also, please file any bugs you may find: GitHub issue tracker or via email as per the SECURITY.md for cagebreak AUR comments for the cagebreak-binAUR and cagebreakAUR PKGBUILDs\n\n- GitHub issue tracker or via email as per the SECURITY.md for cagebreak\n- AUR comments for the cagebreak-binAUR and cagebreakAUR PKGBUILDs\n\n"
    },
    {
      "title": "Keyboard layout",
      "level": 3,
      "content": "Set the environment variable XKB_DEFAULT_LAYOUT to the desired keyboard layout. See cagebreak(1) ยง ENVIRONMENT for further information.\n\n"
    },
    {
      "title": "Interaction through socket",
      "level": 3,
      "content": "If cagebreak is invoked with the -e option, cagebreak opens a UNIX domain socket through which interaction with the compositor is possible at run-time. The path to this socket is stored in the CAGEBREAK_SOCKET environment variable. For example, openbsd-netcat may be invoked with:\n\n```\n$ nc -U $CAGEBREAK_SOCKET\n```\n\nto send cagebreak any configuration while it is running. The syntax is identical to the syntax of the configuration file.\n\nAdd the --bs (bad security) option, if you want to see the names of views over the socket (please consider the security implications on your local system).\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GitHub\n- PKGBUILD on GitHub\n- FAQ on GitHub\n\n"
    }
  ]
}