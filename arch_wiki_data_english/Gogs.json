{
  "title": "Gogs",
  "url": "https://wiki.archlinux.org/title/Gogs",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Gitea\n\nGogs (Go Git Service) is a Self Hosted Git service, which was written in the Go programming language.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Before installing the Gogs package (gogsAUR or gogs-gitAUR for the development version), you need to choose a database backend if you are planning to host Gogs on the same machine as the database:\n\n- SQLite: sqlite - For configuration of Gogs with SQLite see #SQLite.\n- PostgreSQL: postgresql - Read PostgreSQL#Installation to set it up and start the daemon and for configuration of Gogs with PostgreSQL see #PostgreSQL.\n- MariaDB: mariadb - Read MariaDB#Installation to set it up and start the daemon and for configuration of Gogs with MariaDB see #MariaDB.\n\nEach package provides multiple options for configuring the backend/storage for the service, see #Configuration\n\nIf you plan to use SSH to interact with your repositories, make sure to add the gogs user to the AllowUsers entry in /etc/ssh/sshd_config.\n\n"
    },
    {
      "title": "First start",
      "level": 2,
      "content": "After starting gogs.service, you can access the running service over the url http://[server]:3000. At first load, you will be redirected to the installation page where you can configure some options.\n\nIn order to be able to save changes made using the initial configuration page the permissions of the configuration directory (owned by root) will have to be modified (either temporary or permanently), for example:\n\n```\n# chown -R gogs:gogs /etc/gogs/\n```\n\nYou also need to create a drop-in file to allow gogs.service to change /etc/gogs contents:\n\n```\n/etc/systemd/system/gogs.service.d/writable-etc.conf\n```\n\n```\n[Service]\nReadWritePaths=/etc/gogs\n```\n\nThen do a daemon-reload and restart gogs.service. After installing you can revert these changes to improve security.\n\nIn the configuration file /etc/gogs/app.ini, you can change more values (for example the port number).\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe Gogs configuration file is located at /etc/gogs/app.ini. When you want to edit a configuration option, you need to edit this file and restart the Gogs service before changes will take effect.\n\n"
    },
    {
      "title": "SSH",
      "level": 3,
      "content": "In order to interact with the git repositories using ssh, and to be able to use the uploaded public keys:\n\n- set SSH_ROOT_PATH in /etc/gogs/app.ini to /var/lib/gogs/.ssh (see also documentation), and ensure that DISABLE_SSH is false.\n\n- Add gogs to AllowUsers in /etc/ssh/sshd_config.\n\n- create /var/lib/gogs/.ssh and hand over ownership to the gogs user:\n\n```\n> mkdir -p /var/lib/gogs/.ssh\n> chown -R gogs:gogs /var/lib/gogs/.ssh\n```\n\nPublic keys will be added by the gogs user to /var/lib/gogs/.ssh/authorized_keys\n\n"
    },
    {
      "title": ".gitignore and license files",
      "level": 3,
      "content": "A set of gitignore and license files are included in the package and are stored at /usr/share/gogs/conf/gitignore and /usr/share/gogs/conf/license respectively.\n\nYou can get or create your own .gitignore files here.\n\n"
    },
    {
      "title": "SQLite",
      "level": 4,
      "content": "Install sqlite and select SQLite on the installation page. Use an absolute path in /etc/gogs/app.ini (PATH variable in the [database] section) for the SQLite database file. To be consistent with the other settings, use /var/lib/gogs/data/gogs.db (see also issue 4298).\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 4,
      "content": "Install postgresql and select Postgresql on the installation page.\n\n```\n# su - postgres -c \n# createuser -P gogs\n# createdb -O gogs gogs\n```\n\n"
    },
    {
      "title": "MariaDB",
      "level": 4,
      "content": "Install mariadb and setup a user and database:\n\n```\n# CREATE DATABASE `ishouldchangethisdatabasename` DEFAULT CHARACTER SET `utf8` COLLATE `utf8_unicode_ci`;\n# CREATE USER 'ishouldchangethisusername'@'localhost' IDENTIFIED BY 'ishouldchangethispassword';\n# GRANT ALL ON `ishouldchangethisdatabasename`.* TO 'ishouldchangethisusername'@'localhost';\n```\n\nOn the installation page select mysql and insert your configured user, password and database name.\n\n"
    },
    {
      "title": "Theme",
      "level": 2,
      "content": "The current package (gogs-git* and gogs>=0.4.2) support custom themes. The location for Gogs themes is /usr/share/themes/gogs/. Gogs comes with one default theme, but you can easily create your own theme. Just copy the default theme directory and change whatever you want. JavaScript, stylesheet and font files are in the public directory, and HTML templates are in the template directory. The current selected theme can be changed over the app.ini configuration parameter STATIC_ROOT_PATH. Change it with the absolute path to the new theme.\n\n"
    },
    {
      "title": "Restart after Upgrade",
      "level": 2,
      "content": "Gogs needs to be restarted after every upgrade because the paths of javascript/css assets will change and therefore break the website. To automate this the following pacman hook can be inserted at /etc/pacman.d/hooks/gogs.hook:\n\n```\n[Trigger]\nType = Path\nOperation = Upgrade\nTarget = usr/share/gogs/gogs\n[Action]\nDescription = Restart gogs...\nWhen = PostTransaction\nExec = /usr/bin/systemctl try-restart gogs.service\n```\n\n"
    },
    {
      "title": "SSH port",
      "level": 2,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIf you are using a non-default port for your SSH server, you will get not-so-pretty clone URLs. You can make gogs start its own SSH server, listening on port 22.\n\nAllow gogs binary to bind privileged ports:\n\n```\n# setcap CAP_NET_BIND_SERVICE=+eip /usr/share/gogs/gogs\n```\n\nConfigure gogs SSH server in /etc/gogs/app.ini:\n\n```\nSTART_SSH_SERVER       = true\nSSH_PORT               = 22\nSSH_LISTEN_PORT        = 22\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official Documentation\n\n"
    }
  ]
}