{
  "title": "Lenovo ThinkPad P52",
  "url": "https://wiki.archlinux.org/title/Lenovo_ThinkPad_P52",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nGPU (Intel) |  | Yes\nGPU (Nvidia) |  | Yes\nWireless |  | Yes\nBluetooth | 8087:0aaa | Yes\nAudio | 10de:0fb9 | Yes\nTouchpad |  | Yes\nWebcam | 5986:2113 | Yes\nCard reader | 10ec:525a | Yes\nFingerprint reader | 06cb:009a | Yes\n\nThe Lenovo P52 is a quad or hex core Intel 8th generation Laptop.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Make sure to update your BIOS to V1.17 or later (current is v1.24 as of March 2019). Earlier versions of the BIOS may become inoperable if you select certain settings:\n\n1. Hybrid vs discrete graphics - https://forums.lenovo.com/t5/ThinkPad-P-and-W-Series-Mobile/P52-won-t-start-after-change-to-only-discrete-graphic-card/m-p/4265065\n1. Thunderbolt 3 Support - https://forums.lenovo.com/t5/ThinkPad-P-and-W-Series-Mobile/Lenovo-P52-bricked-by-selecting-BIOS-thunderbolt-support-for/td-p/4207538?page=12\n\n"
    },
    {
      "title": "Graphics",
      "level": 2,
      "content": "This laptop has its external display ports directly wired to the NVIDIA chip. In loose terms this means that the dedicated GPU must be enabled in order for external displays to be used. Luckily, it is possible to do dynamic switching between the integrated and dedicated graphics, but this is only possible by using the Intel DDX driver xf86-video-intel as opposed to modesetting.\n\nThe laptop can be used in one of two modes: Hybrid Graphics, or Dedicated Graphics only.\n\nIn order to use the integrated Intel UHD 630 GPU (as part of Hybrid Graphics) you need to add the i915 module to your initramfs by adding it as a module in your mkinitcpio. This is done by setting the following on /etc/mkinitcpio.conf:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\n...\nMODULES=(i915)\n```\n\nFailure to add the above will leave you stuck when trying to load the initramfs and your system will not be able to boot.\n\nIt might be possible to make do without the module above by using the Dedicated Graphics only (this can be done by changing the setting in UEFI).\n\n"
    },
    {
      "title": "Proprietary driver with bumblebee",
      "level": 3,
      "content": "With this setup the integrated GPU is used by default but some applications can be rendered on the discrete GPU with the optirun or primusrun launchers. See Bumblebee for detailed instructions. The lack of proper v-sync support means that with this method applications rendered on the discrete GPU exhibit tearing. There is also some overhead introduced as a result of moving data inefficiently between the discrete and integrated GPUs, but the Nvidia GPU performs much better than it does with Nouveau.\n\nTo get this working you will need bumblebee, bbswitch, nvidia and xf86-video-intel.\n\nThen set the following configuration files.\n\n```\n/etc/X11/xorg.conf.d/intel.conf\n```\n\n```\nSection \"ServerLayout\"\n    Identifier     \"Layout0\"\n    Screen      0  \"intel\"\n    Inactive       \"nvidia\"\nEndSection\n\nSection \"Monitor\"\n    Identifier     \"Monitor0\"\n    Option         \"DPMS\"\nEndSection\n\nSection \"Device\"\n    Identifier     \"nvidia\"\n    Driver         \"dummy\"\n    BusID          \"PCI:1:0:0\"\nEndSection\n\nSection \"Screen\"\n    Identifier     \"nvidia\"\n    Device         \"nvidia\"\nEndSection\n \nSection \"Screen\"\n    Identifier     \"intel\"\n    Device         \"intel\"\n    Monitor        \"Monitor0\"\nEndSection\n\nSection \"Device\"\n    Identifier  \"intel\"\n    Driver      \"intel\"\n    Option      \"TearFree\" \"true\"\n    Option      \"DRI\" \"3\"\n    BusId       \"PCI:0:2:0\"\nEndSection\n```\n\n(you probably already have one of these so adjust/add as needed - the dummy device at the end is essential!!):\n\n```\n/etc/bumblebee/xorg.conf.nvidia\n```\n\n```\nSection \"ServerLayout\"\n    Identifier  \"Layout0\"\n    Option      \"AutoAddDevices\" \"false\"\n    Option      \"AutoAddGPU\" \"false\"\n\n    # Inventions\n    Screen      0 \"nvidia\"\n    Inactive    \"intel\"\nEndSection\n\nSection \"Device\"\n    Identifier  \"DiscreteNvidia\"\n    Driver      \"nvidia\"\n    VendorName  \"NVIDIA Corporation\"\n    BusID \"PCI:1:0:0\"\n    Option \"ProbeAllGpus\" \"false\"\n\n    Option \"NoLogo\" \"true\"\n    Option \"UseEDID\" \"true\"\n    Option \"AllowEmptyInitialConfiguration\"\nEndSection\n\nSection \"Device\"\n    Identifier \"intel\"\n    Driver \"dummy\"\n    BusID \"PCI:0:2:0\"\nEndSection\n\nSection \"Screen\"\n    Identifier \"nvidia\"\n    Device \"nvidia\"\nEndSection\n```\n\nAt this stage, restart your machine. Then you should be able to run applications on the GPU as you normally would with optirun, e.g., optirun glxgears. If you want to use the external displays you need to keep your GPU on by running a task on optirun and then running intel-virtual-output -f (this will stay running and binds the external display ports to virtual outputs that you can use). At this stage you should be able to see and use the external ports.\n\n"
    },
    {
      "title": "Fingerprint reader",
      "level": 2,
      "content": "See Lenovo ThinkPad T480s - it works with python-validityAUR but not with libfprint.\n\n"
    },
    {
      "title": "Touchpad",
      "level": 2,
      "content": "Every once in a while Linux kernel upgrades will cause issues where the Touchpad and Trackpoint stop working. Booting with kernel parameter psmouse.elantech_smbus=0 seems to fix it. FS#59714#comment174924\n\n"
    }
  ]
}