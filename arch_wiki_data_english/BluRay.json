{
  "title": "BluRay",
  "url": "https://wiki.archlinux.org/title/BluRay",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Optical disc drive\n\nThis article is designed to help Linux users to play the Blu-ray discs they have legally purchased on their computers.\n\n"
    },
    {
      "title": "Blu-ray DRM",
      "level": 3,
      "content": "Contrary to the DVD CSS, which was definitely compromised once the unique encryption key had been discovered, Blu-ray uses stronger DRM mechanisms, which makes it a lot more difficult to manage. Firstly, the AACS standard uses a lot more complicated cryptographic process to protect the disc content, but also allows the industry to revoke compromised keys and distribute new keys through new discs. Secondly, Blu-ray may also use another layer of protection: BD+. Although most of commercial discs use AACS, a few of them additionally use BD+. In 2007, the AACS system was compromised and decryption keys were published on the Internet. Many decryption programs were made available, but the interest to Linux users was the capability of playing their discs - legally purchased - on their computers. Although the industry was able to revoke the first leaked decryption keys, new keys are regularly published in a cat and mouse play.\n\n"
    },
    {
      "title": "AACS",
      "level": 4,
      "content": "The AACS specification and decryption process are publicly available at [1]. Many articles and research papers describe it in detail at [2], [3] or [4].\n\nlibaacs is a research project from the VideoLAN developer team to implement the Advanced Access Content System specification, and distributed as an open-source library [5]. This project does not offer any key or certificate that could be used to decode encrypted copyrighted material. However, combined with a key database file, it is possible to use it to play Blu-ray discs that use the AACS standard. This file is called KEYDB.cfg and is accessed by libaacs in $XDG_CONFIG_DIRS/aacs. The format of this file is available at [6].\n\nThe AACS decryption process for a protected disc by a licensed player goes through four stages:\n\n1. The software/embedded player's Device Keys, together with the disc's Media Key Block (MKB) data are used to retrieve a \"Processing Key\", and with that (plus another datum from the MKB) to compute the Media Key.\n1. That Media Key, together with the disc's Volume ID (VID) obtained by the player presenting a valid Host Certificate to the drive is used to compute the Volume Unique Key (VUK).\n1. This VUK is used to unscramble the disc's scrambled Title Keys.\n1. Finally those Title Keys unscramble the disc's protected media content.\n\nNote that it is the disc that contains the MKB. MKBs have been renewed since the first commercial Blu-ray release in 2006. The latest MKB is version 78, and many discs actually share the same MKB. The software player provides the Host key and certificate, whereas the drive contains a list of the Host key/certificates that have been revoked. Host key/certification revocation occurs when a newer disc (containing a higher MKB than the previous played disc) is decrypted, or played, or attempted to decrypt or play (the mere insertion of a disc does not update the drive). When this happens, the drive forever loses its capability to use older Host key/certificates.\n\nUsing libaacs, the decryption process can skip some of these stages to reach the last step, which allows the media player to play the disc. This is either by providing in the KEYDB.cfg file either (or both):\n\n- a valid (corresponding to the MKB version of the disc) Processing key and a valid (i.e. non revoked by the drive) Host key/certificate\n- a valid VUK for the specific disc.\n\nIf libaacs finds a valid processing key for the disc MKB version as well as a valid Host key and certificates, it can start the decryption process from step 2. However, the Host key/certificates are regularly revoked through the propagation of new Blu-ray discs. Once revoked, a drive is not able to read both new and older discs. This is usually irreversible and can only be fixed by providing a more recent Host key/certificate (for Windows users, this corresponds to updating their software player). The advantage of this method is that until the Host key/certificate is revoked, and as long as the disc uses an MKB version for which the Processing key is known, libaacs is able to compute the VUK of any disc.\n\nThankfully, in case no valid Processing key is available and/or the Host certificate has been revoked, libaacs has an alternative way to decrypt a disc: by providing a valid VUK in the KEYDB.cfg file. This allows libaacs to skip directly to step 3. Contrary to the Processing keys, VUKs are unique and specific to one disc ; however the great advantage is that once computed the VUK cannot be revoked. Note that if libaacs is able to perform step 2 (with a valid Host key/certificate), then it stores the VUK calculated in step 3 in ~/.cache/aacs/vuk. At subsequent viewings of the same disc, libaacs can reuse the stored VUK. Thus it may be a good idea to backup these VUKs or, even better, share them online.\n\nThere have been several efforts to compile VUKs from various sources. Early attempts were provided in various forums, such as Doom9.org. As the community got organised, a centralised VUK database was created at [7] with more than 24,000 published VUKs ; however, this website appears to be no longer maintained. A new initiative by the author of the FindVUK tool was then created at http://fvonline-db.bplaced.net/ with more than 150,000 downloadable entries, which makes it the most comprehensive source of public VUKs available.\n\n"
    },
    {
      "title": "BD+",
      "level": 4,
      "content": "BD+ is an additional but optional component of the Blu-ray DRM. In December 2013, VideoLAN released the long awaited libbdplusAUR which provides experimental support for BD+ decryption. The library does not provide keys or certificates required for BD+ decryption, you need to retrieve and install them separately.\n\nBD+ mainly works by adding errors to the video stream, not enough to make it unwatchable but enough to make it unpleasant to watch due to near constant artifacting. These are fixed in official players by using \"fixup tables\", which are downloaded from the internet and provide a mapping to convert the broken video stream into the correct video stream.\n\n"
    },
    {
      "title": "Preparation",
      "level": 3,
      "content": "1. Install libbluray and libaacs.\n1. Download a KEYDB.cfg file (uppercase matters) from [8] and copy it in the directory ~/.config/aacs or /etc/xdg/aacs. This file contains VUK data required for attempting the decryption process described below for more than 90,000 discs. Note that all languages contain the same information to read a disc, only the name of the disc is translated. You may want to update this file regularly, as new versions are provided from time to time.\n1. Optionally, copy the PK and Host K/C data provided at [9] at the beginning of that KEYDB.cfg file. This provides PK and Host K/C data for discs up to MKB v68. This is only necessary for discs that may not already be listed in the VUK list, and will only work for drives that have never read a disc using MKB v70 or above.\n1. If necessary (i.e. if volumes are not mounted automatically on your system), mount the disc to a directory, e.g.: # mount /dev/sr0 /media/blurays\n\n```\n# mount /dev/sr0 /media/blurays\n```\n\n"
    },
    {
      "title": "Querying your disc",
      "level": 3,
      "content": "The bd_info tool that comes with libbluray is a useful tool to identify what specific encryption and DRM schemes are used on your target disc and whether it is decryptable with your current setup. For example:\n\n```\n# bd_info /dev/sr0\n```\n\n```\nUsing libbluray version 1.2.1\naacs.c:597: Error calculating media key. Missing right processing key ?\nmmc.c:386: AACS not active or supported by the drive\nbluray.c:1091: WARNING: BluRay profile 6 BD-J menu support is experimental\nVolume Identifier   : TITLE\nBluRay detected     : yes\nFirst Play supported: yes\nTop menu supported  : yes\nHDMV titles         : 8\nBD-J titles         : 3\nUNSUPPORTED titles  : 0\n\nBD-J detected       : yes\nJava VM found       : yes\nBD-J handled        : yes\nBD-J organization ID: XXXXX\nBD-J disc ID        : XX000000000000000000000000XXXXX\n\nAACS detected       : yes\nlibaacs detected    : yes\nDisc ID             : XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nAACS MKB version    : 76\nAACS handled        : yes\n\nBD+ detected        : no\n...\n```\n\nNote the AACS handled: yes that indicates this disc is decryptable and playback should not be an issue.\n\n"
    },
    {
      "title": "Decryption process",
      "level": 3,
      "content": "Launch a Blu-ray software player, such as VLC, and try to play the disc (on VLC, select Media > Open Disc, then in the Disc tab, choose Blu-ray. Be sure No disc Menus is checked.). The software player will then apply the decryption process described below:\n\n1. The user starts playing a Blu-ray with a video player having libbluray and libaacs support.\n1. If the BR disc is not scrambled with AACS, go to 4.1.\n1. If the BR disc is scrambled with AACS, libaacs will: Check if a valid VUK for the disc is already available in ~/.cache/aacs/vuk/. If yes, go to step 4.1, if not continue to next step. Read $XDG_CONFIG_DIRS/KEYDB.cfg: If a valid VUK is available, go to 4.1, if not continue to next step. If a valid PK (i.e. corresponding to the disc MKB version) and a valid (non-revoked by drive) Host key/certificate is available, libaacs will attempt to compute the VUK. The VUK is then stored in ~/.cache/aacs/vuk for future use. Go to step 4.1. If no valid PK/HKC are available, go to step 4.2.\n1. Result The software player is able to play the disc content. The software player fails to read the disc content.\n\n1. Check if a valid VUK for the disc is already available in ~/.cache/aacs/vuk/. If yes, go to step 4.1, if not continue to next step.\n1. Read $XDG_CONFIG_DIRS/KEYDB.cfg: If a valid VUK is available, go to 4.1, if not continue to next step. If a valid PK (i.e. corresponding to the disc MKB version) and a valid (non-revoked by drive) Host key/certificate is available, libaacs will attempt to compute the VUK. The VUK is then stored in ~/.cache/aacs/vuk for future use. Go to step 4.1. If no valid PK/HKC are available, go to step 4.2.\n\n1. If a valid VUK is available, go to 4.1, if not continue to next step.\n1. If a valid PK (i.e. corresponding to the disc MKB version) and a valid (non-revoked by drive) Host key/certificate is available, libaacs will attempt to compute the VUK. The VUK is then stored in ~/.cache/aacs/vuk for future use. Go to step 4.1. If no valid PK/HKC are available, go to step 4.2.\n\n1. The software player is able to play the disc content.\n1. The software player fails to read the disc content.\n\n"
    },
    {
      "title": "Decrypting using VUK (step 3.1 or 3.2.1)",
      "level": 4,
      "content": "Using the VUK specific to your disc will always work, and cannot be revoked by the industry, as it is the most downstream decryption key for a Blu-ray disc. However, there is one unique VUK per disc, corresponding to one VID, making this method rely on VUK lists or databases. The VUK will be known if either of these are true:\n\n- decrypting using PK and Host K/C described below has worked once, and the generated VUK for your disc has been stored in ~/.cache/aacs/vuk, or\n- the valid VUK for your disc has been obtained from a third party (i.e. is available in KEYDB.cfg). This allows you to read a disc, even if the PK and host key/certificate have been revoked for your disc MKB version.\n\nIf none of these are true, then the software player will attempt decrypting the disc using the second method.\n\n"
    },
    {
      "title": "Decrypting using PK and Host K/C (step 3.2.2)",
      "level": 4,
      "content": "This method uses the Processing keys and a Host Key/Certificate present at the beginning of the KEYDB.cfg file and will only work if they have not been revoked in your drive.\n\nIf this method is successful, after you play the disc, libaacs will store the VUK in ~/.cache/aacs/vuk. The filename is the disc ID and its content is the VUK itself. VLC will reuse this VUK even if it does not find a valid KEYDB.cfg file, so it could be a good idea to backup this directory for the future.\n\n"
    },
    {
      "title": "BD+ support",
      "level": 4,
      "content": "libbdplusAUR provides experimental support for BD+ decryption, but if this fails, users will have to use commercial solutions, such as makemkvAUR or DVDFab (under Wine).\n\nSince version 0.2.0, libbdplus supports cached tables that are used to correct the streams, thus circumventing the need to fully emulate the BD+ virtual machine.\n\nIn order for libbdplus to work, the following preparation needs to be done:\n\n1. Download the BD+ virtual machine files and the archives of the cached tables from the Doom9’s forum [10].\n1. Move the virtual machine files to ~/.config/bdplus/vm0/.\n1. Extract the cached tables and move them to ~/.cache/bdplus/convtab/.\n\nNow, when playing a BD+ protected disc, libbdplus should find the appropriate table and fix the stream.\n\n"
    },
    {
      "title": "Media players",
      "level": 3,
      "content": "These are media players capable of using libbluray and libaacs to play AACS-scrambled Blu-ray discs.\n\n"
    },
    {
      "title": "mplayer",
      "level": 4,
      "content": "To play Blu-ray discs in mplayer the basic playback command is:\n\n```\n$ mplayer br:////bluray/mount/dir\n```\n\nor:\n\n```\n$ mplayer br://title number -bluray-device /bluray/mount/dir\n```\n\nIt is likely that you will need to enable hardware acceleration and multi core CPU support for the Blu-ray to play smoothly.\n\nFor nvidia cards, enable hardware acceleration by installing libvdpau and using the option --hwdec=auto with mplayer. e.g:\n\n```\n$ mplayer --hwdec=auto br:////bluray/mount/dir\n```\n\nFor multi core CPU support use the options --vd-lavc-threads=N, where N is the number of cores, e.g:\n\n```\n$ mplayer --vd-lavc-threads=4 br:////bluray/mount/dir\n```\n\nYou can scroll through the playback languages using the # key.\n\nFrom your first mplayer output, you must find the codec used for the Blu-ray. It will be at the end of the line \"Selected video codec\".\n\nFor H.264 discs use the option -vc ffh264vdpau. e.g:\n\n```\n$ mplayer -vc ffh264vdpau br:////bluray/mount/dir\n```\n\nFor VC-1 discs use -vc ffvc1vdpau. e.g:\n\n```\n$ mplayer -vc ffvc1vdpau br:////bluray/mount/dir\n```\n\nFor MPEG discs use -vc ffmpeg12vdpau. e.g:\n\n```\n$ mplayer -vc ffmpeg12vdpau br:////bluray/mount/dir\n```\n\n"
    },
    {
      "title": "mpv",
      "level": 4,
      "content": "Blu-Ray playback can simply be achieved with:\n\n```\n$ mpv bd://title/device\n```\n\n"
    },
    {
      "title": "VLC",
      "level": 4,
      "content": "Start playback with:\n\n```\n$ vlc bluray:///bluray/mount/dir\n```\n\nIf VLC is endlessly loading the video without giving an error message, see VLC media player#Media does not load.\n\n"
    },
    {
      "title": "xine",
      "level": 4,
      "content": "Start playback with:\n\n```\n$ xine bluray:///bluray/mount/dir\n```\n\n"
    },
    {
      "title": "Absent KEYDB.cfg file",
      "level": 4,
      "content": "If a valid VUK is found in ~/.cache/aacs/vuk, then libaacs does not need to use KEYDB.cfg to decrypt the content. However, a KEYDB.cfg file in $XDG_CONFIG_DIRS/aacs/ is still required (even if that file is empty).\n\n"
    },
    {
      "title": "Revoked Host key/certificate",
      "level": 4,
      "content": "Unfortunately, what may happen when trying to play a newer Blu-ray disc is the revocation of host key/certificates (which are keys of licensed software players) by your drive. When this happens, aacskeysAUR will return this message:\n\n```\nThe given Host Certficate / Private Key has been revoked by your drive.\n```\n\nThis is part of the AACS protection scheme: editors are able to revoke old software player host keys that have leaked on the Internet and distribute the lists on newer commercial disc releases. This is irreversible and cannot be fixed even after reflashing the drive. The only two ways to correct this would be:\n\n- to update the host key/certificate part in KEYDB.cfg to ones that have not been revoked (yet)\n- to add in KEYDB.cfg the VUK of each specific disc instead, as explained above. VUKs cannot be revoked by the industry.\n\nWhen a disc (using mplayer or vlc) is succesfully decrypted, libaacs will store the VUK in ~/.cache/aacs/vuk. If the host key/certificate in KEYDB.cfg is subsequently revoked, VLC will still be able to use the stored VUK, so it could be a good idea to backup the ~/.cache/aacs directory for the future.\n\n"
    },
    {
      "title": "Using aacskeys",
      "level": 4,
      "content": "Install aacskeysAUR. You need to run aacskeysAUR from a directory that contains valid host key/certificate and processing keys:\n\n```\n$ cd /usr/share/aacskeys\n```\n\nand run:\n\n```\n$ aacskeys /bluray/mount/dir\n```\n\neg:\n\n$ cd /usr/share/aacskeys && aacskeys /media/blurays\n\nIf you wish, you may add the Blu-ray to the key database: edit $XDG_CONFIG_DIRS/KEYDB.cfg and add the information output by aacskeys using this syntax:\n\n```\n0xunit key file hash = Film Title    | V | 0xvolume unique key\n```\n\nTry makemkvAUR, it may give you clearer error messages if nothing else.\n\nIf you have a supported drive, you may also look at flashing it with a custom firmware which allows the entire disc to be read without verification. This is referred to as enabling \"LibreDrive\" mode. sdftool, which comes with makemkvAUR, may work to flash your drive in Linux natively. Options are explained a bit in discussion of the GUI wrapper which may help to determine when options like enc are required.\n\nOnce flashed the change is persistent and the new firmware should allow media players like VLC to read the disc directly without makemkv's involvement.\n\n"
    },
    {
      "title": "If you have the corresponding VUK but the Blu-ray will not play",
      "level": 4,
      "content": "Some drives need the sg module loaded.\n\n```\n# modprobe sg\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "Below are some options for Blu-ray/HD-DVD decryption users can employ to backup a commercial Blu-ray movie under Fair Use guidelines:\n\n- aacskeysAUR—Open-source program to retrieve decryption keys for HD discs.\n- Aiseesoft Blu-ray Player—Commercial software player for Windows and Mac, works fine using Wine.\n- Blu-ray playback with libaacs and libbdplus—Doom9's forum thread.\n- DVDFab HD Decrypter—Free part of commercial software for Windows and Mac; works fine using Wine, for more information see the AppDB entry.\n- MakeMKV (makemkvAUR)—Closed-source DVD and Blu-ray to Matroska converter. It has a native Linux version.\n\n"
    }
  ]
}