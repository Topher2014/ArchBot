{
  "title": "CD Burning Tips",
  "url": "https://wiki.archlinux.org/title/CD_Burning_Tips",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Codecs\n- MPlayer\n- dvdbackup\n- MEncoder\n- Blu-ray\n- Convert any Movie to DVD Video\n\nFrom Wikipedia:\n\n"
    },
    {
      "title": "Burning",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe burning process of optical disc drives consists of creating or obtaining an image and writing it to an optical medium. The image may in principle be any data file. If you want to mount the resulting medium, then it is usually an ISO 9660 file system image file. Audio and multi-media CDs are often burned from a .bin file, under control of a .toc file or a .cue file which tell the desired track layout.\n\n"
    },
    {
      "title": "Install burning utilities",
      "level": 3,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nIf you want to use programs with graphical user interface, then follow #Burning CD/DVD/BD with a GUI.\n\nThe programs listed here are command line oriented. They are the back ends which are used by most free GUI programs for CD, DVD, and BD. GUI users might get to them when it comes to troubleshooting or to scripting of burn activities.\n\nYou need at least one program for creation of file system images and one program that is able to burn data onto your desired media type.\n\nAvailable programs for ISO 9660 image creation are:\n\n- mkisofs(8) from cdrtools\n- xorriso(1) and xorrisofs(1) from libisoburn\n\nThe traditional choice is mkisofs, because it is the older one.\n\nAvailable programs for burning to media are:\n\n- cdrdao(1) from cdrdao (CD only, TOC/CUE/BIN only)\n- cdrecord(1) from cdrtools\n- cdrskin(1) from libburn\n- growisofs(1) from dvd+rw-tools (DVD and BD only)\n- xorriso(1) and xorrecord(1) from libisoburn\n\nThe traditional choices are cdrecord for CD and growisofs for DVD and Blu-ray Disc, because cdrecord was first to offer CD writing without description file and growisofs was first to offer writing to DVD and BD without artificial restrictions by the burn program. For writing TOC/CUE/BIN files to CD, install cdrdao.\n\nThe free GUI programs for CD, DVD, and BD burning depend on at least one of the above packages.\n\nxorrisofs supports the mkisofs options which are shown in this document.\n\ncdrskin supports the shown cdrecord options; xorrecord also supports those which do not deal with audio CD.\n\n"
    },
    {
      "title": "Making an ISO image from existing files",
      "level": 3,
      "content": "The simplest way to create an ISO image is to first copy the needed files to one directory, for example: ./for_iso.\n\nThen generate the image file with mkisofs:\n\n```\n$ mkisofs -V \"ARCHIVE_2013_07_27\" -J -r -o isoimage.iso ./for_iso\n```\n\nEach of those options are explained in the following sections.\n\n"
    },
    {
      "title": "graft-points",
      "level": 4,
      "content": "It is also possible to let mkisofs to collect files and directories from various paths\n\n```\n$ mkisofs -V \"BACKUP_2013_07_27\" -J -r -o backup_2013_07_27.iso \\\n  -graft-points \\\n  /photos=/home/user/photos \\\n  /mail=/home/user/mail \\\n  /photos/holidays=/home/user/holidays/photos\n```\n\n-graft-points enables the recognition of pathspecs which consist of a target address in the ISO file system (e.g. /photos) and a source address (e.g. /home/user/photos). Both are separated by a \"=\" character.\n\nSo this example puts the directories /home/user/photos, /home/user/mail and /home/user/holidays/photos, respectively in the ISO image as /photos, /mail and /photos/holidays.\n\nPrograms mkisofs and xorrisofs accept the same options. For secure backups, consider using xorrisofs with option --for_backup, which records eventual ACLs and stores an MD5 checksum for each data file.\n\nSee the mkisofs(8) and xorrisofs(1) man pages for more info about their options.\n\n"
    },
    {
      "title": "Mounting an ISO image",
      "level": 3,
      "content": "You can mount an ISO image if you want to browse its files. To mount the ISO image, we can use:\n\n```\n# mount -t iso9660 -o ro,loop /path/to/file.iso /mount-point\n```\n\nDo not forget to unmount the image when your inspection of the image is done:\n\n```\n# umount /mount-point\n```\n\nSee also Mounting images as user for mounting without root privileges.\n\n"
    },
    {
      "title": "Converting img/ccd to an ISO image",
      "level": 3,
      "content": "To convert an img/ccd image, you can use ccd2iso:\n\n```\n$ ccd2iso ~/image.img ~/image.iso\n```\n\n"
    },
    {
      "title": "Learning the name of your optical drive",
      "level": 3,
      "content": "For the remainder of this section the name of your recording device is assumed to be /dev/sr0.\n\nCheck this by\n\n```\n$ cdrecord dev=/dev/sr0 -checkdrive\n```\n\nwhich should report Vendor_info and Identification fields of the drive.\n\nIf no drive is found, check whether any /dev/sr* exist and whether they offer read/write permission (wr-) to you or your group. If no /dev/sr* exists then try loading module sr_mod manually.\n\n"
    },
    {
      "title": "Reading the volume label of a CD or DVD",
      "level": 3,
      "content": "If you want to get the name/label of the media, use dd:\n\n```\n$ dd if=/dev/sr0 bs=1 skip=32808 count=32\n```\n\n"
    },
    {
      "title": "Creating an ISO image from a CD, DVD, or BD",
      "level": 3,
      "content": "In order to only copy actual data from the disc and not the empty blocks filling it up, first retrieve its block/sector count and size (2048 most of the time):\n\n```\n$ isosize -x /dev/sr0\n```\n\n```\nsector count: 2041796, sector size: 2048\n```\n\nor alternatively:\n\n```\n$ isoinfo -d -i /dev/sr0 | awk '/block size|Volume size/'\n```\n\n```\nLogical block size is: 2048\nVolume size is: 2041796\n```\n\nThen use dd to copy the data using the obtained values:\n\n```\n$ dd if=/dev/sr0 of=discmage.iso bs=sector_size count=sector_count status=progress\n```\n\nIf the original medium was bootable, then the copy will be a bootable image. You may use it as a pseudo CD for a virtual machine or burn it onto an optical medium which should then become bootable. [1]\n\n"
    },
    {
      "title": "Using dvdisaster to create error recovery data",
      "level": 3,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\ndvdisasterAUR or dvdisaster-unofficialAUR is a tool, that adds error correction data to optical media. This data can help recover content from scratched or damaged discs.\n\n1. Insert the CD, DVD, or Blu-ray Disc into your optical drive. 2. Make sure the disc is not mounted. You can unmount it using:\n\n```\nsudo umount /dev/cdrom\n```\n\n3. Run dvdisaster from the command line or find it in your application menu. 4. In the dvdisaster interface, choose Create error correction data. 5. Select the disc type (CD/DVD/BD) from the drop-down menu. 6. Click the Load Disc button to scan the contents of your optical media. 7. dvdisaster will analyze the disc and display its structure. 8. Choose a location where the error recovery (ECC) file will be saved. 9. Set the error correction level. Higher levels provide better recovery at the cost of larger ECC file sizes. 2. Click Generate to begin creating the error correction data. 10. The process may take several minutes depending on the size of your disc. 11. Once the ECC file is created, dvdisaster will prompt you to verify the file. 12. Save both the original disc image (ISO) and the ECC file for future use. 13. It is recommended to store your ISO and ECC files on multiple devices or cloud storage for maximum safety.\n\nTips for Best Results\n\n- Use high-quality discs for creating backups.\n- Store your ECC files alongside ISO images for easy recovery.\n- dvdisaster can work in conjunction with ISO files without needing the original disc.\n\n"
    },
    {
      "title": "Rebuilding damaged discs using dvdisaster",
      "level": 3,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nIf your optical disc becomes scratched or otherwise damaged, dvdisaster can help recover lost data using an error correction (ECC) file. 1. Insert the damaged CD, DVD, or Blu-ray Disc into your optical drive. 2. Unmount the disc to avoid conflicts:\n\n```\nsudo umount /dev/cdrom\n```\n\n3. Start dvdisaster 4. In the dvdisaster interface, choose Scan and Repair mode. 5. Load the damaged disc by selecting the drive from the dropdown menu or using the Load Disc button. 5. Click Load ECC to select the corresponding error correction file (usually `.ecc`) created when you first burned the disc. 6. Ensure the ECC file matches the exact disc structure. If you do not have a matching ECC file, this method will not work. 7. Click Scan to begin reading the disc and identifying damaged sectors. 8. dvdisaster will display a visual representation of the discâ€™s status, showing good, unreadable, and corrected sectors. 9. Once scanning is complete, click Repair to rebuild missing or corrupt data using the ECC file. 10. The recovered data will be written to a new ISO image file. 11. Choose a destination to save the rebuilt ISO image. Example: `/home/user/recovered_disc.iso` 12. Click **\"Save\"** to complete the process. 13. Mount the ISO to verify that files have been successfully recovered:\n\n```\nsudo mount -o loop /home/user/recovered_disc.iso /mnt\n```\n\n14. Check the contents at `/mnt` to ensure data integrity.\n\nTips for Best Results\n\n- Use a reliable optical drive that reads damaged discs well.\n- Ensure the ECC file is stored safely with your ISO backups.\n- If recovery fails, clean the disc and attempt to scan again.\n\nVideo: https://www.youtube.com/watch?v=zolvCcxcN4g\n\n"
    },
    {
      "title": "Erasing CD-RW and DVD-RW",
      "level": 3,
      "content": "Used CD-RW media need to be erased before you can write over the previously recorded data. This is done by\n\n```\n$ cdrecord -v dev=/dev/sr0 blank=fast\n```\n\nThere are two options for blanking: blank=fast and blank=all. Full blanking lasts as long as a full write run. It overwrites the payload data on the CD. Nevertheless this should not be considered as securely making those data unreadable. For that purpose, several full write runs with random data are advised.\n\nAlternative commands are:\n\n```\n$ cdrskin -v dev=/dev/sr0 blank=fast\n$ xorriso -outdev /dev/sr0 -blank as_needed\n```\n\nTo erase the DVD-RW use the dvd+rw-format utility from dvd+rw-tools:\n\n```\n$ dvd+rw-format -blank=fast /dev/sr0\n```\n\nAlternative commands are:\n\n```\n$ cdrecord -v dev=/dev/sr0 blank=fast\n$ cdrskin -v dev=/dev/sr0 blank=deformat_sequential_quickest\n$ xorriso -outdev /dev/sr0 -blank deformat_quickest\n```\n\nSuch fastly blanked DVD-RW are not suitable for multi-session and cannot take input streams of unpredicted length. For that purpose one has to use one of:\n\n```\n$ cdrecord -v dev=/dev/sr0 blank=all\n$ dvd+rw-format -blank=full /dev/sr0\n$ cdrskin -v dev=/dev/sr0 blank=as_needed\n$ xorriso -outdev /dev/sr0 -blank as_needed\n```\n\nThe other media types are either write-once (CD-R, DVD-R, DVD+R, BD-R) or are overwritable without the need for erasing (DVD-RAM, DVD+RW, BD-RE).\n\n"
    },
    {
      "title": "Formatting DVD-RW",
      "level": 3,
      "content": "Formatted DVD-RW media can be overwritten without previous erasure. So consider to apply once in their life time\n\n```\n$ dvd+rw-format -force /dev/sr0\n$ cdrskin -v dev=/dev/sr0 blank=format_if_needed\n$ xorriso -outdev /dev/sr0 -format as_needed\n```\n\nUnlike DVD-RAM, DVD+RW, and BD-RE, formatted DVD-RW cannot be used as (slow) hard disk directly, but rather need the mediation of driver pktcdvd. See pktsetup(8).\n\n"
    },
    {
      "title": "Formatting BD-RE and BD-R",
      "level": 3,
      "content": "BD-RE need formatting before first use. This is done automatically by the burn programs when they detect the unformatted state. Nevertheless the size of the payload area can be influenced by expert versions of the format commands shown above for DVD-RW.\n\nBD-R can be used unformatted or formatted. Unformatted they are written with full nominal speed and offer maximum storage capacity. Formatted they get checkread during write operations and bad blocks get replaced by blocks from the Spare Area. This reduces write speed to a half or less of nominal speed. The default sized Spare Area reduces the storage capacity by 768 MiB.\n\ngrowisofs formats BD-R by default. The others do not. growisofs can be kept from formatting. cdrskin and xorriso can write with full nominal speed on formatted BD-RE or BD-R:\n\n```\n$ growisofs -use-the-force-luke=spare:none ...growisofs.or.mkisofs.options...\n $ cdrskin stream_recording=on ...cdrecord.options...\n $ xorriso -stream_recording on ...xorriso.commands...\n```\n\n"
    },
    {
      "title": "Burning an ISO image to CD, DVD, or BD",
      "level": 3,
      "content": "To burn a readily prepared ISO image file isoimage.iso onto an optical medium, run for CD:\n\n```\n$ cdrecord -v -sao dev=/dev/sr0 isoimage.iso\n```\n\nand for DVD or BD:\n\n```\n$ growisofs -dvd-compat -Z /dev/sr0=isoimage.iso\n```\n\nand for CD, DVD or BD:\n\n```\n$ xorriso -as cdrecord -v -sao dev=/dev/sr0 isoimage.iso\n```\n\n- Make sure that the medium is not mounted when you begin to write to it. Mounting may happen automatically if the medium contains a readable file system. In the best case, it will prevent the burn programs from using the burner device. In the worst case, there will be misburns because read operations disturbed the drive. So if in doubt, do: # umount /dev/sr0\n- growisofs has a small bug with blank BD-R media. It issues an error message after the burning is complete. Programs like k3b then believe the whole burn run failed. To prevent this, either format the blank BD-R by dvd+rw-format /dev/sr0 before submitting it to growisofs or use growisofs option -use-the-force-luke=spare:none\n\n```\n# umount /dev/sr0\n```\n\n- format the blank BD-R by dvd+rw-format /dev/sr0 before submitting it to growisofs\n- or use growisofs option -use-the-force-luke=spare:none\n\n"
    },
    {
      "title": "Verifying the burnt ISO image",
      "level": 3,
      "content": "You can verify the integrity of the burnt medium to make sure it contains no errors. Always eject the medium and reinsert it before verifying. It will guarantee that any kernel cache will not be used to read the data.\n\nFirst calculate the MD5 checksum of the original ISO image:\n\n```\n$ md5sum isoimage.iso\n```\n\n```\ne5643e18e05f5646046bb2e4236986d8 isoimage.iso\n```\n\nNext calculate the MD5 checksum of the ISO file system on the medium. Although some media types deliver exactly the same amount of data as have been submitted to the burn program, many others append trailing garbage when being read. So you should restrict reading to the size of the ISO image file.\n\n```\n$ blocks=$(expr $(du -b isoimage.iso | awk '{print $1}') / 2048)\n```\n\n```\n$ dd if=/dev/sr0 bs=2048 count=$blocks | md5sum\n```\n\n```\n43992+0 records in\n43992+0 records out\n90095616 bytes (90 MB, 86 MiB) copied, 0.359539 s, 251 MB/s\ne5643e18e05f5646046bb2e4236986d8  -\n```\n\nBoth runs should yield the same MD5 checksum (here: e5643e18e05f5646046bb2e4236986d8). If they do not, you will probably also get an I/O error message from the dd run. dmesg might then tell about SCSI errors and block numbers, if you are interested.\n\n"
    },
    {
      "title": "ISO 9660 and burning on-the-fly",
      "level": 3,
      "content": "It is not necessary to store an emerging ISO file system on hard disk before writing it to optical media. Only very old CD drives in very old computers could suffer failed burns due to an empty drive buffer.\n\nIf you omit option -o from mkisofs then it writes the ISO image to standard output. This can be piped into the standard input of burn programs.\n\n```\n$ mkisofs -V \"ARCHIVE_2013_07_27\" -J -r ./for_iso | \\\n  cdrecord -v dev=/dev/sr0 -waiti -\n```\n\nOption -waiti is not really needed here. It prevents cdrecord from writing to the medium before mkisofs starts its output. This would allow mkisofs to read the medium without disturbing an already started burn run. See next section about multi-session.\n\nOn DVD and BD, you may let growisofs operate mkisofs for you and burn its output on-the-fly:\n\n```\n$ growisofs -Z /dev/sr0 -V \"ARCHIVE_2013_07_27\" -r -J ./for_iso\n```\n\n"
    },
    {
      "title": "Multi-session",
      "level": 3,
      "content": "ISO 9660 multi-session means that a medium with readable file system is still writable at its first unused block address, and that a new ISO directory tree gets written to this unused part. The new tree is accompanied by the content blocks of newly added or overwritten data files. The blocks of data files, which shall stay as in the old ISO tree, will not be written again.\n\nLinux and many other operating systems will mount the directory tree in the last session on the medium. This youngest tree will normally show the files of the older sessions, too.\n\n"
    },
    {
      "title": "Multi-session by cdrecord",
      "level": 4,
      "content": "CD-R and CD-RW stay writable (aka \"appendable\") if cdrecord option -multi was used\n\n```\n$ cdrecord -v -multi dev=/dev/sr0 isoimage.iso\n```\n\nThen the medium can be inquired for the parameters of the next session\n\n```\n$ m=$(cdrecord dev=/dev/sr0 -msinfo)\n```\n\nBy help of these parameters and of the readable medium in the drive you can produce the add-on ISO session\n\n```\n$ mkisofs -M /dev/sr0 -C \"$m\" \\\n   -V \"ARCHIVE_2013_07_28\" -J -r -o session2.iso ./more_for_iso\n```\n\nFinally append the session to the medium and keep it appendable again\n\n```\n$ cdrecord -v -multi dev=/dev/sr0 session2.iso\n```\n\nPrograms cdrskin and xorrecord do this too with DVD-R, DVD+R, BD-R and unformatted DVD-RW. Program cdrecord does multi-session with at least DVD-R and DVD-RW. They all do with CD-R and CD-RW, of course.\n\nMost re-usable media types do not record a session history that would be recognizable for a mounting kernel. But with ISO 9660 it is possible to achieve the multi-session effect even on those media.\n\ngrowisofs and xorriso can do this and hide most of the complexity.\n\n"
    },
    {
      "title": "Multi-session by growisofs",
      "level": 4,
      "content": "By default, growisofs uses mkisofs as a backend for creating ISO images forwards most of its program arguments to . See above examples of mkisofs. It bans option -o and deprecates option -C. By default it uses the mkisofs. You may specify to use one of the others compatible backend program by setting environment variable MKISOFS:\n\n```\n$ export MKISOFS=\"xorrisofs\"\n```\n\nThe wish to begin with a new ISO file system on the optical medium is expressed by option -Z\n\n```\n$ growisofs -Z /dev/sr0 -V \"ARCHIVE_2013_07_27\" -r -J ./for_iso\n```\n\nThe wish to append more files as new session to an existing ISO file system is expressed by option -M\n\n```\n$ growisofs -M /dev/sr0 -V \"ARCHIVE_2013_07_28\" -r -J ./more_for_iso\n```\n\nFor details see the growisofs(1) manual and the manuals of mkisofs and xorrisofs.\n\n"
    },
    {
      "title": "Multi-session by xorriso",
      "level": 4,
      "content": "xorriso learns the wish to begin with a new ISO file system from the blank state of the medium. So it is appropriate to blank it if it contains data. The command -blank as_needed applies to all kinds of re-usable media and even to ISO images in data files on hard disk. It does not cause error if applied to a blank write-once medium.\n\n```\n$ xorriso -outdev /dev/sr0 -blank as_needed \\\n          -volid \"ARCHIVE_2013_07_27\" -joliet on -add ./for_iso --\n```\n\nOn non-blank writable media xorriso appends the newly given disc files if command -dev is used rather than -outdev. Of course, no command -blank should be given here\n\n```\n$ xorriso -dev /dev/sr0 \\\n          -volid \"ARCHIVE_2013_07_28\" -joliet on -add ./more_for_iso --\n```\n\nFor details see the xorriso(1) man page and especially its examples.\n\n"
    },
    {
      "title": "BD Defect Management",
      "level": 3,
      "content": "BD-RE and formatted BD-R media are normally written with enabled Defect Management. This feature reads the written blocks while they are still stored in the drive buffer. In case of poor read quality the blocks get written again or redirected to the Spare Area where the data get stored in replacement blocks.\n\nThis checkreading reduces write speed to at most half of the nominal speed of drive and BD medium. Sometimes it is even worse. Heavy use of the Spare Area causes long delays during read operations. So Defect Management is not always desirable.\n\ncdrecord does not format BD-R. It has no means to prevent Defect Management on BD-RE media, though.\n\ngrowisofs formats BD-R by default. The Defect Management can be prevented by option -use-the-force-luke=spare:none. It has no means to prevent Defect Management on BD-RE media, though.\n\ncdrskin, xorriso and xorrecord do not format BD-R by default. They do with cdrskin blank=format_if_needed, resp. xorriso -format as_needed, resp. xorrecord blank=format_overwrite. These three programs can disable Defect Management with BD-RE and already formatted BD-R by cdrskin stream_recording=on, resp. xorriso -stream_recording on, resp. xorrecord stream_recording=on.\n\n"
    },
    {
      "title": "Burning an audio CD",
      "level": 3,
      "content": "Create your audio tracks and store them as uncompressed, 16-bit, 44100-Hz, stereo WAV files. To convert MP3 to WAV, ensure lame is installed, cd to the directory with your MP3 files, and run:\n\n```\n$ for FILE in *.mp3; do lame --decode \"$FILE\" \"${FILE%.mp3}.wav\"; done\n```\n\nIn case you get an error when trying to burn WAV files converted with LAME, try decoding with mpg123:\n\n```\n$ for FILE in *.mp3; do mpg123 --rate 44100 --stereo --buffer 3072 --resync -w \"${FILE%.mp3}.wav\" \"$FILE\"; done\n```\n\nTo convert AAC to WAV ensure faad2 is installed and run:\n\n```\n$ for FILE in *.m4a; do faad \"$FILE\"; done\n```\n\nTo fix the bitrate of an already existing WAV file (or many other formats), try using sox:\n\n```\n$ for FILE in *.wav; do sox \"$FILE\" -c 2 -r 44100 \"${FILE%.wav}-ok.wav\"; done\n```\n\nName the audio files in a manner that will cause them to be listed in the desired track order when listed alphabetically, such as 01.wav, 02.wav, 03.wav, etc.\n\nWith cdrtools, use the following command to simulate burning the WAV files as an audio CD:\n\n```\n$ cdrecord -dummy -v -pad speed=X dev=/dev/sr0 -dao -swab *.wav\n```\n\nIf everything worked, you can remove the -dummy flag to actually burn the CD.\n\nAlternatively, with cdrdao, create a \"Table of content\" file with the following command:\n\n```\n$ {\n    echo \"CD_DA\"\n    printf 'TRACK AUDIO\\nFILE \"%s\" 0\\n' *.wav\n  } > toc\n```\n\nThis will make it so that no gaps exits between tracks. Optionally, if you would like to insert a X-second gap between certain tracks, you can edit the toc file and insert the following line between the TRACK AUDIO and FILE lines for that track:\n\n```\nPREGAP 00:0X:00\n```\n\nThen, we burn the CD:\n\n```\n$ cdrdao write --speed X toc\n```\n\nThe speed can be adjusted, lower speed producing a higher quality result. This is because the Audio-CD format has less advanced error correction than the data storage format.\n\nTo test the new audio CD, use MPlayer:\n\n```\n$ mplayer cdda://\n```\n\n"
    },
    {
      "title": "Burning a BIN/CUE",
      "level": 3,
      "content": "To burn a BIN/CUE image run:\n\n```\n$ cdrdao write --device /dev/sr0 image.cue\n```\n\n"
    },
    {
      "title": "TOC/CUE/BIN for mixed-mode discs",
      "level": 4,
      "content": "ISO images only store a single data track. If you want to create an image of a mixed-mode disc (data track with multiple audio tracks) then you need to make a TOC/BIN pair:\n\n```\n$ cdrdao read-cd --read-raw --datafile image.bin --driver generic-mmc:0x20000 --device /dev/cdrom image.toc\n```\n\nSome software only likes CUE/BIN pair, you can make a CUE sheet with toc2cue (part of cdrdao):\n\n```\n$ toc2cue image.toc image.cue\n```\n\n"
    },
    {
      "title": "Burn backend problems",
      "level": 3,
      "content": "If you are experiencing problems, you may ask for advice at mailing list cdwrite@other.debian.org, or try to write to the one of support mail addresses if some are listed near the end of the program's man page.\n\nTell the command lines you tried, the medium type (e.g. CD-R, DVD+RW, ...), and the symptoms of failure (program messages, disappointed user expectation, ...). You will possibly get asked to obtain the newest release or development version of the affected program and to make test runs. But the answer might as well be, that your drive dislikes the particular medium.\n\n"
    },
    {
      "title": "Burning CD/DVD/BD with a GUI",
      "level": 3,
      "content": "There are several applications available to burn CDs in a graphical environment.\n\nSee also Wikipedia:Comparison of disc authoring software.\n\n- AcetoneISO â€” All-in-one ISO tool (supports BIN, MDF, NRG, IMG, DAA, DMG, CDI, B5I, BWI, PDI and ISO).\n\n- BashBurn â€” Lightweight terminal based menu frontend for CD/DVD burning tools.\n\n- Brasero â€” Disc burning application for the GNOME desktop that is designed to be as simple as possible.\n\n- cdw â€” Ncurses frontend to cdrecord, mkisofs, growisofs, dvd+rw-mediainfo, dvd+rw-format and xorriso.\n\n- Gnome CD Master (gcdmaster) â€” GUI frontend for creating audio CDs and burning them using cdrdao.\n\n- Graveman â€” GTK-based CD/DVD burning application. It requires configuration to point to correct devices.\n\n- isomaster â€” ISO image editor.\n\n- K3b â€” Feature-rich and easy to handle CD burning and ripping application based on KDElibs. Part of kde-multimedia.\n\n- X-CD-Roast â€” Lightweight cdrtools front-end for CD and DVD writing.\n\n- Xfburn â€” Simple front-end to the libburnia libraries with support for CD/DVD(-RW), ISO images, and BurnFree.\n\n- xorriso-tcltk â€” Graphical front-end to ISO and CD/DVD/BD burn tool xorriso\n\n"
    },
    {
      "title": "CD",
      "level": 3,
      "content": "Playback of audio CDs requires the libcdio package. To enable KDE Applications like Dolphin to read audio CDs install audiocd-kio.\n\n"
    },
    {
      "title": "DVD",
      "level": 3,
      "content": "If you wish to play encrypted DVDs, you must install the libdvd* packages:\n\n- libdvdread\n- libdvdcss\n- libdvdnav\n\nAdditionally, you must install player software. Popular DVD players are MPlayer, xine and VLC. See the video players list and the specific instructions for MPlayer.\n\n"
    },
    {
      "title": "Blu-ray",
      "level": 3,
      "content": "See Blu-ray#Playback.\n\n"
    },
    {
      "title": "Ripping",
      "level": 2,
      "content": "Ripping is the process of copying audio or video content to a hard disk, typically from removable media or media streams.\n\n"
    },
    {
      "title": "Console",
      "level": 4,
      "content": "- abcde â€” Comprehensive command-line tool for ripping audio CDs.\n\n- cdda2wav â€” CD-audio extraction program with paranoia support.\n\n- cdparanoia â€” Compact Disc Digital Audio (CDDA) Digital Audio Extraction (DAE) tool.\n\n- cyanrip â€” Extensive CD ripper with musicbraniz integration, error detection, log generation, many formats, HDCD decoding, covert art automatic download.\n\n- redumper â€” An advanced byte perfect disc dumper supporting incremental dumps, advanced SCSI/C2 repair, intelligent audio CD offset detection and a lot of other features.\n\n- ripright â€” Minimal CD ripper modeled on autorip.\n\n- ripit â€” Command-line ripper that supports MusicBrainz, freeddb and various codecs.\n\n- shnsplit â€” Splits .wav and .flac files according to a CUE sheet and encodes the resulting pieces. A useful companion to ABCDE.\n\n- whipper â€” CD ripper aiming for accuracy over speed. Uses cdparanoia, MusicBrainz, AccurateRip.\n\n"
    },
    {
      "title": "Graphical",
      "level": 4,
      "content": "- Asunder â€” GTK-based CD ripping program.\n\n- Audex â€” Audio grabber tool for CD-ROM drives based on KDE. Part of kde-multimedia.\n\n- fre:ac â€” Audio converter and CD ripper with support for various popular formats and encoders.\n\n- Goobox â€” CD player and ripper for GNOME.\n\n- Grip â€” Fast and light CD ripper within the GNOME project that resembles Audiograbber.\n\n- K3b â€” Feature-rich and easy to handle CD/DVD burning and ripping application based on KDElibs. Part of kde-multimedia.\n\n- KAudioCreator â€” KDE program for ripping and encoding Audio-CDs. Unmaintained and does not start anymore.\n\n- ripperX â€” GTK program to rip CD audio tracks and encode them to the Ogg, MP3, or FLAC formats.\n\n- rubyripper â€” Audio disc ripper that tries to deliver a secure rip through multiple rippings of the same track and corrections of any differences.\n\n- Sound Juicer â€” CD ripper for GNOME.\n\n- soundKonverter â€” Front-end to various audio converters.\n\n"
    },
    {
      "title": "DVD-Video",
      "level": 3,
      "content": "See also Wikipedia:Comparison of DVD ripper software.\n\nOften, the process of ripping a DVD can be broken down into two subtasks:\n\n1. Data extraction â€” Copying the audio and/or video data to a hard disk,\n1. Transcoding â€” Converting the extracted data into a suitable format.\n\nSome utilities perform both tasks, whilst others focus on one aspect or the other.\n\n"
    },
    {
      "title": "Console",
      "level": 4,
      "content": "- dvdbackup â€” Tool for pure data extraction which does not transcode. It is useful for creating exact copies of encrypted DVDs in conjunction with libdvdcss or for decrypting video for other utilities unable to read encrypted DVDs.\n\n- FFmpeg â€” Complete and free Internet live audio and video broadcasting solution for Linux/Unix, capable to do a direct rip in any format (audio/video) from a DVD-Video ISO image, just select the input as the ISO image and proceed with the desired options. It also allows to downmixing, shrinking, spliting, selecting streams among other features.\n\n- HandBrake CLI â€” Simple yet powerful video transcoder ideal for batch mkv/x264 ripping.\n\n- MEncoder â€” Free command line video decoding, encoding and filtering tool. It supports ripping and transcoding DVD-Video.\n\n- subtitleripper â€” Convert DVD subtitles into text format.\n\n- Transcode â€” Video/DVD ripper and encoder for the terminal/console. It is outdated/no longer actively maintained.\n\n- Vobcopy â€” Copies DVD .vob files to hard disk, decrypting them on the way.\n\n"
    },
    {
      "title": "Graphical",
      "level": 4,
      "content": "- dvd::rip â€” Front-end to transcodeAUR, used to extract DVD's to the hard disk and transcode or extract and transcode on-the-fly.\n\n- HandBrake â€” Simple yet powerful video transcoder ideal for batch mkv/x264 ripping. GTK version.\n\n- K3b â€” Feature-rich and easy to handle CD/DVD burning and ripping application based on KDElibs. Part of kde-multimedia.\n\n- OGMRip â€” An application and a set of libraries for ripping and encoding DVD into AVI, OGM, MP4, or Matroska files using a wide variety of codecs. It relies on mplayer, mencoder, ogmtools, mkvtoolnix, mp4box, oggenc, lame, and faac to perform its tasks.\n\n"
    },
    {
      "title": "DVD-Audio",
      "level": 3,
      "content": "- Python Audio Tools â€” Includes dvda2track, which is easy to use command line tool to extract DVD-Audio tracks to uncompressed wav files.\n\n"
    },
    {
      "title": "Multi-format",
      "level": 3,
      "content": "- Aaru â€” Software for archival ripping of CDs, DVDs, and harddrives\n\n"
    },
    {
      "title": "Brasero fails to normalize audio CD",
      "level": 3,
      "content": "If you try to burn it may stop at the first step called Normalization.\n\nAs a workaround you can disable the normalization plugin using the Edit > Plugins menu\n\n"
    },
    {
      "title": "VLC: Error \"... could not open the disc /dev/dvd\"",
      "level": 3,
      "content": "If you get an error like\n\n```\nvlc dvdread could not open the disc \"/dev/dvd\"\n```\n\nit may be because there is no device node /dev/dvd on your system. Udev no longer creates /dev/dvd and instead uses /dev/sr0. To fix this, edit the VLC configuration file (~/.config/vlc/vlcrc):\n\n```\n# DVD device (string)\ndvd=/dev/sr0\n```\n\n"
    },
    {
      "title": "DVD drive is noisy",
      "level": 3,
      "content": "If playing DVD videos causes the system to be very loud, it may be because the disc is spinning faster than it needs to. To temporarily change the speed of the drive, run:\n\n```\n# eject -x 12 /dev/dvd\n```\n\nSometimes:\n\n```\n# hdparm -E12 /dev/dvd\n```\n\nAny speed that is supported by the drive can be used, or 0 for the maximum speed.\n\nSetting CD-ROM and DVD-ROM drive speed\n\n"
    },
    {
      "title": "Playback does not work with new computer (new DVD-Drive)",
      "level": 3,
      "content": "If playback does not work and you have a new computer (new DVD-Drive) the reason might be that the region code is not set. You can read and set the region code with the regionsetAUR package.\n\n"
    },
    {
      "title": "None of the above programs are able to rip/encode a DVD to my hard disk!",
      "level": 3,
      "content": "Make sure the region of your DVD reader is set correctly; otherwise, you will get loads of inexplicable CSS-related errors. Use the regionsetAUR package to do so.\n\nIf ripping still does not work with the correct region set, refer to the libdvdcss developer documentation for enabling log messages and setting other relevant options.\n\n"
    },
    {
      "title": "GUI program log indicates problems with backend program",
      "level": 3,
      "content": "If you use a GUI program and experience problems which the program's log blames on some backend program, then try to reproduce the problem by the logged backend program arguments. Whether you succeed with reproducing or not, you may report the logged lines and your own findings to the places mentioned in #Burn backend problems section.\n\n"
    },
    {
      "title": "Special case: medium error / write error",
      "level": 4,
      "content": "Here are some typical messages about the drive disliking the medium. This can only be solved by using a different drive or a different medium. A different program will hardly help.\n\nBrasero with backend growisofs:\n\n```\nBraseroGrowisofs stderr:Â :-[ WRITE@LBA=0h failed with SK=3h/ASC=0Ch/ACQ=00h]: Input/output error\n```\n\nBrasero with backend libburn:\n\n```\nBraseroLibburn Libburn reported an error SCSI error on write(16976,16): [3 0C 00] Write error\n```\n\n"
    },
    {
      "title": "BD-R DL 50GB errors on trying to burn second layer",
      "level": 3,
      "content": "Using growisofs from dvd+rw-tools for burning 50GB BD-R DL discs might result in a fatal error and damaged media, such as:\n\n```\n$ growisofs -Z /dev/sr0 -J -R -V \"label\" files\n```\n\n```\nExecuting 'mkisofs -J -R -V label files | builtin_dd of=/dev/sr0 obs=32k seek=0'\nI: -input-charset not specified, using utf-8 (detected in locale settings)\n  0.03% done, estimate finish Fri Jan 29 19:50:36 2016\n  0.05% done, estimate finish Fri Jan 29 19:50:36 2016\n  0.08% done, estimate finish Fri Jan 29 19:50:36 2016\n/dev/sr0: pre-formatting blank BD-R for 49.8GB...\n/dev/sr0: \"Current Write Speed\" is 8.2x4390KBps.\n  0.11% done, estimate finish Sat Jan 30 03:29:13 2016\n  0.13% done, estimate finish Sat Jan 30 02:10:01 2016\n...\n 63.20% done, estimate finish Fri Jan 29 20:43:45 2016\n:-[ WRITE@LBA=b6d820h failed with SK=3h/WRITE ERROR]: Input/output error\n:-( write failed: Input/output error\n/dev/sr0: flushing cache\n/dev/sr0: closing track\n/dev/sr0: closing session\n:-[ CLOSE SESSION failed with SK=5h/INVALID FIELD IN CDB]: Input/output error\n/dev/sr0: reloading tray\n```\n\nThis happened at the 25GB boundary when starting to write the second layer. Using cdrecord from cdrtools works with no problems. Tested with a 'HL-DT-ST BD-RE WH16NS40' LG burner, and Verbatim BD-R DL 6x discs (#96911). FS#47797\n\n"
    },
    {
      "title": "Disc tray autocloses",
      "level": 3,
      "content": "If after ejecting a cd, either by using the eject command, or pushing the drive button, the drive disc tray autocloses before being able to remove the disc, try the following command:\n\n```\n# sysctl -w dev.cdrom.autoclose=0\n```\n\nIf that solves the problem, make the change permanent:\n\n```\n/etc/sysctl.d/60-cdrom-autoclose.conf\n```\n\n```\ndev.cdrom.autoclose = 0\n```\n\nIf the above does not work and as a last resort measure, you can unload the disc module from the kernel via:\n\n```\n# rmmod sr_mod\n```\n\nthe disc drive should now behave as expected but will not mount disc anymore. After putting a disc into the drive, reactivate the module via:\n\n```\n# modprobe sr_mod\n```\n\nthe disc should now mount.\n\n"
    },
    {
      "title": "External optical drive not recognized",
      "level": 3,
      "content": "See General troubleshooting#Cannot use some peripherals after kernel upgrade.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- In the United States, backup of physically obtained media is allowed under these conditions: About Piracy - RIAA.\n- Main page of the project Libburnia\n- Cdrtools web page\n\n"
    }
  ]
}