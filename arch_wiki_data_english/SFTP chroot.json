{
  "title": "SFTP chroot",
  "url": "https://wiki.archlinux.org/title/SFTP_chroot",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- SSHFS\n\nOpenSSH 4.9+ includes a built-in chroot for SFTP, but requires a few tweaks to the normal install.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install and configure OpenSSH. Once running, make sure sftp-server has been set correctly:\n\n```\n/etc/ssh/sshd_config\n```\n\n```\nSubsystem sftp /usr/lib/ssh/sftp-server\n```\n\nAccess files with sftp or SSHFS. Many standard FTP clients should work as well.\n\n"
    },
    {
      "title": "Setup the filesystem",
      "level": 3,
      "content": "- Readers may select a file access scheme on their own. For example, optionally create a subdirectory for an incoming (writable) space and/or a read-only space. This need not be done directly under /srv/ssh/jail - it can be accomplished on the live partition which will be mounted via a bind mount as well.\n- It is also possible chrooting into /home directory thus skipping the usage of bind, however the desired user home directory should be owned by root:\n\n```\n# chown root:root /home/<username>\n# chmod 0755 /home/<username>\n```\n\nBind mount the live filesystem to be shared to this directory. In this example, /mnt/data/share is to be used, owned by user root and has octal permissions of 755:\n\n```\n# chown root:root /mnt/data/share\n# chmod 755 /mnt/data/share\n# mkdir -p /srv/ssh/jail\n# mount -o bind /mnt/data/share /srv/ssh/jail\n```\n\nAdd entries to fstab to make the bind mount survive on a reboot:\n\n```\n/etc/fstab\n```\n\n```\n/mnt/data/share /srv/ssh/jail  none   bind   0   0\n```\n\n"
    },
    {
      "title": "Create an unprivileged user",
      "level": 3,
      "content": "Create the sftponly user group:\n\n```\n# groupadd sftponly\n```\n\nCreate a user who is a member of the sftponly group and has shell login access denied:\n\n```\n# useradd -G sftponly -s /usr/bin/nologin -d /srv/ssh/jail username\n```\n\nSet a (complex) password to prevent account is locked error (may appear even with key authentication):\n\n```\n# passwd username\n```\n\n"
    },
    {
      "title": "Configure OpenSSH",
      "level": 3,
      "content": "```\n/etc/ssh/sshd_config\n```\n\n```\nSubsystem sftp /usr/lib/ssh/sftp-server\n\nMatch Group sftponly\n  ChrootDirectory %h\n  ForceCommand internal-sftp\n  AllowTcpForwarding no\n  X11Forwarding no\n  PasswordAuthentication no\n```\n\nRestart sshd.service to confirm the changes.\n\n"
    },
    {
      "title": "Fixing path for authorized_keys",
      "level": 4,
      "content": "With the standard path of AuthorizedKeysFile, the SSH keys authentication will fail for chrooted-users. To fix this, append a root-owned directory on AuthorizedKeysFile to /etc/openssh/sshd_config e.g. /etc/ssh/authorized_keys, as example:\n\n```\n/etc/ssh/sshd_config\n```\n\n```\nAuthorizedKeysFile /etc/ssh/authorized_keys/%u .ssh/authorized_keys\nPermitRootLogin no\nPasswordAuthentication no\nPermitEmptyPasswords no\nSubsystem sftp /usr/lib/ssh/sftp-server\n```\n\nCreate authorized_keys folder, generate a SSH-key on the client, copy the contents of the key to /etc/ssh/authorized_keys (or any other preferred method) of the server and set correct permissions:\n\n```\n# mkdir /etc/ssh/authorized_keys\n# chown root:root /etc/ssh/authorized_keys\n# chmod 755 /etc/ssh/authorized_keys\n# echo 'ssh-rsa <key> <username@host>' >> /etc/ssh/authorized_keys/username\n# chmod 644 /etc/ssh/authorized_keys/username\n```\n\nRestart sshd.service.\n\n"
    },
    {
      "title": "Write permissions",
      "level": 3,
      "content": "The bind path needs to be fully owned by root, however files and/or subdirectories do not have to be. In the following example the user www-demo uses /srv/ssh/www/demo as the jail-directory:\n\n```\n# mkdir /srv/ssh/www/demo/public_html\n# chown www-demo:sftponly /srv/ssh/www/demo/public_html\n# chmod 755 /srv/ssh/www/demo/public_html\n```\n\nThe user should now be able to create files/subdirectories inside this directory. See File permissions and attributes for more information.\n\n"
    },
    {
      "title": "Allow upload only",
      "level": 3,
      "content": "To allow only uploading files via sftp and deny downloading files, change the ForceCommand internal-sftp line:\n\n```\n/etc/ssh/sshd_config\n```\n\n```\nMatch Group sftponly\n  ForceCommand internal-sftp -u 0666 -p realpath,open,write,close,lstat\n```\n\n"
    },
    {
      "title": "Logging",
      "level": 3,
      "content": "The user will not be able to access /dev/log. This can be seen by running strace on the process once the user connects and attempts to download a file.\n\n"
    },
    {
      "title": "Create sub directory",
      "level": 4,
      "content": "Create the sub-directory dev in the ChrootDirectory, for example:\n\n```\n# mkdir /usr/local/chroot/user/dev\n# chmod 755 /usr/local/chroot/user/dev\n```\n\nNow you should create socket at /usr/local/chroot/user/dev/log which will be used by openssh. You may directly bind this socket to /dev/log (or /run/systemd/journal/dev-log in case you are using journald) or create using syslog-ng/rsyslog.\n\n"
    },
    {
      "title": "Bind to journald",
      "level": 4,
      "content": "```\n# touch /usr/local/chroot/user/dev/log\n# mount --bind /run/systemd/journal/dev-log /usr/local/chroot/user/dev/log\n```\n\nTo make it permanent, add an entry to fstab:\n\n```\n/etc/fstab\n```\n\n```\n/run/systemd/journal/dev-log /usr/local/chroot/user/dev/log none bind,nofail,x-systemd.requires=sshd.service\n```\n\n"
    },
    {
      "title": "Syslog-ng configuration",
      "level": 4,
      "content": "Add to /etc/syslog-ng/syslog-ng.conf a new source for the log and add the configuration, for example change the section:\n\n```\nsource src {\n  unix-dgram(\"/dev/log\");\n  internal();\n  file(\"/proc/kmsg\");\n};\n```\n\nto:\n\n```\nsource src {\n  unix-dgram(\"/dev/log\");\n  internal();\n  file(\"/proc/kmsg\");\n  unix-dgram(\"/usr/local/chroot/theuser/dev/log\");\n};\n```\n\nand append:\n\n```\n#sftp configuration\ndestination sftp { file(\"/var/log/sftp.log\"); };\nfilter f_sftp { program(\"internal-sftp\"); };\nlog { source(src); filter(f_sftp); destination(sftp); };\n```\n\n(Optional) If you would like to similarly log SSH messages to its own file:\n\n```\n#sshd configuration\ndestination ssh { file(\"/var/log/ssh.log\"); };\nfilter f_ssh { program(\"sshd\"); };\nlog { source(src); filter(f_ssh); destination(ssh); };\n```\n\n(From Syslog-ng#Move log to another file)\n\n"
    },
    {
      "title": "OpenSSH configuration",
      "level": 4,
      "content": "Edit /etc/ssh/sshd_config to replace all instances of internal-sftp with internal-sftp -f AUTH -l VERBOSE.\n\n"
    },
    {
      "title": "Restart service",
      "level": 4,
      "content": "Restart service syslog-ng and sshd.\n\n/usr/local/chroot/theuser/dev/log should now exist.\n\n"
    },
    {
      "title": "Secure copy protocol (SCP)",
      "level": 3,
      "content": "Installing openssh provides the scp command to transfer files. SCP may be faster than using SFTP [1].\n\nInstall rsshAUR or scponly as alternative shell solutions.\n\n"
    },
    {
      "title": "Scponly",
      "level": 4,
      "content": "install scponly.\n\nFor existing users, simply set the user's shell to scponly:\n\n```\n# usermod -s /usr/bin/scponly username\n```\n\nSee the Scponly Wiki for more details.\n\n"
    },
    {
      "title": "Adding a chroot jail",
      "level": 4,
      "content": "The package comes with a script to create a chroot. To use it, run:\n\n```\n# /usr/share/doc/scponly/setup_chroot.sh\n```\n\n- Provide answers.\n- Check that /path/to/chroot has root:root owner and r-x for others.\n- Change the shell for selected user to /usr/bin/scponlyc.\n- sftp-server may require some libnss modules such as libnss_files. Copy them to chroot's /lib path.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://www.minstrel.org.uk/papers/sftp/\n- sshd_config(5)\n\n"
    }
  ]
}