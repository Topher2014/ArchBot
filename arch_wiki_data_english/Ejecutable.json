{
  "title": "Ejecutable",
  "url": "https://wiki.archlinux.org/title/Ejecutable",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **2022-10-30** \n\nArtículos relacionados\n\n- Ayuda:Navegación\n- Ayuda:Estilo\n\nDebido a que la gran mayoría de los artículos de ArchWiki contienen indicaciones que requieran aclaraciones para los nuevos usuarios de GNU/Linux, este resumen de los procedimientos básicos fue escrito tanto para evitar la confusión en la comprensión de los artículos como para disuadir de la repetición del contenido mismo.\n\n"
    },
    {
      "title": "Organización",
      "level": 2,
      "content": "La mayoría de los artículos en ArchWiki no intentan proporcionar una introducción holística a un solo tema; en su lugar, se escriben de acuerdo con el principio DRY, bajo la suposición de que el usuario buscará y leerá cualquier material de apoyo para aquello que aún no comprenda. Siempre que sea posible, dicho material de apoyo se indicará en el artículo mediante un formato especial, véase #Formato.\n\nDebido a esta organización, puede ser necesario examinar varias fuentes relacionadas para comprender completamente un artículo de ArchWiki. En particular, los usuarios que son nuevos en Arch (o GNU/Linux en general) deben asumir que tendrán que leer una gran cantidad de artículos, incluso para aquellos que resuelven problemas simples. Es especialmente importante estudiar el material de apoyo antes de buscar ayuda adicional de otros usuarios.\n\n"
    },
    {
      "title": "Formato",
      "level": 2,
      "content": "- Enlazar a una sección del artículo actual: #Organización\n- Enlazar a otro artículo de ArchWiki\n- Enlazar a una página web externa\n- Enlazar a una página de manual: intro(1)\n- Una página de manual que solo está disponible sin conexión: foo(1)\n- Enlazar a un paquete en los official repositories (Español): foobar\n- Enlazar a un paquete en AUR (Español): foobarAUR\n\n"
    },
    {
      "title": "Usuario normal o root",
      "level": 2,
      "content": "Algunas líneas se escriben así:\n\n```\n# mkinitcpio -p linux\n```\n\nOtras tienen un prefijo diferente:\n\n```\n$ makepkg -s\n```\n\nEl símbolo (#) indica que la orden se debe ejecutar como root (o con privilegios de root), mientras que el símbolo ($) indica que la orden se ejecuta como usuario normal.\n\nUna excepción importante a tener en cuanta consistiría en:\n\n```\n# Este alias indica a la orden ls que coloree el listado saliente\nalias ls='ls --color=auto'\n```\n\nEn este ejemplo, el contexto que rodea al signo almohadilla nos permite deducir que la línea subsiguiente no es una orden que deba ser ejecutada, sino que, en su lugar, debe ser interpretada como una modificación de un archivo de texto. Así, en este caso, el signo almohadilla denota un comentario. Comentar una línea en un archivo de texto indica al programa asociado que ignore su contenido, en este caso, el comentario va seguido de un texto explicativo sobre la función del alias. Los scripts de bash hacen esta interpretación de los comentarios coincidiendo con root PS1.\n\nSi se hace una observación más detallada, se deduce el significado del simbolo almohadilla, el cual no debe ser interpretado como la iniciación a una orden, al incluir una letra en mayúsculas a continuación del signo #. Por lo general, las órdenes de Unix no se escriben de esta manera y la mayoría de las veces son abreviaturas cortas correspondiente a las palabras en inglés (por ejemplo,Copy se convierte en cp).\n\nDe todos modos, la mayoría de los artículos permiten discernir ésto fácilmente, mediante indicaciones al lector, como:\n\nAgregue a ~/ruta/al/archivo:\n\n```\n# Este alias indica a la orden ls que coloree el listado saliente\nalias ls='ls --color=auto'\n```\n\n"
    },
    {
      "title": "Adjuntar, añadir, crear, editar",
      "level": 2,
      "content": "Cuando se le solicita adjuntar a, añadir a, crear o editar uno o más archivos, ello implica que debe usar uno de los siguientes métodos.\n\nPara crear o modificar archivos de líneas múltiples, se sugiere el uso de un editor de texto. Por ejemplo, para utilizar la orden nano para hacer las modificaciones oportunas al archivo /etc/bash.bashrc sería:\n\n```\n# nano /etc/bash.bashrc\n```\n\nPara crear o sobrescribir un archivo desde una cadena de caracteres, una buena idea es usar redirección de salida. El siguiente ejemplo crea o sobrescribe el contenido del archivo /etc/hostname con el texto myhostname.\n\n```\n# echo myhostname > /etc/hostname\n```\n\nLa redirección de salida también puede ser usada para añadir una cadena de caracteres a un archivo. El siguiente ejemplo añade el texto [custom-repo] al archivo /etc/pacman.conf.\n\n```\n# echo \"[custom-repo]\" >> /etc/pacman.conf\n```\n\nCuando se le pregunte crear un directorio, use la orden mkdir:\n\n```\n# mkdir /mnt/boot\n```\n\n"
    },
    {
      "title": "Hacer ejecutable",
      "level": 3,
      "content": "Después de crear un archivo, si tiene en mente ejecutarlo como un script (ya sea manualmente o por otro programa), necesita ser marcado como ejecutable, por ejemplo con:\n\n```\n$ chmod +x script\n```\n\nVéase chmod. Algunas aplicaciones como file manager pueden proporcionar una manera gráfica de cambiar estas propiedades.\n\n"
    },
    {
      "title": "Cargar fuentes",
      "level": 2,
      "content": "Algunas aplicaciones, especialmente los intérpretes de línea de órdenes, utilizan scripts para su configuración: después de modificarlos, deben ser cargados para que se apliquen los cambios. En el caso de bash (Español), por ejemplo, esto se hace ejecutando (también puede reemplazar la orden source con .):\n\n```\n$ source ~/.bashrc\n```\n\nCuando la wiki le sugiera modificar dicho script de configuración, no le recordará explícitamente que recargue el archivo, y solo en algunos casos le remitirá a esta sección con un enlace de recordatorio.\n\n"
    },
    {
      "title": "Instalación de paquetes",
      "level": 2,
      "content": "Cuando un artículo invita a instalar algún paquete de manera convencional, no indicará en detalle cómo hacer esto, en su lugar solo mencionará el nombre del paquete o paquetes a instalar.\n\nLas siguientes subsecciones dan una introducción al proceso genérico de instalar un paquete dependiendo de su tipo.\n\n"
    },
    {
      "title": "Paquetes oficiales",
      "level": 3,
      "content": "Para los paquetes de los repositorios oficiales, se leerá algo similar a:\n\nEsto quiere decir que se tiene que ejecutar la siguiente orden:\n\n```\n# pacman -S foobar\n```\n\nEl artículo sobre pacman contiene información de como administrar sus paquetes en Arch Linux eficientemente.\n\n"
    },
    {
      "title": "Arch User Repository",
      "level": 3,
      "content": "Para los paquetes del Repositorio de usuarios de Arch (AUR), se leerá algo similar a:\n\nEsto quiere decir, generalmente es necesario seguir el enlace foobarAUR, descargar el archivo comprimido con el PKGBUILD, extraerlo, verificar el contenido y finalmente en el mismo directorio ejecutar:\n\n```\n$ makepkg -si\n```\n\nEl artículo Repositorio de usuarios de Arch contiene información detallada así como recomendaciones para construir paquetes del AUR.\n\n"
    },
    {
      "title": "Control de unidades de systemd",
      "level": 2,
      "content": "Cuando un artículo invita a start, enable, stop o restart alguna unidad de systemd (por ejemplo, un servicio), no va a mencionar en detalle como efectuar esta acción, en su lugar se leerá algo similar a:\n\nEsto quiere decir que se tiene que ejecutar lo siguiente:\n\n```\n# systemctl start ejemplo.service\n```\n\nEl enlace start lo llevará al artículo de systemd, el cual contiene información y explicaciones detalladas sobre cómo administrar unidades de systemd en Arch Linux eficientemente.\n\n"
    },
    {
      "title": "Configuración para todo el sistema o para un usuario específico",
      "level": 2,
      "content": "Es importante recordar que hay dos tipos diferentes de configuraciones en un sistema GNU/Linux. Configuración para todo el sistema que afecta a todos los usuarios. Dado que todo el sistema de configuración, generalmente, se encuentra en el directorio /etc, se requieren privilegios de root para poder modificar los archivos allí ubicados. Por ejemplo, para aplicar un ajuste a Bash que afecte a todos los usuarios, debe modificarse /etc/bash.bashrc .\n\nLa configuración específica del usuario, sólo afecta a un único usuario. Los archivos dot (archivos cuyo nombre comienzan con un punto) son utilizados para la configuración específica del usuario. Por ejemplo, el archivo ~/.bashrc es el archivo de configuración específica del usuario. La idea es que cada usuario pueda definir sus propios ajustes, como los alias, funciones y otras características interactivas como el prompt del sistema, sin afectar a las preferencias de otros usuarios.\n\n- ~/ y $HOME son atajos al directorio principal («home») del usuario, por lo general /home/nombredeusuario/\n- El signo ~ se obtiene pulsando Alt Gr + ñ en la distribución del teclado español\n\n"
    },
    {
      "title": "Archivos comunes de intérprete de órdenes",
      "level": 3,
      "content": "Bash y otros intérpretes de órdenes compatibles con Bourne, como Zsh, también los archivos de origen dependiendo de si el intérprete de órdenes es un intérprete de órdenes de inicio de sesión o un intérprete de órdenes interactivo. Véase Bash (Español)#Archivos de configuración y Zsh#Startup/Shutdown files para obtener más detalles.\n\n"
    },
    {
      "title": "Ejemplos de pseudovariables en el código",
      "level": 2,
      "content": "Algunos bloques de código pueden contener las denominadas pseudo-variables, que, como su nombre lo indica, no son variables reales utilizadas en el código. En su lugar, son marcadores de posición genéricos y deben ser reemplazados manualmente por elementos de configuración específicos del sistema 'antes' de que el código pueda ejecutarse o analizarse. Los intérpretes de órdenes comunes como bash y zsh proporcionan tab-completion para completar automáticamente parámetros para órdenes comunes como systemctl.\n\nEn los artículos que cumplen con las pautas de Help:Style/Formatting and punctuation (Español), las pseudovariables irán puestas en cursiva. Por ejemplo:\n\n- Active el servicio dhcpcd@nombre_de_la_interfaz.service para la interfaz de red identificada en la salida de la orden ip link.\n\nEn este caso nombre_de_la_interfaz e usa como un marcador de posición pseudovariable en una unidad de plantilla systemd. Todas las unidades de plantilla systemd, identificables por el signo @, sign, requieren un elemento de configuración específico del sistema como argumento. Véase Systemd (Español)#Utilizar las unidades.\n\n- La orden dd if=data_source of=/dev/sdX bs=sector_size count=sector_number seek=partitions_start_sector se puede ejecutar como root para borrar una partición con los parámetros específicos.\n\nEn este caso las pseudovariable se utilizan para describir los parámetros que deben sustituirse por ellas. Los detalles sobre cómo reunirlos se detallan en la sección Securely wipe disk#Calculate blocks to wipe manually, cuyas opciones presenta la orden.\n\nEn el caso de ejemplos de archivos, pegar pseudovariables en archivos de configuración real puede romper los programas que los utilizan.\n\n"
    },
    {
      "title": "Puntos suspensivos",
      "level": 3,
      "content": "En la mayoría de los casos, los puntos suspensivos (...) no son parte del contenido real del archivo o salida del código, y en su lugar representan texto omitido u opcional que no es relevante para el tema discutido.\n\nPor ejemplo HOOKS=\"... encrypt ... filesystems ...\" o:\n\n```\n/etc/X11/xorg.conf.d/50-synaptics.conf\n```\n\n```\nSection \"InputClass\"\n    ...\n    Option      \"CircularScrolling\"          \"on\"\n    Option      \"CircScrollTrigger\"          \"0\"\n    ...\nEndSection\n```\n\nTenga en cuenta que, en algunos casos, los puntos suspensivos pueden ser una parte significativa de la sintaxis del código: los usuarios atentos podrán reconocer fácilmente estos casos por el contexto.\n\n"
    }
  ]
}