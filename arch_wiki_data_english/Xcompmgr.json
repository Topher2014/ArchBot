{
  "title": "Xcompmgr",
  "url": "https://wiki.archlinux.org/title/Xcompmgr",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Compiz\n- picom\n\nXcompmgr is a simple compositor capable of rendering drop shadows and, with the use of the transset utility, primitive window transparency. Designed solely as a proof-of-concept, Xcompmgr is a lightweight alternative to Compiz and similar composite managers.\n\nBecause it does not replace any existing window manager, it is an ideal solution for users of lightweight window managers, seeking a more elegant desktop.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Before installing Xcompmgr, make sure you have installed and correctly configured Xorg. To make sure the Composite extension is enabled for the X Server, run:\n\n```\n$ xdpyinfo | grep Composite\n```\n\n```\nComposite\n```\n\nIf there is no output, add the Composite option to the Extensions section of xorg.conf:\n\n```\n/etc/X11/xorg.conf\n```\n\n```\nSection \"Extensions\"\n        Option  \"Composite\" \"true\"\nEndSection\n```\n\nXcompmgr can be installed with the package xcompmgr. For transparency also install the transset-dfAUR. See Xterm#Automatic transparency for an example.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "To load xcompmgr, simply run:\n\n```\n$ xcompmgr -c\n```\n\nTo have it load at session start, add the following to xprofile:\n\n```\nxcompmgr -c &\n```\n\nInstead of -c you can experiment with the other switches to modify the drop-shadows or even enable fading. Below is a common example:\n\n```\nxcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &\n```\n\nFor a full list of options, run:\n\n```\n$ xcompmgr --help\n```\n\n"
    },
    {
      "title": "Window transparency",
      "level": 3,
      "content": "Although its practical use is limited, due to its slow performance, the transset-df utility can be used to set the transparency of individual windows.\n\nTo set the transparency of a program window, make sure the desired program is already running, then execute:\n\n```\n$ transset-df opacity\n```\n\nwhere opacity is a number between 0 and 1, 0 being transparent and 1 being opaque.\n\nOnce execution, the mouse cursor will transform to a cross-hair. Click a window and its transparency will change to the value specified. For example, transset-df 0.25 will set the target window to 25% opacity (75% transparency).\n\n"
    },
    {
      "title": "Start/Stop Xcompmgr on demand",
      "level": 3,
      "content": "This script allows easy (re)starting and stopping of the compositing manager.\n\n```\n~/.bin/comp\n```\n\n```\n#!/bin/bash\n#\n# Start a composition manager.\n# (xcompmgr in this case)\n\ncomphelp() {\n    echo \"Composition Manager:\"\n    echo \"   (re)start: COMP\"\n    echo \"   stop:      COMP -s\"\n    echo \"   query:     COMP -q\"\n    echo \"              returns 0 if composition manager is running, else 1\"\n    exit\n}\n\ncheckcomp() {\n    pgrep xcompmgr &>/dev/null\n}\n\nstopcomp() {\n    checkcomp && killall xcompmgr\n}\n\nstartcomp() {\n    stopcomp\n    # Example settings only. Replace with your own.\n    xcompmgr -CcfF -I-.015 -O-.03 -D6 -t-1 -l-3 -r4.2 -o.5 &\n    exit\n}\n\ncase \"$1\" in\n    \"\")   startcomp ;;\n    \"-q\") checkcomp ;;\n    \"-s\") stopcomp; exit ;;\n    *)    comphelp ;;\nesac\n```\n\nFor ease of use, you can bind this script to a hot-key using, for example, Xbindkeys. This allows for fast restart or temporary composition removal if needed without interrupting other work.\n\n"
    },
    {
      "title": "Toggle Xcompmgr",
      "level": 3,
      "content": "Assign the following script to any hot-key:\n\n```\n#!/bin/bash\n\nif pgrep xcompmgr &>/dev/null; then\n    echo \"Turning xcompmgr OFF\"\n    pkill xcompmgr &\nelse\n    echo \"Turning xcompmgr ON\"\n    xcompmgr -c -C -t-5 -l-5 -r4.2 -o.55 &\nfi\n\nexit 0\n```\n\n"
    },
    {
      "title": "Background turns light gray briefly after logging in (e.g. in Openbox)",
      "level": 3,
      "content": "This is fixed by installing hsetroot and setting the background color by executing hsetroot -solid \"#000000\" (just type the code of the color you want instead of #000000) before xcompmgr. Alternatively, if xcompmgr is called prior to exec in ~/.xinitrc, you can change xcompmgr & to (sleep 1 && xcompmgr) & which will fork a subshell and allow xcompmgr to execute after your window manager has already started.\n\n"
    },
    {
      "title": "BadPicture request in awesome",
      "level": 3,
      "content": "If you get the following error in awesome:\n\n```\nerror 163: BadPicture request 149 minor 8 serial 34943\n error 163: BadPicture request 149 minor 8 serial 34988\n error 163: BadPicture request 149 minor 8 serial 35033\n```\n\njust install feh and restart awesome.\n\n"
    },
    {
      "title": "Screen not updating in awesome after resolution change",
      "level": 3,
      "content": "When using an external monitor, you may encounter problems when automatically changing display resolutions: a part of the screen becomes \"stuck\" and no longer updates itself. This problem occurs because of the initial resolution change (happening before Xcompmgr starts) as well as awesome setting the background via feh.\n\nTo fix it, you need to install hsetroot and put the following line in .xinitrc, just before xcompmgr:\n\n```\nhsetroot -solid \"#000066\"\n```\n\n(you can replace #000066 with your color of choice).\n\n"
    }
  ]
}