{
  "title": "Audiobook",
  "url": "https://wiki.archlinux.org/title/Audiobook",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- iPod\n- Rip Audio CDs\n\nNote: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nAudiobook media can be Audio CDs or downloaded files, several formats exist. For certain hardware media players a specific format will be necessary. This article documents how to create or convert an audiobook of various format types.\n\n"
    },
    {
      "title": "iPod-compatible format",
      "level": 2,
      "content": "The purpose of this section is to detail a process to create an iPod-friendly audiobook from digital media using Linux native tools.\n\nAn audiobook designed for iPods is largely the same as a MPEG-4 audio file — it contains both an audio stream and information about that stream (metadata). The two differences are: one, it is wrapped in a specifically-named MPEG-4 container (.m4b); and two, it has a chapter index added to the metadata. The chapter index uses the Quicktime standard.\n\nThe basic process is this: the audio source is decoded/uncompressed (it is usually preferable to have a decoded audio-only file, as this will simplify the concatenation/splitting of files later and prevent mixing of metadata tags); after this, the audio files are encoded to the AAC format — with a MPEG-4 container; last, the chapter index and audio information tags are added.\n\nMultiple tools are available to help create audiobook files.\n\n"
    },
    {
      "title": "Tools",
      "level": 3,
      "content": "- faac — open source AAC encoder\n- neroaacenc-binAUR — proprietary AAC encoder\n- gpac — multimedia framework for manipulating MPEG-4 media\n- lame — MP3 encoder and decoder\n\n"
    },
    {
      "title": "Extracting or decoding",
      "level": 3,
      "content": "The audio source file(s) will either need to be extracted, if a disc media, or to be decoded, if an encoded file.\n\nIf the audiobook is a disc media, various digital audio extraction utilities are available. A common way to extract audio from a CD to WAV-formatted files is:\n\n```\ncdparanoia -B\n```\n\nIf the audiobook is a audio file, various programs can decode it. For example, for MP3s:\n\n```\nlame --decode part-01.mp3\n```\n\n(If no splitting of concatenation will be required, files can be directly encoded to AAC with a MPEG-4 container.)\n\n"
    },
    {
      "title": "Concatenation or splitting",
      "level": 3,
      "content": "Audiobooks parts are typically saved in about one hour, ten minute segments (usually the time extent of a audio CD). They can be concatenated or split as desired.\n\nJoin WAV files:\n\n```\nsndfile-concat track-01.wav track-02.wav… disc-1.wav  # or more easily\nsndfile-concat track*.wav disc-1.wav\n```\n\nJoin MPEG-4 compatible audio files (AAC, AVI, MP3…):\n\n```\nMP4Box -cat track-01.aac -cat track-02.aac… disc-1.aac\n```\n\nSplit a wav file (wavsplitAUR can do this (untested)).\n\nSplit a MP3 files into 10 minute intervals:\n\n```\nmp3splt -f -t 10.0 part-01.mp3 -o @n\n```\n\nSplit a MP3 by chapters/tracks (this method scans for silence and assumes them to be chapter/track marks, splitting them on those marks — these settings are generalized and will likely required further adjusting to work):\n\n```\nmp3splt -f -s -p -min=3 part-01.mp3\n```\n\nSplit MPEG 4 compatible audio files (metadata repair will likely be necessary) into 10 minute intervals.\n\n```\nMP4Box -split 600 target.mp4\n```\n\n"
    },
    {
      "title": "Encoding",
      "level": 3,
      "content": "Multiple programs exist that can encode to AAC.\n\nTo encode with the open source encoder FAAC:\n\n```\nfaac -q 80 -o part-01.aac part-01.wav\nfaac -q 80 -o part-01.m4b part-01.wav -w  # with a MPEG-4 container(wrapper)\n```\n\nTo encode with the proprietary encoder Nero:\n\n```\nneroAacEnc -q 0.7 -of part-01.aac -if part-01.wav\n```\n\n"
    },
    {
      "title": "Chapter index merging",
      "level": 3,
      "content": "To merge a chapter index into a audio file it must be decided what type of index to use: one, recurring intervals with periodic chapter times; or two, particular intervals with definitive chapter times and names.\n\nAdd a MPEG-4 container to the audio file:\n\n```\nMP4Box -add disc-1.aac disc-1.m4b\n```\n\n"
    },
    {
      "title": "Recurring intervals",
      "level": 4,
      "content": "To merge a chapter index with chapters at every 10 minutes:\n\n```\nmp4chaps --every 600 disc-1.m4b\n```\n\n"
    },
    {
      "title": "Particular intervals",
      "level": 4,
      "content": "The method requires writing a chapter index as a text file and merging it into the audio file.\n\nThe chapter index will need to be written as a text file before being merged into audio file. There are two standards for chapter indexes: one, the Quicktime standard; and two, the Nero standard. Either can be initially merged.\n\nThe Quicktime standard looks like this (thousandths of a second can also be added .000):\n\n```\n00:00:00 Track 01\n00:08:40 Track 02\n...\n```\n\nThe Nero standard looks like this:\n\n```\nCHAPTER1=00:00:00\nCHAPTER1NAME=Track 01\nCHAPTER2=00:08:40\nCHAPTER2NAME=Track 02\n...\n```\n\nTo merge the chapter index file:\n\n```\nMP4Box -chap disc-1.chapters.txt disc-1.m4b\n```\n\nTo merge the chapter index file in one step along with the audio file and a container:\n\n```\nMP4Box -chap disc-1.chapters.txt -add disc-1.aac disc-1.m4b\n```\n\nThe chapter index will need to be converted to the Quicktime standard (though MP4Box will recognize both chapter index standards when importing, it imports using the Nero standard). Convert to the Quicktime standard with:\n\n```\nmp4chaps --convert --chapter-qt disc-1.m4b\n```\n\nThe chapter index can now be tested, for example, with VLC.\n\n"
    },
    {
      "title": "Tagging",
      "level": 3,
      "content": "A number of tagging programs can be used. Basic command-line programs provided by libmp4v2 have numerous abilities:\n\n```\n$ mp4tags -album \"An Good Audiobook\" -artist \"John Doe\" -disk 2 -disks 10 -genre Nonfiction -albumartist \"Ms. Foo Bar\" -song \"Disc 2\" -year 2004 disc1.m4b\n```\n\nAdd coverart:\n\n```\n$ mp4art --add a-good-audiobook.jpg disc-1.m4b\n```\n\nOptimize the container:\n\n```\n$ mp4file --optimize *.m4b\n```\n\n"
    },
    {
      "title": "Example of batching",
      "level": 3,
      "content": "A number of audio files can be processed using a loop:\n\n```\nfor m in *.mp3; do\n  lame --decode \"$m\"\n  faac -q 80 -o \"${m%.*}\".aac \"$m\"\ndone\n```\n\nTo write tags for sequential disc numbering:\n\n```\nfor b in *.m4b; do\n  [ \"$n\" ] && n=$((10#$n + 1))\n  [ -z \"$n\" ] && n=1\n  mp4tags -album \"An Good Audiobook\"… -disk $(printf \"%02u\" $n)… \"$b\"\ndone\n```\n\n"
    },
    {
      "title": "Audible format",
      "level": 2,
      "content": "It can be a laborious process to convert and Audible book format — article.\n\nA much easier way is to use this script to retrieve your activation bytes from a downloaded Audible audiobook — link.\n\nYou can then use mpv to listen to the file:\n\n```\n$ mpv --demuxer-lavf-o=activation_bytes=<your activation bytes> <filename>.aax\n```\n\nOr you can write the file to unencrypted .mp4 with ffmpeg (documentation):\n\n```\n$ ffmpeg -activation_bytes <your activation bytes> -i <filename>.aax -vn -c:a copy <output>.mp4\n```\n\nThe resulting file will have chapter headers intact.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Wikipedia:.m4b\n- ripitAUR — thorough DAE with the ability to create chapter indexes with the --book option.\n\n"
    }
  ]
}