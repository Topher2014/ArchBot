{
  "title": "Input Japanese using uim",
  "url": "https://wiki.archlinux.org/title/Input_Japanese_using_uim",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section is a candidate for merging with uim.** This article or section is a candidate for merging with uim.\n\nThis article or section is a candidate for merging with uim.\n\nRelated articles\n\n- Localization\n- Localization/Japanese\n\nThis page explains how to get the Japanese input to work using uim.\n\nIf you use SCIM, see Smart Common Input Method platform.\n\nIf you use IBus, see IBus.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "You need the following packages to input Japanese.\n\n- Japanese fonts\n- Japanese input method (Kana to Kanji conversion engine)\n- Input method framework: uim\n\n"
    },
    {
      "title": "Japanese fonts",
      "level": 3,
      "content": "see also Fonts and Font configuration for configuration or more detail.\n\nRecommended Japanese fonts are as follows.\n\n"
    },
    {
      "title": "Sans-serif",
      "level": 4,
      "content": "- adobe-source-han-sans || adobe-source-han-sans-jp-fonts or adobe-source-han-sans-otc-fonts\n\n"
    },
    {
      "title": "Serif and Sans-serif",
      "level": 4,
      "content": "- IPA fonts || otf-ipafont\n\nIf you want to show 2channel Shift JIS art properly, use the following fonts:\n\n- Monapo font (AUR: ttf-monapoAUR)\n\n"
    },
    {
      "title": "uim",
      "level": 3,
      "content": "Install the uimAUR package.\n\n"
    },
    {
      "title": "Anthy",
      "level": 4,
      "content": "Anthy is one of the most popular Japanese input methods in the open source world. However, it has not been maintained for a long time. Debian succeeds it from May 2010.\n\nInstall anthy from the official repositories.\n\nAnthy's default dictionary does not include several characters which are not specified on EUC-JP (JIS X 0208) such as \"①\", \"♥\", etc. alt-cannadic provides extra dictionaries including those characters.\n\nGet alt-cannadic dictionary and put them under your ~/.anthy/imported_words_default.d.\n\n```\n$ tar jxvf alt-cannadic-091230.tar.bz2\n$ mkdir ~/.anthy/imported_words_default.d (if not exist)\n$ cp alt-cannadic-091230/extra/*.t ~/.anthy/imported_words_default.d/\n```\n\nPlease see official wiki for more detail (Japanese).\n\nNote: **Anthy (UTF-8)** \n\n"
    },
    {
      "title": "Modified Anthy (anthy-ut)",
      "level": 4,
      "content": "Modified Anthy is a set of patches and huge extended dictionaries which aims to improve the Kana to Kanji conversion quality of original Anthy.\n\nModified Anthy consists two different upstreams:\n\n- Patched source of Anthy by G-HAL\n- Huge extended dictionalies by UTSUMI\n\nNote: **Anthy (UTF-8)** \n\n- Modified Anthy applies to only Anthy (UTF-8). So you have to choose Anthy (UTF-8) for default input method on uim.\n- Modified Anthy does not have compatibility of the dictionaries and learning data with original Anthy.\n\n"
    },
    {
      "title": "Mozc",
      "level": 4,
      "content": "Mozc is a Japanese Input Method Editor (IME) designed for multi-platform such as Chromium OS, Windows, Mac and Linux which originates from Google Japanese Input.\n\nThough MozcAUR adapts to only ibus input method framework, macuim provides uim-mozc plugin.\n\nuim-mozcAUR is available on AUR.\n\nYou can install this from the unofficial pnsft-pur user repository.\n\nYou can choose to install all packages in the mozc-im group by specifying the group name.\n\nOr, specify the individual package names directly. For example install uim-mozcAUR.\n\nNote: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nmozc-ut2AUR[broken link: package not found] can be built uim-mozc.\n\nTo build uim-mozc, edit PKGBUILD like follow, i,e. uncomment _uim_mozc= line:\n\n```\n## If you will not be using ibus, comment out below.\n_ibus_mozc=\"yes\"\n## If you will be using uim, uncomment below.\n_uim_mozc=\"yes\"\n## If applying patch for uim-mozc fails, try to uncomment below.\n#_kill_kill_line=\"yes\"\n## This will disable the 'kill-line' function of uim-mozc.\n```\n\nNote: **must** \n\n```\n# uim-module-manager --register mozc\n```\n\n"
    },
    {
      "title": "Google CGI API for Japanese input",
      "level": 4,
      "content": "Google CGI API for Japanese Input (Google-CGIAPI-Jp) is CGI service to provide Japanese conversion on the Internet by Google. It can be used on web browser. Its conversion engine seems to be equivalent to Google Japanese Input, so conversion quality is probably better than Mozc.\n\nYou can use it via uim. Choose \"Google-CGIAPI-Jp\" on uim-im-switcher-gtk/gtk3/qt4 or uim-pref-gtk/gtk3/qt4.\n\n"
    },
    {
      "title": "Environment variables",
      "level": 3,
      "content": "Autostart the following on Xorg startup:\n\n```\nexport GTK_IM_MODULE='uim'\nexport QT_IM_MODULE='uim'\nuim-xim &\nexport XMODIFIERS='@im=uim'\n```\n\n"
    },
    {
      "title": "Toolbar utilities",
      "level": 3,
      "content": "If you want to use UimToolbar utilities which shows and controls uim mode, add one of the followings, too.\n\n"
    },
    {
      "title": "uim-toolbar-gtk/qt",
      "level": 4,
      "content": "Using toolbar appears as a window.\n\nFor GTK 2:\n\n```\nuim-toolbar-gtk &\n```\n\nFor GTK 3:\n\n```\nuim-toolbar-gtk3 &\n```\n\nFor Qt4:\n\n```\nuim-toolbar-qt4 &\n```\n\n"
    },
    {
      "title": "uim-toolbar-gtk-systray",
      "level": 4,
      "content": "Using toolbar for system tray.\n\nFor GTK 2:\n\n```\nuim-toolbar-gtk-systray &\n```\n\nFor GTK 3:\n\n```\nuim-toolbar-gtk3-systray &\n```\n\n"
    },
    {
      "title": "Using systemd",
      "level": 3,
      "content": "If you are using systemd to manage your X session, you will need to set the environment variables in your systemd session rather than an init script.\n\n```\n~/.config/systemd/user/uim-env.service\n```\n\n```\n[Unit]\nDescription=uim environment initialization\nBefore=xorg.target\n\n[Service]\nType=oneshot\nExecStart=/usr/bin/systemctl --user set-environment XMODIFIERS=@im=uim\nExecStart=/usr/bin/systemctl --user set-environment GTK_IM_MODULE=uim\nExecStart=/usr/bin/systemctl --user set-environment QT_IM_MODULE=uim\n```\n\n```\n~/.config/systemd/user/uim.service\n```\n\n```\n[Unit]\nDescription=uim daemon\nWants=uim-env.service\nAfter=xorg.target\n\n[Service]\nExecStart=/usr/bin/uim-xim\nRestart=on-abort\n\n[Install]\nWantedBy=xorg.target\n```\n\n```\n~/.config/systemd/user/uim-toolbar.service\n```\n\n```\n[Unit]\nDescription=uim toolbar\nPartOf=uim.service\n\n[Service]\nExecStart=/usr/bin/uim-toolbar-of-your-choice\nRestart=on-abort\n\n[Install]\nWantedBy=uim.service\n```\n\nLastly, you will need to enable the uim.service and uim-toolbar.service user units.\n\n"
    },
    {
      "title": "uim preferences",
      "level": 3,
      "content": "Configure uim preferences by running :\n\n```\n$ uim-pref-gtk (Or, uim-pref-gtk3/uim-pref-qt4)\n```\n\nwhich brings forth a GUI.\n\nChoose your preferring input method as 'Default input method'.\n\nYou can run uim-xim or restart X to test your settings.\n\nProvided everything went well you should be able to input Japanese in X.\n\n"
    },
    {
      "title": "Input Japanese on Emacs",
      "level": 3,
      "content": "uim provides uim.el the bridge software between Emacs and uim. Here is a sample to use uim on Emacs with utf-8 encoding.\n\nPlease see Official wiki for more detail.\n\n"
    },
    {
      "title": "LEIM or minor-mode",
      "level": 4,
      "content": "You can call uim.el from Emacs in two ways; directly or with the LEIM (Library of Emacs Input Method) framework. Though settings of them are different, basic functions are same. If you want to switch between uim.el and other Emacs IMs frequently, you should use LEIM framework.\n\nIf you will be using on minor-mode, write the following settings into your .emacs.d/init.el or some other file for Emacs customizing.\n\n```\n;; read uim.el\n(require 'uim)\n;; uncomment next and comment out previous to load uim.el on-demand\n;; (autoload 'uim-mode \"uim\" nil t)\n\n;; key-binding for activate uim (ex. C-\\)\n(global-set-key \"\\C-\\\\\" 'uim-mode)\n```\n\nIf you will be using via LEIM, write the following settings into your .emacs.d/init.el or some other file for Emacs customizing and choose default input method.\n\n```\n;; read uim.el with LEIM initializing\n(require 'uim-leim)\n\n;; set default IM. Uncomment the one of the followings.\n;(setq default-input-method \"japanese-anthy-utf8-uim\")        ; Anthy (UTF-8)\n;(setq default-input-method \"japanese-google-cgiapi-jp-uim\")  ; Google-CGIAPI-Jp\n;(setq default-input-method \"japanese-mozc-uim\")              ; Mozc\n```\n\n"
    },
    {
      "title": "Preferred character encoding",
      "level": 4,
      "content": "uim.el uses euc-jp character encoding by default. To set UTF-8 as preferred encodings, add the followings into your .emacs.d/init.el or some other file for Emacs customizing.\n\n```\n;; Set UTF-8 as preferred character encoding (default is euc-jp).\n(setq uim-lang-code-alist\n      (cons '(\"Japanese\" \"Japanese\" utf-8 \"UTF-8\")\n           (delete (assoc \"Japanese\" uim-lang-code-alist) \n                   uim-lang-code-alist)))\n```\n\n"
    },
    {
      "title": "Enable inline candidates displaying mode by default",
      "level": 4,
      "content": "The inline candidates displaying mode displays conversion candidates just below (or above) preedit text vertically instead of echo area. If you want to enable inline candidates displaying mode by default, write as follows.\n\n```\n;; set inline candidates displaying mode as default\n(setq uim-candidate-display-inline t)\n```\n\n"
    },
    {
      "title": "Set Hiragana input mode by default",
      "level": 4,
      "content": "To set Hiragana input mode at activting uim, add the settings like follows:\n\n```\n;; Set Hiragana input mode at activating uim.\n(setq uim-default-im-prop '(\"action_anthy_utf8_hiragana\"\n                            \"action_google-cgiapi-jp_hiragana\"\n                            \"action_mozc_hiragana\"))\n```\n\n"
    },
    {
      "title": "Ignoring C-SPC on uim.el",
      "level": 4,
      "content": "When you are assigning activation/deactivation of input method to C-SPC, C-SPC is stolen to switch input mode by uim.el while it is activated. To prevent the stealing and use for set-mark-command, add the followings into your .emacs.d/init.el or some other file for Emacs customizing.\n\n```\n(add-hook 'uim-load-hook\n          '(lambda ()\n             (define-key uim-mode-map [67108896] nil)\n             (define-key uim-mode-map [0] nil)))\n```\n\n"
    },
    {
      "title": "Disabling XIM on Emacs",
      "level": 4,
      "content": "When you are using input method on your desktop and assigning activation/deactivation of input method to C-SPC, you will be not able to use C-SPC/C-@ as set-mark-command on Emacs. To avoid this problem, add the following into your ~/.Xresources or ~/.Xdefaults. xim will be disabled on Emacs.\n\n```\nEmacs*UseXIM: false\n```\n\n"
    },
    {
      "title": "Set the GTK_IM_MODULE variable, but uim still does not work with GTK 2 applications",
      "level": 3,
      "content": "In case you already set the GTK_IM_MODULE environmental variable, but uim still does not work with GTK 2 applications, you need to specify the location of gtk.immodules, which is created by and can be generated with gtk-query-immodules-2.0.\n\nThe default location is /etc/gtk-2.0/gtk.immodules for GTK 2.\n\nYou can do this with either the GTK_IM_MODULE_FILE variable (not recommended, it causes GTK 3 applications to see incompatible modules) or the im_module_file setting (recommended).\n\nAdd the following to /etc/gtk-2.0/gtkrc or ~/.gtkrc-2.0:\n\n```\nim_module_file \"/etc/gtk-2.0/gtk.immodules\"\n```\n\n"
    },
    {
      "title": "Cannot input Japanese on Opera",
      "level": 3,
      "content": "If you use Opera and cannot input Japanese with uim, try to edit environment variable as follows: Make sure to add the following to the beginning of /usr/bin/opera.\n\n```\nexport XMODIFIERS='@im=uim'\nexport QT_IM_MODULE='xim'\n```\n\n"
    },
    {
      "title": "Cannot type a consonant in Zenkaku mode",
      "level": 3,
      "content": "If you cannot type a consonant in Zenkaku mode, add the following to your configuration file.\n\n```\ne.g.  vi ~/.uim.d/customs/custom-google-cgiapi-jp.scm\n    \n   (define ja-rk-rule-hoge\n   (map\n   (lambda (c)\n   (list (cons (list c) ()) (list c c c)))\n   '(\"b\" \"c\" \"d\" \"f\" \"g\" \"h\" \"j\" \"k\" \"l\" \"m\"\n   \"p\" \"q\" \"r\" \"s\" \"t\" \"v\" \"w\" \"x\" \"y\" \"z\"\n   \"A\" \"B\" \"C\" \"D\" \"E\" \"F\" \"G\" \"H\" \"I\" \"J\" \"K\" \"L\" \"M\"\n   \"N\" \"O\" \"P\" \"Q\" \"R\" \"S\" \"T\" \"U\" \"V\" \"W\" \"X\" \"Y\" \"Z\")))\n   (if (symbol-bound? 'ja-rk-rule-hoge)\n   (set! ja-rk-rule (append ja-rk-rule-hoge ja-rk-rule)))\n```\n\n"
    },
    {
      "title": "uim-toolbar-gtk-systray: tray icon is crushed",
      "level": 3,
      "content": "Though some of DE, WM or panel application may provide only one icon space per application on system-tray/notification-area, uim-toolbar-gtk-systray displays some icons on it by default so those icons are crushed. Choose just one of them to solve it. The steps to display only 'Input mode' icon for example as follows:\n\n1. Run uim-pref-gtk.\n1. Click 'Toolbar' on 'Group' list.\n1. Take the all checkmarks off.\n1. Click 'Anthy', 'Anthy (UTF-8)' or 'Mozc' which you are using on 'Group' list.\n1. Click Edit button in 'Toolbar' box > 'Enable toolbar buttons' line.\n1. Enable only 'Input mode' and click 'Close' button.\n1. Click 'OK' button to close uim-pref-gtk.\n\nThe tray icon will be displayed \"あ\" (Hiragana mode) or \"ー\" (Direct mode).\n\n"
    },
    {
      "title": "I use darker theme, I cannot read the uim mode icons",
      "level": 3,
      "content": "You can choose icons for darker background (uim 1.6.0 or later).\n\n1. Run uim-pref-gtk.\n1. Click 'Toolbar' on 'Group' list.\n1. Check 'Use icon for dark background'.\n\n"
    }
  ]
}