{
  "title": "Quiet boot",
  "url": "https://wiki.archlinux.org/title/Quiet_boot",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Plymouth\n\nThis page is for those who prefer to limit the verbosity of their system to a strict minimum, either for aesthetics or other reasons. Following this guide will remove all text from the bootup process. Video demonstration\n\n"
    },
    {
      "title": "Kernel parameters",
      "level": 2,
      "content": "Change the kernel parameters using the configuration options of your boot loader, to include the following parameters:\n\n```\nquiet\n```\n\nIf you are still getting messages printed to the console, it may be dmesg sending you what it thinks are important messages. You can change the level at which these messages will be printed by using quiet loglevel=level, where level is any number between 0 and 7, where 0 is the most critical, and 7 is debug levels of printing.\n\n```\nquiet loglevel=3\n```\n\nNote that this only seems to work if both quiet and loglevel=level are used, and they must be in that order (quiet first). The loglevel parameter will only change that which is printed to the console, the levels of dmesg itself will not be affected and will still be available through the journal as well as dmesg. For more information, see kernel parameters.\n\nIf you also want to stop systemd from printing its version number when booting, you should also append udev.log_level=3 to your kernel parameters. If systemd is used in an initramfs, append rd.udev.log_level=3 instead. See systemd-udevd.service(8) ยง KERNEL COMMAND LINE for details.\n\nIf you are using the systemd hook in the initramfs, you may get systemd messages during initramfs initialization. You can pass systemd.show_status=false to disable them, or systemd.show_status=auto to only suppress successful messages (so in case of errors you can still see them). Actually, auto is already passed to systemd.show_status=auto when quiet is used, however for some motive sometimes systemd inside initramfs does not get it. Below are the parameters that you need to pass to your kernel to get a completely clean boot with systemd in your initramfs:\n\n```\nquiet loglevel=3 systemd.show_status=auto rd.udev.log_level=3\n```\n\nAlso touch ~/.hushlogin to remove the Last login message.\n\nUsers of plymouth must use both the quiet and splash kernel parameter, otherwise the details fallback theme is used and shows systemd messages.\n\n"
    },
    {
      "title": "Remove console cursor blinking",
      "level": 2,
      "content": "The console cursor at boot keeps blinking if you follow these instructions. This can be solved by passing vt.global_cursor_default=0 to the kernel [1].\n\nTo recover the cursor in the TTY, run:\n\n```\n# setterm -cursor on >> /etc/issue\n```\n\n"
    },
    {
      "title": "sysctl",
      "level": 2,
      "content": "To hide any kernel messages from the console, add or modify the kernel.printk line according to [2]:\n\n```\n/etc/sysctl.d/20-quiet-printk.conf\n```\n\n```\nkernel.printk = 3 3 3 3\n```\n\n"
    },
    {
      "title": "agetty",
      "level": 2,
      "content": "To hide agetty printed issue and \"login:\" prompt line from the console[3], create a drop-in snippet for getty@tty1.service.\n\n```\n/etc/systemd/system/getty@tty1.service.d/skip-prompt.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=-/usr/bin/agetty --skip-login --nonewline --noissue --autologin username --noclear %I $TERM\n```\n\n"
    },
    {
      "title": "startx",
      "level": 2,
      "content": "To hide startx messages, you could redirect its output to /dev/null in your shell profile file (like ~/.bash_profile in Bash or ~/.zprofile in Zsh):\n\n```\nif [ -z \"$DISPLAY\" ] && [ \"$XDG_VTNR\" = 1 ]; then\n  exec startx &>/dev/null\nfi\n```\n\n"
    },
    {
      "title": "fsck",
      "level": 2,
      "content": "To hide fsck messages during boot, let systemd check the root filesystem. For this, replace udev hook with systemd and remove the fsck hook:\n\n```\nHOOKS=(base systemd autodetect microcode modconf kms keyboard sd-vconsole block filesystems)\n```\n\nin /etc/mkinitcpio.conf and regenerate the initramfs.\n\nSee systemd-fsck@.service(8) for more info on the options you can pass to systemd-fsck - you can change how often the service will check (or not) your filesystems.\n\n"
    },
    {
      "title": "Make GRUB silent",
      "level": 2,
      "content": "To hide GRUB welcome and boot messages, you may install unofficial grub-silentAUR package.\n\nAfter the installation, it is required to reinstall GRUB to necessary partition first.\n\nThen, take an example as /etc/default/grub.silent, and make necessary changes to /etc/default/grub.\n\nBelow three lines are necessary:\n\n```\n/etc/default/grub\n```\n\n```\nGRUB_DEFAULT=0\nGRUB_TIMEOUT=0\nGRUB_RECORDFAIL_TIMEOUT=$GRUB_TIMEOUT\n```\n\nLastly, regenerate the grub.cfg file.\n\n"
    },
    {
      "title": "Retaining or disabling the vendor logo from BIOS",
      "level": 2,
      "content": "Modern UEFI systems display a vendor logo on boot until handing over control to the bootloader; e.g. Lenovo laptops display a bright red Lenovo logo. This vendor logo is typically blanked by the bootloader (if standard GRUB is used) or by the kernel.\n\nTo prevent the kernel from blanking the vendor logo, Linux 4.19 introduced a new configuration option FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER that retains the contents of the framebuffer until text needs to be printed on the framebuffer console. Since version 4.19.arch1, the official Arch Linux kernels are compiled with CONFIG_FRAMEBUFFER_CONSOLE_DEFERRED_TAKEOVER=y.\n\nWhen combined with a low loglevel (to prevent text from being printed), the vendor logo can be retained while the system is initialized. Note that GRUB in the standard configuration blanks the screen; consider booting directly an EFI boot stub and thus leverage deferred takeover.\n\nVideo demonstration\n\nThe kernel command line should use loglevel=3 or rd.udev.log_level=3 as mentioned above. Note that if you often receive Core temperature above threshold, cpu clock throttled messages in the kernel log, you need to use log level 2 to silence these at boot time. Alternatively, if you compile your own kernel, adjust the log level of the message in arch/x86/kernel/cpu/mcheck/therm_throt.c.\n\nIf you use Intel graphics, see also Intel graphics#Fastboot.\n\nFurther reading:\n\n- Phoronix: Linux 4.19 Adds Deferred Console Takeover Support For FBDEV - Cleaner Boot Process\n- Hans de Goede: Adding deferred fbcon console takeover to the Fedora kernels\n\n"
    },
    {
      "title": "Disabling deferred takeover",
      "level": 3,
      "content": "If the new behavior leads to issues, you can disable deferred takeover by using the fbcon=nodefer kernel parameter.\n\n"
    }
  ]
}