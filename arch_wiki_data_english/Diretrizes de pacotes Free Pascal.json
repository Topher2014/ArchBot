{
  "title": "Diretrizes de pacotes Free Pascal",
  "url": "https://wiki.archlinux.org/title/Diretrizes_de_pacotes_Free_Pascal",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "32-bit – CLR – CMake – Cross – DKMS – Eclipse – Electron – Fonte – Free Pascal – GNOME – Go – Haskell – Java – KDE – Kernel – Lisp – Meson – MinGW – Node.js – Nonfree – OCaml – Perl – PHP – Python – R – Ruby – Rust – Shell – VCS – Web – Wine\n\nEsta página explica como escrever PKGBUILDs para software construído com o Free Pascal Compiler (FPC). Atualmente, existem duas opções para a criação de software do Linux, bem como várias opções para construir software em outros destinos usando compiladores cruzados do FPC:\n\n- fpc fornece um compilador visando apenas a CPU de seu host (x86_64 somente).\n- fpc-multilibAUR[link quebrado: package not found] fornece um compilador para host x86_64 visando ambientes Linux com CPU i686 e x86_64. Isso também vai fornecer o pacote de driver de compilador FPC ppcross386AUR[link quebrado: package not found].\n\n"
    },
    {
      "title": "Nomenclatura do pacote",
      "level": 3,
      "content": "O nome do projeto sozinho é geralmente suficiente. No entanto, no caso de compilação cruzada, o pacote deve ser prefixado com fpc32- ao direcionar o i686 Linux a partir de multilib e nomeado no formato de fpc-cpu-sistema-pkgname ao direcionar a sistemas Linux não Arch.\n\n"
    },
    {
      "title": "Trechos úteis de código",
      "level": 3,
      "content": "- Determine a versão do FPC e a CPI e o sistema operacional das unidades para retornar:\n\n```\n_unitdir=`fpc -iSP`-`fpc -iSO`\n_fpcver=`fpc -iV`\n```\n\n"
    },
    {
      "title": "Empacotamento",
      "level": 3,
      "content": "Por favor, siga as opções abaixo ao criar um pacote baseado no FPC:\n\n- sempre adicione fpc a makedepends ou depends\n- sempre coloque todas as unidades compiladas (*.a, *.compiled, *.o, *.ppu, *.res, *.rst) sob /usr/lib/fpc/$_fpcver/units/$arch-linux\n- adicione staticlibs a options se estiver instalando uma biblioteca de importação\n\n"
    },
    {
      "title": "Compilação cruzada",
      "level": 4,
      "content": "- sempre adicione o pacote de compilador cruzado correspondente mencionado acima (fpc-cpu-system-rtl ou fpc-multilibAUR[link quebrado: package not found] para multilib) ao depends\n- sempre adicione !strip a options para sistemas não baseados no Unix\n- sempre coloque todas as unidades compiladas (*.a, *.compiled, *.o, *.ppu, *.res, *.rst) sob /usr/lib/fpc/$_fpcver/units/$_unitdir (ou, se multilib, /usr/lib/fpc/$_fpcver/units/i386-linux)\n- sempre use any (x86_64 se multilib) como a arquitetura\n- adicione staticlibs a options se estiver instalando uma biblioteca de importação\n\n"
    }
  ]
}