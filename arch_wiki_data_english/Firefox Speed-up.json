{
  "title": "Firefox Speed-up",
  "url": "https://wiki.archlinux.org/title/Firefox_Speed-up",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Assuming that there is memory to spare, placing Firefox's cache or complete profile to RAM offers significant advantages. Even though opting for the partial route is an improvement by itself, the latter can make Firefox even more responsive compared to its stock configuration. Benefits include, among others:\n\n- reduced drive read/writes;\n- heightened responsive feel;\n- many operations within Firefox, such as quick search and history queries, are nearly instantaneous.\n\nTo do so we can make use of a tmpfs.\n\nBecause data placed therein cannot survive a shutdown, a script responsible for syncing back to drive prior to system shutdown is necessary if persistence is desired (which is likely in the case of profile relocation). On the other hand, only relocating the cache is a quick, less inclusive solution that will slightly speed up user experience while emptying Firefox cache on every reboot.\n\nNote: **separately** \n\n"
    },
    {
      "title": "Relocate cache to RAM only",
      "level": 2,
      "content": "See Firefox/Tweaks#Turn off the disk cache.\n\n"
    },
    {
      "title": "Place profile in RAM using tools",
      "level": 2,
      "content": "Relocate the browser profile to tmpfs so as to globally improve browser's responsiveness. Another benefit is a reduction in drive I/O operations, of which SSDs benefit the most.\n\nUse an active management script for maximal reliability and ease of use. Several are available from the AUR.\n\n"
    },
    {
      "title": "Profile-sync-daemon",
      "level": 3,
      "content": "See the Profile-sync-daemon page for additional info on it.\n\n"
    },
    {
      "title": "firefox-sync",
      "level": 3,
      "content": "firefox-syncAUR is sufficient for a user with a single profile; uses a script and systemd service similar to #The script.\n\nIdentify and backup your current Firefox profile as #Before you start suggests.\n\nUse a drop-in snippet to pass the profile as an argument with -p profile_id.default.\n\nThen start/enable the firefox-sync.service user unit.\n\n"
    },
    {
      "title": "Before you start",
      "level": 3,
      "content": "Before potentially compromising Firefox's profile, be sure to make a backup for quick restoration. First, find out the active profile name by visiting about:profiles and checking which profile is in use. Replace xyz.default as appropriate and use tar to make a backup:\n\n```\n$ tar zcvfp ~/firefox_profile_backup.tar.gz ~/.mozilla/firefox/xyz.default\n```\n\n"
    },
    {
      "title": "The script",
      "level": 3,
      "content": "The script is adapted from verot.net's Speed up Firefox with tmpfs.\n\nThe script will first move Firefox's profile to a new static location, make a sub-directory in /dev/shm, softlink to it and later populate it with the contents of the profile. As before, and until the end of this article, replace the bold xyz.default strings with the name of your Firefox profile folder. The only value that absolutely needs to be altered is, again, xyz.default.\n\nBe sure that rsync is installed, create:\n\n```\n~/.local/bin/firefox-sync.sh\n```\n\n```\n#!/bin/sh\n\nstatic=static-$1\nlink=$1\nvolatile=/dev/shm/firefox-$1-$USER\n\nIFS=\nset -efu\n\ncd ~/.mozilla/firefox\n\nif [ ! -r $volatile ]; then\n\tmkdir -m0700 $volatile\nfi\n\nif [ \"$(readlink $link)\" != \"$volatile\" ]; then\n\tmv $link $static\n\tln -s $volatile $link\nfi\n\nif [ -e $link/.unpacked ]; then\n\trsync -av --delete --exclude .unpacked ./$link/ ./$static/\nelse\n\trsync -av ./$static/ ./$link/\n\ttouch $link/.unpacked\nfi\n```\n\nMake the script executable, then run the following to close Firefox and test it:\n\n```\n$ killall firefox firefox-bin\n$ ls ~/.mozilla/firefox/\n$ ~/.local/bin/firefox-sync.sh xyz.default\n```\n\nRun Firefox again to gauge the results. The second time the script runs, it will then preserve the RAM profile by copying it back to disk.\n\n"
    },
    {
      "title": "Automation",
      "level": 3,
      "content": "Seeing that forgetting to sync the profile can lead to disastrous results, automating the process seems like a logical course of action.\n\n"
    },
    {
      "title": "systemd",
      "level": 4,
      "content": "Create the following script:\n\n```\n~/.config/systemd/user/firefox-profile@.service\n```\n\n```\n[Unit]\nDescription=Firefox profile memory cache\n\n[Install]\nWantedBy=default.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=%h/.local/bin/firefox-sync.sh %i\nExecStop=%h/.local/bin/firefox-sync.sh %i\n```\n\nthen, do a daemon-reload and enable/start the firefox-profile@xyz.default.service user unit.\n\n"
    },
    {
      "title": "cron job",
      "level": 4,
      "content": "Manipulate the user's cron table using crontab:\n\n```\n$ crontab -e\n```\n\nAdd a line to start the script every 30 minutes,\n\n```\n*/30 * * * * ~/.local/bin/firefox-sync.sh xyz.default\n```\n\nor add the following to do so every 2 hours:\n\n```\n0 */2 * * * ~/.local/bin/firefox-sync.sh xyz.default\n```\n\n"
    },
    {
      "title": "Sync at login/logout",
      "level": 4,
      "content": "Assuming bash is being used, add the script to the login/logout files:\n\n```\n$ echo 'bash -c \"~/.local/bin/firefox-sync.sh xyz.default > /dev/null &\"' | tee -a ~/.bash_logout ~/.bash_login\n```\n\nFor zsh, use ~/.zlogin and ~/.zlogout instead:\n\n```\n$ echo 'bash -c \"~/.local/bin/firefox-sync.sh xyz.default > /dev/null &\"' | tee -a ~/.zlog{in,out}\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- tmpfs\n\n"
    }
  ]
}