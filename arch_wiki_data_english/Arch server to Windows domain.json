{
  "title": "Arch server to Windows domain",
  "url": "https://wiki.archlinux.org/title/Arch_server_to_Windows_domain",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Samba\n- Samba/Active Directory domain controller\n- SOGo\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nFrom Wikipedia:\n\nThis article describes how to integrate an Arch Linux system with an existing Windows domain network using Samba.\n\nBefore continuing, you must have an existing Active Directory domain, and have a user with the appropriate rights within the domain to: query users and add computer accounts (Domain Join).\n\nThis document is not an intended as a complete guide to Active Directory nor Samba. Refer to the resources section for additional information.\n\n"
    },
    {
      "title": "Introduction",
      "level": 2,
      "content": "This article explains how to configure an Arch Linux system to participate in an Active Directory domain. This article was written and tested on a fresh installation, and it is assumed that all configuration files are in their unmodified, post-installation state. For the duration of the article, the example Active Directory domain will use the following configuration:\n\n- NetBIOS domain name: INTERNAL\n- DNS domain name: internal.domain.tld\n- Kerberos realm: INTERNAL.DOMAIN.TLD\n- First DC: server1.internal.domain.tld with IP address 192.168.1.1\n- Second DC: server2.internal.domain.tld with IP address 192.168.1.2\n\nIn most small networks, the DCs (domain controllers) also hold the DNS server role. This may not be true in larger networks. Generally, DCs also hold the NTP role, but not always. Consult your network administrator to verify correct values for DNS and NTP servers.\n\n"
    },
    {
      "title": "Needed software",
      "level": 2,
      "content": "In order to use samba effectively, you will need to install the following packages: samba, smbclient, and ntp. (timedatectl can be used as an alternative to ntp.)\n\nAdditionally, while not required, the following packages will be useful for testing and troubleshooting: bind, krb5, and if a printing is desired (whether you want to share printers, or use printers on another Samba/Windows host), cups.\n\n"
    },
    {
      "title": "DNS configuration",
      "level": 3,
      "content": "Active Directory depends entirely on DNS for name resolution. It is imperative that the /etc/resolv.conf file is configured with both the correct DNS servers and a domain search suffix. Whether configured via DHCP or static configuration, ensure that these values are correct for your domain. For the example domain configuration, the following contents are appropriate (be sure to replace 192.168.1.1, 192.168.1.2, and internal.domain.tld with appropriate values for your network):\n\n```\n/etc/resolv.conf\n```\n\n```\nnameserver 192.168.1.1\nnameserver 192.168.1.2\nsearch internal.domain.tld\n```\n\nIf you elected to install the bind package, you can test DNS configuration with the following commands (be sure to replace server1 and internal.domain.tld with appropriate values for your network):\n\n```\n$ nslookup -type=SRV _kerberos._tcp.internal.domain.tld.\n$ nslookup -type=SRV _ldap._tcp.internal.domain.tld.\n$ nslookup server1.internal.domain.tld.\n```\n\nYou should get output similar to the following (adjust appropriately for only one DC, or more than two):\n\n```\nServer:        192.168.1.1\nAddress:       192.168.1.1#53\n\n_kerberos._tcp.internal.domain.tld service = 0 100 88 server1.internal.domain.tld.\n_kerberos._tcp.internal.domain.tld service = 0 100 88 server2.internal.domain.tld.\n...\n_ldap._tcp.internal.domain.tld     service = 0 100 389 server1.internal.domain.tld.\n_ldap._tcp.internal.domain.tld     service = 0 100 389 server2.internal.domain.tld.\n...\nName:   server1.internal.domain.tld\nAddress: 192.168.1.1\n```\n\n"
    },
    {
      "title": "NTP configuration",
      "level": 3,
      "content": "In an Active Directory domain, more specifically for Kerberos ticketing, it is imperative that time is synchronized with all other hosts on the network. A margin of error no more than five minutes is required. For the example domain configuration, an appropriate /etc/ntp.conf file should have the following contents (be sure to replace server1, server2, and internal.domain.tld with appropriate values for your network):\n\n```\n/etc/ntp.conf\n```\n\n```\n# Use your domain's NTP servers \nserver server1.internal.domain.tld\nserver server2.internal.domain.tld\n\n# Restrictions\nrestrict default kod limited nomodify nopeer noquery notrap\nrestrict 127.0.0.1\nrestrict ::1\n\n# Location of drift file\ndriftfile /var/lib/ntp/ntpd.drift\n```\n\nEnable and start the ntpd.service unit.\n\n"
    },
    {
      "title": "Kerberos configuration",
      "level": 3,
      "content": "The Samba documentation recommends a minimal Kerberos configuration, with just enough information in the [libdefaults] section to hand off the work of discovering domain details to DNS. Unfortunately, this does not work well in practice. Continuing with the example domain configuration, modify the /etc/krb5.conf file with the following contents (be sure to replace instances of INTERNAL, internal.domain.tld, SERVER1, and INTERNAL.DOMAIN.TLD with appropriate values for your network):\n\n```\n/etc/krb5.conf\n```\n\n```\n[libdefaults]\n   default_realm = INTERNAL.DOMAIN.TLD\n   dns_lookup_realm = false\n   dns_lookup_kdc = true\n\n[realms]\n   INTERNAL.DOMAIN.TLD = {\n      kdc = SERVER1.INTERNAL.DOMAIN.TLD\n      default_domain = INTERNAL.DOMAIN.TLD\n      admin_server = SERVER1.INTERNAL.DOMAIN.TLD\n   }\n   INTERNAL = {\n      kdc = SERVER1.INTERNAL.DOMAIN.TLD\n      default_domain = INTERNAL.DOMAIN.TLD\n      admin_server = SERVER1.INTERNAL.DOMAIN.TLD\n   }\n\n[domain_realm]\n    .internal.domain.tld = INTERNAL.DOMAIN.TLD\n\n[appdefaults]\n    pam = {\n        ticket_lifetime = 1d\n        renew_lifetime = 1d\n        forwardable = true\n        proxiable = false\n        minimum_uid = 1\n    }\n```\n\n"
    },
    {
      "title": "Base Samba configuration file",
      "level": 4,
      "content": "A default installation of samba does not ship with an example /etc/samba/smb.conf file. For our example domain configuration, use the following base settings (replace instances of INTERNAL and INTERNAL.DOMAIN.TLD with appropriate values for your network):\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n   workgroup = INTERNAL\n   security = ADS\n   realm = INTERNAL.DOMAIN.TLD\n\n   winbind refresh tickets = Yes\n   vfs objects = acl_xattr\n   map acl inherit = Yes\n   store dos attributes = Yes\n\n   # Allow a single, unified keytab to store obtained Kerberos tickets\n   dedicated keytab file = /etc/krb5.keytab\n   kerberos method = secrets and keytab\n\n   # Do not require that login usernames include the default domain\n   winbind use default domain = yes\n```\n\nIf you do not wish to share local printers configured in cups, then add the following to the [Global] section of the /etc/samba/smb.conf file:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[Global]\n...\n   load printers = no\n   printing = bsd\n   printcap name = /dev/null\n   disable spoolss = yes\n...\n```\n\nThe remainder of the configuration depends on whether your domain supports RFC2307 Unix/NFS Attributes. Consult with your domain administrator if unsure.\n\nBe certain that the values below do not overlap with system values, and that all users have at least the uidNubmer attribute, and that those users' PrimaryGroup has a gid attribute. Append to the following to the [Global] section of the /etc/samba/smb.conf file (replace INTERNAL with the NetBIOS domain name):\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[Global]\n...\n\n   # UID/GID mapping for local users\n   idmap config * : backend = tdb\n   idmap config * : range = 3000-7999\n\n   # UID/GID mapping for domain users\n   idmap config INTERNAL : backend = ad\n   idmap config INTERNAL : schema_mode = rfc2307\n   idmap config INTERNAL : range = 10000-999999\n   idmap config INTERNAL : unix_nss_info = yes\n\n   # Template settings for users without ''unixHomeDir'' and ''loginShell'' attributes \n   template shell = /bin/bash\n   template homedir = /home/%U\n\n   # Allow offline/cached credentials and ticket refresh\n   winbind offline logon = yes\n   winbind refresh tickets = yes\n...\n```\n\nAdditionally, if user accounts in AD have a gidNumber attribute, you can use it instead of the RID for the user's Primary Group by appending the following setting (again in the [Global] section):\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[Global]\n...\n   idmap config INTERNAL:unix_primary_group = yes\n...\n```\n\nIf your administrator has not extended the AD schema to include the RFC2307 attributes, use the following idmap configuration in the [Global] section of the /etc/samba/smb.conf file (replace INTERNAL with the NetBIOS domain name):\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[Global]\n...\n   # UID/GID mapping for local users\n   idmap config * : backend = tdb\n   idmap config * : range = 3000-7999\n\n   # UID/GID mapping for domain users\n   idmap config INTERNAL : backend = rid\n   idmap config INTERNAL : range = 10000-999999\n\n   # Template settings for users\n   template shell = /bin/bash\n   template homedir = /home/%U\n\n   # Allow offline/cached credentials and ticket refresh\n   winbind offline logon = yes\n   winbind refresh tickets = yes\n...\n```\n\n"
    },
    {
      "title": "Joining the domain",
      "level": 2,
      "content": "To join the AD domain, simply issue the following command (be sure to replace Administrator with a user that has privileges to join the AD domain).\n\n```\n# net ads join -U Administrator\n```\n\n"
    },
    {
      "title": "Start the individual Samba services",
      "level": 2,
      "content": "Enable and start the smb.service, nmb.service, and winbind.service services.\n\n"
    },
    {
      "title": "Configure NSS",
      "level": 2,
      "content": "Modify the /etc/nsswitch.conf file to allow Samba to map names to uid and gid:\n\n```\n/etc/nsswitch.conf\n```\n\n```\n...\npasswd: files winbind mymachines systemd\ngroup: files winbind mymachines systemd\n...\n```\n\n"
    },
    {
      "title": "Testing NSS",
      "level": 3,
      "content": "Verify connectivity by listing the AD domain users and groups that system is aware of:\n\n```\n# wbinfo -u\n# wbinfo -g\n```\n\nYou should get a list of AD users followed by AD groups.\n\n"
    },
    {
      "title": "Configuring PAM authentication",
      "level": 2,
      "content": "Rather than configuring options directly in the Linux-PAM configuration files, set defaults for the pam_winbind module in /etc/security/pam_winbind.conf:\n\n```\n/etc/security/pam_winbind.conf\n```\n\n```\n[Global]\n   debug = no\n   debug_state = no\n   try_first_pass = yes\n   krb5_auth = yes\n   krb5_ccache_type = FILE:/run/user/%u/krb5cc\n   cached_login = yes\n   silent = no\n   mkhomedir = yes\n```\n\nFor most services, it will be sufficient to modify only the /etc/pam.d/system-auth file. Any configuration for programs that do not include this file will also need to be modified directly. Create a backup of the /etc/pam.d/system-auth file and use the following configuration:\n\n```\n/etc/pam.d/system-auth\n```\n\n```\n#%PAM-1.0\n\nauth       required                    pam_faillock.so      preauth\n# Optionally use requisite above if you do not want to prompt for the password\n# on locked accounts.\n-auth      [success=3 default=ignore]  pam_systemd_home.so\nauth       [success=2 default=ignore]  pam_winbind.so\nauth       [success=1 default=bad]     pam_unix.so          try_first_pass nullok\nauth       [default=die]               pam_faillock.so      authfail\nauth       optional                    pam_permit.so\nauth       required                    pam_env.so\nauth       required                    pam_faillock.so      authsucc\n# If you drop the above call to pam_faillock.so the lock will be done also\n# on non-consecutive authentication failures.\n\n-account   [success=2 default=ignore]  pam_systemd_home.so\naccount    [success=1 default=ignore]  pam_winbind.so\naccount    required                    pam_unix.so\naccount    optional                    pam_permit.so\naccount    required                    pam_time.so\n\n-password  [success=2 default=ignore]  pam_systemd_home.so\npassword   [success=1 default=ignore]  pam_winbind.so\npassword   required                    pam_unix.so          try_first_pass nullok shadow sha512\npassword   optional                    pam_permit.so\n\n-session   optional                    pam_systemd_home.so\nsession    required                    pam_mkhomedir.so skel=/etc/skel/ umask=0022\nsession    required                    pam_limits.so\nsession    required                    pam_winbind.so\nsession    required                    pam_unix.so\nsession    optional                    pam_permit.so\n```\n\nIf you have other services that do not include the /etc/pam.d/system-auth file, modify the configuration to mirror all pam_unix.so entries for pam_winbind.so and change all required to sufficient. A good example is the su configuration. Create a backup of the /etc/pam.d/su file and use the following in its place:\n\n```\n/etc/pam.d/su\n```\n\n```\n#%PAM-1.0\n\nauth      sufficient  pam_rootok.so\n# Uncomment the following line to implicitly trust users in the \"wheel\" group.\n#auth     required    pam_wheel.so   trust use_uid\n# Uncomment the following line to require a user to be in the \"wheel\" group.\n#auth     required    pam_wheel.so    use_uid\nauth      sufficient  pam_winbind.so\nauth      required    pam_unix.so\naccount   sufficient  pam_winbind.so\naccount   required    pam_unix.so\nsession   sufficient  pam_winbind.so\nsession   required    pam_unix.so\n```\n\nThe above pam_winbind configuration will not use the default location of the Kerberos ticket (KRB5CCNAME), which is at /tmp/krb5cc_UID. Instead, it stores the automatically refreshed Kerberos ticket to /run/user/UID/krb5cc. Append the following to your krb5.conf to let Kerberos know your new location:\n\n```\n/etc/krb5.conf\n```\n\n```\n[libdefaults]\n   ...\n   default_ccache_name = /run/user/%{uid}/krb5cc\n   ...\n```\n\nTo test your changes, start a new console or ssh session (do not exit your existing session until you have tested thoroughly) and try to login using the AD credentials. The domain name is optional, as this was set in the Winbind configuration as 'default realm'. Please note that in the case of ssh, you will need to modify the /etc/ssh/sshd_config file to allow kerberos authentication (see below).\n\nRun klist to verify that you have received a kerberos ticket. You should see something similar to:\n\n```\n$ klist\n```\n\n```\nTicket cache: FILE:/run/user/20000/krb5cc\nDefault principal: administrator@INTERNAL.DOMAIN.TLD\n\nValid starting       Expires              Service principal\n12/25/2020 03:35:21  12/25/2020 13:35:21  krbtgt/INTERNAL.DOMAIN.TLD@INTERNAL.DOMAIN.TLD\n        renew until 12/26/2020 03:35:15\n```\n\nFinally, you should test login as both the root user and a local unprivileged user before logging out of your existing (working) session.\n\n"
    },
    {
      "title": "Old Wiki Article",
      "level": 2,
      "content": "Active Directory serves as a central location for network administration and security. It is responsible for authenticating and authorizing all users and computers within a Windows domain network, assigning and enforcing security policies for all computers in a network and installing or updating software on network computers. For example, when a user logs into a computer that is part of a Windows domain, it is Active Directory that verifies their password and specifies whether they are a system administrator or normal user. Server computers on which Active Directory is running are called domain controllers.\n\nActive Directory uses Lightweight Directory Access Protocol (LDAP) versions 2 and 3, Microsoft's version of Kerberos and DNS.\n\n"
    },
    {
      "title": "Terminology",
      "level": 3,
      "content": "If you are not familiar with Active Directory, there are a few keywords that are helpful to know.\n\n- Domain : The name used to group computers and accounts.\n- SID : Each computer that joins the domain as a member must have a unique SID or System Identifier.\n- SMB : Server Message Block.\n- NETBIOS: Network naming protocol used as an alternative to DNS. Mostly legacy, but still used in Windows Networking.\n- WINS: Windows Information Naming Service. Used for resolving Netbios names to windows hosts.\n- Winbind: Protocol for windows authentication.\n\n"
    },
    {
      "title": "Active Directory configuration",
      "level": 3,
      "content": "This section works with the default configuration of Windows Server 2012 R2.\n\n"
    },
    {
      "title": "GPO considerations",
      "level": 4,
      "content": "Digital signing is enabled by default in Windows Server, and must be enabled at both the client and server level. For certain versions of Samba, Linux clients may experience issues connecting to the domain and/or shares. It is recommended you add the following parameters to your smb.conf file:\n\n```\nclient signing = auto \nserver signing = auto\n```\n\nIf that is not successful, you can disable Digital Sign Communication (Always) in the AD group policies. In your AD Group Policy editor, locate:\n\nUnder Local policies > Security policies > Microsoft Network Server > Digital sign communication (Always) activate define this policy and use the disable radio button.\n\nIf you use Windows Server 2008 R2, you need to modify that in GPO for Default Domain Controller Policy > Computer Setting > Policies > Windows Setting > Security Setting > Local Policies > Security Option > Microsoft network client: Digitally sign communications (always).\n\nPlease note that disabling this GPO affects the security of all members of the domain.\n\n"
    },
    {
      "title": "Linux host configuration",
      "level": 3,
      "content": "The next few steps will begin the process of configuring the Host. You will need root or sudo access to complete these steps.\n\n"
    },
    {
      "title": "Installation",
      "level": 4,
      "content": "Install the following packages:\n\n- samba, see also Samba\n- pam-krb5\n- ntp or openntpd, see also NTPd or OpenNTPD\n\n"
    },
    {
      "title": "Updating DNS",
      "level": 4,
      "content": "Active Directory is heavily dependent upon DNS. You will need to update /etc/resolv.conf to use one or more of the Active Directory domain controllers:\n\n```\n/etc/resolv.conf\n```\n\n```\nnameserver <IP1>\nnameserver <IP2>\n```\n\nReplacing <IP1> and <IP2> with valid IP addresses for the AD servers. If your AD domains do not permit DNS forwarding or recursion, you may need to add additional resolvers.\n\n- The DNS entry 127.0.0.53 in the /etc/resolv.conf file refers to the local DNS resolver provided by systemd-resolved. If you have configured your DNS Servers using Network manager this step is unnecessary and can cause issues if you modify the resolv.conf as suggested.\n- If your machine dual boots Windows and Linux, you should use a different DNS hostname and netbios name for the linux configuration if both operating systems will be members of the same domain.\n\n"
    },
    {
      "title": "Configuring NTP",
      "level": 4,
      "content": "Read System time#Time synchronization to configure an NTP service.\n\nOn the NTP servers configuration, use the IP addresses for the AD servers, as they typically run NTP as a service. Alternatively, you can use other known NTP servers provided the Active directory servers sync to the same stratum.\n\nEnsure that the service is configured to sync the time automatically very early on startup.\n\n"
    },
    {
      "title": "Kerberos",
      "level": 4,
      "content": "Let us assume that your AD is named example.com. Let us further assume your AD is ruled by two domain controllers, the primary and secondary one, which are named PDC and BDC, pdc.example.com and bdc.example.com respectively. Their IP adresses will be 192.168.1.2 and 192.168.1.3 in this example. Take care to watch your syntax; upper-case is very important here.\n\n```\n/etc/krb5.conf\n```\n\n```\n[libdefaults]\n        default_realm \t= \tEXAMPLE.COM\n\tclockskew \t= \t300\n\tticket_lifetime\t=\t1d\n        forwardable     =       true\n        proxiable       =       true\n        dns_lookup_realm =      true\n        dns_lookup_kdc  =       true\n\t\n[realms]\n\tEXAMPLE.COM = {\n\t\tkdc \t= \tPDC.EXAMPLE.COM\n        kdc     =   PDC2.EXAMPLE.COM\n        admin_server = PDC.EXAMPLE.COM\n\t\tadmin_server = PDC2.EXAMPLE.COM\n        default_domain = EXAMPLE.COM\n\t}\n\t\n[domain_realm]\n        .kerberos.server = EXAMPLE.COM\n\t.example.com = EXAMPLE.COM\n\texample.com = EXAMPLE.COM\n\texample\t= EXAMPLE.COM\n\n[appdefaults]\n\tpam = {\n\tticket_lifetime \t= 1d\n\trenew_lifetime \t\t= 1d\n\tforwardable \t\t= true\n\tproxiable \t\t= false\n\tretain_after_close \t= false\n\tminimum_uid \t\t= 0\n\tdebug \t\t\t= false\n\t}\n\n[logging]\n\tdefault \t\t= FILE:/var/log/krb5libs.log\n\tkdc \t\t\t= FILE:/var/log/kdc.log\n        admin_server            = FILE:/var/log/kadmind.log\n```\n\n```\nallow_weak_crypto = true\n```\n\nNow you can query the AD domain controllers and request a kerberos ticket (uppercase is necessary):\n\n```\nkinit administrator@EXAMPLE.COM\n```\n\nYou can use any username that has rights as a Domain Administrator.\n\nRun klist to verify you did receive the token. You should see something similar to:\n\n```\n# klist\n```\n\n```\nTicket cache: FILE:/tmp/krb5cc_0\n Default principal: administrator@EXAMPLE.COM\n \n Valid starting    Expires           Service principal \n 02/04/12 21:27:47 02/05/12 07:27:42 krbtgt/EXAMPLE.COM@EXAMPLE.COM\n         renew until 02/05/12 21:27:47\n```\n\n"
    },
    {
      "title": "pam_winbind.conf",
      "level": 4,
      "content": "If you get errors stating that /etc/security/pam_winbind.conf was not found, create the file and add the following:\n\n```\n/etc/security/pam_winbind.conf\n```\n\n```\n[global]\n  debug = no\n  debug_state = no\n  try_first_pass = yes\n  krb5_auth = yes\n  krb5_ccache_type = FILE\n  cached_login = yes\n  silent = no\n  mkhomedir = yes\n```\n\nWith this setup, winbind will create user keytabs on the fly (krb5_ccache_type = FILE) at login and maintain them. You can verify this by simply running klist in a shell after logging in as an AD user but without needing to run kinit. You may need to set additional permissions on /etc/krb5.keytab eg 640 instead of 600 to get this to work (see FS#52621 for example)\n\n"
    },
    {
      "title": "Samba",
      "level": 4,
      "content": "Samba is a free software re-implementation of the SMB/CIFS networking protocol. It also includes tools for Linux machines to act as Windows networking servers and clients.\n\nIn this section, we will focus on getting Authentication to work first by editing the 'Global' section first. Later, we will go back and add shares.\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[Global]\n  netbios name = MYARCHLINUX\n  workgroup = EXAMPLE\n  realm = EXAMPLE.COM\n  server string = %h Arch Linux Host\n  security = ads\n  encrypt passwords = yes\n  password server = pdc.example.com\n  client signing = auto\n  server signing = auto\n\n  idmap config * : backend = tdb\n  idmap config * : range = 10000-20000\n\n  winbind use default domain = Yes\n  winbind enum users = Yes\n  winbind enum groups = Yes\n  winbind nested groups = Yes\n  winbind separator = +\n  winbind refresh tickets = yes\n  winbind offline logon = yes\n  winbind cache time = 300\n\n  template shell = /bin/bash\n  template homedir = /home/%D/%U\n   \n  preferred master = no\n  dns proxy = no\n  wins server = pdc.example.com\n  wins proxy = no\n\n  inherit acls = Yes\n  map acl inherit = Yes\n  acl group control = yes\n\n  load printers = no\n  debug level = 3\n  use sendfile = no\n```\n\n"
    },
    {
      "title": "Join the domain",
      "level": 4,
      "content": "You need an AD Administrator account to do this. Let us assume this is named Administrator. The command is 'net ads join'\n\n```\n# net ads join -U Administrator\n```\n\n```\nAdministrator's password: xxx\nUsing short domain name -- EXAMPLE\nJoined 'MYARCHLINUX' to realm 'EXAMPLE.COM'\n```\n\n"
    },
    {
      "title": "Starting Samba",
      "level": 4,
      "content": "Hopefully, you have not rebooted yet! Fine. If you are in an X-session, quit it, so you can test login into another console, while you are still logged in.\n\nEnable and start the individual Samba daemons smbd.service, nmbd.service, and winbindd.service.\n\nNext we will need to modify the NSSwitch configuration, which tells the Linux host how to retrieve information from various sources and in which order to do so. In this case, we are appending Active Directory as additional sources for Users, Groups, and Hosts.\n\n```\n/etc/nsswitch.conf\n```\n\n```\npasswd:            files winbind\n shadow:            files winbind\n group:             files winbind \n \n hosts:             files dns wins\n```\n\n"
    },
    {
      "title": "Testing Winbind",
      "level": 4,
      "content": "Let us check if winbind is able to query the AD. The following command should return a list of AD users:\n\n```\n# wbinfo -u\n```\n\n```\nadministrator\nguest\nkrbtgt\ntest.user\n```\n\n- Note we created an Active Directory user called 'test.user' on the domain controller\n\nWe can do the same for AD groups:\n\n```\n# wbinfo -g\n```\n\n```\ndomain computers\ndomain controllers\nschema admins\nenterprise admins\ncert publishers\ndomain admins\ndomain users\ndomain guests\ngroup policy creator owners\nras and ias servers\nallowed rodc password replication group\ndenied rodc password replication group\nread-only domain controllers\nenterprise read-only domain controllers\ndnsadmins\ndnsupdateproxy\n```\n\n"
    },
    {
      "title": "Testing nsswitch",
      "level": 4,
      "content": "To ensure that our host is able to query the domain for users and groups, we test nsswitch settings by issuing the 'getent' command.\n\nThe following output shows what a stock Arch Linux install looks like:\n\n```\n# getent passwd\n```\n\n```\nroot:x:0:0:root:/root:/bin/bash\nbin:x:1:1:bin:/bin:/bin/false\ndaemon:x:2:2:daemon:/sbin:/bin/false\nmail:x:8:12:mail:/var/spool/mail:/bin/false\nftp:x:14:11:ftp:/srv/ftp:/bin/false\nhttp:x:33:33:http:/srv/http:/bin/false\nnobody:x:99:99:nobody:/:/bin/false\ndbus:x:81:81:System message bus:/:/bin/false\nntp:x:87:87:Network Time Protocol:/var/empty:/bin/false\navahi:x:84:84:avahi:/:/bin/false\nadministrator:*:10001:10006:Administrator:/home/EXAMPLE/administrator:/bin/bash\nguest:*:10002:10007:Guest:/home/EXAMPLE/guest:/bin/bash\nkrbtgt:*:10003:10006:krbtgt:/home/EXAMPLE/krbtgt:/bin/bash\ntest.user:*:10000:10006:Test User:/home/EXAMPLE/test.user:/bin/bash\n```\n\nAnd for groups:\n\n```\n# getent group\n```\n\n```\nroot:x:0:root\nbin:x:1:root,bin,daemon\ndaemon:x:2:root,bin,daemon\nsys:x:3:root,bin\nadm:x:4:root,daemon\ntty:x:5:\ndisk:x:6:root\nlp:x:7:daemon\nmem:x:8:\nkmem:x:9:\nwheel:x:10:root\nftp:x:11:\nmail:x:12:\nuucp:x:14:\nlog:x:19:root\nutmp:x:20:\nlocate:x:21:\nrfkill:x:24:\nsmmsp:x:25:\nhttp:x:33:\ngames:x:50:\nnetwork:x:90:\nvideo:x:91:\naudio:x:92:\noptical:x:93:\nfloppy:x:94:\nstorage:x:95:\nscanner:x:96:\npower:x:98:\nnobody:x:99:\nusers:x:100:\ndbus:x:81:\nntp:x:87:\navahi:x:84:\ndomain computers:x:10008:\ndomain controllers:x:10009:\nschema admins:x:10010:administrator\nenterprise admins:x:10011:administrator\ncert publishers:x:10012:\ndomain admins:x:10013:test.user,administrator\ndomain users:x:10006:\ndomain guests:x:10007:\ngroup policy creator owners:x:10014:administrator\nras and ias servers:x:10015:\nallowed rodc password replication group:x:10016:\ndenied rodc password replication group:x:10017:krbtgt\nread-only domain controllers:x:10018:\nenterprise read-only domain controllers:x:10019:\ndnsadmins:x:10020:\ndnsupdateproxy:x:10021:\n```\n\n"
    },
    {
      "title": "Testing Samba commands",
      "level": 4,
      "content": "Try out some net commands to see if Samba can communicate with AD:\n\n```\n# net ads info\n```\n\n```\n[2012/02/05 20:21:36.473559,  0] param/loadparm.c:7599(lp_do_parameter)\n  Ignoring unknown parameter \"idmapd backend\"\nLDAP server: 192.168.1.2\nLDAP server name: PDC.example.com\nRealm: EXAMPLE.COM\nBind Path: dc=EXAMPLE,dc=COM\nLDAP port: 389\nServer time: Sun, 05 Feb 2012 20:21:33 CST\nKDC server: 192.168.1.2\nServer time offset: -3\n```\n\n```\n# net ads lookup\n```\n\n```\n[2012/02/05 20:22:39.298823,  0] param/loadparm.c:7599(lp_do_parameter)\n  Ignoring unknown parameter \"idmapd backend\"\nInformation for Domain Controller: 192.168.1.2\n\nResponse Type: LOGON_SAM_LOGON_RESPONSE_EX\nGUID: 2a098512-4c9f-4fe4-ac22-8f9231fabbad\nFlags:\n        Is a PDC:                                   yes\n        Is a GC of the forest:                      yes\n        Is an LDAP server:                          yes\n        Supports DS:                                yes\n        Is running a KDC:                           yes\n        Is running time services:                   yes\n        Is the closest DC:                          yes\n        Is writable:                                yes\n        Has a hardware clock:                       yes\n        Is a non-domain NC serviced by LDAP server: no\n        Is NT6 DC that has some secrets:            no\n        Is NT6 DC that has all secrets:             yes\nForest:                 example.com\nDomain:                 example.com\nDomain Controller:      PDC.example.com\nPre-Win2k Domain:       EXAMPLE\nPre-Win2k Hostname:     PDC\nServer Site Name :              Office\nClient Site Name :              Office\nNT Version: 5\nLMNT Token: ffff\nLM20 Token: ffff\n```\n\n```\n# net ads status -U administrator%password | less\n```\n\n```\nobjectClass: top\nobjectClass: person\nobjectClass: organizationalPerson\nobjectClass: user\nobjectClass: computer\ncn: myarchlinux\ndistinguishedName: CN=myarchlinux,CN=Computers,DC=leafscale,DC=inc\ninstanceType: 4\nwhenCreated: 20120206043413.0Z\nwhenChanged: 20120206043414.0Z\nuSNCreated: 16556\nuSNChanged: 16563\nname: myarchlinux\nobjectGUID: 2c24029c-8422-42b2-83b3-a255b9cb41b3\nuserAccountControl: 69632\nbadPwdCount: 0\ncodePage: 0\ncountryCode: 0\nbadPasswordTime: 0\nlastLogoff: 0\nlastLogon: 129729780312632000\nlocalPolicyFlags: 0\npwdLastSet: 129729764538848000\nprimaryGroupID: 515\nobjectSid: S-1-5-21-719106045-3766251393-3909931865-1105\n...<snip>...\n```\n\n"
    },
    {
      "title": "Configuring PAM",
      "level": 3,
      "content": "Now we will change various rules in PAM to allow Active Directory users to use the system for things like login and sudo access. When changing the rules, note the order of these items and whether they are marked as required or sufficient is critical to things working as expected. You should not deviate from these rules unless you know how to write PAM rules.\n\nIn case of logins, PAM should first ask for AD accounts, and for local accounts if no matching AD account was found. Therefore, we add entries to include pam_winbind.so into the authentication process.\n\nThe Arch Linux PAM configuration keeps the central auth process in /etc/pam.d/system-auth. Starting with the stock configuration from pambase, change it like this:\n\n"
    },
    {
      "title": "system-auth",
      "level": 4,
      "content": "Find the line:\n\n```\nauth required pam_unix.so ...\n```\n\nDelete it, and replace with:\n\n```\nauth [success=1 default=ignore] pam_localuser.so\nauth [success=2 default=die] pam_winbind.so\nauth [success=1 default=die] pam_unix.so nullok\nauth requisite pam_deny.so\n```\n\nFind the line:\n\n```\naccount required pam_unix.so\n```\n\nKeep it, and add this below:\n\n```\naccount [success=1 default=ignore] pam_localuser.so\naccount required pam_winbind.so\n```\n\nFind the line:\n\n```\npassword required pam_unix.so ...\n```\n\nDelete it, and replace with:\n\n```\npassword [success=1 default=ignore] pam_localuser.so\npassword [success=2 default=die] pam_winbind.so\npassword [success=1 default=die] pam_unix.so sha512 shadow\npassword requisite pam_deny.so\n```\n\nFind the line:\n\n```\nsession required pam_unix.so\n```\n\nKeep it, and add this line immediately above it:\n\n```\nsession required pam_mkhomedir.so skel=/etc/skel/ umask=0022\n```\n\nBelow the pam_unix line, add these:\n\n```\nsession [success=1 default=ignore] pam_localuser.so\nsession required pam_winbind.so\n```\n\n"
    },
    {
      "title": "passwd",
      "level": 4,
      "content": "In order for logged-in Active Directory users to be able to change their passwords with the 'passwd' command, the file /etc/pam.d/passwd must include the information from system-auth.\n\nFind the line:\n\n```\npassword required pam_unix.so sha512 shadow nullok\n```\n\nDelete it, and replace with:\n\n```\npassword include system-auth\n```\n\n"
    },
    {
      "title": "Testing login",
      "level": 4,
      "content": "Now, start a new console session (or ssh) and try to login using the AD credentials. The domain name is optional, as this was set in the Winbind configuration as 'default realm'. Please note that in the case of ssh, you will need to modify the /etc/ssh/sshd_config file to allow kerberos authentication (KerberosAuthentication yes).\n\n```\ntest.user\nEXAMPLE+test.user\n```\n\nBoth should work. You should notice that /home/example/test.user will be automatically created. Log into another session using an linux account. Check that you still be able to log in as root - but keep in mind to be logged in as root in at least one session!\n\n"
    },
    {
      "title": "Configuring Shares",
      "level": 3,
      "content": "Earlier we skipped configuration of the shares. Now that things are working, go back to /etc/samba/smb.conf, and add the exports for the host that you want available on the windows network.\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[MyShare]\n  comment = Example Share\n  path = /srv/exports/myshare\n  read only = no\n  browseable = yes\n  valid users = @NETWORK+\"Domain Admins\" NETWORK+test.user\n```\n\nIn the above example, the keyword NETWORK is to be used. Do not mistakenly substitute this with your domain name. For adding groups, prepend the '@' symbol to the group. Note that Domain Admins is encapsulated in quotes so Samba correctly parses it when reading the configuration file.\n\n"
    },
    {
      "title": "Adding a machine keytab file and activating password-free kerberized ssh to the machine",
      "level": 3,
      "content": "This explains how to generate a machine keytab file which you will need e.g. to enable password-free kerberized ssh to your machine from other machines in the domain. The scenario in mind is that you have a bunch of systems in your domain and you just added a server/workstation using the above description to your domain onto which a lot of users need to ssh in order to work - e.g. GPU workstation or an OpenMP compute node, etc. In this case you might not want to type your password every time you log in. On the other hand the key authentication used by many users in this case can not give you the necessary credentials to e.g. mount kerberized NFSv4 shares. So this will help you to enable password-free logins from your clients to the machine in question using kerberos ticket forwarding.\n\n"
    },
    {
      "title": "Creating a machine key tab file",
      "level": 4,
      "content": "run 'net ads keytab create -U administrator' as root to create a machine keytab file in /etc/krb5.keytab. It will prompt you with a warning that we need to enable keytab authentication in our configuration file, so we will do that in the next step. In my case it had problems when a key tab file is already in place - the command just did not come back it hang ... In that case you should rename the existing /etc/krb5.keytab and run the command again - it should work now.\n\n```\n# net ads keytab create -U administrator\n```\n\nverify the content of your keytab by running:\n\n```\n# klist -k /etc/krb5.keytab\n```\n\n```\nKeytab name: FILE:/etc/krb5.keytab\nKVNO Principal\n---- --------------------------------------------------------------------------\n   4 host/myarchlinux.example.com@EXAMPLE.COM\n   4 host/myarchlinux.example.com@EXAMPLE.COM\n   4 host/myarchlinux.example.com@EXAMPLE.COM\n   4 host/myarchlinux.example.com@EXAMPLE.COM\n   4 host/myarchlinux.example.com@EXAMPLE.COM\n   4 host/MYARCHLINUX@EXAMPLE.COM\n   4 host/MYARCHLINUX@EXAMPLE.COM\n   4 host/MYARCHLINUX@EXAMPLE.COM\n   4 host/MYARCHLINUX@EXAMPLE.COM\n   4 host/MYARCHLINUX@EXAMPLE.COM\n   4 MYARCHLINUX$@EXAMPLE.COM\n   4 MYARCHLINUX$@EXAMPLE.COM\n   4 MYARCHLINUX$@EXAMPLE.COM\n   4 MYARCHLINUX$@EXAMPLE.COM\n   4 MYARCHLINUX$@EXAMPLE.COM\n```\n\n"
    },
    {
      "title": "Enabling keytab authentication",
      "level": 4,
      "content": "Now you need to tell winbind to use the file by adding these lines to the /etc/samba/smb.conf:\n\n```\nkerberos method = secrets and keytab\n dedicated keytab file = /etc/krb5.keytab\n```\n\nIt should look something like this:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[Global]\n  netbios name = MYARCHLINUX\n  workgroup = EXAMPLE\n  realm = EXAMPLE.COM\n  server string = %h Arch Linux Host\n  security = ads\n  encrypt passwords = yes\n  password server = pdc.example.com\n  kerberos method = secrets and keytab\n  dedicated keytab file = /etc/krb5.keytab\n\n  idmap config * : backend = tdb\n  idmap config * : range = 10000-20000\n\n  winbind use default domain = Yes\n  winbind enum users = Yes\n  winbind enum groups = Yes\n  winbind nested groups = Yes\n  winbind separator = +\n  winbind refresh tickets = yes\n\n  template shell = /bin/bash\n  template homedir = /home/%D/%U\n   \n  preferred master = no\n  dns proxy = no\n  wins server = pdc.example.com\n  wins proxy = no\n\n  inherit acls = Yes\n  map acl inherit = Yes\n  acl group control = yes\n\n  load printers = no\n  debug level = 3\n  use sendfile = no\n```\n\nRestart the winbindd.service\n\nCheck if everything works by getting a machine ticket for your system by running\n\n```\n# kinit MYARCHLINUX$ -kt /etc/krb5.keytab\n```\n\nThis should not give you any feedback but running 'klist' should show you sth like:\n\n```\n# klist\n```\n\n```\nTicket cache: FILE:/tmp/krb5cc_0\n Default principal: MYARCHLINUX$@EXAMPLE.COM\n \n Valid starting    Expires           Service principal \n 02/04/12 21:27:47 02/05/12 07:27:42 krbtgt/EXAMPLE.COM@EXAMPLE.COM\n         renew until 02/05/12 21:27:47\n```\n\nSome common mistakes here are a) forgetting the trailing $ or b) ignoring case sensitivity - it needs to look exactly like the entry in the keytab (usually you cannot to much wrong with all capital)\n\n"
    },
    {
      "title": "Preparing sshd on server",
      "level": 4,
      "content": "All we need to do is add some options to our sshd_config and restart the sshd.service.\n\nEdit /etc/ssh/sshd_config to look like this in the appropriate places:\n\n```\n# /etc/ssh/sshd_config\n```\n\n```\n...\n\n# Change to no to disable s/key passwords\nChallengeResponseAuthentication no\n\n# Kerberos options\nKerberosAuthentication yes\n#KerberosOrLocalPasswd yes\nKerberosTicketCleanup yes\nKerberosGetAFSToken yes\n\n# GSSAPI options\nGSSAPIAuthentication yes\nGSSAPICleanupCredentials yes\n\n...\n```\n\nRestart the sshd.service.\n\n"
    },
    {
      "title": "Adding necessary options on client",
      "level": 4,
      "content": "First we need to make sure that the tickets on our client are forwardable. This is usually standard but we better check anyways. You have to look for the forwardable option and set it to 'true' in the Kerberos configuration file /etc/krb5.conf\n\n```\nforwardable     =       true\n```\n\nSecondly we need to add the options\n\n```\nGSSAPIAuthentication yes\n GSSAPIDelegateCredentials yes\n```\n\nto our .ssh/config file to tell ssh to use this options - alternatively they can be invoked using the -o options directly in the ssh command (see ssh(1) for help).\n\n"
    },
    {
      "title": "Testing the setup",
      "level": 4,
      "content": "On Client:\n\nmake sure you have a valid ticket - if in doubt run 'kinit'\n\nthen use ssh to connect to you machine\n\n```\nssh myarchlinux.example.com\n```\n\nyou should get connected without needing to enter your password.\n\nif you have key authentication additionally activated then you should perform\n\n```\nssh -v myarchlinux.example.com\n```\n\nto see which authentication method it actually uses.\n\nFor debugging you can enable DEBUG3 on the server and look into the journal using journalctl.\n\n"
    },
    {
      "title": "Nifty fine-tuning for complete password-free kerberos handling.",
      "level": 4,
      "content": "In case your clients are not using domain accounts on their local machines (for whatever reason) it can be hard to actually teach them to kinit before ssh to the workstation. Therefore I came up with a nice workaround:\n\n"
    },
    {
      "title": "Generating user Keytabs which are accepted by AD",
      "level": 3,
      "content": "On a system let the user run:\n\n```\nktutil\naddent -password -p username@EXAMPLE.COM -k 1 -e RC4-HMAC\n- enter password for username -\nwkt username.keytab\nq\n```\n\nNow test the file by invoking:\n\n```\nkinit username@EXAMPLE.COM -kt username.keytab\n```\n\nIt should not promt you to give your password nor should it give any other feedback. If it worked you are basically done - just put the line above into your ~./bashrc - you can now get kerberos tickets without typing a password and with that you can connect to your workstation without typing a password while being completely kerberized and able to authenticate against NFSv4 and CIFS via tickets - pretty neat.\n\n"
    },
    {
      "title": "Nice to know",
      "level": 4,
      "content": "The file 'username.keytab' is not machinespecific and can therefore be copied around. E.g. we created the files on a linux machine and copied them to our Mac clients as the commands on Macs are different ...\n\n"
    },
    {
      "title": "See also",
      "level": 3,
      "content": "- Wikipedia - Active Directory\n- Wikipedia - Samba\n- Wikipedia - Kerberos\n- Samba - Documentation\n- Directory on Samba Wiki\n- Samba Wiki - Samba, Active Directory & LDAP\n- smb.conf(5)\n\n"
    },
    {
      "title": "Using SSSD",
      "level": 4,
      "content": "sssd can be used instead of Samba to integrate with AD. See SSSD documentation.\n\n"
    },
    {
      "title": "Commercial solutions",
      "level": 4,
      "content": "- Centrify\n- Likewise\n\n"
    },
    {
      "title": "OpenSource version",
      "level": 4,
      "content": "- PowerBroker Identity Services Open: formerly Likewise acquired by BeyondTrust\n- Centrify Express for Linux\n\n"
    }
  ]
}