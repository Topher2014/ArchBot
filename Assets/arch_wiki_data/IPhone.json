{
  "title": "IPhone",
  "url": "https://wiki.archlinux.org/title/IPhone",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Audiobook\n- iPhone tethering\n- iPod\n\niOS is an operating system created by Apple Inc. for use in the iPhone series of smartphones. Although connecting iOS devices to Linux is not supported by Apple, the libimobiledevice project provides libraries and tools to connect and transfer data between iOS devices and Linux machines.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the libimobiledevice package.\n\n"
    },
    {
      "title": "Usbmux daemon",
      "level": 3,
      "content": "The libimobiledevice package depends on usbmuxd, which is responsible for performing the low-level connection to iOS devices. The usbmuxd package also includes an udev rule that automatically starts and stops the daemon whenever a device is connected or disconnected.\n\nConnect the iOS device and verify that usbmuxd.service is automatically started.\n\n```\n$ systemctl status usbmuxd.service\n```\n\n```\n...\nActive: active (running) since Sun 2020-01-19 19:23:18 UTC; 22s ago\n...\n```\n\n"
    },
    {
      "title": "Pairing",
      "level": 3,
      "content": "After connecting your iOS device and unlocking the screen, you should be presented with a \"Trust This Computer?\" popup on the device. Tap \"Trust\", then enter your device passcode to complete the pairing process.\n\nIf you do not see the popup, you can start the pairing process manually. Connect the device, unlock the screen and run:\n\n```\n$ idevicepair pair\n```\n\n```\nSUCCESS: Paired with device d8e8fca2dc0f896fd7cb4cb0031ba249\n```\n\nIf you have multiple iOS devices connected --udid ios_udid parameter can be passed to target specific device.\n\nYou can verify the pairing has succeeded by running:\n\n```\n$ idevicepair validate\n```\n\n```\nSUCCESS: Validated pairing with device 00008030-001D3562367A402E\n```\n\n"
    },
    {
      "title": "Transferring data",
      "level": 3,
      "content": "After pairing, iOS exposes two different filesystems to the computer. One is the media filesystem, containing the device's photos, videos and music. The second filesystem is used for sharing files directly to certain apps. This is sometimes called \"iTunes document sharing\". [1] [2]\n\n"
    },
    {
      "title": "Using a graphical file manager",
      "level": 4,
      "content": "File managers which use GVFS can interact with iOS devices. To access the media filesystem, install gvfs-gphoto2. To access the app document filesystem, install gvfs-afc.\n\nDolphin support for iOS devices is included in the kio-extras package, which is already a dependency for Dolphin. [3]\n\n"
    },
    {
      "title": "Manual mounting",
      "level": 4,
      "content": "Install the ifuse package. You can then run the following command to mount your iPhone's media filesystem:\n\n```\n$ ifuse mountpoint\n```\n\nYou can use this to access the device's photos inside mountpoint/DCIM.\n\nTo access an app's document filesystem, first you need to identify the app:\n\n```\n$ ifuse --list-apps\n```\n\n```\n\"CFBundleIdentifier\",\"CFBundleVersion\",\"CFBundleDisplayName\"\n\"org.videolan.vlc-ios\",\"432\",\"VLC\"\n\"org.wikimedia.wikipedia\",\"1932\",\"Wikipedia\"\n\"org.kde.kdeconnect\",\"2\",\"KDE Connect\"\n[...]\n```\n\nYou can then mount an application's files using:\n\n```\n$ ifuse --documents APPID mountpoint\n```\n\nWhere APPID is the bundle identifier of the desired application, such as org.videolan.vlc-ios.\n\nAfter you're done, unmount the filesystem:\n\n```\n$ fusermount -u mountpoint\n```\n\n"
    },
    {
      "title": "Importing videos and pictures",
      "level": 2,
      "content": "Both photos and videos can typically be found in <mountpoint>/DCIM/100APPLE.\n\niOS tends to use formats that are not as well supported, but it can be configured to use formats with better compatibility.[4] Furthermore, you may wish to convert media that was already saved in one of the less compatible Apple formats.\n\n"
    },
    {
      "title": "ifuse fails to mount application directories",
      "level": 3,
      "content": "When using ifuse to mount application directories, you may run into the following error when trying to list the contents of the mountpoint:\n\n```\n\".\": Input/output error (os error 5)\n```\n\nThis is a known issue that has been fixed in the current development version of libimobiledevice, but has not been released in a stable version yet. A workaround is to install libimobiledevice-gitAUR.\n\n"
    },
    {
      "title": "Device cannot be redirected to a virtual machine",
      "level": 3,
      "content": "If you use a Windows virtual machine to sync your device via USB, trying to redirect it may fail with a \"device is in use by another application\" message. This is due to usbmuxd.service starting automatically when the device is connected. This can be solved by either stopping or masking usbmuxd.service.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Ubuntu documentation for iPhone and iPod Touch (not updated since 2014)\n\n"
    }
  ]
}