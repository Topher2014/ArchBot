{
  "title": "Links",
  "url": "https://wiki.archlinux.org/title/Links",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "ELinks is an advanced and well-established feature-rich text mode web (HTTP/FTP/...) browser. ELinks can render both frames and tables, is highly customizable and can be extended via Lua or Guile scripts. It features tabs and some support for CSS.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the elinks package.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "See elinks(1).\n\n"
    },
    {
      "title": "Navigation",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nNavigating the web with a text browser is more or less the same as a graphical browser, just without the 'distractions'. Once you have started elinks, you can press g and type in the web page you would like to request. Then you can navigate the page using arrow keys to navigate by line, the space bar to navigate by page, or the j and k keys to navigate by link.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "ELinks provides to two menus, accessible through ELinks, to customize options and keybinds respectively.\n\nIt is recommended to use these tools as opposed to hand-editing the configuration files (which are placed in ~/.elinks). It is both much easier and safer this way.\n\nBy default, the o key opens the option manager and the k key the keybind-manager.\n\n"
    },
    {
      "title": "JavaScript (sort of) support",
      "level": 3,
      "content": "ELinks has an experimental feature called ECMAScript which is a form of JavaScript. Currently, the repo package does not build with this, but a simple modification to the PKGBUILD can provide it.\n\n1. Add js128 and something that provides xxd such as vim to the depends array.\n1. Add the following to the arch-meson bit in the package function: -D spidermonkey=true \\ #\n\nOnce built, it must be enabled in elinks either by navigating to the options section or directly modifying ~/.config/elinks/elinks.conf to contain: set ecmascript.enable = 1\n\nECMAScript is not perfect and may not provide full JavaScript functionality.\n\n"
    },
    {
      "title": "Defining URL-handlers",
      "level": 3,
      "content": "ELinks is capable of using external programs for various tasks,\n\nDefining URL-handlers through the option menu can be a little confusing at first, but once you get it, it is fine.\n\nTo do this, go into the option manager and navigate to MIME. All the submenus have Info pages to help you.\n\nThis is one of the few cases where it might be easier just to edit the configuration file.\n\nFor example, to get ELinks to automatically launch your image-viewer when you click on a JPEG file, you can add the following to your ~/.elinks/elinks.conf file,\n\n```\n~/.elinks/elinks.conf\n```\n\n```\nset mime.extension.jpg=\"image/jpeg\"\nset mime.extension.jpeg=\"image/jpeg\"\nset mime.extension.png=\"image/png\"\nset mime.extension.gif=\"image/gif\"\nset mime.extension.bmp=\"image/bmp\"\n\nset mime.handler.image_viewer.unix.ask = 1\nset mime.handler.image_viewer.unix-xwin.ask = 0\n\nset mime.handler.image_viewer.unix.block = 1\nset mime.handler.image_viewer.unix-xwin.block = 0\n\nset mime.handler.image_viewer.unix.program = \"pictureviewer %\"\nset mime.handler.image_viewer.unix-xwin.program = \"pictureviewer %\"\n\nset mime.type.image.jpg = \"image_viewer\"\nset mime.type.image.jpeg = \"image_viewer\"\nset mime.type.image.png = \"image_viewer\"\nset mime.type.image.gif = \"image_viewer\"\nset mime.type.image.bmp = \"image_viewer\"\n```\n\n"
    },
    {
      "title": "Tor usage",
      "level": 3,
      "content": "ELinks does not support using a SOCKS proxy directly. Alternatives are to either invoke ELinks through torsocks elinks, or install the privoxy package for forwarding to Tor's SOCKS proxy, first by adding the following line to your /etc/privoxy/config:\n\n```\nforward-socks5 / localhost:9050 .\n```\n\nRestart privoxy.service, then enter the following lines to your ~/.elinks/elinks.conf:\n\n```\nset protocol.http.proxy.host = \"127.0.0.1:8118\"\nset protocol.https.proxy.host = \"127.0.0.1:8118\"\n```\n\nNote: **9050** \n\n"
    },
    {
      "title": "Passing URL's to external commands",
      "level": 3,
      "content": "You can define commands which ELinks will pass the current URL to.\n\nTo do this, go into the options menu, navigate under Document, then to URI-passing. Then press a to add a new command name. Then navigate to the new command name and press e to edit. Type in the name of command, enter and save.\n\nAssuming the command \"tab-external-command\" is mapped to KEY, whenever you press KEY, a menu containing your commands will appear. Select the one you want, and ELinks passes the current URL to that command.\n\n"
    },
    {
      "title": "Saving link to the X clipboard",
      "level": 4,
      "content": "```\necho -n %c | xclip -i\n```\n\n"
    },
    {
      "title": "Passing YouTube-links through external player",
      "level": 4,
      "content": "For strictly YouTube-links, mpv has built-in support. Just use the following:\n\n```\nmpv %c\n```\n\nFor a more general approach that can handle many 'tube' sites, you will need youtube-dlAUR. Then add the following command,\n\n```\nyoutube-dl -o - %c | mplayer -\n```\n\n"
    },
    {
      "title": "ELinks froze and I cannot start it without it freezing again",
      "level": 3,
      "content": "By default, every time you start ELinks you are connecting to an existing instance. Thus, if that instance freezes, all current and future instances will freeze as well.\n\nYou can prevent ELinks from connecting to an existing instance by starting it like so:\n\n```\n$ elinks -no-connect\n```\n\nIf this happens a lot, you might consider making this your default startup by making an alias in your shell:\n\n```\nalias elinks=\"elinks -no-connect\"\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official web site\n- Howto: Use elinks like a pro\n\n"
    }
  ]
}