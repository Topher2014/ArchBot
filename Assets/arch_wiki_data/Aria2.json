{
  "title": "Aria2",
  "url": "https://wiki.archlinux.org/title/Aria2",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "From the project home page:\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the aria2 package.\n\nTo use aria2 as a daemon, you can write a systemd user unit.\n\n"
    },
    {
      "title": "aria2.conf",
      "level": 3,
      "content": "aria2 looks at $XDG_CONFIG_HOME/aria2/aria2.conf for a set of global configuration options by default. This behavior can be modified with the --conf-path switch:\n\nThe following example downloads aria2.example.rar using the options specified in the configuration file /file/aria2.rapidshare\n\n```\n$ aria2c --conf-path=/file/aria2.rapidshare http://rapidshare.com/files/12345678/aria2.example.rar\n```\n\nIf $XDG_CONFIG_HOME/aria2/aria2.conf exists and the options specified in /file/aria2.rapidshare are desired, the --no-conf switch must be appended to the command:\n\nThe following example does not use the default configuration file and downloads aria2.example.rar using the options specified in the configuration file /file/aria2.rapidshare\n\n```\n$ aria2c --no-conf --conf-path=/file/aria2.rapidshare http://rapidshare.com/files/12345678/aria2.example.rar\n```\n\nIf $XDG_CONFIG_HOME/aria2/aria2.conf does not yet exist and you wish to simplify the management of configuration options:\n\n```\n$ touch $XDG_CONFIG_HOME/aria2/aria2.conf\n```\n\n"
    },
    {
      "title": "Example aria2.conf",
      "level": 3,
      "content": "```\ncontinue\ndir=${HOME}/Desktop\nfile-allocation=none\ninput-file=${HOME}/.aria2/input.conf\nlog-level=warn\nmax-connection-per-server=4\nmin-split-size=5M\non-download-complete=exit\n```\n\nThis is essentially the same as if running the following:\n\n```\n$ aria2c --dir=${HOME}/Desktop --file-allocation=none --input-file=${HOME}/.aria2/input.conf --on-download-complete=exit --log-level=warn FILE\n```\n\n"
    },
    {
      "title": "Option details",
      "level": 4,
      "content": "- continue: Continue downloading a partially downloaded file if a corresponding control file exists.\n- dir=${HOME}/Desktop: Store the downloaded file(s) in ~/Desktop.\n- file-allocation=none: Do not pre-allocate disk space before downloading begins. (Default: prealloc) 1\n- input-file=${HOME}/.aria2/input.conf: Download a list of line, or TAB separated URIs found in ~/.aria2/input.conf\n- log-level=warn: Set log level to output warnings and errors only. (Default: debug)\n- max-connection-per-server=4: Set a maximum of four (4) connections to each server per file. (Default: 1)\n- min-split-size=5M: Only split the file if the size is larger than 2*5MB = 10MB. (Default: 20M)\n- on-download-complete=exit: Run the exit command and exit the shell once the download session is complete.\n\nDownload aria2-1.10.0.tar.bz2 from two separate sources to ~/Desktop before merging as aria2-1.10.0.tar.bz2\n\n```\nhttp://aria2.net/files/stable/aria2-1.10.0/aria2-1.10.0.tar.bz2    http://sourceforge.net/projects/aria2/files/stable/aria2-1.10.0/aria2-1.10.0.tar.bz2\n```\n\nDownload aria2-1.9.5.tar.bz2 and save to /file/old as aria2.old.tar.bz2\n\n```\nhttp://aria2.net/files/stable/aria2-1.9.5/aria2-1.9.5.tar.bz2\n  dir=/file/old\n  out=aria2.old.tar.bz2\n```\n\nDownload aria2-1.10.0.tar.bz2 and save to ~/Desktop as aria2.new.tar.bz2\n\n```\nhttp://aria2.net/files/stable/aria2-1.10.0/aria2-1.10.0.tar.bz2\n  out=aria2.new.tar.bz2\n```\n\n"
    },
    {
      "title": "Additional notes",
      "level": 4,
      "content": "1 file-allocation=falloc: Recommended for newer file systems such as ext4 (with extents support), btrfs or XFS as it allocates large files (GB) almost instantly. Do not use falloc with legacy file systems such as ext3 as prealloc consumes approximately the same amount of time as standard allocation would while locking the aria2 process from proceeding to download.\n\n"
    },
    {
      "title": "Example aria2.rapidshare",
      "level": 3,
      "content": "```\nhttp-user=USER_NAME\nhttp-passwd=PASSWORD\nallow-overwrite=true\ndir=/file/Downloads\nfile-allocation=falloc\nenable-http-pipelining=true\ninput-file=/file/input.rapidshare\nlog-level=error\nmax-connection-per-server=2\nsummary-interval=120\n```\n\n"
    },
    {
      "title": "Option details",
      "level": 4,
      "content": "- http-user=USER_NAME: Set HTTP username as USER_NAME for password-protected logins. This affects all URIs.\n- http-passwd=PASSWORD: Set HTTP password as PASSWORD for password-protected logins. This affects all URIs.\n- allow-overwrite=true: Restart download if a corresponding control file does not exist. (Default: false)\n- dir=/file/Downloads: Store the downloaded file(s) in /file/Downloads.\n- file-allocation=falloc: Call posix_fallocate(3) to allocate disk space before downloading begins. (Default: prealloc)\n- enable-http-pipelining=true: Enable HTTP/1.1 pipelining to overcome network latency and to reduce network load. (Default: false)\n- input-file=/file/input.rapidshare: Download a list of single line of TAB separated URIs found in /file/input.rapidshare\n- log-level=error: Set log level to output errors only. (Default: debug)\n- max-connection-per-server=2: Set a maximum of two (2) connections to each server per file. (Default: 1)\n- summary-interval=120: Output download progress summary every 120 seconds. (Default: 60) 2\n\n"
    },
    {
      "title": "Additional notes",
      "level": 4,
      "content": "- Because aria2.rapidshare the contains a username and password, it is advisable to set permissions on the file to 600, or similar.\n\n```\n$ cd /file\n$ chmod 600 /file/aria2.rapidshare\n$ ls -l\ntotal 128M\n-rw------- 1 arch users  167 Aug 20 00:00 aria2.rapidshare\n```\n\n2 summary-interval=0: Suppresses download progress summary output and may improve overall performance. Logs will continue to be output according to the value specified in the log-level option.\n\n"
    },
    {
      "title": "Example aria2.bittorrent",
      "level": 3,
      "content": "```\nbt-seed-unverified\nmax-overall-upload-limit=1M\nmax-upload-limit=128K\nseed-ratio=5.0\nseed-time=240\n```\n\n"
    },
    {
      "title": "Option details",
      "level": 4,
      "content": "- bt-seed-unverified=false: Do not check the hash of the file(s) before seeding. (Default: true)\n- max-overall-upload-limit=1M: Set maximum overall upload speed to 1MB/sec. (Default: 0)\n- max-upload-limit=128K: Set maximum upload speed per torrent to 128K/sec. (Default: 0)\n- seed-ratio=5.0: Seed completed torrents until share ratio reaches 5.0. (Default: 1.0)\n- seed-time=240: Seed completed torrents for 240 minutes.\n\n"
    },
    {
      "title": "Example aria2.daemon",
      "level": 3,
      "content": "This configuration can be used to start aria2 as a service. It can be used in conjunction with several of the frontends listed below. Note that rpc-user and rpc-pass are deprecated, but most frontends have not been ported to the new authentication yet. Do not forget to change user, password and Download directory.\n\n```\ncontinue\ndaemon=true\ndir=/home/aria2/Downloads\nfile-allocation=falloc\nlog-level=warn\nmax-connection-per-server=4\nmax-concurrent-downloads=3\nmax-overall-download-limit=0\nmin-split-size=5M\nenable-http-pipelining=true\n\nenable-rpc=true\nrpc-listen-all=true\nrpc-secret=secret\n```\n\n"
    },
    {
      "title": "Web UIs",
      "level": 3,
      "content": "- Webui — Html frontend for aria2.\n\n- aria2rpc — Command line tool for connecting to a remote instance of aria2c. If aria2c is installed it can be found under /usr/share/doc/aria2/xmlrpc/aria2rpc.\n\n- AriaNg — Pure HTML frontend for aria2. (There is also a desktop client)\n\n"
    },
    {
      "title": "Other UIs",
      "level": 3,
      "content": "Note: **do not need** \n\n- aria2fe — A GUI for the CLI-based aria2 download utility.\n\n- Persepolis — Graphical front-end for aria2 download manager with lots of features. Supports HTTP and FTP.\n\n- uGet — Feature-rich GTK/CLI download manager which can use aria2 as a back-end by enabling a built-in plugin.\n\n- Motrix — Full-featured download manager that supports downloading HTTP, FTP, BitTorrent, Magnet based on aria2\n\n"
    },
    {
      "title": "Download the packages without installing them",
      "level": 3,
      "content": "Just use the command below:\n\n```\n# pacman -Sp packages | aria2c -i -\n```\n\npacman -Sp lists the URLs of the packages on stdout, instead of downloading them, then | pipes it to the next command. Finally, the -i in aria2c -i - switch to aria2c means that the URLs for files to be downloaded should be read from the file specified, but if - is passed, then read the URLs from stdin.\n\n"
    },
    {
      "title": "pacman XferCommand",
      "level": 3,
      "content": "See pacman/Tips and tricks#aria2.\n\n"
    },
    {
      "title": "Changing the User Agent",
      "level": 3,
      "content": "Some sites may filter the requests based on your User Agent, since aria2 is not a well known downloader, it may be good to use a most known downloader or browser as the Aria's User Agent. Just use the -U option like this:\n\n```\n$ aria2c -UWget http://some-url-to-download/file.xyz\n```\n\nYou can use whatever you want, like -UMozilla/5.0 and so on.\n\n"
    },
    {
      "title": "Using aria2 with makepkg",
      "level": 3,
      "content": "You can use aria2 instead of curl to download source files, just change the DLAGENTS variable as follows:\n\n```\n/etc/makepkg.conf\n```\n\n```\n[...]\nDLAGENTS=('ftp::/usr/bin/aria2c -UWget -s4 -x4 %u -o %o --follow-metalink=mem'\n          'http::/usr/bin/aria2c -UWget -s4 -x4 %u -o %o --follow-metalink=mem'\n          'https::/usr/bin/aria2c -UWget -s4 -x4 %u -o %o --follow-metalink=mem'\n          'rsync::/usr/bin/rsync --no-motd -z %u %o'\n          'scp::/usr/bin/scp -C %u %o')\n[...]\n```\n\n"
    },
    {
      "title": "Using aria2 as a Daemon",
      "level": 3,
      "content": "To use aria2 as a daemon, you should write a systemd user unit. For example:\n\n```\n~/.config/systemd/user/aria2cd.service\n```\n\n```\n[Unit]\nDescription=aria2 Daemon\n\n[Service]\nExecStart=/usr/bin/aria2c --conf-path=/path/to/conf\n\n[Install]\nWantedBy=default.target\n```\n\n#Example aria2.daemon shows an example configuration file.\n\n"
    },
    {
      "title": "Seed a torrent with aria2",
      "level": 3,
      "content": "To seed an already downloaded torrent, use the --check-integrity option:\n\n```\n$ aria2c --check-integrity=true --seed-ratio=0.0 --dir=\"/path/to/iso\" \"/path/to/torrent/archlinux-2020.03.01-x86_64.iso.torrent\"\n```\n\nSpecifying --seed-ratio=0.0 will seed the file forever.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- aria2 manual - Official site\n- aria2 usage examples - Official site\n\n"
    }
  ]
}