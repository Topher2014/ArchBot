{
  "title": "GNOME tips",
  "url": "https://wiki.archlinux.org/title/GNOME_tips",
  "sections": [
    {
      "title": "Turn on NumLock on login",
      "level": 3,
      "content": "See Activating numlock on bootup#GNOME\n\n"
    },
    {
      "title": "Hotkey alternatives",
      "level": 3,
      "content": "A lot of hotkeys can be changed via GNOME Settings. For example, to re-enable the show desktop keybinding:\n\nSettings > Keyboard > Customize Shortcuts > Navigation > Hide all normal windows\n\nHowever, certain hotkeys cannot be changed directly via Settings. In order to change these keys, use dconf-editor or gsettings. An example of particular note is the hotkey Alt+` (the key above Tab on US keyboard layouts). In GNOME Shell it is pre-configured to cycle through windows of an application, however it is also a hotkey often used in the Emacs editor. It can be changed by using one of the aforementioned tools to modify the switch-group key found in org.gnome.desktop.wm.keybindings.\n\n"
    },
    {
      "title": "XkbOptions keyboard options",
      "level": 3,
      "content": "Using the dconf-editor, navigate to the xkb-options key under the org.gnome.desktop.input-sources schema and add desired XkbOptions (e.g. caps:swapescape) to the list.\n\nSee /usr/share/X11/xkb/rules/xorg for all XkbOptions and /usr/share/X11/xkb/symbols/* for the respective descriptions.\n\n"
    },
    {
      "title": "De-bind the Super key",
      "level": 3,
      "content": "By default, the Super key will open the GNOME Shell overview mode. You can unbind this key by running the command below:\n\n```\n$ gsettings set org.gnome.mutter overlay-key ''\n```\n\n"
    },
    {
      "title": "Modify Nautilus hotkeys",
      "level": 3,
      "content": "Since 3.15 it is not possible to use the accel file anymore, but it is possible to rebind keys by utilizing nautilus-python. Install the package and add the following file:\n\n```\n~/.local/share/nautilus-python/extensions/modify_keybindings.py\n```\n\n```\nimport os, gi\ngi.require_version('Nautilus', '3.0')\nfrom gi.repository import GObject, Nautilus, Gtk, Gio, GLib\n\ndef rebind():\n    app = Gtk.Application.get_default()\n    # Search for open_accels and nautilus_application_set_accelerators in:\n    #   https://github.com/GNOME/nautilus/blob/master/src/nautilus-files-view.c\n    app.set_accels_for_action( \"win.back\", [\"<alt>Left\", \"BackSpace\"] )\n\n    # if you want to figure out which hotkey belongs to which action try this:\n    # print(f'Alt+Left is: {app.get_actions_for_accel(\"<alt>Left\")}')\n\nclass BackspaceBack(GObject.GObject, Nautilus.LocationWidgetProvider):\n    def __init__(self):\n        pass\n\n    def get_widget(self, uri, window):\n        rebind()\n        return None\n```\n\nRestart Nautilus:\n\n```\n$ nautilus -q; nautilus\n```\n\n"
    },
    {
      "title": "Disks",
      "level": 2,
      "content": "GNOME provides a disk utility to manipulate storage drive settings. These are some of its features:\n\n- Enable write cache is a feature that most hard drives provide. Data is cached and allocated at chosen times to improve system performance. You most likely have this feature already enabled by default (not through disk utility). To check, use hdparm -W /dev/sdX.\n\n- User Session Defaults Enable to use your own options in /etc/fstab, and disable to automatically add default and recommended mount options to drives and partitions that are GPT-based.\n\n"
    },
    {
      "title": "Hiding applications from the menu",
      "level": 2,
      "content": "- Desktop entries can be hidden by editing the .desktop files themselves. See Desktop entries#Hide desktop entries.\n- MenulibreAUR provides a menu editor without GNOME dependencies.\n\nUse the Main Menu application (provided by the alacarte package) to hide any applications you do not wish to show in the menu.\n\n"
    },
    {
      "title": "Screencast recording",
      "level": 2,
      "content": "GNOME features built-in screencast recording with the Ctrl+Shift+Alt+r key combination. A red circle is displayed in the right side of the top bar near the system status area, while the recording is in progress. After the recording is finished, a file named Screencast from %d%u-%c.webm is saved in the Videos directory.\n\nIn order to use the screencast feature, some gst-plugin packages need to be installed. For example, the screencast pipeline depends on the vp8enc and webmmux elements from gst-plugins-good. If you get an error about missing \"pipewiresrc\" module when trying to record, install gst-plugin-pipewire.\n\nThe maximum screencast length is 30 seconds by default. This can be changed as follows:\n\n```\n$ gsettings set org.gnome.settings-daemon.plugins.media-keys max-screencast-length length_in_seconds\n```\n\nSet length_in_seconds to 0 for unlimited length (per the description of max-screencast-length).\n\n"
    },
    {
      "title": "Screenshot",
      "level": 2,
      "content": "gnome-screenshot by default saves the image in the directory of the last save, which you can query:\n\n```\n$ gsettings get org.gnome.gnome-screenshot last-save-directory\n```\n\nInstead of using the above directory, you can set an auto save directory. e.g. for automatically saving screenshots to the user's desktop directory:\n\n```\n$ gsettings set org.gnome.gnome-screenshot auto-save-directory file:///home/user/Desktop\n```\n\nCheck the gnome-screenshot(1) man page for more options.\n\n"
    },
    {
      "title": "Log out delay",
      "level": 2,
      "content": "To eliminate the default 60 second delay when logging out:\n\n```\n$ gsettings set org.gnome.SessionManager logout-prompt false\n```\n\n"
    },
    {
      "title": "Change animation speed",
      "level": 2,
      "content": "Gnome shell animation speed may be configured via a \"slow down factor\". Greater than 1.0 will slow down animations, between 0.0 & 1.0 speeds them up.\n\n"
    },
    {
      "title": "Set slow down factor",
      "level": 3,
      "content": "To set temporarily open looking glass with Alt-F2 enter lg then run, e.g. to speed up animations:\n\n```\nSt.Settings.get().slow_down_factor = 0.4\n```\n\nAlternatively use gnome-shell-extension-impatience-gitAUR\n\nSlow down factor may be set permanently without an extension with environment variable GNOME_SHELL_SLOWDOWN_FACTOR, e.g.\n\n```\n/etc/environment\n```\n\n```\nGNOME_SHELL_SLOWDOWN_FACTOR=0.4\n```\n\n"
    },
    {
      "title": "Disable animations",
      "level": 3,
      "content": "Animations may be disabled via the GUI by toggling Settings > Accessibility > Seeing > Reduce Animation.\n\n"
    },
    {
      "title": "Retina (HiDPI) display support",
      "level": 2,
      "content": "GNOME introduced HiDPI support in version 3.10. If your display does not provide the correct screen size through EDID, this can lead to incorrectly scaled UI elements. As a workaround you can open dconf-editor and find the key scaling-factor in org.gnome.desktop.interface. Set it to 1 to get the standard scale.\n\nAlso see HiDPI.\n\n"
    },
    {
      "title": "Passwords and keys (PGP Keys)",
      "level": 2,
      "content": "You can use the Passwords and Keys program seahorse to create a PGP key as it is a front end for GnuPG and installs it as dependency. This may be useful in the future (for instance if to encrypt a file). Create a key as shown below (the process may take about 10 minutes):\n\nFile > New > PGP Key > Name > Email > Defaults > Passphrase.\n\n"
    },
    {
      "title": "Change default terminal size",
      "level": 3,
      "content": "The default size of a new terminal can be adjusted in your profile's preferences. Select Preferences from the menu and select your profile under Profiles to access the settings to change the initial terminal size.\n\n"
    },
    {
      "title": "New terminals adopt current directory",
      "level": 3,
      "content": "New terminals open in the $HOME directory by default. You can configure the terminal to adopt the current working directory by adding source /etc/profile.d/vte.sh to your shell configuration file.\n\n"
    },
    {
      "title": "Pad the terminal",
      "level": 3,
      "content": "To pad the terminal (create a small, invisible border between the window edges and the terminal contents) create the file below:\n\n```\n~/.config/gtk-3.0/gtk.css\n```\n\n```\nvte-terminal,\nterminal-window {\n    padding: 10px 10px 10px 10px;\n    -vte-terminal-inner-border: 10px 10px 10px 10px;\n}\n```\n\n"
    },
    {
      "title": "Disable blinking cursor",
      "level": 3,
      "content": "To disable the blinking cursor in GNOME 3.8 and above use:\n\n```\n$ gsettings set org.gnome.desktop.interface cursor-blink false\n```\n\nTo disable the blinking cursor in Terminal only use:\n\n```\n$ gsettings set org.gnome.Terminal.Legacy.Profile:/org/gnome/terminal/legacy/profiles:/:$(gsettings get org.gnome.Terminal.ProfilesList default | tr -d \\')/ cursor-blink-mode off\n```\n\nNote that gnome-settings-daemon, from the package of the same name, must be running for this and other settings changes to take effect in GNOME applications - see GNOME#Configuration.\n\n"
    },
    {
      "title": "Disable confirmation window when closing Terminal",
      "level": 3,
      "content": "The Terminal will always display a confirmation window when trying to close the window while one is logged in as root. To avoid this, execute the following:\n\n```\n$ gsettings set org.gnome.Terminal.Legacy.Settings confirm-close false\n```\n\n"
    },
    {
      "title": "Color palette",
      "level": 3,
      "content": "The Terminal has support to change its color palette to your liking. Simply, go to Preferences, select your profile and finally edit the color palette.\n\n"
    },
    {
      "title": "Terminal color scheme",
      "level": 4,
      "content": "Install the gogh-gitAUR package, which provides a set of custom schemes made for the GNOME Terminal. After you choose a scheme (or more than one), run gogh and input the number(s) of the scheme(s) that you chose.\n\nAfter installation, go to Preferences of the Terminal, go to the Colors tab and select the name of the color scheme you installed from the left side of the window. You will see a small arrow next to the name, click it and select Set as default.\n\nFrom here, further configuration can be taken. You may easily change certain colors you do not like.\n\nTo remove a scheme, make another one your default if you had that scheme as your default. Then select its name and click Delete.\n\n"
    },
    {
      "title": "Middle mouse button",
      "level": 2,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nBy default, GNOME 3 disables middle mouse button emulation regardless of Xorg settings (Emulate3Buttons). To enable middle mouse button emulation use:\n\n```\n$ gsettings set org.gnome.settings-daemon.peripherals.mouse middle-button-enabled true\n```\n\n"
    },
    {
      "title": "Enable button and menu icons",
      "level": 2,
      "content": "Since GTK 3.10, the GSettings key 'menus-have-icons' has been deprecated. Icons in buttons and menus can still be enabled by setting the following overrides:\n\n```\n$ gsettings set org.gnome.settings-daemon.plugins.xsettings overrides \"{'Gtk/ButtonImages': <1>, 'Gtk/MenuImages': <1>}\"\n```\n\n"
    },
    {
      "title": "Use custom colours and gradients for desktop background",
      "level": 2,
      "content": "To use custom colours and gradients for your desktop background, you will first need to set either a transparent picture or else a non-existent picture as your desktop background. For instance, the command below will set a non-existent picture as the background.\n\n```\n$ gsettings set org.gnome.desktop.background picture-uri none\n```\n\nAt this point, the desktop background should be a flat colour - the default colour setting is for a deep blue.\n\nFor a different flat colour you need only change the primary colour setting:\n\n```\n$ gsettings set org.gnome.desktop.background primary-color <my color>\n```\n\nwhere <my color> is a hex value (such as ffffff for white).\n\nFor a colour gradient, you will also need to change secondary colour setting org.gnome.desktop.background secondary-color and select a shading type. For instance, if you want a horizontal gradient, execute the following:\n\n```\n$ gsettings set org.gnome.desktop.background color-shading-type horizontal\n```\n\nIf you are using a transparent picture as your background, you can set the opacity by executing the following:\n\n```\n$ gsettings set org.gnome.desktop.background picture-opacity <value>\n```\n\nwhere value is a number between 1 and 100 (100 for maximum opacity).\n\n"
    },
    {
      "title": "Transitioning backgrounds",
      "level": 2,
      "content": "GNOME can transition between different wallpapers at specific time intervals. This is done by creating an XML file specifying the pictures to be used and the time interval. For more information on creating such files, see the following article.\n\n"
    },
    {
      "title": "Custom GNOME sessions",
      "level": 2,
      "content": "It is possible to create custom GNOME sessions which use the GNOME session manager but start different sets of components (Openbox with tint2 instead of GNOME Shell for example).\n\nTwo files are required for a custom GNOME session: a session file in /usr/share/gnome-session/sessions/ which defines the components to be started and a desktop entry in /usr/share/xsessions which is read by the display manager. An example session file is provided below:\n\n```\n/usr/share/gnome-session/sessions/gnome-openbox.session\n```\n\n```\n[GNOME Session]\nName=GNOME Openbox\nRequiredComponents=openbox;tint2;gnome-settings-daemon;\n```\n\nAnd an example desktop file:\n\n```\n/usr/share/xsessions/gnome-openbox.desktop\n```\n\n```\n[Desktop Entry]\nName=GNOME Openbox\nExec=gnome-session --session=gnome-openbox\n```\n\n"
    },
    {
      "title": "Redirect certain URLs to specific web browsers",
      "level": 2,
      "content": "This shows how to use Chromium for certain types of URLs while maintaining Firefox as default browser for all other tasks.\n\nMake sure pcre is installed, to use pcregrep.\n\nSetup custom xdg-open:\n\n```\n/usr/local/bin/xdg-open\n```\n\n```\n#!/bin/bash\nDOMAIN_LIST_FILE=~/'domains.txt'\nOTHER_BROWSER='/usr/bin/chromium-browser'\nBROWSER_OPTIONS='' # Optional, for command line options passed to browser\nXDG_OPEN='/usr/bin/xdg-open'\nDEFAULT_BROWSER='/usr/bin/firefox'\n\nif echo \"$1\" | pcregrep -q '^https?://'; then\n    matching=0\n    while read domain; do\n\tif echo \"$1\" | pcregrep -q \"^https?://${domain}\"; then\n\t    matching=1\n\t    break\n\tfi\n    done < \"$DOMAIN_LIST_FILE\"\n\n    if [[ $matching -eq 1 ]]; then\n\t\"$OTHER_BROWSER\" $BROWSER_OPTIONS ${*}\n\texit 0\n    fi\n\n    \"$DEFAULT_BROWSER\" ${*}\n    exit 0\nelse\n    \"$XDG_OPEN\" ${*}\nfi\n```\n\nConfigure domains for redirect to Chromium:\n\n```\n$HOME/domains.txt\n```\n\n```\nstackexchange.com\nstackoverflow.com\nsuperuser.com\nwww.youtube.com\ngithub.com\n```\n\nSetup xdg-open web as desktop application:\n\n```\n$HOME/.local/share/applications/xdg-open-web.desktop\n```\n\n```\n[Desktop Entry]\nVersion=1.0\nName=xdg-open web\nGenericName=Web Browser\nExec=xdg-open %u\nTerminal=false\nType=Application\nMimeType=text/html;text/xml;application/xhtml+xml;application/vnd.mozilla.xul+xml;text/mml;x-scheme-handler/http;x-scheme-handler/https;\nStartupNotify=true\nCategories=Network;WebBrowser;\nKeywords=web;browser;internet;\nActions=new-window;new-private-window;\n```\n\n```\n$ update-desktop-database $HOME/.local/share/applications/\n```\n\nSet xdg-open web as default Web application in GNOME settings: Go to GNOME Settings > Default Applications and set Web to xdg-open web.\n\n"
    },
    {
      "title": "Removing film holes/film strip from video thumbnails in Nautilus",
      "level": 2,
      "content": "Nautilus (Files) overlays the film holes/film strip effect on video thumbnails since Gnome 3.12. To remove or override this effect, the environment variable G_RESOURCE_OVERLAYS can be used to reference the path of a compiled resource (in this instance filmholes.png) and specify the path for the relevant overlay. This environment variable has only been available since GLib 2.50 and will have no effect on versions before this.\n\nExtract filmholes.png from Nautilus:\n\n```\n$ gresource extract /usr/bin/nautilus /org/gnome/nautilus/icons/filmholes.png > filmholes.png\n```\n\nEdit filmholes.png using your preferred editor and remove the film effect from the image, leaving the transparency and dimensions intact, then overwriting the extracted image.\n\nCopy or move the extracted image where desired, such as /usr/share/icons/ and edit ~/.profile, adding the following export, changing /usr/share/icons/ as needed to the location you placed the file:\n\n```\nexport G_RESOURCE_OVERLAYS=/org/gnome/nautilus/icons/filmholes.png=/usr/share/icons/filmholes.png\n```\n\nIf ffmpegthumbnailer has been installed as a dependency for another file manager that may generate thumbnails, the Exec line in /usr/share/thumbnailers/ffmpegthumbnailer.thumbnailer should be modified removing the -f flag.\n\nTo ensure that no thumbnails remain that may already have the film effect embedded, remove the thumbnail cache:\n\n```\n$ rm -r ~/.cache/thumbnails\n```\n\nLog out and back in to your session and you should no longer have the film holes/film strip effect on your thumbnails in Nautilus.\n\n"
    },
    {
      "title": "GNOME Software integration with pacman",
      "level": 2,
      "content": "packagekit integration was previously available through a package named gnome-software-packagekit-plugin but has been voluntarily disabled and is considered unsupported.\n\n"
    },
    {
      "title": "Increase volume above and beyond 100%",
      "level": 2,
      "content": "You can allow over-amplification by running the command below:\n\n```\n$ gsettings set org.gnome.desktop.sound allow-volume-above-100-percent true\n```\n\nAlternatively, install the extension volume mixer. Then use the mouse to scroll above the volume icon in the top panel to increase the volume above and beyond 100%.\n\nOr, open GNOME Tweaks and toggle General > Over-Amplification.\n\n"
    },
    {
      "title": "Adjust volume in smaller steps",
      "level": 2,
      "content": "By default, pressing the keyboard's volume keys adjusts the volume by 6%. If smaller steps are desired, holding Shift while pressing the volume keys adjusts the volume in 2% steps.\n\nAlso, as of GNOME 3.36, it is now possible to directly adjust the volume step via a dconf setting. For example, to set the volume step to 2% execute the following:\n\n```\n$ gsettings set org.gnome.settings-daemon.plugins.media-keys volume-step 2\n```\n\n"
    },
    {
      "title": "Show volume sound percentage next to top panel icon",
      "level": 2,
      "content": "Install the extension sound percentage to display the current output volume level next to the sound icon in the top panel.\n\n"
    },
    {
      "title": "Launch on discrete GPU",
      "level": 2,
      "content": "Install switcheroo-control or switcheroo-control-gitAUR and start/enable switcheroo-control.service.\n\n"
    },
    {
      "title": "Window list",
      "level": 2,
      "content": "If you like having a tasks list on the bottom but dislike the default black color of this extension, first copy its directory:\n\n```\n$ cp -r /usr/share/gnome-shell/extensions/window-list@gnome-shell-extensions.gcampax.github.com/ ~/.local/share/gnome-shell/extensions/\n```\n\nThen edit the CSS to your liking. For example, to make the window list transparent, edit stylesheet.css as follows:\n\n```\n.bottom-panel {\n  background: transparent;\n}\n...\n.window-button > StWidget,\n.window-picker-toggle > StWidget {\n  color: #bbb;\n  background-color: transparent;\n  ...\n```\n\n"
    },
    {
      "title": "Navigation",
      "level": 2,
      "content": "To mimic the behavior of Windows when switching between windows, first disable the default which restricts the window switching to those in the current workspace:\n\n```\n$ gsettings set org.gnome.shell.app-switcher current-workspace-only false\n```\n\nthen, bind Alt+Tab and Alt+Shift+Tab to switch between windows, and not applications:\n\n```\n$ gsettings set org.gnome.desktop.wm.keybindings switch-windows \"['<Alt>Tab']\"\n$ gsettings set org.gnome.desktop.wm.keybindings switch-windows-backward \"['<Shift><Alt>Tab']\"\n```\n\nadditionally, one can rebind the switching between applications (this example uses Super instead of the default Alt):\n\n```\n$ gsettings set org.gnome.desktop.wm.keybindings switch-applications \"['<Super>Tab']\"\n$ gsettings set org.gnome.desktop.wm.keybindings switch-applications-backward \"['<Shift><Super>Tab']\"\n```\n\n"
    },
    {
      "title": "Image Viewer",
      "level": 2,
      "content": "Install libheif to add support for HEIC image file format install `libheif`. Image Viewer uses `gdk-pixbuf2` library which lists `libheif` as one of the optional dependencies.\n\n"
    },
    {
      "title": "Dconf (gsettings) database stored as a text-based file",
      "level": 2,
      "content": "By default, dconf stores its configuration in a binary database blob located at $XDG_CONFIG_HOME/dconf/user. A dconf profile configuration may override this default if your home directories are stored in NFS, you keep dotfiles in version control, or other reasons. See dconf(7) § PROFILES for details on creating and using profiles.\n\nBefore changing the system-wide default, dump each user's existing dconf database to a text-based keyfile named user.txt. It does not appear to be possible to use a different extension. Assuming the default for XDG_CONFIG_HOME, that may be done with this command:\n\n```\n$ dconf dump / > ~/.config/dconf/user.txt\n```\n\nOnce done, create the default dconf profile as root.\n\n```\n/etc/dconf/profile/user\n```\n\n```\nservice-db:keyfile/user\n```\n\nLog out and back in again and verify that changing dconf settings alters the text-based user.txt but not the old binary user file before deleting the binary database.\n\nThis setting should incur some minimal extra resource usage. Dconf still uses a binary database in the temporary XDG_RUNTIME_DIR directory, but it must recreate it at desktop startup. It must also keep user.txt up to date, and monitor the text file for changes as well.\n\n"
    }
  ]
}