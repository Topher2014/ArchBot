{
  "title": "Emerald",
  "url": "https://wiki.archlinux.org/title/Emerald",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Compiz\n- Window manager\n\nThis article details more advanced Compiz configuration. It is assumed that you have successfully installed Compiz and have a basic, working configuration. For information on installation, basic configuration and troubleshooting, please consult the Compiz article.\n\n"
    },
    {
      "title": "Configuration backends",
      "level": 3,
      "content": "- Depending on what packages you have installed, not all of the Compiz backends may be available.\n- The GConf backend was dropped from Compiz 0.9.12 (revision 3991).\n\nBy default, Compiz stores its configuration settings in a plain text file ~/.config/compiz-1/compizconfig/Default.ini. In CCSM this is known as Flat-file Configuration Backend.\n\nCompiz can also store its settings in the GSettings or GConf databases. To change how Compiz saves its settings open CCSM and click on the Preferences tab in the left hand column. Then choose your desired backend from the list under Backend.\n\nYou can also change the backend manually by editing the ~/.config/compiz-1/compizconfig/config file.\n\nEdit the line below:\n\n```\nbackend = ini\n```\n\n- ini = Flat File Configuration Backend\n- gsettings = GSettings Configuration Backend\n- gconf = GConf Configuration Backend\n\nOnce you have edited and saved the file the change will take place immediately. There is no need to log out.\n\n"
    },
    {
      "title": "Profiles",
      "level": 3,
      "content": "Profiles allow you to switch between different sets of Compiz settings easily. To create a new profile open CCSM and click on the Preferences tab. Under Profile click the plus sign to add a new profile or the minus sign to delete one. All changes made in CCSM will be written to your current profile.\n\nProfiles are specific to the backend you are using. For instance, if you are using the GSettings backend then any new profile you create will be a GSettings profile. If you switch to a different backend then your current profile will not work and you will automatically switch to a profile available for that backend.\n\n"
    },
    {
      "title": "Emerald",
      "level": 3,
      "content": "Many Emerald themes are available for download on compiz-themes.org. Emerald themes can be installed, selected, removed and edited using the emerald-theme-manager program. For downloaded themes, unzip the tarball and then install it using the Import option in the theme manager.\n\nEmerald themes are store in two locations:\n\n- /usr/share/emerald/themes -- system\n- ~/.emerald/themes -- user\n\nThe currently selected Emerald theme is copied into the ~/.emerald/theme directory.\n\nEmerald settings such as window button pulse can be configured in emerald-theme-manager and are written to the ~/.emerald/settings.ini file.\n\n"
    },
    {
      "title": "GTK Window Decorator",
      "level": 3,
      "content": "The GTK Window Decorator can be compiled with support for the Metacity or Marco window managers (depending on the Compiz version). If it is compiled with this support, the theme used by Metacity or Marco will also be used by GTK Window Decorator. If GTK Window Decorator is not compiled with Metacity or Marco support, a builtin fallback theme will be used.\n\nMany Metacity themes are available for download on gnome-look.org. Once downloaded, they should be unpacked into a directory such as /usr/local/share/themes (for Metacity) or ~/.themes (for Marco).\n\nThe GTK Window Decorator provided by Compiz 0.9 can be compiled with Metacity (version 3) support. Assuming this support is compiled in, change the Metacity theme using the commands below:\n\n- In a GNOME Flashback session\n\nFirstly, ensure that the theme type is set to metacity:\n\n```\n$ gsettings set org.gnome.metacity.theme type metacity\n```\n\nThen the theme can be set with the following command:\n\n```\n$ gsettings set org.gnome.metacity.theme name theme-name\n```\n\n- In a MATE session\n\nUse the following command:\n\n```\n$ gsettings set org.mate.Marco.general theme theme-name\n```\n\n- In any other session\n\nUse the following command:\n\n```\n$ gsettings set org.gnome.desktop.wm.preferences theme theme-name\n```\n\nThe GTK Window Decorator included in the Compiz provided by the Compiz-Reloaded upstream (versions 0.8.10 and higher) can be compiled with Marco support. Assuming this support is compiled in, use the command below to change the Marco theme:\n\n```\n$ gsettings set org.mate.Marco.general theme theme-name\n```\n\nThe GTK Window Decorator included in the Compiz provided by the original Compiz upstream (versions 0.8.9 and below) can be compiled with Metacity (version 2) support. This GTK Window Decorator version expects the theme to be defined as a GConf setting. Assuming this support is compiled in, use the command below to change the Metacity theme:\n\n```\n$ gconftool-2 -s /apps/metacity/general/theme -t string theme-name\n```\n\n"
    },
    {
      "title": "KDE Window Decorator",
      "level": 3,
      "content": "Kwin themes can be downloaded, installed and managed using the KDE systemsettings panel.\n\n"
    },
    {
      "title": "Workspaces and Viewports",
      "level": 2,
      "content": "Unlike many other window managers, Compiz does not use multiple workspaces. Instead, it uses one workspace but splits it into multiple sections known as viewports. See [1] for more information.\n\nThe number and layout of viewports can be configured in CCSM -> General Options -> Desktop Size. Changing the Horizontal Virtual Size will change the number of viewports in a row. Changing the Vertical Virtual Size will add or remove rows of viewports.\n\nIf you are using the Desktop Cube plugin, you will not be to use the rows of viewports added by increasing the Vertical Virtual Size. To take advantage of multiple rows of viewports, use the Desktop Wall plugin instead.\n\n"
    },
    {
      "title": "Keyboard shortcuts",
      "level": 2,
      "content": "Below is a list of the default keyboard shortcuts for Compiz.\n\n- Switch windows = Alt+Tab.\n- Switch to next desktops = Ctrl+Alt+←.\n- Switch to previous desktop = Ctrl+Alt+→.\n- Move window = Alt+Left click.\n- Resize window = Alt+Right click.\n\nA more detailed list can be found under CommonKeyboardShortcuts in the Compiz wiki or you can always just look at your plugin's configuration.\n\nExtra shortcuts can be added using the commands plugin in CCSM.\n\n"
    },
    {
      "title": "Edge bindings",
      "level": 3,
      "content": "Besides mouse and key bindings, Compiz can also assign commands to certain actions involving the screen edges, for example: dragging a window to the screen edge. For instance: the Rotate Cube plugin has an option to switch to the next viewport if a window is dragged to the screen edge. Edge bindings can usually be disabled, through CCSM, by unticking Edge Flip options in the plugin's settings section or by disabling actions which have the screen icon next to them in the Bindings section of the relevant plugin.\n\n"
    },
    {
      "title": "Plugins",
      "level": 2,
      "content": "Almost all Compiz functionality is implemented using plugins. Some plugins must be enabled for standard window manager functionality - see Compiz#Enabling important plugins. Plugins that provide extra functionality, above and beyond standard window management, are discussed here.\n\n"
    },
    {
      "title": "Grid",
      "level": 3,
      "content": "If you want to compare two windows side by side by dragging them to the edges of the screen, similar to the \"Aero Snap\" feature introduced in Windows 7, enable the Grid plugin in CCSM. If you are using the Desktop Wall or Rotate Cube plugin then disable the Edge Flip options in that plugin's section to ensure that windows do not move to the next desktop when dragged to the screen edge.\n\n- The plugin in CCSM labelled Snapping Windows merely adds resistance to the edges of the screen. It does not resize windows that are dragged to the screen edge.\n- The Grid plugin in Compiz 0.8 does not support resizing windows by dragging them to the screen edge. Windows can only be compared by using keyboard shortcuts.\n\n"
    },
    {
      "title": "Scale",
      "level": 3,
      "content": "The Scale plugin provides an option to view scaled thumbnails of all windows in the current viewport, similar to the \"Present Windows\" feature in KDE or the \"Overview Mode\" in GNOME Shell. Once the plugin is enabled, the view can be accessed by moving the mouse cursor into the top right corner of the screen. The active corner can be configured in the Bindings tab of the plugin's settings section.\n\n"
    },
    {
      "title": "Widget Layer",
      "level": 3,
      "content": "The Widget Layer plugin allows you to define certain windows as widgets. Widget windows are shown on a separate \"layer\" of the screen. When the widget layer is hidden, all windows defined as widget windows will be iconified. By default, the widget layer is shown and hidden using F9 key.\n\nTo define a window as a widget, open CCSM and navigate to the Widget Layer plugin. Click on the Behaviour tab and click on the plus sign button next to the Widget Windows field. In the dialog box that appears, choose Window Title from the Type menu. In the Value field enter the title for the window you wish to define as a widget, for example: galculator.\n\n"
    },
    {
      "title": "Screen Magnification",
      "level": 3,
      "content": "There are two Compiz plugins that can provide magnification functionality. The first is Magnifier which acts much like a magnifying glass (everything within the rectangular box will be zoomed). The magnifier can be used by enabling the plugin in CCSM and pressing Super+m.\n\nThe other plugin is called Enhanced Desktop Zoom. When this plugin is enabled, pressing the Super key and scrolling the middle mouse button will magnify the part of the desktop that is under the mouse cursor.\n\n"
    },
    {
      "title": "Crash handler",
      "level": 3,
      "content": "It is a good idea to enable the Crash handler plugin in CCSM. This plugin ensures that if, for whatever reason, Compiz fails to start with the session or crashes at some point during the session, crash logs will be dumped and an alternative window manager will be started. To specify a window manager that can replace Compiz in the event of a crash, click on the Crash handler plugin and tick the Start Other Window Manager option. Then, in the Window Manager Command Line field, enter a command to start the window manager of choice, for instance: xfwm4 --replace.\n\n"
    },
    {
      "title": "Compiz configuration without CCSM",
      "level": 2,
      "content": "Compiz does not have to be configured through CCSM. Settings can be changed by editing the profile directly. For Flat File profiles, this will mean making editing changes to the ~/.config/compiz-1/compizconfig/Default.ini file or similar. For GSettings or GConf profiles, this will mean making changes to the DConf or GConf databases using the gsettings or gconftool-2 tools.\n\n"
    },
    {
      "title": "Flat-file sample configuration",
      "level": 3,
      "content": "Features of this sample configuration:\n\n- Ctrl+Alt+[numpad] arranges the current window.\n- Left and right bottom corner shows taskbar.\n- Mouse control for everything (but typing).\n- Some effects.\n\n```\n[core]\nas_active_plugins = core;session;glib;grid;notification;workarounds;place;put;wall;regex;blur;dbus;fs;inotify;widget;animation;resize;text;mousepoll;obs;expo;fade;move;staticswitcher;mag;scale;scaleaddon;\ns0_hsize = 2\ns0_vsize = 2\n\n[wall]\nas_show_switcher = false\ns0_edgeflip_dnd = true\nas_flip_down_edge = \n\n[expo]\nas_reflection = false\nas_vp_brightness = 100.000000\nas_expo_edge = \nas_expo_button = Button9\nas_mipmaps = true\nas_zoom_time = 0.150000\nas_vp_distance = 0.000000\n\n[scale]\nas_initiate_edge = \nas_initiate_all_button = Button8\ns0_darken_back = false\ns0_opacity = 100\ns0_overlay_icon = 0\ns0_multioutput_mode = 1\nas_show_desktop = false\ns0_hover_time = 100\ns0_spacing = 4\ns0_timestep = 0.100000\ns0_speed = 2.615500\n\n[scaleaddon]\ns0_window_highlight = true\ns0_highlight_color = #ffffff08\ns0_window_title = 0\n\n[mag]\nas_zoom_in_button = <TopEdge>Button4\nas_zoom_out_button = <TopEdge>Button5\ns0_mode = 2\ns0_radius = 600\n\n[place]\ns0_multioutput_mode = 3\ns0_mode = 2\n\n[workarounds]\nas_notification_daemon_fix = true\nas_firefox_menu_fix = true\nas_legacy_fullscreen = true\nas_qt_fix = true\nas_convert_urgency = true\n\n[move]\nas_opacity = 85 \n\n[blur]\ns0_filter = 1\ns0_independent_tex = true\ns0_mipmap_lod = 1.700000\ns0_gaussian_radius = 7\ns0_alpha_blur_match = (any) & !(class=Conky)\n\n[put]\nas_put_next_output_button = Button10\ns0_speed = 10.441400\ns0_timestep = 0.100000 \n\n[obs]\ns0_opacity_matches = type=dock | Tooltip | Menu | PopupMenu | DropdownMenu;(any) & !(class=Whaawmp.py | class=Gimp | class=Inkscape | class=Xfdesktop | class=Ristretto);\ns0_opacity_values = 70;90;\n\n[animation]\ns0_close_effects = animation:Dream;animation:Fade;animation:Fade;\ns0_open_effects = animation:Magic Lamp;animation:Fade;animation:Fade;\ns0_focus_effects = animation:Dodge;\ns0_open_durations = 150;100;100;\ns0_close_durations = 150;100;100;\ns0_minimize_durations = 150;\ns0_shade_durations = 150;\ns0_focus_durations = 150;\n\n[widget]\ns0_bg_brightness = 100\ns0_fade_time = 0.250000\ns0_match = type=Dock\nas_toggle_edge = BottomLeft|BottomRight\ns0_end_on_click = false\n\n[staticswitcher]\ns0_highlight_mode = 2\ns0_highlight_rect_hidden = 2\nas_next_key = Disabled\nas_next_no_popup_key = <Alt>Tab\nas_prev_all_key = Disabled\n```\n\n"
    },
    {
      "title": "GSettings configuration",
      "level": 3,
      "content": "Note: **Default** \n\n- Most Compiz schemas are relocatable. This means that a path needs to provided along with the schema name itself - in this case, the path to the Compiz profile, for example: :/org/compiz/profiles/Default/plugins/.\n- That a Compiz plugin's schema is installed does not guarantee that the plugin itself is installed.\n\nList all of the available Compiz profiles:\n\n```\n$ gsettings list-recursively org.compiz | grep existing-profiles\n```\n\nShow the active Compiz profile:\n\n```\n$ gsettings list-recursively org.compiz | grep current-profile\n```\n\nSet the active Compiz profile:\n\n```\n$ gsettings set org.compiz current-profile profile-name\n```\n\nList all the available Compiz plugins schemas:\n\n```\n$ gsettings list-relocatable-schemas | grep org.compiz\n```\n\nView all of the available settings for a Compiz plugin and their values (this example will show the settings of Static Application Switcher):\n\n```\n$ gsettings list-recursively org.compiz.staticswitcher:/org/compiz/profiles/Default/plugins/staticswitcher/\n```\n\nView the value for a specific Compiz setting (this example checks the whether the Icon option in Static Application Switcher is enabled:\n\n```\n$ gsettings get org.compiz.staticswitcher:/org/compiz/profiles/Default/plugins/staticswitcher/ icon\n```\n\nChange the value for a Compiz plugin setting (this will disable icons in Static Application Switcher):\n\n```\n$ gsettings set org.compiz.staticswitcher:/org/compiz/profiles/Default/plugins/staticswitcher/ icon false\n```\n\n"
    },
    {
      "title": "Enabling or disabling a Compiz plugin using GSettings",
      "level": 4,
      "content": "Note: **\"** \n\n- Do not forget to place quotation marks around the array when overwriting the active-plugins value, e.g. \"['core']\".\n- If you enter an invalid plugin name or the name of a plugin that is not installed, the command will complete without error but the invalid name will automatically be removed from the array.\n\nTwo steps are required. Firstly, get the list of active Compiz plugins using the command below:\n\n```\n$ gsettings get org.compiz.core:/org/compiz/profiles/Default/plugins/core/ active-plugins\n```\n\nThis should return an output similar to the one below:\n\n```\n['core', 'composite', 'opengl', 'compiztoolbox', 'decor', 'vpswitch', 'snap', 'mousepoll', 'resize', 'place', 'move', 'wall', 'grid', 'regex', 'imgpng', 'session', 'gnomecompat', 'animation', 'fade', 'workarounds']\n```\n\nCopy and paste the output and add it to the command to set the active plugins, adding or removing plugins from the array as appropriate. The example below will enable the Static Application Switcher:\n\n```\n$ gsettings set org.compiz.core:/org/compiz/profiles/Default/plugins/core/ active-plugins \"['core', 'composite', 'opengl', 'compiztoolbox', 'decor', 'vpswitch', 'snap', 'mousepoll', 'resize', 'place', 'move', 'wall', 'grid', 'regex', 'imgpng', 'session', 'gnomecompat', 'animation', 'fade', 'workarounds', 'staticswitcher']\"\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Compiz Wiki, (wiki is unmaintained)\n- Compiz-Themes.org, including Emerald themes, Metacity themes, Kwin themes and more\n\n"
    }
  ]
}