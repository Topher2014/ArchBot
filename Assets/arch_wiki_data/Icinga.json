{
  "title": "Icinga",
  "url": "https://wiki.archlinux.org/title/Icinga",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Icinga is an open source host, service and network monitoring program. It monitors specified hosts and services, alerting you to any developing issues, errors or improvements. This article describes the installation and configuration of Icinga.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install icinga2AUR.\n\nYou may also want to install monitoring-plugins.\n\nStart/enable the icinga2.service.\n\n"
    },
    {
      "title": "Icinga Web 2",
      "level": 2,
      "content": "Install icingaweb2AUR and optionally icingaweb2-module-directorAUR.\n\nEnable the icinga-director.service if you installed the director module.\n\n"
    },
    {
      "title": "Configure web server",
      "level": 3,
      "content": "If you use php-fpm, you will have to override the unit - make sure to replace php-fpm.service.d with php-fpm-legacy.service.d if you use that:\n\n```\n/etc/systemd/system/php-fpm.service.d/override_icingaweb2.conf\n```\n\n```\n[Service]\nReadWritePaths = /etc/icingaweb2\n```\n\nYou will also have to add your webserver to the group icingaweb2 to be able to create and change configuration files from the web app directly, assuming http is the webserver user:\n\n```\n# usermod -a -G icingaweb2 http\n```\n\n"
    },
    {
      "title": "nginx",
      "level": 4,
      "content": "Example server block, with php-legacy, the sock path in the example becomes /run/php-fpm-legacy/php-fpm.sock instead:\n\n```\nserver {\n\tlisten 80;\n\tlisten [::]:80;\n\tserver_name localhost;\n\troot /usr/share/webapps/icingaweb2/public;\n\tlocation ~ ^/icingaweb2/index\\.php(.*)$ {\n\t\tfastcgi_pass unix:/run/php-fpm/php-fpm.sock;\n\t\tfastcgi_index index.php;\n\t\tinclude fastcgi_params;\n\t\tfastcgi_param SCRIPT_FILENAME /usr/share/webapps/icingaweb2/public/index.php;\n\t\tfastcgi_param ICINGAWEB_CONFIGDIR /etc/icingaweb2;\n\t\tfastcgi_param REMOTE_USER $remote_user;\n\t}\n\tlocation ~ ^/icingaweb2(.+)? {\n\t\talias /usr/share/webapps/icingaweb2/public;\n\t\tindex index.php;\n\t\ttry_files $1 $uri $uri/ /icingaweb2/index.php$is_args$args;\n\t}\n}\n```\n\n"
    },
    {
      "title": "Apache",
      "level": 4,
      "content": "If you get HTTP/503 errors, check in the configuration file to see if you are allowed to access the page:\n\n```\nOrder allow,deny\n Allow from all\n```\n\nThis has to be located in the <Directory \"/usr/local/icinga-web/lib/ext3/\"> and <Directory \"/usr/local/icinga-web/pub/\"> sections.\n\n"
    },
    {
      "title": "Configure PHP",
      "level": 3,
      "content": "Uncomment the following extensions:\n\n```\n/etc/php/php.ini\n```\n\n```\ncurl\ngettext\npdo_mysql - MariaDB setups\npdo_pgsql - PostgreSQL setups\npgsql - PostgreSQL setups\nintl - Icinga Web 2\nsockets - Director\n```\n\nIf open_basedir is set in php.ini, you need to authorize /usr/share/icinga-php and you need to create ICINGAWEB_LOCALEDIR environment variable to /usr/share/icinga-php/icinga-L10n/locale to avoid an open_basedir error on /usr/share/webapps/icingaweb2/library/Icinga/Application/ApplicationBootstrap.php at line 740.\n\n"
    },
    {
      "title": "Configure Icinga",
      "level": 2,
      "content": "You can choose either PostgreSQL or MariaDB to use as a backend for Icinga.\n\nBy default Icinga uses the following files and directories:\n\n- /etc/icinga2 — Contains Icinga 2 configuration files.\n- /usr/sbin/icinga2* — The Icinga 2 binary.\n- /usr/share/doc/icinga2 — Documentation files that come with Icinga 2.\n- /usr/share/icinga2/include — The Icinga Template Library and plugin command configuration.\n- /var/run/icinga2 — PID file.\n- /var/run/icinga2/cmd — Command pipe and Livestatus socket.\n- /var/cache/icinga2 — status.dat/objects.cache, icinga2.debug files\n- /var/spool/icinga2 — Used for performance data spool files.\n- /var/lib/icinga2 — Icinga 2 state file, cluster log, local CA and configuration files.\n- /var/log/icinga2 — Log file location and compat/ directory for the CompatLogger feature.\n\n"
    },
    {
      "title": "Automatically",
      "level": 3,
      "content": "Generate a setup token and let Icinga Web 2 handle it by using the setup page:\n\n```\n# icingacli setup config directory --group icingaweb2;\n# icingacli setup token create;\n```\n\nhttp://localhost/icingaweb2/setup\n\n"
    },
    {
      "title": "Manually",
      "level": 3,
      "content": "In case you do not want to use Icinga Web 2 to configure everything for you.\n\n"
    },
    {
      "title": "MariaDB",
      "level": 4,
      "content": "https://icinga.com/docs/icinga-2/latest/doc/02-installation/\n\nhttps://icinga.com/docs/icinga-web/latest/doc/02-Installation/\n\nCreate icinga user and db:\n\n```\n# mysql -u root -p\n> CREATE DATABASE icinga;\n> GRANT SELECT, INSERT, UPDATE, DELETE, DROP, CREATE VIEW, INDEX, EXECUTE ON icinga.* TO 'icinga'@'localhost' IDENTIFIED BY 'supersecretpassword';\n> quit\n```\n\nCreate icingaweb2 user and db:\n\n```\n# mysql -u root -p\n> CREATE DATABASE icingaweb2;\n> GRANT ALL ON icingaweb2.* TO 'icingaweb2'@'localhost' IDENTIFIED BY 'anothersecurepassword';\n> quit\n```\n\nImport the icinga schema:\n\n```\n# mysql -u root -p icinga < /usr/share/icinga2-ido-mysql/schema/mysql.sql\n```\n\nImport the icingaweb2 schema:\n\n```\n# mysql -p icingaweb2 < /usr/share/webapps/icingaweb2/etc/schema/mysql.schema.sql\n```\n\nCreate director database and user:\n\n```\n# mysql -u root -p\n> CREATE DATABASE director CHARACTER SET 'utf8';\n> CREATE USER director@localhost IDENTIFIED BY 'directorpassword';\n> GRANT ALL ON director.* TO director@localhost;\n```\n\nCreate a user to login to Icinga Web 2:\n\n```\n$ php -r 'echo password_hash(\"yourwebpassword\", PASSWORD_DEFAULT);'\n```\n\nUse the hash you got from the previous command, replacing the hash in this example to insert a new user into the database:\n\n```\n# mysql -u root -p\n> USE icingaweb2;\n> INSERT INTO icingaweb_user (name, active, password_hash) VALUES ('icingaadmin', 1, '$2y$10$G.qLnALysvw3yr5wP70sF.KtlwB/xDYypRU3x2WZd6x3N0oBAXuIi');\n```\n\nEdit /etc/icinga2/features-available/ido-mysql.conf with your SQL details.\n\nEnable ido-mysql:\n\n```\n# icinga2 feature enable ido-mysql\n```\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 4,
      "content": "https://icinga.com/docs/icinga2/latest/doc/02-installation/#installing-postgresql-database-server\n\nAs the postgres user, create icinga user and db:\n\n```\n[postgres]$ psql -c \"CREATE ROLE icinga WITH LOGIN PASSWORD 'supersecretpassword'\"\n[postgres]$ createdb -O icinga -E UTF8 icinga\n```\n\nCreate icingaweb2 user and db:\n\n```\n[postgres]$ psql -c \"CREATE ROLE icingaweb2 WITH LOGIN PASSWORD 'anothersecurepassword'\"\n[postgres]$ createdb -O icingaweb2 -E UTF8 icingaweb2\n```\n\nImport the icinga schema:\n\n```\n# psql -U icinga -d icinga < /usr/share/icinga2-ido-pgsql/schema/pgsql.sql\n```\n\nImport the icingaweb2 schema:\n\n```\n# psql -U icingaweb2 -d icingaweb2 < /usr/share/webapps/icingaweb2/etc/schema/pgsql.schema.sql\n```\n\nCreate director database and user:\n\n```\n[postgres]$ psql -q -c \"CREATE DATABASE director WITH ENCODING 'UTF8';\"\n[postgres]$ psql director -q -c \"CREATE USER director WITH PASSWORD 'directorpassword'; GRANT ALL PRIVILEGES ON DATABASE director TO director; CREATE EXTENSION pgcrypto;\"\n```\n\nCreate a user to login to Icinga Web 2:\n\n```\n$ php -r 'echo password_hash(\"yourwebpassword\", PASSWORD_DEFAULT);'\n```\n\nUse the hash you got from the previous command, replacing the hash in this example to insert a new user into the database:\n\n```\n[postgres]$ psql -d icingaweb2\nicingaweb2=# INSERT INTO icingaweb_user (name, active, password_hash) VALUES ('icingaadmin', 1, '$2y$10$G.qLnALysvw3yr5wP70sF.KtlwB/xDYypRU3x2WZd6x3N0oBAXuIi');\n```\n\nEdit /etc/icinga2/features-available/ido-pgsql.conf with your SQL details.\n\nEnable ido-pgsql:\n\n```\n# icinga2 feature enable ido-pgsql\n```\n\n"
    },
    {
      "title": "Finally",
      "level": 4,
      "content": "Enable Icinga api:\n\n```\n# icinga2 api setup\n```\n\nEnable director module and its dependencies:\n\n```\n# icingacli module enable incubator\n# icingacli module enable director\n```\n\nCreate Director database schema:\n\n```\n# icingacli director migration run --verbose\n```\n\nRestart icinga2.service for the changes to apply.\n\nIf you chose to use Icinga Web 2, create appropriate .ini files (Use mysql and 3306 for db and port if you use MariaDB):\n\n```\n/etc/icingaweb2/authentication.ini\n```\n\n```\n[icingaweb2]\nbackend  = db\nresource = icingaweb2\n```\n\n```\n/etc/icingaweb2/resources.ini\n```\n\n```\n[icingaweb2]\ntype                = \"db\"\ndb                  = \"pgsql\"\nhost                = \"localhost\"\nport                = \"5432\"\ndbname              = \"icingaweb2\"\nusername            = \"icingaweb2\"\npassword            = \"anothersecurepassword\"\n\n[icinga2]\ntype                = \"db\"\ndb                  = \"pgsql\"\nhost                = \"localhost\"\nport                = \"5432\"\ndbname              = \"icinga\"\nusername            = \"icinga\"\npassword            = \"supersecretpassword\"\n\n[director]\ntype                = \"db\"\ndb                  = \"pgsql\"\nhost                = \"localhost\"\nport                = \"5432\"\ndbname              = \"director\"\nusername            = \"director\"\npassword            = \"directorpassword\"\ncharset             = \"utf8\"\n```\n\nThe following is the currently default config, the important non-default part is config_resource.\n\nOne can instead generate this file through http://localhost/icingaweb2/config/general instead.\n\n```\n/etc/icingaweb2/config.ini\n```\n\n```\n[global]\nshow_stacktraces = \"1\"\nshow_application_state_messages = \"1\"\nmodule_path = \"/usr/share/webapps/icingaweb2/modules\"\nconfig_resource = \"icingaweb2\"\n\n[security]\nuse_strict_csp = \"0\"\n\n[logging]\nlog = \"syslog\"\nlevel = \"ERROR\"\napplication = \"icingaweb2\"\nfacility = \"user\"\n```\n\n```\n/etc/icingaweb2/roles.ini\n```\n\n```\n[admins]\nusers               = \"icingaadmin\"\npermissions         = \"*\"\n```\n\n```\n/etc/icingaweb2/modules/director/config.ini\n```\n\n```\n[db]\nresource = \"director\"\n```\n\nGo to http://localhost/icingaweb2/ and try to login as 'icingaadmin' and your chosen password - if all works, you are done with the basic setup!\n\n"
    },
    {
      "title": "Upgrade database",
      "level": 2,
      "content": "New versions usually require an upgrade of the database. You can find the SQL upgrade scripts in the following folders:\n\n```\n/usr/share/icinga2-ido-mysql/schema/upgrade\n/usr/share/icinga2-ido-pgsql/schema/upgrade\n/usr/share/webapps/icingaweb2/schema/mysql-upgrades\n/usr/share/webapps/icingaweb2/schema/pgsql-upgrades\n```\n\nTo do the upgrade, cd into the appropriate folder as written above and import the schema, examples:\n\n```\n# mysql -u root -p icinga < ./2.8.1.sql\n# mysql -u root -p icingaweb2 < ./2.12.0.sql\n# psql -U icinga -d icinga < ./2.8.1.sql\n# psql -U icingaweb2 -d icingaweb2 < ./2.12.0.sql\n```\n\nRestart icinga2.service for the changes to apply.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Documentation - Official documentation\n- monitoring-plugins - Default plugins for Icinga and other monitoring applications\n- Nagios Plugins - The home of the legacy plugins\n- Wikipedia article\n- NagiosExchange - Overview of plugins, addons, mailing lists for Icinga\n\n"
    }
  ]
}