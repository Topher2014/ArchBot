{
  "title": "GVFS",
  "url": "https://wiki.archlinux.org/title/GVFS",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Desktop environment\n- Extended attributes\n- List of applications/Utilities#File managers\n- Udisks\n\nThis article outlines the additional software packages necessary to expand the features and functionality of file managers, particularly where using a window manager such as Openbox. The ability to access partitions and removable media without a password—if affected—has also been provided.\n\n"
    },
    {
      "title": "Overview",
      "level": 2,
      "content": "A file manager alone will not provide the features and functionality that users of full desktop environments such as Plasma or Xfce will be accustomed to. This is because additional software packages will be required to enable a given file manager to:\n\n- Display and access other partitions\n- Display, mount, and access removable media (e.g. USB sticks, optical discs, and digital cameras)\n- Enable networking / shared networks with other installed operating systems\n- Enable thumbnailing\n- Archive and extract compressed files\n- Automatically mount removable media\n\nWhen a file manager has been installed as part of a full desktop environment, most of these packages will usually have been installed automatically. Consequently, where a file manager has been installed for a standalone window manager then - as is the case with the window manager itself - only a basic foundation will be provided. The user must then determine the nature and extent of the features and functionality to be added.\n\n"
    },
    {
      "title": "Additional features",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nWhen using a lightweight environment, the more added file manager features, the more memory usage is needed. See also udisks.\n\n"
    },
    {
      "title": "Mounting",
      "level": 3,
      "content": "- The Gnome virtual filesystem (gvfs) provides mounting and trash functionality. GVFS uses udisks2 for mounting functionality and is the recommended solution for most file managers.\n\nFolders used by GVFS:\n\n- /usr/lib/ contains gvfsd-* files, where * refers to the various supported file system types.\n- /usr/share/gvfs/mounts/ contains mount rules for GVFS. To use one's own rules, create ~/.gvfs/mounts.\n\nAdditional packages for installation usually follows the gvfs-* pattern, for example:\n\n- gvfs-mtp: media players and mobile devices that use MTP\n- gvfs-gphoto2: digital cameras and mobile devices that use PTP\n- gvfs-afc: Apple mobile devices\n\n"
    },
    {
      "title": "File manager daemon",
      "level": 4,
      "content": "Most graphical file managers have the ability to automount devices plugged in while the program is running. You can leverage this for a system-wide solution by running the file manager in daemon mode (i.e. as a background process), if supported. For example, when using PCManFM in Openbox, the following command would be added to the ~/.config/openbox/autostart file:\n\n```\npcmanfm -d &\n```\n\nIt will also be necessary to configure the file manager itself in respect to volume management (e.g. what it will do and what applications will be launched when certain file types are detected upon mounting).\n\n"
    },
    {
      "title": "Standalone",
      "level": 4,
      "content": "Another option is to install a separate mount application. The advantages of using this are:\n\n- Less memory may be required to run as a background/daemon process than a file manager\n- It is not file-manager-specific, allowing them to be freely added, removed, and switched\n- gvfs is not needed to be installed for mounting, lessening memory usage. If it is installed, then its daemon can be masked, and started only on demand. This is useful for example as a fallback for mtp, where some implementations may not work.\n\n"
    },
    {
      "title": "Networks",
      "level": 3,
      "content": "- obexftpAUR: Bluetooth device mounting and file transfers (see Bluetooth)\n- gvfs-smb: Windows File and printer sharing for Non-KDE desktops (see Samba)\n- kdenetwork-filesharing: Windows File and printer sharing for KDE (see Samba#KDE)\n- sshfs: FUSE client based on the SSH File Transfer Protocol\n\n"
    },
    {
      "title": "Windows access",
      "level": 4,
      "content": "If using gvfs-smb, to access Windows/Cifs/Samba file shares first open the file manager, and enter the following into the path name, changing server_name and share_name as appropriate:\n\n```\nsmb://server_name/share_name\n```\n\n"
    },
    {
      "title": "Apple access",
      "level": 4,
      "content": "AFP support is included in gvfs. To access AFP files first open the file manager, and enter the following into the path name, changing server_name and share_name as appropriate:\n\n```\nafp://server_name/share_name\n```\n\n"
    },
    {
      "title": "sftp access",
      "level": 4,
      "content": "SFTP support is also included in gvfs. To access folders via sftp, open the file manager, and enter the following into the path name, changing user@server_name and folder_name as appropriate:\n\n```\nsftp://user@server_name/folder_name\n```\n\n"
    },
    {
      "title": "WebDAV",
      "level": 4,
      "content": "For WebDAV, install gvfs-dnssd.\n\n```\ndavs://user@server_name/folder_name\n```\n\n"
    },
    {
      "title": "Thumbnail previews",
      "level": 3,
      "content": "Some file managers may not support thumbnailing, even when the packages listed have been installed. Check the documentation for the relevant file manager.\n\nYou may not see thumbnails for remote storage, including MTP. Check your file manager's settings, e.g. for Thunar one has to set \"Show thumbnails: always\".\n\n"
    },
    {
      "title": "File managers other than Dolphin and Konqueror",
      "level": 4,
      "content": "These packages apply to most file managers, such as PCManFM, SpaceFM, Thunar and xfeAUR. The exceptions are Dolphin and Konqueror, used in the KDE desktop environment.\n\n- tumbler: Image files. This must also be installed to expand thumbnailing capabilities to other file types in some cases.\n- ffmpegthumbnailer: Video files\n- ffmpeg-audio-thumbnailerAUR: Audio files\n- webp-pixbuf-loader: .webp images\n- poppler-glib: Adobe .pdf files\n- freetype2: Font files\n- libgsf: .odf files\n- raw-thumbnailerAUR: .raw files\n- totem: Video files and tagged audio files (GNOME Files, and Caja only)\n- evince or atril: .pdf files\n- gnome-epub-thumbnailer: .epub and .mobi ebook files\n- mcomixAUR: .cbr comicbook archives\n- folderpreviewAUR: Directory thumbnailer\n- f3d: 3D files, including glTF, stl, step, ply, obj, fbx.\n\n"
    },
    {
      "title": "Dolphin and Konqueror (KDE)",
      "level": 4,
      "content": "See Dolphin#File previews.\n\n"
    },
    {
      "title": "Use PCManFM to get thumbnails for other file types",
      "level": 4,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nPCManFM supports image thumbnails out of the box. However, in order to view thumbnails of other file types, PCManFM uses the information provided in the files located at /usr/share/thumbnailers. The packages which provide a thumbnailer usually add the corresponding .thumbnail file at /usr/share/thumbnailers. For example, in order to get thumbnails for OpenDocument files, you may install libgsf from the official repositories. For video files' thumbnails, the package ffmpegthumbnailer is required. For PDF files, you may install evince from the official repositories, which provides evince-thumbnailer and the corresponding file at /usr/share/thumbnailers. However, if you prefer not to install evince, you can also replicate the functionality of evince-thumbnailer using imagemagick's convert command. This is accomplished by creating a new file with the .thumbnailer extension (e.g.: imagemagick-pdf.thumbnailer) at /usr/share/thumbnailers with the following content:\n\n```\n[Thumbnailer Entry]\n  TryExec=convert\n  Exec=convert %i[0] -background \"#FFFFFF\" -flatten -thumbnail %s %o\n  MimeType=application/pdf;application/x-pdf;image/pdf;\n```\n\nFollowing this example, you can specify custom thumbnailers by creating your own .thumbnail files. Keep in mind that %i refers to the input file (the file which will have its thumbnail made), %o to the output file (the thumbnail image) and %s to the size of the thumbnail. These parameters will be automatically substituted with the corresponding data and passed to the thumbnailer program by PCManFM.\n\n"
    },
    {
      "title": "Archive files",
      "level": 3,
      "content": "To extract compressed files such as tarballs (.tar and .tar.gz) within a file manager, it will first be necessary to install a GUI archiver such as file-roller. See List of applications/Utilities#Archiving and compression tools for further information. An additional package such as unzip must also be installed to support the use of zipped .zip files. Once an archiver has been installed, files in the file manager may consequently be right-clicked to be archived or extracted.\n\nArchive files are mounted under folder /run/user/$(id -u)/gvfs/ with automatically created mount point that contains full path to the file in its name where all / are replaced with %252F and : replaced with %253A hex codes.\n\nExample of path to the mounted archive /full/path/to/file/name.zip\n\n```\n/run/user/$(id -u)/gvfs/archive:host=file%253A%252F%252F%252Ffull%252Fpath%252Fto%252Ffile%252Fname.zip\n```\n\n"
    },
    {
      "title": "NTFS read/write support",
      "level": 3,
      "content": "See the NTFS article.\n\n"
    },
    {
      "title": "Desktop notifications",
      "level": 3,
      "content": "Some file managers make use of desktop notifications to confirm various events and statuses like mounting, unmounting and ejection of removable media.\n\n"
    },
    {
      "title": "Enable Trash functionality on different filesystems (external drives)",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nMake trash directories .Trash-<uid> for each users on the top level of filesystems:\n\nFor example (mount point: /media/sdc1, uid: 1000, gid: 1000):\n\n```\n# mkdir /media/sdc1/.Trash-1000\n```\n\nand chown them:\n\n```\n# chown 1000:1000 /media/sdc1/.Trash-1000\n```\n\n"
    },
    {
      "title": "\"Not Authorized\" when attempting to mount drives",
      "level": 3,
      "content": "File managers using udisks require a polkit authentication agent. See polkit#Authentication agents.\n\n"
    },
    {
      "title": "Password required to access partitions",
      "level": 3,
      "content": "The need to enter a password to access other partitions or mounted removable media will likely be due to the default permission settings of udisks2. More specifically, permission may be set to the root account only, not the user account. See Udisks#Configuration for details.\n\n"
    },
    {
      "title": "Directories are not opened in the file manager",
      "level": 3,
      "content": "You may find that an application that is not a file manager, Audacious or Visual Studio Code for example, is set as the default application for opening directories — an application that specifies that it can handle the inode/directory MIME type in its desktop entry can become the default. You can query the default application for opening directories with the following command:\n\n```\n$ xdg-mime query default inode/directory\n```\n\nTo ensure that directories are opened in the file manager, run the following command:\n\n```\n$ xdg-mime default my_file_manager.desktop inode/directory\n```\n\nwhere my_file_manager.desktop is the desktop entry for your file manager — org.gnome.Nautilus.desktop for example.\n\n```\n/usr/share/applications/mimeapps.list\n```\n\n```\n[Default Applications]\ninode/directory=my_file_manager.desktop\n```\n\n"
    },
    {
      "title": "D-Bus",
      "level": 4,
      "content": "Some other applications instead use the org.freedesktop.FileManager1 D-Bus protocol (e.g. Firefox). The following shows a list of currently installed services supporting this protocol:\n\n```\n$ grep -R FileManager1 /usr/share/dbus-1/services\n```\n\nTo change what file manager is opened, copy the file to $XDG_DATA_HOME/dbus-1/services. Additionally, before the changes become active, kill the program currently implementing the D-Bus service.\n\n"
    },
    {
      "title": "Mount points created manually in /etc/fstab are not displayed",
      "level": 3,
      "content": "Due to this gvfs commit you need to create your mount point inside /media/your-user-name/.\n\n"
    }
  ]
}