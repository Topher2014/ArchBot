{
  "title": "Blisk Browser",
  "url": "https://wiki.archlinux.org/title/Blisk_Browser",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nRelated articles\n\n- Browser extensions\n- Chromium\n- Wayland\n\nBlisk is a specialized web browser, made for web designers and web developers, made by Estonian company SyncUI OÜ. The browser is free to use with limited functionality, but in order to get full access to the development features, a paid subscription is required. The Blisk browser is based on Chrome, using Chromium as its base.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the blisk-browser-stableAUR package.\n\n"
    },
    {
      "title": "Add-ons",
      "level": 3,
      "content": "Blisk is based on Chromium and has access to the Chrome Extension Store. However, while most extension should work just fine, there are possible issues, especially with more complex extensions, focusing on more Chrome specific functions and features. Hence, not all of these add-ons actually work with Blisk.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Configuration of Blisk is possible through the menu, in the same way as it works with Chromium. However, as with Chrome and other browsers, you can also access are more complex set of options and settings by using:\n\n```\nchrome://settings\n```\n\nThis gives access to some advanced and experimental settings, mainly meant for experimental features and debugging. Unless you know what you are doing, or are specifically told to change them, you can usually leave them alone.\n\n"
    },
    {
      "title": "KDE integration",
      "level": 3,
      "content": "For integration into Plasma install plasma-browser-integration. See KDE Plasma Browser Integration for more details.\n\n"
    },
    {
      "title": "PDF viewer plugin",
      "level": 3,
      "content": "Blisk, like Chromium and Google Chrome are bundled with the Chromium PDF Viewer plugin. If you do not want to use this plugin, check Download PDFs in chrome://settings/content/pdfDocuments.\n\n"
    },
    {
      "title": "Running on Xwayland",
      "level": 3,
      "content": "If you are using NVIDIA's proprietary driver, running Blisk on Xwayland may cause the GPU process to occasionally crash. To prevent the GPU process from crashing, add the following flags:\n\n```\n--use-angle=vulkan --use-cmd-decoder=passthrough\n```\n\n"
    },
    {
      "title": "Native Wayland support",
      "level": 3,
      "content": "Blisk supports native Wayland, the same way Chromium does. This can be enabled with the following flags [1]:\n\n```\n--ozone-platform-hint=auto\n```\n\nThe flag is also available via browser flags menu.\n\nThis will select Wayland's Ozone backend when in wayland session. So you can use a single desktop entry, if you switch between X11 and Wayland often.\n\nAdditionally, if you are having trouble with input methods, which may or may not apply to Blisk, you may also want to force newer GTK:\n\n```\n--gtk-version=4\n```\n\nIf you are using Fcitx5 and it does not work properly using the above flags, try using the --enable-wayland-ime flag instead of --gtk-version=4. [2]\n\n```\n--enable-wayland-ime --wayland-text-input-version=3\n```\n\n"
    },
    {
      "title": "Tips and tricks",
      "level": 2,
      "content": "The following tips and tricks should work for both Blisk and Chromium, unless explicitly stated.\n\n"
    },
    {
      "title": "chrome:// URLs",
      "level": 4,
      "content": "A number of tweaks can be accessed via Chrome URLs. See chrome://chrome-urls for a complete list.\n\n- chrome://flags - access experimental features such as WebGL and rendering webpages with GPU, etc.\n- chrome://extensions - view, enable and disable the currently used Chromium extensions.\n- chrome://gpu - status of different GPU options.\n- chrome://sandbox - indicate sandbox status.\n- chrome://version - display version and switches used to invoke the active /usr/bin/chromium.\n\nAn automatically updated, complete listing of Chromium / Blisk command-line parameters is available.\n\n"
    },
    {
      "title": "Blisk task manager",
      "level": 4,
      "content": "Shift+ESC can be used to bring up the browser task manager wherein memory, CPU, and network usage can be viewed. This is a helpful tool for developers or if your browser is running slow.\n\n"
    },
    {
      "title": "Search engines",
      "level": 4,
      "content": "Make sites like wiki.archlinux.org and wikipedia.org easily searchable by first executing a search on those pages, then going to Settings > Search and click the Manage search engines.. button. From there, \"Edit\" the Wikipedia entry and change its keyword to w (or some other shortcut you prefer). Now searching Wikipedia for \"Arch Linux\" from the address bar is done simply by entering \"w arch linux\".\n\nNote: **?** \n\n"
    },
    {
      "title": "Tmpfs",
      "level": 4,
      "content": "To limit Blisk from writing its cache to a physical disk, it is possible to define an alternative location via the --disk-cache-dir flag:\n\n```\n$ blisk --disk-cache-dir=\"$XDG_RUNTIME_DIR/chromium-cache\"\n```\n\nCache should be considered temporary and will not be saved after a reboot or hard lock. Another option is to setup the space in /etc/fstab:\n\n```\n/etc/fstab\n```\n\n```\ntmpfs\t/home/username/.cache\ttmpfs\tnoatime,nodev,nosuid,size=400M\t0\t0\n```\n\nAlternatively, create a symbolic link to /tmp. Make sure to delete Blisks's cache folder before you run the command, to avoid any problems:\n\n```\n$ ln -s /tmp /home/username/.cache/blisk\n```\n\nRelocate the browser profile to a tmpfs filesystem, including /tmp, or /dev/shm for improvements in application response as the entire profile is now stored in RAM.\n\nUse an active profile management tool such as profile-sync-daemon for maximal reliability and ease of use. It symlinks or bind mounts and syncs the browser profile directories to RAM. For more, see Profile-sync-daemon.\n\n"
    },
    {
      "title": "Launch a new browser instance",
      "level": 4,
      "content": "When you launch the browser, it first checks if another instance using the same data directory is already running. If there is one, the new window is associated with the old instance. If you want to launch an independent instance of the browser, you must specify a separate directory using the --user-data-dir parameter:\n\n```\n$ blisk --user-data-dir=/path/to/some/directory\n```\n\n"
    },
    {
      "title": "Directly open *.torrent files and magnet links with a torrent client",
      "level": 4,
      "content": "By default, Blisk downloads *.torrent files directly and you need to click the notification from the bottom-left corner of the screen in order for the file to be opened with your default torrent client. This can be avoided with the following method:\n\n- Download a *.torrent file.\n- Right-click the notification displayed at the bottom-left corner of the screen.\n- Check the \"Always Open Files of This Type\" checkbox.\n\nSee xdg-open to change the default association.\n\n"
    },
    {
      "title": "Reduce memory usage",
      "level": 4,
      "content": "By default, Blisk uses a separate OS process for each instance of a visited website. [3] However, you can specify command-line switches when starting Blisk to modify this behavior.\n\nFor example, to share one process for all instances of a website:\n\n```\n$ blisk --process-per-site\n```\n\nTo use a single process model:\n\n```\n$ blisk --single-process\n```\n\nIn addition, you can suspend or store inactive Tabs with extensions such as Tab Suspender and OneTab.\n\n"
    },
    {
      "title": "User Agent",
      "level": 4,
      "content": "”The User Agent can be arbitrarily modified at the start of Blisks's base instance via its --user-agent=\"[string]” parameter.\n\n"
    },
    {
      "title": "DOM Distiller",
      "level": 4,
      "content": "Chromium has a similar reader mode to Firefox. In Blisk, this is called DOM Distiller, which is an open source project. It is disabled by default, but can be enabled using the chrome://flags/#enable-reader-mode flag, which you can also make persistent.\n\nNot only does DOM Distiller provide a better reading experience by distilling the content of the page, it also simplifies pages for print. Even though the latter checkbox option has been removed from the print dialog, you can still print the distilled page, which basically has the same effect.\n\nAfter enabling the flag, you will find a new “Enter reader mode” menu item and corresponding icon in the address bar when Blisk thinks the website you are visiting could do with some distilling.\n\n"
    },
    {
      "title": "Forcing specific GPU",
      "level": 4,
      "content": "In multi-GPU systems, Blisk automatically detects which GPU should be used for rendering (discrete or integrated). This works 99% of the time, except when it does not — if an unavailable GPU is picked (for example, discrete graphics on VFIO GPU passthrough-enabled systems), chrome://gpu will complain about not being able to initialize the GPU process. On the same page below Driver Information there will be multiple GPUs shown (GPU0, GPU1, ...). There is no way to switch between them in a user-friendly way, but you can read the device/vendor IDs present there and configure Blisk to use a specific GPU with flags:\n\n```\n$ blisk --gpu-testing-vendor-id=0x8086 --gpu-testing-device-id=0x1912\n```\n\n...where 0x8086 and 0x1912 is replaced by the IDs of the GPU you want to use (as shown on the chrome://gpu page).\n\n"
    },
    {
      "title": "Import bookmarks from Firefox",
      "level": 4,
      "content": "To ease the transition, you can import bookmarks from Firefox into Blisk.\n\nNavigate Blisk to chrome://settings/importData\n\nIf Firefox is already installed on your computer, you can directly import bookmarks as well as many other things from Firefox.\n\nMake sure Mozilla Firefox is selected. Optionally, you can uncheck some unwanted items here. Click the Import and then Done. You are done with it.\n\nIf you import bookmarks from another PC, you have to export bookmarks from Firefox first.\n\nCtrl+Shift+o Import and Backup > Export Bookmarks To HTML in Firefox.\n\nThe procedure is pretty much the same. You need to go to chrome://settings/importData. However, this time, in the From drop-down menu, select Bookmarks HTML File and click the Choose File button and upload the desired bookmark file.\n\n"
    },
    {
      "title": "Enabling native notifications",
      "level": 4,
      "content": "Go to chrome://flags#enable-system-notifications and select Enabled.\n\n"
    },
    {
      "title": "Enabling autoscroll with middle mouse button",
      "level": 4,
      "content": "The autoscroll is still an experimental feature [5]. It is intended to be disabled by default if Blisk or Chromium-based browsers are not a development build and is running on a Linux environment. [6]\n\nTo enable this feature, launch your browser with the --enable-features=MiddleClickAutoscroll flag. In case you want to make the option persistent, see #Making flags persistent.\n\n- While setting --enable-blink-features works in the same way as only typing --enable-features, the browser instead may display a warning to state this is an unsupported flag, which \"stability and security will suffer\".\n- As an alternative you can add an extension like WHEELY with similar behavior from Chrome Web Store.\n\n"
    }
  ]
}