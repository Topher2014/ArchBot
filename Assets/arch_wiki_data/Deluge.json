{
  "title": "Deluge",
  "url": "https://wiki.archlinux.org/title/Deluge",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- rTorrent\n- systemd\n- systemd/User\n- iptables\n- OpenSSL\n\nDeluge is a full-featured BitTorrent application written in Python 3. It has a variety of features, including but not limited to: a client/server model, DHT support, magnet links, a plugin system, UPnP support, full-stream encryption, proxy support, and three different client applications. When the server daemon is running, users can connect to it via a console client, a GTK-based GUI, or a Web-based UI. A full list of features can be viewed here.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install deluge and optionally install deluge-gtk. Be sure to read and install the optional dependencies for the gtk client deluge-gtk to enable desktop notifications and appindicator notifications.\n\n"
    },
    {
      "title": "Daemon",
      "level": 2,
      "content": "Deluge works with a client/server model. The server is referred to as the daemon and runs in the background, waiting for a client (console, gtk, or web-based) to connect. The client can disconnect, but the daemon continues to run, transferring the torrent files in the queue.\n\nUpon installation, pacman will create a non-privileged deluge user. This user is meant to run the provided daemon, /usr/bin/deluged. Users are able to start the daemon several ways:\n\n1. Systemd system service (runs as the deluge user).\n1. Systemd user service (runs as another user).\n1. Running it directly (runs as another user).\n\n"
    },
    {
      "title": "System service",
      "level": 3,
      "content": "Start/enable deluged.service.\n\n"
    },
    {
      "title": "User service",
      "level": 3,
      "content": "A user service will allow deluged to run when systemd --user is started. This is accomplished by creating a user service file:\n\n```\n/etc/systemd/user/deluged.service\n```\n\n```\n[Unit]\nDescription=Deluge Daemon\nAfter=network.target\n\n[Service]\nExecStart=/usr/bin/deluged -d -P %h/.config/deluge/deluge.pid\n\n[Install]\nWantedBy=default.target\n```\n\nThe deluge user service can now be started and enabled by the user.\n\nThe deluged user service can also be placed in $HOME/.config/systemd/user/. See systemd/User for more information on user services.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Deluge can be configured through any of the clients as well as by simply editing the JSON-formatted configuration files located in $HOME/.config/deluge/. $HOME refers to the home directory of the user that deluged is running as. This means that if the daemon is running as the deluge user, the default home directory is /srv/deluge/.\n\n"
    },
    {
      "title": "Shared directories for downloads/uploads",
      "level": 3,
      "content": "When using the systemd deluged.service, the shared directory/directories need to be shared so that other users on the system are able to access the data. The general strategy is to:\n\n1. Change the owner and group of the shared directory to deluge:deluge.\n1. Set the File permissions and attributes on the shared directory to at least 770.\n1. Add your user (or the user/users needing to access the files) to the deluge group.\n\nExample using /mnt/torrent_data:\n\n```\n# chown -R deluge:deluge /mnt/torrent_data\n# chmod 770 /mnt/torrent_data\n# usermod -a -G deluge YOURUSER\n```\n\n"
    },
    {
      "title": "Firewall",
      "level": 3,
      "content": "Deluge requires at least one port open for TCP and UDP to allow incoming connections for seeding. If deluge complains that it cannot open a port for incoming connections, users must open port(s) to be used. In this example, ports 56881 through 56889 are opened for TCP and UDP:\n\n```\n# iptables -A INPUT -p tcp --dport 56881:56889 -j ACCEPT\n# iptables -A INPUT -p udp --dport 56881:56889 -j ACCEPT\n```\n\nUsers who are behind a NAT router/firewall must setup the corresponding ports to be forwarded. UPnP may also be used, but that will not work with the local firewall on the system because it requires predefined ports.\n\nOn many default configurations, when using iptables with connection tracking (conntrack) set to drop \"INVALID\" packets, sometimes a great deal of legitimate torrent traffic (especially DHT traffic) is dropped as \"invalid.\" This is typically caused by either conntrack's memory restrictions, or from long periods between packets among peers (see [1] and [2]). Symptoms of this problem include torrents not seeding, especially when the torrent client has been active for more than a day or two continuously, and consistently low overhead traffic (in one experience, less than 3KiB/s in either in or out) with DHT enabled, even when deluge/libtorrent has been continuously running for more than forty-eight hours and many torrents are active. For this reason, it may be necessary to disable connection tracking of all torrent traffic for optimal performance, even with the listening ports set to ACCEPT (as the causes for dropping INVALID packets, for instance conntrack's memory problems, may supercede any rules to accept traffic to/from those ports).\n\nTo fully turn off connection tracking for torrents, specify ports for both Incoming and Outgoing traffic in Deluge, for instance, 56881-56889 for incoming connections and 56890-57200 for outgoing connections.\n\nThen issue the following commands (after substituting the relevant port ranges):\n\n```\n# iptables -t raw -I PREROUTING -p udp --dport 56881:57200 -j NOTRACK\n# iptables -t raw -I OUTPUT -p udp --sport 56881:57200 -j NOTRACK\n# iptables -t raw -I PREROUTING -p tcp --dport 56881:57200 -j NOTRACK\n# iptables -t raw -I OUTPUT -p tcp --sport 56881:57200 -j NOTRACK\n# iptables -I INPUT -p icmp --icmp-type 3 -j ACCEPT\n# iptables -I INPUT -p icmp --icmp-type 4 -j ACCEPT\n# iptables -I INPUT -p icmp --icmp-type 11 -j ACCEPT\n# iptables -I INPUT -p icmp --icmp-type 12 -j ACCEPT\n```\n\nThe ICMP allowances are desirable because once connection tracking is disabled on those ports, those important ICMP messages (types 3 (Destination Unreachable), 4 (Source Quench), 11 (Time Exceeded) and 12 (Parameter Problem)) would otherwise be declared INVALID themselves (as netfilter would not know of any connections that they are associated with), and they would potentially be blocked.\n\n"
    },
    {
      "title": "Plugins",
      "level": 3,
      "content": "A complete list of plugins can be found on the Deluge Wiki\n\nltConfig is a useful plugin that allows direct modification to libtorrent settings and has preset support.\n\nIt offers additional settings like announce_ip (IP to announce to trackers), half_open_limit (Remove maximum half-open connections limit) and more possible privacy and (seed) speedboost features.\n\n"
    },
    {
      "title": "Console",
      "level": 3,
      "content": "The console client can be run with:\n\n```\n$ deluge-console\n```\n\nEnter the help command for a list of available commands.\n\n"
    },
    {
      "title": "GTK",
      "level": 3,
      "content": "The GTK client can be run with:\n\n```\n$ deluge-gtk\n```\n\nor:\n\n```\n$ deluge\n```\n\nThe GTK client has a number of useful plugins:\n\n- AutoAdd - Monitors directories for .torrent files\n- Blocklist - Downloads and imports an IP blocklist\n- Execute - Event-based command execution\n- Extractor - Extracts archived files upon completion (beware of random high disk I/O usage)\n- Label - Allows labels to be assigned to torrents, as well as state, tracker, and keyword filters\n- Notifications - Provides notifications (email, pop-up, blink, sound) for events as well as other plugins\n- Scheduler - Limits active torrents and their speed on a per-hour, per-day basis\n- WebUi - Allows the Web UI to be started via the GTK client\n\n"
    },
    {
      "title": "Web",
      "level": 3,
      "content": "Just as with deluge daemon mentioned above, the web client can be started several different ways:\n\n1. Systemd system service (runs as the deluge user).\n1. Systemd user service (runs as another user).\n1. Running it directly (runs as another user).\n\n- The default password for the web interface is deluge.\n- The web client offers many of the same features of the GTK UI, including the plugin system.\n- It is recommended to use HTTPS for the Web client to protect against a man-in-the-middle attack.\n- Users may be greeted by a warning from the browser that the SSL certificate is untrusted. Add an exception to this in the browser to continue on. See the OpenSSL page for information on creating your own certificate.\n- If multiple users are running a daemon, the default port (8112) will need to be changed for each user.\n\nOnce running, users may connect to the web client by browsing to http://127.0.0.1:8112, if using encryption on https://127.0.0.1:8112 and/or by the host IP-address.\n\n"
    },
    {
      "title": "System service",
      "level": 4,
      "content": "Deluge ships with deluge-web.service, a systemd system unit, which is used to start the Deluge Web UI. The Deluge Web UI uses a Connection Manager, allowing managing of multiple Deluge clients running under the same host or on an entirely different one. Remember to start and optionally enable the deluged service to allow the Web UI connect to the host Deluge client.\n\n"
    },
    {
      "title": "User service",
      "level": 4,
      "content": "A user service will allow deluge-web to run when systemd --user is started. This is accomplished by creating a user service file:\n\n```\n/etc/systemd/user/deluge-web.service\n```\n\n```\n[Unit]\nDescription=Deluge Web UI\nAfter=deluged.service\n\n[Service]\nExecStart=/usr/bin/deluge-web -d --ssl\n\n[Install]\nWantedBy=default.target\n```\n\nThe deluge user service can now be started and enabled by the user.\n\nThe deluge-web user service can also be placed in $HOME/.config/systemd/user/. See systemd/User for more information on user services.\n\n"
    },
    {
      "title": "Headless setup",
      "level": 2,
      "content": "Deluge is quite useful on a headless system, often referred to as a seed box, because of its client/server model. To set up deluge on a headless system, set up the daemon as shown above.\n\n"
    },
    {
      "title": "Create a user",
      "level": 3,
      "content": "To allow interaction with the server remotely, create a user in $HOME/.config/deluge/auth. For example:\n\n```\n$ echo \"delugeuser:p422WoRd:10\" >> $HOME/.config/deluge/auth\n```\n\nNote: **not** \n\n- The user/password created does not have to match any system users, and to maintain good security practices it should not!\n- The user/password in this file are not hashed or salted like in the web client config.\n- The user/password must match the user/password found in /srv/deluge/.config/deluge/auth otherwise the authentication fails.\n\nThe number 10 corresponds to a level of Admin. Refer to the following table for additional values:\n\nTable content:\nLevel Name | Level Value\nNone | 0\nRead-Only | 1\nNormal | 5\nAdmin | 10\n\n"
    },
    {
      "title": "Allow remote",
      "level": 3,
      "content": "The default settings disallow remote connections. Change the \"allow_remote\" setting in $HOME/.config/deluge/core.conf:\n\n```\n\"allow_remote\": true\n```\n\nNote: 1. $HOME/.config/deluge/core.conf is automatically created at the first configuration change, if it does not exist, set the value via deluge-console:\n\n1. $HOME/.config/deluge/core.conf is automatically created at the first configuration change, if it does not exist, set the value via deluge-console:\n\n```\nconfig --set allow_remote true\n```\n\n2. Changes made while the service is running will not be read into the daemon, therefore, stop the service before making changes to this file.\n\n"
    },
    {
      "title": "Firewall",
      "level": 3,
      "content": "Open the port for remote access. The following example uses the default daemon port (58846):\n\n```\n# iptables -A INPUT -p tcp --dport 58846 -j ACCEPT\n```\n\nSee iptables for more information on firewall rules.\n\nUsers behind a NAT router/firewall must forward the port to access the daemon from outside the network if this behavior is desired.\n\n"
    },
    {
      "title": "Connect",
      "level": 3,
      "content": "In the console client:\n\n```\nconnect <host>[:<port>] <user> <password>\n```\n\nIn the GTK client, Edit > Connection Manager > Add.\n\nIn the Web client, Connection Manager > Add.\n\n"
    },
    {
      "title": "SSH Tunnel",
      "level": 4,
      "content": "An SSH tunnel can be created to use an encrypted connection on any client. This requires an extra loopback address to be added, but this can be automated at boot. Without this step, the connection would be considered local. The actual command to establish an SSH tunnel cannot be automated as it requires user input. There are a few possible ways to go about doing that.\n\n```\n/etc/systemd/system/extra_lo_addr.service\n```\n\n```\n[Unit]\nDescription=extra loopback address\nWants=network.target\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/sbin/ip addr add 127.0.0.2/8 dev lo\nExecStop=/sbin/ip addr del 127.0.0.2/8 dev lo\n\n[Install]\nWantedBy=multi-user.target\n```\n\n```\n$ ssh -fNL 127.0.0.2:58846:localhost:58846 <ssh host>\n```\n\nThe port 58846 should be replaced with the port the deluge server is running on and <ssh host> should be replaced with the server hosting both deluge and the SSH server.\n\n"
    },
    {
      "title": "No module named service_identity",
      "level": 3,
      "content": "Upon running deluged or deluge-console, one may receive a message like the following:\n\n```\n:0: UserWarning: You do not have a working installation of the service_identity module: 'No module named service_identity'.  \nPlease install it from <https://pypi.python.org/pypi/service_identity> and make sure all of its dependencies are satisfied.  \nWithout the service_identity module and a recent enough pyOpenSSL to support it, Twisted can perform only rudimentary TLS \nclient hostname verification.  Many valid certificate/hostname mappings may be rejected.\n```\n\npython-service-identity, an optional dependency to python-twisted, is likely missing. See FS#43806.\n\n"
    },
    {
      "title": "Web ui .torrent upload does not work",
      "level": 3,
      "content": "Users running the web ui behind a reverse proxy need to allow embedding for .torrent upload to work (X-Frame-Options ALLOW)\n\n"
    },
    {
      "title": "Execute script not found or not executable",
      "level": 3,
      "content": "When using the Execute plugin, the following error message is logged when deluge tries to execute the script:\n\n```\n[ERROR   ][deluge_execute.core           :145 ] Execute script not found or not executable\n```\n\nIf deluged is running as a system service, note that it likely will not be able to access the home directory of other users. Consider putting custom scripts in /usr/local/bin/.\n\nScript permission issues can be debugged as the deluge user:\n\n```\n[deluge]$ /path/to/script\n```\n\n"
    },
    {
      "title": "Torrents list has completely disappeared after an unexpected shutdown",
      "level": 3,
      "content": "This usually means the state file has gotten corrupted. It has been an intermittent issue since last decade. There should be one backup state file along with a copy of all the previously-running torrents in your deluge profile folder (for systemd users this is usually /srv/deluge/.config/deluge/state) that can be restored to remedy this issue. However, it can get overwritten pretty quickly, especially if you only notice your torrents list after several reboots. A suggested course of action to keep it from happening again is to automate a daily backup of the state file and the torrents.\n\n"
    },
    {
      "title": "Console is unusable",
      "level": 3,
      "content": "If you run Deluge using the deluge user, you should access deluge-console via the deluge user, or else you can run into various Python exceptions and bugs.\n\n```\n[deluge]$ deluge-console\n```\n\nor\n\n```\n# deluge-console -c /srv/deluge/.config/deluge\n```\n\n"
    },
    {
      "title": "See Also",
      "level": 2,
      "content": "- Deluge homepage\n- Deluge wiki\n\n"
    }
  ]
}