{
  "title": "Downgrading packages",
  "url": "https://wiki.archlinux.org/title/Downgrading_packages",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Arch build system\n- makepkg\n- pacman\n- Arch Linux Archive\n\nBefore downgrading a single or multiple packages, consider why you wish to do so. If it is due to a bug, follow the bug reporting guidelines. I.e. search the Arch Linux Bugtracker for existing tasks and if there is none, add a new task. It is better to correct bugs, or at least warn other users of possible issues.\n\n- Downgrading one package may require that its dependencies be downgraded as well. When the number of packages to downgrade is large, consider using a snapshot. See Arch Linux Archive#How to restore all packages to a specific date.\n- Be careful with changes to configuration files and scripts. For now pacman will handle this for us, as long as we do not bypass its safeguards.\n- If a downgrade involves a soname change, all dependencies may need downgrading or rebuilding too.\n\n"
    },
    {
      "title": "Using the pacman cache",
      "level": 3,
      "content": "If a package was installed at an earlier stage, and the pacman cache was not cleaned, install an earlier version from /var/cache/pacman/pkg/.\n\nThis process will remove the current package and install the older version. Dependency changes will be handled, but pacman will not handle version conflicts. If a library or other package needs to be downgraded with the packages, please be aware that you will have to downgrade this package yourself as well.\n\n```\n# pacman -U file:///var/cache/pacman/pkg/package-old_version.pkg.tar.type\n```\n\nNote that type will be xz for older package builds, and zst for those following the 2020 change.\n\nOnce the package is reverted, temporarily add it to the IgnorePkg section of pacman.conf, until the difficulty with the updated package is resolved.\n\n"
    },
    {
      "title": "Downgrading the kernel",
      "level": 3,
      "content": "In case of issue with a new kernel, the Linux packages can be downgraded to the last working ones #Using the pacman cache. Go into the directory /var/cache/pacman/pkg and downgrade at least linux, linux-headers and any kernel modules. For example:\n\n```\n# pacman -U file://linux-4.15.8-1-x86_64.pkg.tar.xz file://linux-headers-4.15.8-1-x86_64.pkg.tar.xz file://virtualbox-host-modules-arch-5.2.8-4-x86_64.pkg.tar.xz\n```\n\n```\n# arch-chroot /mnt\n```\n\n"
    },
    {
      "title": "Arch Linux Archive",
      "level": 3,
      "content": "The Arch Linux Archive is a daily snapshot of the official repositories. It can be used to install a previous package version, or restore the system to an earlier date.\n\n"
    },
    {
      "title": "Rebuild the package",
      "level": 3,
      "content": "If the package is unavailable, find the correct PKGBUILD and rebuild it with makepkg.\n\nFor packages from the official repositories, retrieve the PKGBUILD with ABS and change the software version. Alternatively, find the package on the Packages website, click \"View Changes\", and navigate to the desired version. The necessary files can then be downloaded from the directory so that the package can be rebuilt.\n\nSee also Arch build system#Using the pkgctl tool.\n\nOld AUR packages can be built by checking out an old commit in the AUR package Git repository. For pre-2015 AUR3 PKGBUILDs, see Arch User Repository#Git repositories for AUR3 packages.\n\n"
    },
    {
      "title": "Automation",
      "level": 3,
      "content": "- downgrade â€” A Bash script to downgrade one (or multiple) packages, by using the pacman cache or the Arch Linux Archive. See downgrade(8) for details.\n\n"
    },
    {
      "title": "Return from [testing]",
      "level": 2,
      "content": "See Official repositories#Disabling testing repositories.\n\n"
    }
  ]
}