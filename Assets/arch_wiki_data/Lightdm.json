{
  "title": "Lightdm",
  "url": "https://wiki.archlinux.org/title/Lightdm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Display manager\n- GDM\n- LXDM\n\nLightDM is a cross-desktop display manager. Its key features are:\n\n- Cross-desktop - supports different desktop technologies.\n- Supports different display technologies (X, Mir, Wayland ...).\n- Lightweight - low memory usage and high performance.\n- Supports guest sessions.\n- Supports remote login (incoming - XDMCP, VNC, outgoing - XDMCP, PAM).\n- Comprehensive test suite.\n- Low code complexity.\n\nMore details about LightDM's design can be found here.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the lightdm package or lightdm-gitAUR for the development version.\n\n"
    },
    {
      "title": "Greeter",
      "level": 3,
      "content": "You will probably want to install a greeter. A greeter is a GUI that prompts the user for credentials, lets the user select a session, and so on. It is possible to use LightDM without a greeter, but only if an automatic login is configured; otherwise you will need to install xorg-server and one of the greeter packages below.\n\nGTK-based greeters:\n\n- LightDM GTK Greeter — A GTK greeter for LightDM. This is the default greeter LightDM attempts to use, unless configured otherwise.\n\n- lightdm-pantheon-greeter — A greeter from the elementary OS project.\n\n- slick-greeter — A GTK based greeter focused more on appearance than lightdm-gtk-greeter, originally forked from the Unity greeter, and default in Linux Mint.\n\n- Web Greeter for LightDM — A greeter that uses Webkit2 for theming. The project's development has ceased since 2019-05-22.\n\n- Mini-Greeter — A minimal, configurable, single-user GTK3 greeter.\n\n- Nody Greeter — LightDM greeter that allows to create wonderful themes with web technologies. Made in Node.js with Electron.js and NodeGTK.\n\nQt-based greeters:\n\n- Web Greeter — A modern, visually appealing greeter that uses PyQtWebEngine for theming. It supersedes lightdm-webkit2-greeter\n\n- LightDM KDE Greeter — A LightDM greeter by KDE.\n\nOther greeters:\n\n- lightdm-deepin-greeter — A greeter from the Deepin project.\n\n- LightDM Elephant Greeter — A small and simple greeter that runs in the cage Wayland compositor per default.\n\nThemes for lightdm-webkit2-greeter:\n\n- Litarvan's LightDM WebKit2 theme — A modern and full-featured theme.\n\n- Aether — A sleek, straightforward Arch Linux themed login screen.\n\nThemes for web-greeterAUR and nody-greeterAUR:\n\n- Shikai — Aesthetic, customizable theme.\n\nYou can set the default greeter by changing the [Seat:*] section of the LightDM configuration file, like so:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[Seat:*]\n...\ngreeter-session=lightdm-yourgreeter-greeter\n...\n```\n\nOne way to check which greeters are available is to list the files in the /usr/share/xgreeters directory; each .desktop file represents an available greeter. In this example, the lightdm-gtk-greeter and lightdm-webkit2-greeter greeters are available:\n\n```\n$ ls -1 /usr/share/xgreeters/\n```\n\n```\nlightdm-gtk-greeter.desktop\nlightdm-webkit2-greeter.desktop\n```\n\n"
    },
    {
      "title": "Enabling LightDM",
      "level": 2,
      "content": "Make sure to enable lightdm.service so LightDM will be started at boot; see also Display manager#Loading the display manager.\n\n"
    },
    {
      "title": "Command line tool",
      "level": 2,
      "content": "LightDM offers a command line tool, dm-tool, which can be used to lock the current seat, switch sessions, etc, which is useful with 'minimalist' window managers and for testing. To see a list of available commands, execute:\n\n```\n$ dm-tool --help\n```\n\n"
    },
    {
      "title": "User switching",
      "level": 3,
      "content": "LightDM's dm-tool command can be used to allow multiple users to be logged in on separate ttys. The following will send a signal requesting that the current session be locked and then will initiate a switch to LightDM's greeter, allowing a new user to log in to the system.\n\n```\n$ dm-tool switch-to-greeter\n```\n\n"
    },
    {
      "title": "Testing",
      "level": 2,
      "content": "First, install xorg-server-xephyr.\n\nThen, run LightDM as an X application:\n\n```\n$ lightdm --test-mode --debug\n```\n\n"
    },
    {
      "title": "Optional configuration and tweaks",
      "level": 2,
      "content": "LightDM can be configured by modifying its configuration file, /etc/lightdm/lightdm.conf.\n\nSome greeters have their own configuration files. For example:\n\nlightdm-gtk-greeter: /etc/lightdm/lightdm-gtk-greeter.conf (or you can use the lightdm-gtk-greeter-settings gui).\n\nlightdm-webkit2-greeter: /etc/lightdm/lightdm-webkit2-greeter.conf\n\n"
    },
    {
      "title": "X session wrapper",
      "level": 3,
      "content": "Note: **This article or section is a candidate for merging with Xprofile.** This article or section is a candidate for merging with Xprofile.\n\nThis article or section is a candidate for merging with Xprofile.\n\nIf you are migrating from xinit, you will notice that the display is not launched by your shell. This is because, as opposed to your shell starting the display (and the display inheriting the environment of your shell), LightDM starts your display and does not source your shell. LightDM launches the display by running a wrapper script and that finally exec's your graphic environment. By default, /etc/lightdm/Xsession is run.\n\n"
    },
    {
      "title": "Environment variables",
      "level": 4,
      "content": "The script checks and sources /etc/profile, ~/.profile, /etc/xprofile and ~/.xprofile, in that order. If you are using a shell that does not source any of these files, you can create an ~/.xprofile to do so. (In this example, the login shell is zsh)\n\n```\n~/.xprofile\n```\n\n```\n#!/bin/sh\n[ -f ~/.config/zsh/.zshenv ] && . ~/.config/zsh/.zshenv\n```\n\nIf you have shell variables that are important for your display (such as Gtk or QT themes, GNUPG location, configuration overrides, etc.) this will let your graphic environment have access to your environment without having to be launched by your login shell.\n\n"
    },
    {
      "title": "Keymap",
      "level": 4,
      "content": "The script runs Xkbmap with arguments provided in files /etc/X11/Xkbmap, ~/.Xkbmap. If those files are not found, it runs xmodmap with /etc/X11/Xmodmap, ~/.Xmodmap. If using xkbmap, the files are parsed using cat. The following example works\n\n```\n~/.Xmodmap\n```\n\n```\n-model pc105 -layout us,us,tr -variant ,dvorak,f -option grp:caps_toggle\n```\n\nOtherwise, the session inherits the system default mapping of X11. This mapping can be defined in the xorg configuration files, either manually or with localectl set-x11-keymap. See Xorg/Keyboard configuration#Setting keyboard layout.\n\n"
    },
    {
      "title": "Multiple keyboard layouts in lightdm-gtk-greeter",
      "level": 4,
      "content": "To enable users switch between pre-defined keyboard layouts on the log-in screen enable the drop-down menu and configure the layouts. Either use the lightdm-gtk-greeter-settings gui or edit the configuration file directly:\n\n```\n/etc/lightdm/lightdm-gtk-greeter.conf\n```\n\n```\n[greeter]\nindicators = ~host;~spacer;~clock;~spacer;~layout;~language;~session;~a11y;~power\n```\n\nUse localectl to set multiple layouts, e.g. de and its “variant” neo with the latter as primary:\n\n```\n# localectl --no-convert set-x11-keymap de,de pc105 neo,\n```\n\nNote the trailing comma which implies a blank variant for the second de.\n\n"
    },
    {
      "title": "Changing background images/colors",
      "level": 3,
      "content": "You can set the background to a hex color or an image. Some greeters offer more robust background options like background selection from the login screen, random backgrounds, etc.\n\n"
    },
    {
      "title": "GTK greeter",
      "level": 4,
      "content": "You can use the lightdm-gtk-greeter-settings gui.\n\nUsers wishing to customize the wallpaper on the greeter screen need to edit /etc/lightdm/lightdm-gtk-greeter.conf and define the background variable under the [greeter] section. For example:\n\n```\n/etc/lightdm/lightdm-gtk-greeter.conf\n```\n\n```\n[greeter]\nbackground=/usr/share/pixmaps/black_and_white_photography-wallpaper-1920x1080.jpg\n```\n\nGTK3 themes can be specified with the theme-name variable in the [greeter] section. The icon and cursor theme can be set in the same way, as shown in the following example:\n\n```\n/etc/lightdm/lightdm-gtk-greeter.conf\n```\n\n```\n[greeter]\ntheme-name = Tela\nicon-theme-name = Tela\ncursor-theme-name = Tela\ncursor-theme-size = 32\nfont-name = Cantarell 20\n```\n\nUsing lightdm-gtk-greeter out of the box in a HiDPI or 4K monitor, will render very small text and dialog boxes, it is possible to force a DPI setting like this:\n\n```\n/etc/lightdm/lightdm-gtk-greeter.conf\n```\n\n```\n[greeter]\nxft-dpi = 192\n```\n\nIn this case \"192\" means twice the 96 DPI setting of the screen, which is equivalent to the 2X Scale setting in other graphic environments. The value can be obtained with xdpyinfo | grep dots in Xorg, for example.\n\n"
    },
    {
      "title": "Webkit2 greeter",
      "level": 4,
      "content": "The lightdm-webkit2-greeter allows you to choose a background image directly on the login screen. It also offers an option to display a random image each time it starts if you use the Material theme. By default, images are sourced from /usr/share/backgrounds. You can change the background images directory by editing lightdm-webkit2-greeter.conf. For example:\n\n```\n/etc/lightdm/lightdm-webkit2-greeter.conf\n```\n\n```\n[branding]\nbackground_images = /usr/share/backgrounds\n```\n\n"
    },
    {
      "title": "Slick Greeter",
      "level": 4,
      "content": "Use the lightdm-settingsAUR GUI\n\n"
    },
    {
      "title": "Changing your avatar",
      "level": 3,
      "content": "First, make sure the accountsservice package is installed, then set it up as follows, replacing username with the desired user's login name.\n\n- Create the file /var/lib/AccountsService/icons/username.png using a 96x96 PNG image file. Different image file formats are possible too, e.g., JPEG.\n- Alternatively, create the image file as /home/username/.face and skip the next step if the defaults already point to the user home directory path\n- Edit or create the account settings file /var/lib/AccountsService/users/username, and add the lines\n\n```\n[User]\nIcon=/var/lib/AccountsService/icons/username.png\n```\n\nThe filename here should point to the icon created in the first step, so adjust the filename extension if necessary.\n\n"
    },
    {
      "title": "Sources of Arch-centric 64x64 icons",
      "level": 3,
      "content": "The archlinux-artworkAUR package contains some nice examples that install to /usr/share/archlinux/icons and that can be copied to /usr/share/icons/hicolor/64x64/devices as follows:\n\n```\n# find /usr/share/archlinux/icons -name \"*64*\" -exec cp {} /usr/share/icons/hicolor/64x64/devices \\;\n```\n\nAfter copying, the archlinux-artworkAUR package can be removed.\n\n"
    },
    {
      "title": "Enabling autologin",
      "level": 3,
      "content": "Edit the LightDM configuration file and ensure these lines are uncommented and correctly configured:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[Seat:*]\nautologin-user=username\n```\n\nYou must be part of the autologin group to be able to login automatically without entering your password:\n\n```\n# groupadd -r autologin\n# gpasswd -a username autologin\n```\n\nLightDM logs in using the session specified in the ~/.dmrc of the user getting logged in automatically. To override this file, specify autologin-session in lightdm.conf:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[Seat:*]\nautologin-user=username\nautologin-session=session\n```\n\nThe list of valid session names can be found by listing /usr/share/xsessions/*.desktop for X's sessions and /usr/share/wayland-sessions/*.desktop for Wayland's.\n\n"
    },
    {
      "title": "Enabling interactive passwordless login",
      "level": 3,
      "content": "LightDM goes through PAM so you must configure the lightdm configuration of PAM:\n\n```\n/etc/pam.d/lightdm\n```\n\n```\n#%PAM-1.0\nauth        sufficient  pam_succeed_if.so user ingroup nopasswdlogin\nauth        include     system-login\n...\n```\n\nYou must then also be part of the nopasswdlogin group and the autologin group to be able to login interactively without entering your password:\n\n```\n# groupadd -r nopasswdlogin\n# groupadd -r autologin\n# gpasswd -a username nopasswdlogin\n# gpasswd -a username autologin\n```\n\nTo create a new user account that logs in automatically and additionally able to login again without a password the user can be created with supplementary membership of both groups, e.g.:\n\n```\n# useradd -mG autologin,nopasswdlogin username\n```\n\n"
    },
    {
      "title": "Enabling guest sessions",
      "level": 3,
      "content": "To enable guest sessions in LightDM (without changing your system configuration) you need at least two things:\n\n1. a guest-account-script: defaults to guest-account and accepts two commands: add (to create a temporary guest system account and returns the user name of the created account) remove account name(to delete the corresponding account)\n1. an autologin group to which the created guest account must be added (cf. /etc/pam.d/lightdm-autologin)\n\n- add (to create a temporary guest system account and returns the user name of the created account)\n- remove account name(to delete the corresponding account)\n\nThere are two AUR packages that enable guest sessions in lightdm:\n\n- lightdm-guestAUR which provides the (largely unmodified) upstream guest-session script as well as lightdm itself.\n- lightdm-guest-accountAUR which provides only a minimal version of the script.\n\n"
    },
    {
      "title": "Hiding system and services users",
      "level": 3,
      "content": "To prevent system users from showing-up in the login, install the optional dependency accountsservice, or add the user names to /etc/lightdm/users.conf under hidden-users. The first option has the advantage of not needing to update the list when more users are added or removed.\n\n"
    },
    {
      "title": "Migrating from SLiM",
      "level": 3,
      "content": "Note: **This article or section is a candidate for merging with Display Manager.** This article or section is a candidate for merging with Display Manager.\n\nThis article or section is a candidate for merging with Display Manager.\n\nMove the contents of xinitrc to xprofile, removing the call to start the window manager or desktop environment.\n\n"
    },
    {
      "title": "Login using ~/.xinitrc",
      "level": 3,
      "content": "See Display manager#Run ~/.xinitrc as a session.\n\n"
    },
    {
      "title": "NumLock on by default",
      "level": 3,
      "content": "Install the numlockx package and then edit /etc/lightdm/lightdm.conf:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[Seat:*]\ngreeter-setup-script=/usr/bin/numlockx on\n```\n\n"
    },
    {
      "title": "Default session",
      "level": 3,
      "content": "Lightdm, like other DMs, stores the last-selected xsession in ~/.dmrc. See Display manager#Session configuration for more info.\n\n"
    },
    {
      "title": "GTK greeter",
      "level": 4,
      "content": "Users need to edit /etc/lightdm/lightdm-gtk-greeter.conf and enter a value for the position variable. It accepts x and y values, either absolute (in pixels) or relative (in percent). Each value can also have an additional anchor location for the window, start, center and end separated from the value by a comma.\n\nExample:\n\n```\nposition=200,start 50%,center\n```\n\n"
    },
    {
      "title": "VNC Server",
      "level": 3,
      "content": "Lightdm can also be used to connect to via VNC. Make sure to install tigervnc on the server side and optionally as your VNC client on the client PC.\n\nSetup an authentication password on the server as root:\n\n```\n# vncpasswd /etc/vncpasswd\n```\n\nEdit the LightDM configuration file as shown below. Note that listen-address configures the VNC to only listen to connections from localhost. This is used to only allow connections via SSH and port forwarding. On the SSH client, make sure that you use localhost:5900 for the tunnel destination; using 127.0.0.1:5900 or ::1:5900 is not reliable on dual stack network connections. If you want to allow insecure connections you can disable this setting.\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[VNCServer]\nenabled=true\ncommand=Xvnc -rfbauth /etc/vncpasswd\nport=5900\nlisten-address=localhost\nwidth=1024\nheight=768\ndepth=24\n```\n\nNow open an SSH tunnel and connect to localhost as described in TigerVNC#On the client.\n\n"
    },
    {
      "title": "Lock the screen using light-locker",
      "level": 3,
      "content": "light-locker is a simple screen locker using LightDM to authenticate the user. Once installed and running, you can lock your session via:\n\n```\n$ light-locker-command -l\n```\n\nThis requires light-locker to be started at the beginning of your session. By default, this is enabled through XDG Autostart. See Autostarting for more options.\n\n"
    },
    {
      "title": "Multiple-monitor setup",
      "level": 3,
      "content": "Sometimes LightDM does not set the monitor resolution correctly on a multiple-monitor setup. The following Xorg configuration works with two monitors: a large primary screen on the left side, and a secondary smaller screen to its right. The order can be reversed and tweaked.\n\n```\n/etc/X11/xorg.conf.d/52-resolution-fix.conf\n```\n\n```\nSection \"Monitor\"\n    Identifier \"DP1\"\n    Option \"PreferredMode\" \"3840x2160\"\n    Option \"Primary\" \"1\"\nEndSection\nSection \"Monitor\"\n    Identifier \"eDP1\"\n    Option \"PreferredMode\" \"1920x1080\"\n    Option \"RightOf\" \"DP1\"\nEndSection\n```\n\nThis makes the display-setup-script tweaks from /etc/lightdm/lightdm.conf redundant.\n\n"
    },
    {
      "title": "Autologin does not work",
      "level": 3,
      "content": "Ensure autologin-user= in /etc/lightdm/lightdm.conf contain the correct values. Trailing whitespace will cause errors.\n\nIf autologin fails with a blank screen or if the login screen immediately returns, you may need to set logind-check-graphical=true.\n\nYou can also install lightdm-autologin-greeter-gitAUR for this special purpose.\n\n"
    },
    {
      "title": "Viewing current configuration",
      "level": 3,
      "content": "To view effective configuration, run:\n\n```\n$ lightdm --show-config\n```\n\nThis will show current settings, with the configuration files these settings were read from.\n\n"
    },
    {
      "title": "LightDM not starting and screen flashing",
      "level": 3,
      "content": "If you encounter consistent screen flashing and ultimately no LightDM on boot, ensure that you have defined the greeter correctly in LightDM's configuration file. And if you have correctly defined the GTK greeter, make sure the xsessions-directory (default: /usr/share/xsessions) exists and contains at least one .desktop file.\n\nThe same error can happen on lightdm startup if the last used session is not available anymore (eg. you last used gnome and then removed the gnome-session package): the easiest workaround is to temporarily restore the removed package. Another solution might be:\n\n```\n# dbus-send --system --type=method_call --print-reply --dest=org.freedesktop.Accounts /org/freedesktop/Accounts/User1000 org.freedesktop.Accounts.User.SetXSession string:xfce\n```\n\nThis example sets the session \"xfce\" as default for the user 1000.\n\n"
    },
    {
      "title": "Wrong locale displayed",
      "level": 3,
      "content": "In case of your locale not being displayed correctly in Lightdm add your locale to /etc/environment:\n\n```\nLANG=pt_PT.utf8\n```\n\nAlternatively if you want LightDM and its greeters to be in a language other than your set system locale, you can use the Environment= option in Systemd#Drop-in files.\n\n"
    },
    {
      "title": "Missing icons with GTK greeter",
      "level": 3,
      "content": "If you are using lightdm-gtk-greeter as a greeter and it shows placeholder images as icons, make sure valid icon themes and themes are installed and configured. Check the following file:\n\n```\n/etc/lightdm/lightdm-gtk-greeter.conf\n```\n\n```\n[greeter]\ntheme-name=mate      # this should be the name of a directory under /usr/share/themes/\nicon-theme-name=mate # this should be the name of a fully featured icons set directory under /usr/share/icons/\n```\n\n"
    },
    {
      "title": "LightDM freezes on login attempt",
      "level": 3,
      "content": "You may find that after entering the correct username and password and attempting to log in, LightDM freezes and you are unable to continue to the desktop. To fix the issue, reinstall the gdk-pixbuf2 package. See this forum thread.\n\n"
    },
    {
      "title": "LightDM displaying in wrong monitor",
      "level": 3,
      "content": "If you are using multiple monitors, LightDM may display in the wrong one (e.g. if your primary monitor is on the right). To force the LightDM login screen to display on a specific monitor, edit /etc/lightdm/lightdm.conf and change the display-setup-script parameter like this:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\ndisplay-setup-script=xrandr --output HDMI-1 --primary\n```\n\nReplace HDMI-1 with your real monitor ID, which you can find from xrandr command output.\n\nAlternatively, if you are using the GTK greeter, you can edit /etc/lightdm/lightdm-gtk-greeter.conf and add the active-monitor parameter like this:\n\n```\n/etc/lightdm/lightdm-gtk-greeter.conf\n```\n\n```\n[greeter]\nactive-monitor=0\n```\n\nReplace 0 with the desired display number.\n\n"
    },
    {
      "title": "LightDM does not appear or monitor only displays TTY output",
      "level": 3,
      "content": "It may happen that your system boots so fast that LightDM service is started before your graphics drivers are properly loaded. If this is your case, you will want to add the following to your lightdm.conf file:\n\n```\n/etc/lightdm/lightdm.conf\n```\n\n```\n[LightDM]\nlogind-check-graphical=true\n```\n\nThis setting will tell LightDM to wait until graphics devices are ready before spawning greeters/autostarting sessions on them.\n\nWith newer versions of LightDM, this is now the default setting. As a consequence, on some hardware, your graphics drivers may not be properly detected and LightDM may never attempt to launch a greeter--even after the system has stabilized after boot. If this occurs, setting this to false will disable the check and force LightDM to launch a greeter regardless.\n\n"
    },
    {
      "title": "LightDM is running with low FPS on Intel Graphics",
      "level": 3,
      "content": "See Intel graphics#AccelMethod.\n\n"
    },
    {
      "title": "PulseAudio not starting automatically",
      "level": 3,
      "content": "See PulseAudio#Running.\n\n"
    },
    {
      "title": "Long pause before LightDM shows up when home is encrypted",
      "level": 3,
      "content": "Some LightDM themes try to access the user avatar located in HOME. If your HOME is encrypted, LightDM cannot access it and hangs. To prevent this from happening, you can either:\n\n- Set your avatar as explained in #Changing your avatar\n- for lightdm-gtk-greeter only: hide-user-image = true in /etc/lightdm/lightdm-gtk-greeter.conf\n\n"
    },
    {
      "title": "Boot hangs on \"[ OK ] Reached target Graphical Interface.\"",
      "level": 3,
      "content": "There is a possibility that user and group lookups fail if you modified /etc/nsswitch.conf. That happens when nsswitch.conf group: includes ldap without setting nss_initgroups_ignoreusers ALLLOCAL in /etc/nslcd.conf\n\n"
    },
    {
      "title": "Wayland session not working with duplicate GNOME entries in greeter",
      "level": 3,
      "content": "Some greeters (lightdm-webkit2-greeter for example) do not support two sessions with the same name [1]. To check for duplicate entries:\n\n```\n$ ls -1 /usr/share/wayland-sessions /usr/share/xsessions\n```\n\nRename the duplicate entry in /usr/share/xsessions. For example:\n\n```\n# mv /usr/share/xsessions/gnome.desktop /usr/share/xsessions/gnome.desktop.disabled\n```\n\n"
    },
    {
      "title": "Login always segfaults on first attempt",
      "level": 3,
      "content": "Set a hostname as described in Network configuration#Set the hostname. See also FS#47694.\n\n"
    },
    {
      "title": "Infinite login loop",
      "level": 3,
      "content": "If you get stuck in loop in which you type your correct username and password but the screen goes black and then you return to the login prompt after every attempt, running rm ~/.Xauthority (or the stuck user's problematic .Xauthority) may fix the issue.\n\nAnother reason for this may be that you tried to recreate your \"lightdm.conf\" from scratch and your version is missing this line:\n\n```\nsession-wrapper=/etc/lightdm/Xsession\n```\n\nIn that case, lightdm tries to use \"lightdm-session\" as the session-wrapper which does not exist on Arch Linux.\n\nIf your lightdm.conf file contains the intended session-wrapper but the lightdm logs indicate that the default session wrapper is being used instead, ensure that your lightdm.conf file is available during startup. For example, you may have created a symlink to a file in your home directory, but your home directory is not being mounted before the LightDM service started. In such cases LightDM will fall back to the default session wrapper.\n\n"
    },
    {
      "title": "Input devices do not work in Wayland sessions",
      "level": 3,
      "content": "When starting a Wayland session, input devices may sometimes not work unless disconnecting and reconnecting the physical connection. See LightDM issue 63.\n\nA workaround is to delay the startup of Wayland compositors by adding sleep 1 to /etc/lightdm/Xsession. See archlinux/packaging/packages/lightdm!4 for a proposed workaround for the Arch package.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Ubuntu Wiki article\n- Gentoo:LightDM\n- LightDM on GitHub\n\n"
    }
  ]
}