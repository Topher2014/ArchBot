{
  "title": "CPAN",
  "url": "https://wiki.archlinux.org/title/CPAN",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Perl Policy\n- Perl package guidelines\n- mod_perl\n\nFrom Wikipedia:\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the perl package.\n\n"
    },
    {
      "title": "Commands",
      "level": 2,
      "content": "The Perl language interpreter:\n\n```\n$ perl\n```\n\nPerl bug reporting:\n\n```\n$ perlbug\n```\n\nLookup the Perl documentation in POD format:\n\n```\n$ perldoc\n```\n\nSend the Perl authors and maintainers a thank you message:\n\n```\n$ perlthanks\n```\n\n"
    },
    {
      "title": "Package management",
      "level": 2,
      "content": "The Comprehensive Perl Archive Network (CPAN) is a repository of over 250,000 software modules and accompanying documentation written in the Perl programming language by over 12,000 contributors.\n\nCPAN is also the name of a Perl module, CPAN.pm, which is used to download and install Perl software from the CPAN archive.\n\n"
    },
    {
      "title": "pacman and AUR",
      "level": 3,
      "content": "A number of popular CPAN modules are available as packages in the Arch repositories. There are further modules available in the AUR.\n\n"
    },
    {
      "title": "CPAN.pm",
      "level": 3,
      "content": "The CPAN.pm module is included with Perl. It can be used interactively from the shell or in Perl scripts.\n\n"
    },
    {
      "title": "Configuring cpan",
      "level": 4,
      "content": "Before first use, the module needs to be configured. This is done interactively from the shell with (some output omitted):\n\n```\n$ cpan\n```\n\n```\nCPAN.pm requires configuration, but most of it can be done automatically.\nIf you answer 'no' below, you will enter an interactive dialog for each\nconfiguration option instead.\n\nWould you like to configure as much as possible automatically? [yes]\n```\n\nAutomated configuration will suit most users. Answering yes, the configuration will continue with:\n\n```\nTo install modules, you need to configure a local Perl library directory or\nescalate your privileges. CPAN can help you by bootstrapping the local::lib\nmodule or by configuring itself to use 'sudo' (if available). You may also\nresolve this problem manually if you need to customize your setup.\n\nWhat approach do you want?  (Choose 'local::lib', 'sudo' or 'manual')\n [local::lib]\n```\n\nIf you want cpan to install modules in your home directory choose local::lib. To install them system-wide choose sudo. Choosing sudo the configuration ends:\n\n```\nAutoconfiguration complete.\n\ncommit: wrote '/home/username/.cpan/CPAN/MyConfig.pm'\n```\n\nChoosing the local::lib option will result in addition modules being installed.\n\nChoosing not to use automated configuration allows the user to set cpan options interactively in the shell. The table below shows some option names with a brief description and default value. More detailed information is displayed for each option during configuration.\n\nTable content:\nName | Description | Default\ncpan_home | CPAN build and cache directory | $HOME/.cpan\nkeep_source_where | Download target directory | $HOME/.cpan/sources\nbuild_dir | Build process directory | $HOME/.cpan/build\nprefs_dir | Customizable modules options directory | $HOME/.cpan/prefs\nbuild_cache | Cache size for build directory | 100MB\ncleanup_after_install | Remove build directory after successful install | No\nshell | Preferred shell | /bin/bash\nhalt_on_failure | Halt on failure | No\ncolorize_output | Turn on colored output | No\nhistfile | History file location | $HOME/.cpan/histfile\nhistsize | History file size | 100 lines\n\nThe configuration file $HOME/.cpan/CPAN/MyConfig.pm can be edited with your text editor of choice.\n\n"
    },
    {
      "title": "Usage examples",
      "level": 4,
      "content": "To simply install a modules pass them as parameters to cpan (multiple module names are separated by spaces):\n\n```\n$ cpan Acme::MetaSyntactic\n```\n\nThe following examples are all in the cpan interactive shell, started with:\n\n```\n$ cpan\n```\n\nDisplay information on a module:\n\n```\ncpan[1]> m Acme::MetaSyntactic\n```\n\n```\nReading '/home/username/.cpan/Metadata'\n  Database was generated on Fri, 08 Dec 2017 02:17:03 GMT\nModule id = Acme::MetaSyntactic\n    CPAN_USERID  BOOK (Philippe Bruhat (BooK) <book@cpan.org>)\n    CPAN_VERSION 1.014\n    CPAN_FILE    B/BO/BOOK/Acme-MetaSyntactic-1.014.tar.gz\n    INST_FILE    (not installed)\n```\n\nView module README:\n\n```\ncpan[2]> readme Acme::MetaSyntactic\n```\n\n```\nAcme::MetaSyntactic - Themed metasyntactic variables\n\nDESCRIPTION\n\nWhen writing code examples, it's always easy at the beginning:\n\n   my $foo = \"bar\";\n   $foo .= \"baz\";   # barbaz\n...\n```\n\nInstall a module:\n\n```\ncpan[3]> install Acme::MetaSyntactic\n```\n\n"
    },
    {
      "title": "Widget bindings",
      "level": 2,
      "content": "The following widget toolkit bindings are available:\n\n- gtk2-perl — GTK2 bindings\n\n- perl-gtk3 — GTK3 bindings\n\n- Perl/TK — Tk bindings\n\n- wxPerl — wxWidgets bindings\n\n- Prima — a perl multiplatform graphic toolkit\n\nTo use these with Perl, you may need to install the associated widget kits.\n\n"
    },
    {
      "title": "Development in JetBrains IDE",
      "level": 2,
      "content": "If you are using a JetBrains IDE, for example IntelliJ Idea, install perl-bundle-camelcadeAUR. Then install Perl plugin. Then go to the Settings > Languages & Frameworks > Perl5. In the Perl 5 Interpreter field select Add System Perl. Now you can make a run/debug configuration for your project and start debugging.\n\n"
    },
    {
      "title": "cpanminus",
      "level": 4,
      "content": "cpanminus extends module management and aims to be zero configuration and integrates with local::db.\n\nInstall the cpanminus package.\n\nThe cpanminus documentation gives examples.\n\n"
    },
    {
      "title": "ucpan",
      "level": 4,
      "content": "ucpan is a nice, fully automatic updater for CPAN modules (especially installed in local-lib). To install use:\n\n```\ncpan App::ucpan\n```\n\n"
    },
    {
      "title": "Bundle::CPAN",
      "level": 4,
      "content": "Installing the Bundle::CPAN distribution will add a lot of nice functionality to CPAN.pm.\n\n```\n$ cpan Bundle::CPAN\n```\n\n"
    },
    {
      "title": "Re-run cpan configuration",
      "level": 3,
      "content": "```\n$ cpan\ncpan[1]> o conf init\n```\n\n"
    },
    {
      "title": "module-starter",
      "level": 4,
      "content": "Module::Starter helps you create your new module... Install:\n\n```\ncpanm Module::Starter\n```\n\nUsage:\n\n```\nmodule-starter --module=App::foobar  --author=\"My name here\" --email=my@email.here --mb\n```\n\nThis going to create your module tree...\n\nTo add dependencies, put module_name => version_or_0 inside $builder -> requires in file Build.PL\n\nTo install required dependencies for your project, run inside App-foobar folder:\n\n```\ncpanm --installdeps .\n```\n\nTo skip git folder, add under $builder\n\n```\nadd_to_manifest_skip => [ '.git' ],\n```\n\nAdding scripts can by done like this:\n\n```\nmkdir bin\ntouch bin/foobar\n```\n\nTo run this script:\n\n```\nperl -Ilib bin/foobar\n```\n\nYou can change your project version here: lib/App/foobar.pm\n\nTo install your module run this command in module root folder:\n\n```\ncpanm .\n```\n\nSee more on: cpan page, cookbook\n\n"
    },
    {
      "title": "Perl 5",
      "level": 3,
      "content": "- The Perl Programming Language (Perl homepage)\n- Wikipedia:Perl\n- Perl Tutorials\n- perl(1perl)\n- perldoc(1perl)\n\n"
    },
    {
      "title": "Raku",
      "level": 3,
      "content": "- The Raku Programming Language\n- Wikipedia:Raku_(programming_language)\n- Getting started with Perl 6\n- Rakudo\n- wikipedia:Rakudo\n- perl6(1)\n\n"
    },
    {
      "title": "CPAN",
      "level": 3,
      "content": "- Comprehensive Perl Archive Network\n- wikipedia:CPAN\n- CPAN / CPAN Shell / CPANPLUS Quick Reference Guide\n\n"
    },
    {
      "title": "Tutorials",
      "level": 3,
      "content": "- Tutorials at perldoc\n- cpan configuration\n- PerlMonks Tutorials\n\n"
    },
    {
      "title": "Miscellaneous",
      "level": 3,
      "content": "- Perl 5 vs 6\n\n"
    }
  ]
}