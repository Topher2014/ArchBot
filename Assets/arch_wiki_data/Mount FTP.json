{
  "title": "Mount FTP",
  "url": "https://wiki.archlinux.org/title/Mount_FTP",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- List of applications/Internet#FTP clients\n\nCurlFtpFS is a filesystem for accessing FTP hosts based on FUSE and libcurl.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the curlftpfs package.\n\nMake sure the kernel module has been loaded.\n\n```\n# modprobe fuse\n```\n\n"
    },
    {
      "title": "Mount FTP folder as root",
      "level": 2,
      "content": "Create the mount point and then mount the FTP folder.\n\n```\n# mkdir /mnt/ftp\n# curlftpfs ftp.example.com /mnt/ftp/ -o user=username:password\n```\n\nIf you want to give other (regular) users access right, use the allow_other option:\n\n```\n# curlftpfs ftp.example.com /mnt/ftp/ -o user=username:password,allow_other\n```\n\nDo not add space after the comma or the allow_other argument will not be recognized.\n\nTo use FTP in active mode add the option ftp_port=-:\n\n```\n# curlftpfs ftp.example.com /mnt/ftp/ -o user=username:password,allow_other,ftp_port=-\n```\n\nYou can add this line to /etc/fstab to mount automatically.\n\n```\ncurlftpfs#USER:PASSWORD@ftp.example.com /mnt/exampleorg fuse auto,user,uid=1000,allow_other,_netdev 0 0\n```\n\nTo prevent the password to be shown in the process list, create a .netrc file in the home directory of the user running curlftpfs and chmod 600 with the following content:\n\n```\nmachine ftp.example.com\nlogin username\npassword mypassword\n```\n\n"
    },
    {
      "title": "Mount FTP folder as normal user",
      "level": 2,
      "content": "You can also mount as normal user (always use the .netrc file for the credentials and ssl encryption!):\n\n```\n$ mkdir ~/example\n$ curlftpfs -o ssl,utf8 ftp://example.com/ ~/example\n```\n\nif the answer is\n\n```\nError connecting to ftp: QUOT command failed with 500\n```\n\nthen the server does not support the utf8 option. Leave it out and all will be fine.\n\nTo unmount:\n\n```\n$ fusermount -u ~/example\n```\n\n"
    },
    {
      "title": "Connect to encrypted server",
      "level": 2,
      "content": "In its default settings, CurlFtpFS will authenticate in cleartext when connecting to a non encrypted connection port. If the remote server is configured to refuse non encrypted authentication method / force encrypted authentication, CurlFtpFS will return a\n\n```\n# Error connecting to ftp: Access denied: 530\n```\n\nTo authenticate to the ftp server using explicit encrypted authentication, you must specify the ssl option.\n\n```\n# curlftpfs ftp.example.com /mnt/ftp/ -o ssl,user=username:password\n```\n\nIf your server uses a self-generated certificate not trusted by your computer, you can specify to ignore it\n\n```\n# curlftpfs ftp.example.com /mnt/ftp/ -o ssl,no_verify_peer,no_verify_hostname,user=username:password\n```\n\nFor more details, see the curlftpfs(1) man page.\n\n"
    },
    {
      "title": "Unable to access files with non percent-encoded characters in their filename",
      "level": 3,
      "content": "This is a bug which has been initially reported in Launchpad bug 783033 in 2011 regarding paths with \"#\", confirmed in 2013 with no further activity. An upstream bug report links to a potential patch, which also fixes a breaking change in curl.\n\n"
    }
  ]
}