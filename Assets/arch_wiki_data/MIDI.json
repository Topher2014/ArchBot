{
  "title": "MIDI",
  "url": "https://wiki.archlinux.org/title/MIDI",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "MIDI itself, which stands for \"Musical Instrument Digital Interface\", is just a protocol and standard for communication between musical instruments and any device that understands the language. It can be used to control an array of synthesizers, make a tin can sound like a drum, or even operate industrial equipments.\n\nThe scope of this article, however, will mainly focus on the usage of MIDI in computer systems for playback of files that contain MIDI data. These files usually come with the .mid extension, and were hugely popular in the golden days of multimedia computing to share music. In professional music composition/arrangement, it still plays a vital role.\n\n"
    },
    {
      "title": "MIDI file",
      "level": 2,
      "content": "Without going into the details of what the format is composed of, you just need to understand that a MIDI file eg. foobar.mid does not contain any digital audio data, hence no \"PCM stream\". It is a common misconception that MIDI is a sound file format, and as such you usually see people complaining that music player applications cannot play the file. Here is a very beginner-friendly outline of what a MIDI/MID file contains:\n\n```\n# FOOBAR.MID\nNote ON\n  Use Instrument #1\n  Play Note C1\n  Set Volume at 100\n  Set Pitch at 50\n```\n\nIn order for such a file to be useful, there needs to be an \"engine\" that can translate the data to music. This engine will have a \"tone generator\", and this is what we call a \"synthesizer\". So any player that can play back a MIDI file without MIDI-capable hardware (your computer's sound device), has a synthesizer built-in or uses an external one. A typical keyboard (not the thing you are typing on) is actually made up of two components - a MIDI \"controller\" (the keys) and a synthesizer (tone generator/module; the thing that makes sound).\n\nSo up to this point, you should be able to understand that:\n\n- There needs to be a synthesizer to play a MIDI file.\n- A synthesizer can be hardware or software.\n- Most computer soundcards/chipsets do NOT have synthesizers.\n- You need a synthesizer with a proper \"sound bank\" (collection of sounds) to be able to enjoy all the glory of MIDI files.\n- If a certain instrument is not in the sound bank, your synthesizer will not play anything for notes using that instrument.\n- If a certain instrument in the file corresponds to a different one in the sound bank, your synthesizer will play a different sound (obviously).\n\n"
    },
    {
      "title": "General MIDI sound bank",
      "level": 2,
      "content": "General MIDI (GM) is a specification to standardise numerous MIDI-related matters, particularly that of instruments layout in a collection of sounds. A \"soundbank\" which is GM-compatible means that it meets the criteria of General MIDI, and as long as the MIDI file is also GM-compatible (as in nothing extraordinary is defined - such as introducing a new instrument or having one in a different location of the sound bank), the playback will be as intended since the sound bank has the correct instrument/handler for the MIDI message/event. One of the most popular sound bank format is SoundFont', particularly SF2. Another popular format is Gravis UltraSound (GUS) patch files.\n\n- If you have a soundcard which can make use of soundfonts, you can load a .sf2 file onto it.\n- If you do not have a soundcard which can make use of soundfonts (basically no hardware synthesizer), you can use a software synthesizer and load the SF2 file. In turn, you can find some way to globally make use of this synthesizer.\n\n"
    },
    {
      "title": "List of SoundFonts",
      "level": 3,
      "content": "- FatBoy — A free GM/GS SoundFont for classic video game MIDI, emulation, and general usage.\n\n- Fluid — Frank Wen's pro-quality GM/GS soundfont.\n\n- FreePats — Free and open general MIDI sound set.\n\n- GeneralUser GS — A GM and GS compatible SoundFont bank made by S. Christian Collins for composing, playing MIDI files, and retro gaming.\n\nThere are a number of additional SoundFonts in the AUR, example: search for soundfont-. See also the FluidSynth Wiki.\n\n"
    },
    {
      "title": "List of Gravis UltraSound patch sets",
      "level": 3,
      "content": "- FreePats (legacy) — Old version of FreePats General MIDI sound set, initially put together by Eric A. Welsh.\n\nSoundFonts can be converted into Gravis UltraSound patch sets by the command-line tool unsf from the unsf-gitAUR package.\n\n"
    },
    {
      "title": "Hardware playback",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nIf you simply need to play a MIDI file on a MIDI-capable hardware device (e.g. a hardware synthesizer), you can use the aplaymidi command from alsa-utils.\n\nTo get the list of the available MIDI ports, use the command\n\n```\n$ aplaymidi -l\n```\n\nThen to play a MIDI file, specify it along with an available port of the preferred MIDI device that you got from the output of the previous command. For example like this:\n\n```\n$ aplaymidi -p 24:0 midi_file.mid\n```\n\n"
    },
    {
      "title": "SB Audigy 1 - Emu10k1 WaveTable",
      "level": 3,
      "content": "First, make sure that the Synth mixer control is not muted and that Audigy Analog/Digital output Jack is set to [Off].\n\nTo check and adjust them, use alsamixer or your mixer of choice.\n\nNext, build and install the awesfxAUR package from the AUR. Then, load a SoundFont file on the Emux WaveTable, like so:\n\n```\n$ asfxload /path/to/any/file.sf2\n```\n\nThe .SF2 file can be any SoundFont. If you have access to 2GMGSMT.SF2 on Windows, you can use that one.\n\nYou should be all set now. To play your .mid files with aplaymidi, you will have to do as follows:\n\nGet a list of the available MIDI ports by running\n\n```\n$ aplaymidi -l\n```\n\n```\nPort    Client name                      Port name\n14:0    Midi Through                     Midi Through Port-0\n28:0    SB Live! 5.1 [SB0060]            EMU10K1 MPU-401 (UART)\n29:0    Emu10k1 WaveTable                Emu10k1 Port 0\n29:1    Emu10k1 WaveTable                Emu10k1 Port 1\n29:2    Emu10k1 WaveTable                Emu10k1 Port 2\n29:3    Emu10k1 WaveTable                Emu10k1 Port 3\n```\n\nThen, pick an available \"Emu10k1 WaveTable\" MIDI port, in this case 29:0, and specify it as such:\n\n```\n$ aplaymidi -p 29:0 midi_file.mid\n```\n\n"
    },
    {
      "title": "Software playback",
      "level": 2,
      "content": "\"Why can I play MIDI with Windows Media Player, then?\"\n\nWell, because Windows has a default software synthesizer which acts globally. Even then, it lacks the quality which should be expected of modern computers. If there were a way to do it on Linux, you would be able to play back MIDI from any player too. Perhaps a MIDI server (which will hold a synthesizer of choice) that sits within the sound server, like Phonon or PulseAudio. Nevertheless, nothing of this sort has been implemented and you can only play MIDI with a player, or sound server, that has a plug-in to source a synthesizer, or has a synthesizer itself.\n\n"
    },
    {
      "title": "FluidSynth",
      "level": 4,
      "content": "MIDI player and a daemon adding MIDI support to ALSA. It supports SoundFonts only. See FluidSynth.\n\n"
    },
    {
      "title": "TiMidity++",
      "level": 4,
      "content": "MIDI to WAVE converter and player. It supports both SoundFonts and Gravis UltraSound patch files. See Timidity++.\n\n"
    },
    {
      "title": "WildMIDI",
      "level": 4,
      "content": "WildMIDI is a simple software MIDI player. It uses Gravis UltraSound patch files to convert MIDI files into audio. SoundFonts are not supported yet.[1] In order to use it, a configuration file wildmidi.cfg(5) is needed which points to the GUS patches:\n\n```\n/etc/wildmidi/wildmidi.cfg\n```\n\n```\ndir /path/to/any\nsource /path/to/any/timidity.cfg\n```\n\nThe configuration file format is mostly compatible with TiMidity++.\n\nYou can simply use WildMIDI to play MIDI files:\n\n```\n$ wildmidi example.mid\n```\n\nTo convert MIDI files to WAV format:\n\n```\n$ wildmidi example.mid -o example.wav\n```\n\nSee wildmidi(1) for more options.\n\n"
    },
    {
      "title": "GStreamer-based players",
      "level": 4,
      "content": "MIDI files can be played in GNOME Videos and all other players using GStreamer as backend after having installed gst-plugins-bad and a SoundFont (soundfont-fluid for example). It uses FluidSynth as synthesizer and picks up the first usable SoundFont from the /usr/share/soundfonts/ directory.\n\n"
    },
    {
      "title": "VLC",
      "level": 4,
      "content": "The FluidSynth plugin provides MIDI playback support for VLC using FluidSynth as synthesizer. A SoundFont needs to be installed, and VLC will detect it automatically. If multiple SoundFonts are installed, you can choose one in VLC preferences (Tools > Preferences): you have to show all settings. Then, go to Input/Codecs > Audio codecs > FluidSynth.\n\nAnd, if you installed e.g. Fluid, set the location to:\n\n```\n/usr/share/soundfonts/FluidR3_GM.sf2\n```\n\n"
    },
    {
      "title": "Audacious",
      "level": 4,
      "content": "The AMIDI-Plug from the audacious-plugins package provides MIDI playback support for Audacious using FluidSynth as synthesizer. You can specify the SoundFont to use for playback in the settings of its MIDI output plugin (File > Preferences > Plugins > Input > AMIDI-Plug > Preferences).\n\n"
    },
    {
      "title": "DeaDBeeF",
      "level": 4,
      "content": "deadbeefAUR player is able to play MIDI files via its WildMidi player plugin. It does not support SoundFonts, just Gravis UltraSound patch files. You can specify the configuration file location in DeaDBeeF by going to Edit > Preferences > Plugins > WildMidi Player > Configure.\n\n"
    },
    {
      "title": "Drumstick",
      "level": 4,
      "content": "Drumstick MIDI File Player is able to play MIDI files using FluidSynth as synthesizer. Install dmidiplayerAUR.\n\n"
    }
  ]
}