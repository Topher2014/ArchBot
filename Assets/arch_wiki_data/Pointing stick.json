{
  "title": "Pointing stick",
  "url": "https://wiki.archlinux.org/title/Pointing_stick",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "The TrackPoint is Lenovo's trademark for the pointing stick in the middle of the keyboard. It is supported by xf86-input-evdev and xf86-input-libinput.\n\nDefault Xorg behavior supports click and point. For the evdev driver middle-click and scrolling requires extra configuration.\n\n"
    },
    {
      "title": "GUI configuration",
      "level": 2,
      "content": "Install the gpointing-device-settingsAUR package.\n\n"
    },
    {
      "title": "Middle button scroll",
      "level": 2,
      "content": "When using xf86-input-libinput, middle-button scrolling is enabled by default.\n\nWhen using xf86-input-evdev, middle-button scrolling is supported via xinput from the xorg-xinput package. For example:\n\n```\n~/.xinitrc\n```\n\n```\nxinput set-prop \"TPPS/2 IBM TrackPoint\" \"Evdev Wheel Emulation\" 1\nxinput set-prop \"TPPS/2 IBM TrackPoint\" \"Evdev Wheel Emulation Button\" 2\nxinput set-prop \"TPPS/2 IBM TrackPoint\" \"Evdev Wheel Emulation Timeout\" 200\nxinput set-prop \"TPPS/2 IBM TrackPoint\" \"Evdev Wheel Emulation Axes\" 6 7 4 5\n```\n\n- Devices names can be listed with xinput --list or hwinfo.\n- The \"Device Accel Constant Deceleration\" line configures the sensitivity of the trackpoint.\n\n"
    },
    {
      "title": "Xorg configuration",
      "level": 3,
      "content": "Alternative to an ~/.xinitrc configuration, you can also create an Xorg#Configuration for the evdev(4)driver. For example, as /etc/X11/xorg.conf.d/20-thinkpad.conf, replacing TPPS/2 IBM TrackPoint with the device name from xinput:\n\n```\nSection \"InputClass\"\n    Identifier\t\"Trackpoint Wheel Emulation\"\n    Driver \"evdev\"\n    MatchProduct\t\"TPPS/2 IBM TrackPoint\"\n    MatchDevicePath\t\"/dev/input/event*\"\n    Option\t\t\"EmulateWheel\"\t\t\"true\"\n    Option\t\t\"EmulateWheelButton\"\t\"2\"\n    Option\t\t\"Emulate3Buttons\"\t\"false\"\n    Option\t\t\"XAxisMapping\"\t\t\"6 7\"\n    Option\t\t\"YAxisMapping\"\t\t\"4 5\"\nEndSection\n```\n\n"
    },
    {
      "title": "Two-button trackpoints",
      "level": 3,
      "content": "On two-button trackpoints, using xf86-input-libinput, the scroll button can be set to right-click button without removing functionality.\n\nReplacing device with the device name from xinput:\n\n```\n$ xinput set-prop \"device\" \"libinput Button Scrolling Button\" 3\n```\n\n"
    },
    {
      "title": "Sysfs attributes",
      "level": 2,
      "content": "TrackPoints expose their attributes as files in /sys/devices/platform/i8042/serio1/. For example, to manually enable the tap-to-click functionality:\n\n```\n# echo -n 1 > /sys/devices/platform/i8042/serio1/press_to_select\n```\n\n"
    },
    {
      "title": "udev rule",
      "level": 4,
      "content": "This rule increases the trackpoint speed and enables tap to select (see above) on boot.\n\n```\n/etc/udev/rules.d/10-trackpoint.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"input\", ATTR{name}==\"TPPS/2 IBM TrackPoint\", ATTR{device/sensitivity}=\"240\", ATTR{device/press_to_select}=\"1\"\n```\n\n"
    },
    {
      "title": "systemd.path unit",
      "level": 4,
      "content": "There have been reports on the forums that the attributes/files under /sys/devices/platform/i8042/serio1/serio2/ appear too late in the boot process for the above (or similar) udev rule(s) to have an effect on them. Instead, a systemd.path unit can be used to configure attributes of the TrackPoint.\n\nFirst create an executable script named e.g. /usr/local/bin/trackpoint_configuration.sh that sets the TrackPoint attributes as shown in the #Sysfs attributes section.\n\nThe following example disables the trackpoint in some laptops, leaving the trackpoint left and right buttons (the ones over the touchpad) keep working just fine (however, if one disables the TrackPoint directly from the UEFI/BIOS settings, right and left trackpoint buttons will necessarily be disabled).\n\n```\n/usr/local/bin/trackpoint_configuration.sh\n```\n\n```\n#!/bin/bash\necho -n 0 > /sys/devices/platform/i8042/serio1/serio2/sensitivity\necho -n 0 > /sys/devices/platform/i8042/serio1/serio2/speed\n```\n\nAfterwards, create the following systemd units. Make sure that all attributes modified by the script are listed with PathExists.\n\n```\n/etc/systemd/system/trackpoint_parameters.path\n```\n\n```\n[Unit]\nDescription=Watch for, and modify, Trackpoint attributes\n\n[Path]\nPathExists=/sys/devices/platform/i8042/serio1/press_to_select\n\n[Install]\nWantedBy=default.target\n```\n\n```\n/etc/systemd/system/trackpoint_parameters.service\n```\n\n```\n[Unit]\nDescription=Set TrackPoint attributes\n\n[Service]\nExecStart=/usr/local/bin/trackpoint_configuration.sh\n```\n\nFinally, enable and start the trackpoint_parameters.path systemd unit.\n\n"
    },
    {
      "title": "udev hwdb entry",
      "level": 4,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nLibinput applies its own parameters to sysfs based on entries in the udev hardware database. This is the behavior on systems running a Wayland compositor, as libinput is the only supported input interface in that environment. Changes made prior to the start of a Wayland compositor or X session will be overwritten.\n\nTo override libinput's default settings, add a local hwdb entry:\n\n```\n/etc/udev/hwdb.d/99-trackpoint.hwdb\n```\n\n```\nevdev:name:TPPS/2 IBM TrackPoint:dmi:bvn*:bvr*:bd*:svnLENOVO:pn*:pvrThinkPad??60?:*\n  POINTINGSTICK_SENSITIVITY=250\n```\n\nYou can find various vendor/model keys in the udev hardware database. Note that since this commit libinput ignores the POINTINGSTICK_CONST_ACCEL parameter and uses POINTINGSTICK_SENSITIVITY. The range is 0-255.\n\nUpdate the hardware database index, then to test the changes prior to restarting your compositor or X session, first find your device input node /dev/input/eventX using:\n\n```\n# libinput list-devices\n```\n\nRun the following to generate some debug output:\n\n```\n# udevadm trigger /sys/class/input/eventX\n# udevadm test /sys/class/input/eventX\n```\n\nFinally, restart your Wayland compositor or X session to apply the changes.\n\n"
    },
    {
      "title": "device-quirks",
      "level": 4,
      "content": "With the libinput switch to the new device-quirks .ini-style configuration files, you can adjust trackpoint parameters via local overrides in /etc/libinput/.\n\nFor example, to override the pointing speed, create the following file:\n\n```\n/etc/libinput/local-overrides.quirks\n```\n\n```\n[Trackpoint Override]\nMatchUdevType=pointingstick\nAttrTrackpointMultiplier=0.75\n```\n\nFor more information, see libinput: Installing temporary local device quirks\n\n"
    },
    {
      "title": "Trackpoint is not detected or is detected after X minutes",
      "level": 3,
      "content": "This appears to be a kernel bug.[1]\n\nA workaround is passing proto=bare to the psmouse module as a kernel module parameter. However, this disables scrolling with the clickpad and the two-finger middle click.\n\n```\npsmouse proto=bare\n```\n\nFor some ThinkPad models with Elantech touchpad the Trackpoint and the corresponding hardware buttons do not get recognized. The above mentioned command does work but disables the two finger scrolling on the touchpad. To keep two finger interactions possible, use the following kernel module parameter:\n\n```\npsmouse elantech_smbus=0\n```\n\n"
    },
    {
      "title": "Trackpoint buttons do not always work",
      "level": 3,
      "content": "If you discover that disabling the touchpad in the BIOS disables the wrong buttons and/or that the trackpoint buttons are very unreliable a workaround is to pass proto=imps to the psmouse module as a kernel module parameter.\n\n"
    },
    {
      "title": "Two-finger scroll ceases to work after suspending",
      "level": 3,
      "content": "On some laptops, psmouse seems to fail on start up, or after suspend:\n\n```\npsmouse serio1: synaptics: Unable to initialize device\n```\n\nOne workaround is to use add synaptics_intertouch=0 to psmouse as a kernel module parameter.\n\n"
    },
    {
      "title": "Trackpoint moves on its own",
      "level": 3,
      "content": "On some ThinkPads the TrackPoint cursor moves spontaneously after release and it does not stop. This happens because of a low value of the drift_time parameter (e.g. 5), you need to change it to 25 or 30 to fix the problem. This can be done with a udev rule:\n\n```\n/etc/udev/rules.d/10-trackpoint.rules\n```\n\n```\nACTION==\"add\", SUBSYSTEM==\"input\", ATTR{name}==\"TPPS/2 IBM TrackPoint\", ATTR{device/drift_time}=\"25\"\n```\n\nIf this method does not fix your issue, change the psmouse protocol to bare (i.e. add psmouse.proto=bare to your kernel parameters). This way the trackpoint will be identified as a \"PS/2 Generic Mouse\" instead of using the dedicated kernel driver.\n\nIf you do not need the cursor, you can use a libinput quirks override to disable cursor events. Button events will continue to work.\n\n```\n/etc/libinput/local-overrides.quirks\n```\n\n```\n[Trackpoint Buttons Only]\nMatchName=*TPPS/2 IBM TrackPoint\nAttrEventCode=-REL_X;-REL_Y\n```\n\n"
    },
    {
      "title": "Middle-click paste triggered while scrolling",
      "level": 3,
      "content": "Clicking the middle mouse button pastes from the PRIMARY selection by default, which is an inconvenience when using the middle mouse button to scroll with the TrackPoint. See Clipboard#Disabling middle-click paste to disable this behavior.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- How to configure the TrackPoint - ThinkWiki\n- Trackpoint speed\n- What is the best way to configure a Thinkpad's TrackPoint?\n\n"
    }
  ]
}