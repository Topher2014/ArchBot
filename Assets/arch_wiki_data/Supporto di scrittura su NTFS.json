{
  "title": "Supporto di scrittura su NTFS",
  "url": "https://wiki.archlinux.org/title/Supporto_di_scrittura_su_NTFS",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- File systems\n- NTFS\n\nNTFS-3G is an open source implementation of Microsoft NTFS that includes read and write support. NTFS-3G developers use the FUSE file system to facilitate development and to help with portability.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the ntfs-3g package.\n\n"
    },
    {
      "title": "Manual mounting",
      "level": 2,
      "content": "Two options exist when manually mounting NTFS partitions. The traditional:\n\n```\n# mount /dev/your_NTFS_partition /mount/point\n```\n\nThe mount type ntfs-3g does not need to be explicitly specified in Arch. The mount command by default will use /usr/bin/mount.ntfs which is symlinked to /usr/bin/ntfs-3g after the ntfs-3g package is installed.\n\nThe second option is to call ntfs-3g directly:\n\n```\n# ntfs-3g /dev/your_NTFS_partition /mount/point\n```\n\nSee ntfs-3g(8) for the available options.\n\n"
    },
    {
      "title": "Formatting",
      "level": 2,
      "content": "```\n# mkfs.ntfs -Q -L diskLabel /dev/sdXY\n```\n\n"
    },
    {
      "title": "Configuring",
      "level": 2,
      "content": "Your NTFS partition(s) can be setup to mount automatically, or pre-configured to be able to mount in a certain way when you would like them to be mounted. This configuration can be done in the static filesystem configuration (fstab) or by the use of udev rules.\n\n"
    },
    {
      "title": "Default settings",
      "level": 3,
      "content": "Using the default settings will mount the NTFS partition(s) at boot. With this method, if the parent folder that it is mounted upon has the proper user or group permissions (e.g. /run/media/username/), then that user or group will be able to read and write on that partition(s).\n\n```\n/etc/fstab\n```\n\n```\n# <file system>\t\t<dir>\t\t<type>\t<options>\t<dump>\t<pass>\n/dev/NTFS-part\t\t/mnt/windows\tntfs-3g\tdefaults\t0\t0\n```\n\n"
    },
    {
      "title": "Linux compatible permissions",
      "level": 3,
      "content": "Permissions on a Linux system are normally set to 755 for folders and 644 for files. It is recommended to keep these permissions in use for the NTFS partition as well if you use the partition on a regular basis. The following example assigns the above permissions to a normal user:\n\n```\n# Mount internal Windows partition with linux compatible permissions, i.e. 755 for directories (dmask=022) and 644 for files (fmask=133)\n/dev/NTFS-partition  /mnt/windows  ntfs-3g uid=userid,gid=groupid,dmask=022,fmask=133 0 0\n```\n\nAlternatively, if the Windows permissions do matter to you, you can use the ntfsusermap(8) command to map Windows users to Linux ones. ntfs-3g will handle the translation of these permissions.\n\nNote: First, you need to know the SID of the desired Windows user. You can determine this either using the ntfsusermap wizard to guess off of file paths, or by executing wmic useraccount get on the Windows system to get a definitive list of users. Then, reorder your UserMapping file such that the Windows user SID is above the service account SIDs.\n\nFirst, you need to know the SID of the desired Windows user. You can determine this either using the ntfsusermap wizard to guess off of file paths, or by executing wmic useraccount get on the Windows system to get a definitive list of users. Then, reorder your UserMapping file such that the Windows user SID is above the service account SIDs.\n\n"
    },
    {
      "title": "Allowing group/user",
      "level": 3,
      "content": "In /etc/fstab you can also specify other options like those who are allowed to access (read) the partition. For example, for you to allow people in the groupid group to have access:\n\n```\n/dev/NTFS-partition  /mnt/windows  ntfs-3g   gid=groupid,umask=0022    0       0\n```\n\nBy default, the above line will enable write support for root only. To enable user writing, you have to specify the user who should be granted write permissions. Use the uid parameter together with your user id to enable user writing:\n\n```\n/dev/NTFS-partition  /mnt/windows  ntfs-3g   uid=userid,gid=groupid,umask=0022    0       0\n```\n\nIf you are running on a single user machine, you may like to own the file system yourself and grant all possible permissions:\n\n```\n/dev/NTFS-partition  /mnt/windows  ntfs-3g   uid=userid,gid=groupid    0       0\n```\n\n"
    },
    {
      "title": "Basic NTFS-3G options",
      "level": 3,
      "content": "For most, the above settings should suffice. Here are a few other options that are general common options for various Linux filesystems. For a complete list, see ntfs-3g(8) § OPTIONS.\n\nThe following option is specific to ntfs-3g only:\n\n"
    },
    {
      "title": "Allowing user to mount",
      "level": 3,
      "content": "By default, ntfs-3g requires root rights to mount the filesystem if it is a block device, even with the user option in /etc/fstab. See ntfs-3g-faq for details. The user option in the fstab is still required.\n\n- The ntfs-3g package does not have internal FUSE support. Rebuild the package using ABS to enable FUSE support. The full explanation is that \"user\" and \"users\" work via a setuid mount not dropping its setuid privilege so that the block device can be used without root. However, ntfs-3g has a hard-coded restriction in ntfs-3g that bails on setuid if an external libfuse is used. There is no good technical reason for not allowing setuid for external FUSE besides a mistrust of the library. This patch removes the said restriction.\n- There seems to be an issue with unmounting rights, so you will still need root rights if you need to unmount the filesystem. You can also use fusermount -u /mnt/mountpoint to unmount the filesystem without root rights. Also, if you use the users option (plural) in /etc/fstab instead of the user option, you will be able to both mount and unmount the filesystem using the mount and umount commands.\n\n- The full explanation is that \"user\" and \"users\" work via a setuid mount not dropping its setuid privilege so that the block device can be used without root. However, ntfs-3g has a hard-coded restriction in ntfs-3g that bails on setuid if an external libfuse is used.\n- There is no good technical reason for not allowing setuid for external FUSE besides a mistrust of the library. This patch removes the said restriction.\n\nFor non-blockfiles like normal images, ntfs-3g on the command-line should work out-of-the-box with normal user privileges as the underlying FUSE calls are redirected to the setuid-root fusermount when direct kernel interaction is unavailable.\n\n"
    },
    {
      "title": "Resizing NTFS partition",
      "level": 2,
      "content": "Most systems that are purchased already have Windows installed on it, and some people would prefer not wipe it off completely when doing an Arch Linux installation. For this reason, among others, it is useful to resize the existing Windows partition to make room for a Linux partition or two. This is often accomplished with a Live CD or bootable USB thumb drive.\n\nFor Live CDs the typical procedure is to download an ISO file, burn it to a CD, and then boot from it. InfraRecorder is a free (as in GPL3) CD/DVD burning application for Windows which fits the bill nicely. If you would rather use a bootable USB media instead, see USB flash installation media for methods to create bootable USB stick.\n\nThere are a number of bootable CD/USB images available. This list is not exhaustive, but is a good place to start:\n\n- GParted — Small bootable GNU/Linux distribution for x86 based computers. It enables you to use all the features of the latest versions of the GParted application. Does not include additional packages System Rescue CD may incorporate, and disk encryption schemes may not be supported.\n\n- Parted Magic — Very good complete hard disk management solution. With the Partition Editor you can re-size, copy, and move partitions. You can grow or shrink your C: drive. Create space for new operating systems. Attempt data rescue from lost partitions.\n\nNote that the important programs for resizing NTFS partitions include ntfs-3g and a utility like (G)parted or fdisk, provided by the util-linux package. Unless you are an \"advanced\" user it is advisable to use a tool like GParted to perform any resize operations to minimize the chance of data loss due to user error.\n\nIf you already have Arch Linux installed on your system and simply want to resize an existing NTFS partition, you can use the parted and ntfs-3g packages to do it. Optionally, you can use the GParted GUI after installing the GParted package. At the core of the resizing is the ntfsresize(8) command.\n\n"
    },
    {
      "title": "Unsupported reparse point",
      "level": 3,
      "content": "When mounting an NTFS filesystem for Windows 10, and reading files or directories, you may\n\n1. see broken symbolic links to 'unsupported reparse point', or\n1. see the error message cannot access some_file: Input/output error (in this case you see Could not load plugin /usr/lib64/ntfs-3g/ntfs-plugin-80000017.so: Success in the journal).\n\nThe reason for this are NTFS reparse points, used by Microsoft to extend the file system. NTFS-3G does not support some types of reparse points by default. NTFS-3G plugins may be used to provide compatibility with a part of the features defined by the following reparse points:\n\n- System compression: also known as \"Compact OS\", this feature provides a stronger, executable-optimized type of conversion than NTFS's old LZ77. Use the ntfs-3g-system-compression-gitAUR plugin for read-only support, or run compact.exe /CompactOS:never in Windows to disable.\n- Deduplicated files: this is a Windows Server 2012 feature providing block-level offline deduplication. Not yet packaged in AUR.\n- OneDrive files: OneDrive files are stored as a special volume on Windows. The ntfs-3g-onedrive-binAUR plugin gives read-write access only for files marked \"available locally\".\n\nSee this page for further details, and archive.org for downloads.\n\n"
    },
    {
      "title": "Damaged NTFS filesystems",
      "level": 3,
      "content": "If an NTFS filesystem has errors on it, NTFS-3G will mount it as read-only. To fix an NTFS filesystem, load Windows and run its disk checking program, chkdsk.\n\nNote that ntfsfix can only repair some errors. If it fails, chkdsk will probably succeed.\n\nTo fix the NTFS file system, the device must already be unmounted. For example, to fix an NTFS partition residing in /dev/sda2:\n\n```\n# umount /dev/sda2\n# ntfsfix /dev/sda2\nMounting volume... OK\nProcessing of $MFT and $MFTMirr completed successfully.\nNTFS volume version is 3.1.\nNTFS partition /dev/sda2 was processed successfully.\n# mount /dev/sda2\n```\n\nIf all went well, the volume will now be writable.\n\n"
    },
    {
      "title": "Garbled Chinese file name under Windows partition",
      "level": 3,
      "content": "See Character encoding#Incorrect mount encoding.\n\n"
    },
    {
      "title": "Metadata kept in Windows cache, refused to mount",
      "level": 3,
      "content": "When dual booting with Windows 8 or 10, trying to mount a partition that is visible to Windows may yield the following error:\n\n```\nThe disk contains an unclean file system (0, 0).\nMetadata kept in Windows cache, refused to mount.\nFailed to mount '/dev/sdc1': Operation not permitted\nThe NTFS partition is in an unsafe state. Please resume and shutdown\nWindows fully (no hibernation or fast restarting), or mount the volume\nread-only with the 'ro' mount option.\n```\n\nThe problem is due to a feature introduced in Windows 8 called \"fast startup\". When fast startup is enabled, part of the metadata of all mounted partitions are restored to the state they were at the previous closing down. As a consequence, changes made on Linux may be lost. This can happen to any NTFS partition when selecting \"Shut down\" or \"Hibernate\" under Windows 8 or 10. Leaving Windows by selecting \"Restart\", however, is apparently safe.\n\nTo enable writing to the partitions on other operating systems, be sure fast startup is disabled. This can be achieved by issuing as an administrator the command:\n\n```\npowercfg /h off\n```\n\nYou can check the current settings on Control Panel > Hardware and Sound > Power Options > System Setting > Choose what the power buttons do. The box Turn on fast startup should either be disabled or missing.\n\n"
    },
    {
      "title": "Deleting Windows hibernate metadata",
      "level": 4,
      "content": "As an alternative to above clean shutdown method, there is a way to completely destroy NTFS metadata that was saved after hibernating. This method is only feasible if you are not able or unwilling to boot into Windows and shut it down completely. This is by running ntfsfix provided by ntfs-3g.\n\n```\n# ntfsfix /dev/your_NTFS_partition\n```\n\n"
    },
    {
      "title": "Mount failure",
      "level": 3,
      "content": "If you cannot mount your NTFS partition even when following this guide, try using the UUID instead of device name in /etc/fstab for all NTFS partitions. See fstab#File system UUIDs for an example.\n\n"
    },
    {
      "title": "Windows mount failure",
      "level": 3,
      "content": "Windows will not recognize a NTFS partition that does not have a corresponding partition type. A common pitfall when creating an NTFS partition to work with Windows is forgetting to set the partition type as NTFS. See fdisk or one of the partitioning tools.\n\n"
    },
    {
      "title": "Beta features and releases",
      "level": 2,
      "content": "There is a web page[dead link 2024-10-19 ⓘ] on \"advanced features\", maintained by Jean-Pierre André, one of the NTFS-3G authors. It provides:\n\n- Documentation on handling of NTFS features in NTFS-3G, including: Symlinks, junctions, and other reparse points Extended attributes (xattrs) as an interface for ADS streams and special NTFS attributes Security and permission, including POSIX mapping and ACL mapping\n- Plugins for parsing special reparse points.\n\n- Symlinks, junctions, and other reparse points\n- Extended attributes (xattrs) as an interface for ADS streams and special NTFS attributes\n- Security and permission, including POSIX mapping and ACL mapping\n\nInformation provided in the documentation apply to the Tuxera version (2017.3.23) too. The system-compression and dedupe plugins work with the Tuxera version, but the onedrive plugin requires a tweak of the plugin-loading system only available in advanced releases.\n\nSince August 30, 2021, NTFS-3G AR has been merged back to the mainline NTFS-3G, which has moved to GitHub and restarted active development. The plugin source code has not been merged, however.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- ntfs-3g(8)\n\n"
    }
  ]
}