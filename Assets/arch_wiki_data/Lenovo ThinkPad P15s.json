{
  "title": "Lenovo ThinkPad P15s",
  "url": "https://wiki.archlinux.org/title/Lenovo_ThinkPad_P15s",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nGPU (Intel) |  | Yes\nGPU (NVIDIA) |  | Yes\nWireless |  | Yes\nAudio |  | Yes\nTouchpad |  | Yes\nWebcam |  | Yes\nCard reader |  | Yes\nBluetooth |  | Yes\nThunderbolt |  | Yes\nFingerprint reader |  | Yes\n\nThe Thinkpad P15s is a thin-and-light 15.6\" workstation laptop from Lenovo's 2020 ThinkPad P lineup.\n\nThis page specifically concerns the specifics of running Arch Linux on this laptop. See Laptop for generic laptop-related information, or ThinkPad for other ThinkPad laptops.\n\n"
    },
    {
      "title": "Thunderbolt 3",
      "level": 3,
      "content": "To use Thunderbolt 3:\n\n1. Go into BIOS\n\n2. Enable BIOS Assist mode: (Thunderbolt 3 -> Enable BIOS assist mode)\n\n"
    },
    {
      "title": "Prime features",
      "level": 4,
      "content": "The NVIDIA driver now supports PRIME Offloading. Following this guide you can try out this new mode.\n\n"
    },
    {
      "title": "Power management",
      "level": 4,
      "content": "To get the best power options the graphics card may be configured to use low power mode by following the guide here\n\n"
    },
    {
      "title": "Optimus manager",
      "level": 4,
      "content": "Currently, one of the easiest solutions for this laptop is to use optimus-manager with the hybrid backend. This requires the most up to date nvidia and xorg-server packages.\n\nThis allows easy switching between the PRIME offloading feature above, and a mode where external display ports (HDMI and USB-C) work.\n\nSteps to setup after a fresh install:\n\n- Install nvidia proprietary driver 'prime', not bumblebee.\n- Reboot.\n- Install optimus-manager-gitAUR.\n- Reboot.\n- optimus-manager --switch nvidia # this will restart your X session, but not make the change persistent.\n- lspci -k should say: Kernel driver in use: nvidia.\n- xrandr should list HDMI output - try to configure screen, should work.\n- nvidia-settings should work.\n- optimus-manager --set-startup nvidia makes it persistent.\n- Check: reboot, external display should still work.\n\n"
    },
    {
      "title": "Audio",
      "level": 3,
      "content": "This laptop requires Sound Open Firmware in order for the soundcard to work.\n\n"
    },
    {
      "title": "Fingerprint",
      "level": 3,
      "content": "The 1.90.1 version of fprint supports this device.\n\n"
    },
    {
      "title": "Webcam",
      "level": 3,
      "content": "The webcam in this laptop is capable of \"Windows Hello\" which has a Linux version called Howdy. The device you should use to configure howdy on this laptop is /dev/video0. It is possible that Howdy will only use the RGB camera, in this case some additional configuration and software is required. Follow the Reddit guide for the X1 Extreme Gen2 on installing chicony-ir-toggle and setting it up as a service. Or you can just install chicony-ir-toggle-gitAUR, which automatically helps you enable the IR camera after booting the system and waking up from sleep. Before installing chicony-ir-toggle-gitAUR, make sure you change the local variables in prepare() in PKGBUILD to match your own IR camera. In this case try changing the video device to /dev/video2 in the howdy config (howdy config as root), if everything has worked correctly when running howdy test as root the IR Camera should have a very faint red light. This will indicate that the camera is functioning and Howdy is using the IR camera correctly.\n\n"
    },
    {
      "title": "Backlight",
      "level": 4,
      "content": "If you would like to enable the keyboard backlight, run:\n\n```\n# echo 2 > /sys/class/leds/tpacpi::kbd_backlight/brightness\n```\n\nThe \"2\" represents the brightness and can be any value between 0 and 2 (inclusive) for the laptop. For example, to turn off the keyboard backlight, you would run:\n\n```\n# echo 0 > /sys/class/leds/tpacpi::kbd_backlight/brightness\n```\n\n"
    },
    {
      "title": "Touchpad",
      "level": 3,
      "content": "The touchpad works out-of-the-box with libinput. However, it will be very insensitive.\n\nMake sure to not install xf86-input-synaptics - this driver is deprecated, lacks all features mentioned below, but is still installed by default with the xorg-drivers group.\n\nYou can check which input driver Xorg is using for your touchpad with:\n\n```\n$ grep 'Using input driver' /var/log/Xorg.0.log | grep 'SynPS/2 Synaptics TouchPad'\n```\n\n```\n[   248.282] (II) Using input driver 'libinput' for 'SynPS/2 Synaptics TouchPad'\n```\n\nYou can explicitly choose an input driver by placing an Xorg configuration snippet like the following in\n\n```\n/etc/X11/xorg.conf.d/99-synaptics.conf\n```\n\n```\nSection \"InputClass\"\n       Identifier \"touchpad catchall\"\n       MatchIsTouchpad \"on\"\n       Driver \"libinput\"\nEndSection\n```\n\n"
    },
    {
      "title": "Acceleration",
      "level": 4,
      "content": "You can adjust acceleration using the command:\n\n```\n$ xinput set-prop 'SynPS/2 Synaptics TouchPad' 'libinput Accel Speed' 0.5\n```\n\n"
    },
    {
      "title": "Two-finger right click",
      "level": 4,
      "content": "Additionally, if you wish to disable right-clicking so that you use two finger click as your right click, run:\n\n```\n$ xinput set-prop 'SynPS/2 Synaptics TouchPad' 'libinput Click Method Enabled' 0 1\n```\n\n"
    },
    {
      "title": "Tap clicking",
      "level": 4,
      "content": "If you would like for a tap on the touchpad to be registered as a click, use:\n\n```\n$ xinput set-prop 'SynPS/2 Synaptics TouchPad' 'libinput Tapping Enabled' 1\n```\n\n"
    },
    {
      "title": "Throttling fix",
      "level": 3,
      "content": "CPU throttling on the P15s is a known issue but can be easily fixed with undervolting by 100mV.\n\nThere are a few ways to fix this. You should only use one of the following as they both attempt to undervolt.\n\n"
    },
    {
      "title": "Throttled",
      "level": 4,
      "content": "To fix this install throttled, then start/enable throttled.service.\n\nNote that on kernels 5.9 and newer, the msr.allow_writes=on kernel parameter is required to prevent error messages, for example:\n\n```\n/etc/default/grub\n```\n\n```\nGRUB_CMDLINE_LINUX=\"msr.allow_writes=on\"\n```\n\n"
    },
    {
      "title": "CPU undervolting",
      "level": 4,
      "content": "Undervolting the CPU/Intel GPU works well with intel-undervolt.\n\n"
    }
  ]
}