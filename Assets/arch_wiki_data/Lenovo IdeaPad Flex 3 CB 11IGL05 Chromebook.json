{
  "title": "Lenovo IdeaPad Flex 3 CB 11IGL05 Chromebook",
  "url": "https://wiki.archlinux.org/title/Lenovo_IdeaPad_Flex_3_CB_11IGL05_Chromebook",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Table content:\nHardware | PCI/USB ID | Working?\nGPU | 8086:3185 | Yes\nMicroSD card reader |  | Yes\nKeyboard |  | Yes\nWiFi | 8086:31dc | Yes\nBluetooth | 8087:0aaa | Yes\nAudio | 8086:3198 | Yes\nTouchpad | 04f3:00a2 | Yes\nTouchscreen |  | Yes\nWebcam | 30c9:001c | Yes\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "This device is not supported by fwupd. To change or update the firmware, follow the instructions in Chrome OS devices/Custom firmware.\n\nThis Chromebook does not support Legacy Boot Mode. Even if you try to invoke it by pressing Ctrl+l on the Developer Mode boot screen, it will show two options without a choice. Therefore it is necessary to flash a custom firmware before the installation.\n\n- This step relies on third-party scripts and firmware and may damage your hardware or data.\n- After performing this step, it will not be possible to use ChromeOS (unless you flash the original firmware back).\n\n- If you decide to boot without the battery to disable Firmware Write Protection, remove the battery according to the official manual and do not connect it back until the new firmware is flashed.\n- If your Chromebook has turned into a brick, you can try to unbrick it by flashing the original firmware with a special cable called SuzyQable.\n\n1. Disable Firmware Write Protection by booting without battery (use original power supply) or using SuzyQable.\n1. Enable Developer Mode.\n1. Use MrChromebox's Firmware Utility Script.\n\n"
    },
    {
      "title": "Accessibility",
      "level": 2,
      "content": "The appearance of the SeaBIOS is pretty simple and not very colorful, so it might work well with OCR software because it is completely in text mode.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "- Use UEFI-compatible boot loaders.\n- The MMC disk is /dev/mmcblk0.\n\nUse auditctl(8) to suppress audit messages that appear every second:\n\n```\n# auditctl -e0\n```\n\nFollow the Installation guide.\n\n"
    },
    {
      "title": "Audio",
      "level": 2,
      "content": "Install the following packages:\n\n- sof-firmware — sound driver\n- alsa-ucm-conf — contains alsa configuration profile for sof-glkda7219max device\n- pulseaudio — PulseAudio\n- pulseaudio-alsa — required to connect ALSA with PulseAudio\n- acpid — acpid is required to correctly respond to headset plug in\n- pulseaudio-bluetooth — optional, required for Bluetooth headsets\n- alsa-utils — optional, can be used to control the sound from a terminal (e.g. alsamixer(1))\n\nCreate the following script to switch sinks with acpid when plugging in a 3.5mm jack headset:\n\n```\n/etc/acpi/headphones_jack.sh\n```\n\n```\n#!/bin/bash\ncase \"$1\" in\n    jack/headphone)\n        case \"$2\" in\n            HEADPHONE)\n                case \"$3\" in plug)\n                    for i in `users` #adjust the sink for all active users\n                    do\n                        userid=`id -u $i` #get the ID for a user\n                        sudo -u \"$i\" XDG_RUNTIME_DIR=/run/user/$userid pacmd set-default-sink alsa_output.pci-0000_00_0e.0-platform-glk_da7219_mx98357a.HiFi__hw_sofglkda7219max_1__sink\n                    done\n                    ;;\n                esac \n                ;;\n        esac\n        ;;\nesac\n```\n\nMake the script executable.\n\nRegister the script as a listener:\n\n```\n/etc/acpi/events/headphones_jack\n```\n\n```\nevent=jack/headphone\naction=/etc/acpi/headphones_jack.sh %e\n```\n\nEnable acpid.service, the sound should work after reboot.\n\n"
    },
    {
      "title": "Default assignment",
      "level": 3,
      "content": "This Chromebook model [1] has many of the Chromebook special keys and they are mostly assigned correctly. The Search key is assigned to Super by default.\n\nTable content:\nKey | Visible? | Marked? | Effect\nprevious | Yes | Yes | Previous/Back\nnext | Yes | Yes | Next\nrefresh | Yes | Yes | Refresh/Reload\nfull screen | Yes 1 | Yes | No default action -> adjust to F11\noverview | Yes | Yes | \"Scale\" action --> adjust to PrintScreen\ndecrease brightness | Yes | Yes | Decrease Brightness\nincrease brightness | Yes | Yes | Increase Brightness\nmute | Yes | Yes | Mute toggle\ndecrease volume | Yes | Yes | Decrease Volume\nincrease volume | Yes | Yes | Increase Volume\nlock | Yes | Yes | Sleep\nSearch | Yes | Yes | Assigned \"Left Meta\" = Super\n\n1. This key is visible to kernel/udev but not within X11.\n\nThe following table gives an overview of the underlying default keycodes. This information is needed to change the configuration.\n\nSee Keyboard input for more information\n\nTable content:\nChromebook special key | Scancode | Keycode | Keysym\nprevious | ea | 158 | KEY_BACK\nnext | e9 | 159 | KEY_FORWARD\nrefresh | e7 | 173 | KEY_REFRESH\nfull screen | 91 | 372 | KEY_ZOOM\noverview | 92 | 120 | KEY_SCALE\ndecrease brightness | 94 | 224 | KEY_BRIGHTNESSDOWN\nincrease brightness | 95 | 225 | KEY_BRIGHTNESSUP\nmute | ea0 | 113 | KEY_MUTE\ndecrease volume | ae | 114 | KEY_VOLUMEDOWN\nincrease volume | b0 | 115 | KEY_VOLUMEUP\nlock | 5d | 142 | KEY_SLEEP\n\n"
    },
    {
      "title": "Adjust non-responsive keys for Xorg",
      "level": 3,
      "content": "There is only one key that is completely unresponsive in Xorg, because the keycode is above 255: KEY_ZOOM has a keycode of 371. By changing this key to an unused key with a lower keycode we can resolve this issue.\n\nCreate the following file as root:\n\n```\n/etc/udev/hwdb.db/60-keyboard.hwdb\n```\n\n```\nevdev:atkbd:dmi:bvn*:bvr*:bd*:svn*:pn*:pvr*\n KEYBOARD_KEY_91=coffee\n```\n\nrebuild the database\n\n```\n# systemd-hwdb update\n# udevadm trigger\n```\n\nAfter reboot you will see this change in the table above:\n\nTable content:\nChromebook special key | Scancode | Keycode | Keysym\nfull screen | 91 | 152 | KEY_SCREENLOCK\n\n"
    },
    {
      "title": "Create additional key bindings",
      "level": 3,
      "content": "To also have function keys, Chromebook shortcuts (page-up, home, delete, ...) by using a combination of the Search key (that is assigned meta or Super by default) as an overlay, there are many options:\n\nxbindkeys, sxhkd, desktop environments keyboard shortcuts,...\n\nA good option is keyd, because this way all the bindings work in console, Xorg and Wayland without any delay.\n\nAfter installing, create the following file:\n\n```\n/etc/keyd/chromebook.conf\n```\n\n```\n[ids]\n*\n\n[main]\ncoffee = f11 # reassign the coffee/scrollock key to F11 to emulate full-screen within most window managers\nscale = print # reassign the scale key to printscreen\n\n[meta] #assign the leftmeta (search) key as an overlay key, do not forget to hold the \"search\" key to use the shortcuts below\nback = f1\nforward = f2\nrefresh = f3\ncoffee = f4\nscale = f5\nbrightnessdown = f6\nbrightnessup = f7\nmute = f8\nvolumedown = f9\nvolumeup = f10\nup = pageup\ndown = pagedown\nleft = home\nright = end\nbackspace = delete\n```\n\nEnable/start keyd.service.\n\nThis makes it possible to go to a console tty by holding Ctrl+Alt+Search+Back (which is translated to Ctrl+Alt+F1) And also to come back to graphical mode by holding Ctrl+Alt+Search+BrightnessUp(which is translated to Ctrl+Alt+F7)\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Lenovo » Product Specifications Reference (PSREF) - IdeaPad Flex 3 CB 11IGL05\n- Lenovo » Hardware Maintenance Manual - Flex 3 CB-11IGL05\n\n"
    }
  ]
}