{
  "title": "SSHFS",
  "url": "https://wiki.archlinux.org/title/SSHFS",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- SCP and SFTP\n- SFTP chroot\n- Pure-FTPd\n- sftpman\n\nSSHFS is a FUSE-based file system client for mounting remote directories over a Secure Shell connection.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the sshfs package.\n\n- If you often need to mount sshfs file systems you may be interested in using an sshfs helper, such as sftpman, sshmntAUR or fmount.py.\n- You may want to use Google Authenticator or Fido Tokens providing additional security as in two-step authentication.\n- SSH keys may be used over traditional password authentication.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Note: **recommended** \n\n"
    },
    {
      "title": "Mounting",
      "level": 3,
      "content": "In order to be able to mount a directory the SSH user needs to be able to access it. Invoke sshfs to mount a remote directory:\n\n```\n$ sshfs [user@]host:[dir] mountpoint [options]\n```\n\nFor example:\n\n```\n$ sshfs myuser@mycomputer:/remote/path /local/path -C -p 9876\n```\n\nHere -p 9876 specifies the port number and -C enables compression. For more options see the #Options section.\n\nWhen not specified, the remote path defaults to the remote user home directory. Default user names and options can be predefined on a host-by-host basis in ~/.ssh/config to simplify the sshfs usage. For more information see OpenSSH#Client usage.\n\nSSH will ask for the password, if needed. If you do not want to type in the password multiple times a day, see SSH keys.\n\n"
    },
    {
      "title": "Unmounting",
      "level": 3,
      "content": "To unmount the remote system:\n\n```\n$ fusermount3 -u mountpoint\n```\n\nExample:\n\n```\n$ fusermount3 -u /local/path\n```\n\n"
    },
    {
      "title": "Options",
      "level": 2,
      "content": "A complete list of options can be found in sshfs(1) and mount.fuse(8).\n\n"
    },
    {
      "title": "User ID mapping",
      "level": 3,
      "content": "sshfs can automatically convert between local and remote user IDs. Use the idmap=user option to translate the UID of the connecting user to the remote user myuser (GID remains unchanged):\n\n```\n$ sshfs myuser@mycomputer:/remote/path /local/path -o idmap=user\n```\n\nIf you need more control over UID and GID translation, look at the options idmap=file, uidfile and gidfile.\n\n"
    },
    {
      "title": "allow_root or allow_other",
      "level": 3,
      "content": "```\n$ sshfs myuser@mycomputer:/remote/path /local/path -o allow_other,default_permissions,uid=1002,gid=1002\n```\n\n- allow_other - Allow other users than the mounter (i.e. root) to access the share.\n- allow_root - Similar to allow_other but file access is limited to the user mounting the file system and root.\n\nallow_root and allow_other are mutually exclusive. Additionally you want to edit /etc/fuse.conf and uncomment the string user_allow_other to enable all users to use these options.\n\n- default_permissions - might be also used because fuse by default does not check file access permissions. i.e. use the actual permissions on the remote file system. This allows prohibiting access to everybody otherwise granted by allow_other.\n\n"
    },
    {
      "title": "Change ownership of mountpoint",
      "level": 3,
      "content": "- uid, gid - set reported ownership of files to given values; uid is the numeric user ID of your user, gid is the numeric group ID of your user.\n\n"
    },
    {
      "title": "Chrooting",
      "level": 3,
      "content": "You may want to restrict a specific user to a specific directory on the remote system. This can be done by editing /etc/ssh/sshd_config:\n\n```\n/etc/ssh/sshd_config\n```\n\n```\n.....\nMatch User someuser\n       ChrootDirectory /chroot/%u\n       ForceCommand internal-sftp\n       AllowTcpForwarding no\n       X11Forwarding no\n.....\n```\n\nNote: **must** \n\nSee also SFTP chroot. For more information check the sshd_config(5) man page for Match, ChrootDirectory and ForceCommand.\n\n"
    },
    {
      "title": "systemd",
      "level": 3,
      "content": "Similar to other file system mounts see systemd.mount(5) and possibly systemd.automount(5). Because of the FUSE system and its mechanics you should use user units. Setup SSH with public key authentication.\n\n"
    },
    {
      "title": "As user unit",
      "level": 4,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nPlace the foo.mount inside ${XDG_CONFIG_HOME}/systemd/user/.\n\nStart the unit as usual with the --user option.\n\nSee SSH keys#Start ssh-agent with systemd user.\n\n"
    },
    {
      "title": "Generate .mount and .automount files",
      "level": 4,
      "content": "Note: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nCreate an entry in /etc/fstab with at least _netdev, x-systemd.automount is only necessary if you need automount functionality.\n\n```\n/etc/fstab\n```\n\n```\nremoteuser@remotehost:/remote/folder /home/foo/local_folder fuse.sshfs _netdev,x-systemd.automount,x-systemd.idle-timeout=5min,rw   0   0\n```\n\nNote: **/proc/mounts** \n\n```\n# systemctl daemon-reload\n```\n\nAll the generated files are after the daemon-reload command in /run/systemd/generator/. For user units you can copy the files you need and remove the fstab line and reload systemd\n\n"
    },
    {
      "title": "Write .mount and .automount files",
      "level": 4,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nYou will need to write two systemd units: a mount unit and an optional automount unit. Enabling the automount unit and keeping the mount unit itself disabled will not block startup and only mount once trying to access the file system. These files need to be named exactly like the mountpoint with \"-\" signs separating the folders within the path.\n\nMount unit, needs to be named exactly like the mountpoint (here, /mnt/data becomes mnt-data):\n\n```\nsystemd-escape -p --suffix=mount \"/mnt/data/\"\n```\n\n```\nmnt-data.mount\n```\n\n```\n/etc/systemd/system/mnt-data.mount\n```\n\n```\n[Unit]\nDescription=SSHFS (remote.local)\nBefore=remote-fs.target\n\n[Mount]\nWhat=user@remote.local:/mnt/data\nWhere=/mnt/data\nType=fuse.sshfs\nOptions=_netdev,rw,nosuid,allow_other,uid=1000,gid=1000,default_permissions,follow_symlinks,idmap=user,identityfile=/home/user/.ssh/id_ed25519\n\n[Install]\nWantedBy=remote-fs.target\nWantedBy=multi-user.target\n```\n\nThe automount unit file also needs to be named exactly like the mountpoint:\n\n```\n/etc/systemd/system/mnt-data.automount\n```\n\n```\n[Unit]\nDescription=Automount /mnt/data\n\n[Automount]\nWhere=/mnt/data\nTimeoutIdleSec=0\n\n[Install]\nWantedBy=multi-user.target\n```\n\n"
    },
    {
      "title": "systemd root and multiple user",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nAutomounting can happen on boot, or on demand (when accessing the directory). For both, the setup happens in the fstab.\n\nNote: **And most importantly** To let the root user use an SSH key of a normal user, specify its full path in the IdentityFile option.\n\nTo let the root user use an SSH key of a normal user, specify its full path in the IdentityFile option.\n\nAnd most importantly, use each sshfs mount at least once manually while root on the client machine so the host's signature is added to the client's /root/.ssh/known_hosts file. This can also be done manually by appending one or more of the SSH server's public host keys (the /etc/ssh/ssh_host_*key.pub files) to /root/.ssh/known_hosts.\n\n"
    },
    {
      "title": "On demand",
      "level": 4,
      "content": "With systemd, on-demand mounting is possible using /etc/fstab entries.\n\nExample:\n\n```\nuser@host:/remote/path /local/path  fuse.sshfs x-systemd.automount,_netdev,users,idmap=user,IdentityFile=/home/user/.ssh/id_rsa,allow_other,reconnect 0 0\n```\n\nThe important mount options here are x-systemd.automount,_netdev.\n\n- x-systemd.automount does the on-demand magic\n- _netdev tells it that it is a network device, not a block device (without it, \"No such device\" errors might happen)\n\nSee also fstab#Automount with systemd.\n\n"
    },
    {
      "title": "On boot",
      "level": 4,
      "content": "An example on how to use sshfs to mount a remote file system through /etc/fstab\n\n```\nuser@host:/remote/path  /local/path  fuse.sshfs  _netdev  0  0\n```\n\nTake for example the fstab line\n\n```\nllib@192.168.1.200:/home/llib/FAH  /media/FAH2  fuse.sshfs  _netdev  0  0\n```\n\nThe above will work automatically if you are using an SSH key for the user that is not password-protected. See Using SSH Keys.\n\nIf you want to use sshfs with multiple users, add the following option:\n\n```\nuser@domain.org:/home/user  /media/user   fuse.sshfs    allow_other,_netdev    0  0\n```\n\nIn order to ensure the network is available before trying to mount, it is not only important to set the _netdev mount option, but also to add either --any or a specific --interface to the appropriate wait-online service for your network manager.\n\n"
    },
    {
      "title": "Secure user access",
      "level": 4,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nWhen automounting via fstab, the file system will generally be mounted by root. By default, this produces undesireable results if you wish access as an ordinary user and limit access to other users.\n\nAn example mountpoint configuration:\n\n```\nuser@host:/remote/path /local/path  fuse.sshfs noauto,x-systemd.automount,_netdev,user,idmap=user,follow_symlinks,identityfile=/home/user/.ssh/id_rsa,allow_other,default_permissions,uid=USER_ID_N,gid=USER_GID_N 0 0\n```\n\nSee #allow_root or allow_other for the explanation of the options used.\n\n"
    },
    {
      "title": "Checklist",
      "level": 3,
      "content": "Read OpenSSH#Checklist first. Further issues to check are:\n\n1. Is your SSH login sending additional information from server's /etc/issue file e.g.? This might confuse SSHFS. You should temporarily deactivate server's /etc/issue file: $ mv /etc/issue /etc/issue.orig\n1. Keep in mind that most SSH related troubleshooting articles you will find on the web are not systemd related. Often /etc/fstab definitions wrongly begin with sshfs#user@host:/mnt/server/directory ... fuse ... instead of using the syntax user@host:/mnt/server/directory ... fuse.sshfs ... x-systemd, ...\n1. Check that the owner of server's source directory and content is owned by the server's user. $ chown -R user_s: /mnt/servers/directory\n1. The server's user ID can be different from the client's one. Obviously both user names have to be the same. You just have to care for the client's user IDs. SSHFS will translate the UID for you with the following mount options:uid=USER_C_ID,gid=GROUP_C_ID\n1. Check that the client's target mount point (directory) is owned by the client user. This directory should have the same user ID as defined in SSHFS's mount options.$ chown -R user_c: /mnt/client/directory\n1. Check that the client's mount point (directory) is empty. By default you cannot mount SSHFS directories to non-empty directories.\n\n```\n$ mv /etc/issue /etc/issue.orig\n```\n\n```\nsshfs#user@host:/mnt/server/directory ... fuse ...\n```\n\n```\nuser@host:/mnt/server/directory ... fuse.sshfs ... x-systemd, ...\n```\n\n```\n$ chown -R user_s: /mnt/servers/directory\n```\n\n```\nuid=USER_C_ID,gid=GROUP_C_ID\n```\n\n```\n$ chown -R user_c: /mnt/client/directory\n```\n\n"
    },
    {
      "title": "Connection reset by peer",
      "level": 3,
      "content": "- If you are trying to access the remote system with a hostname, try using its IP address, as it can be a domain name resolving issue. Make sure you edit /etc/hosts with the server details.\n- Make sure your user can log into the server (especially when using AllowUsers).\n- Make sure Subsystem sftp /usr/lib/ssh/sftp-server is enabled in /etc/ssh/sshd_config on the remote system.\n- If you are using a non-default key name and passing it as -i .ssh/my_key, this will not work. You have to use -o IdentityFile=/home/user/.ssh/my_key, with the full path to the key.\n- If your /root/.ssh/config/ is a symlink, you will be getting this error as well. See this serverfault topic\n- Adding the option sshfs_debug (as in sshfs -o sshfs_debug user@server ...) can help in resolving the issue.\n- If that does not reveal anything useful, you might also try adding the option debug.\n- If you are trying to sshfs into a router running DD-WRT or the like, there is a solution here. (Note that the -osftp_server=/opt/libexec/sftp-server option can be used to the sshfs command instead of patching dropbear).\n- If you see this only on boot, it may be that systemd is attempting to mount prior to a network connection being available. Enabling the appropriate wait-online service for your network manager fixes this.\n- Old Forum thread: sshfs: Connection reset by peer.\n\n"
    },
    {
      "title": "Remote host has disconnected",
      "level": 3,
      "content": "If you receive this message directly after attempting to use sshfs:\n\n- First make sure that the remote machine has sftp installed! It will not work, if not.\n- Then, check that the path of the Subsystem sftp in /etc/ssh/sshd_config on the remote machine is valid.\n\n"
    },
    {
      "title": "fstab mounting issues",
      "level": 3,
      "content": "To get verbose debugging output, add the following to the mount options:\n\n```\nssh_command=ssh\\040-vv,sshfs_debug,debug\n```\n\nTo be able to run mount -av and see the debug output, remove the following:\n\n```\nnoauto,x-systemd.automount\n```\n\n"
    },
    {
      "title": "Some directories are empty",
      "level": 3,
      "content": "sshfs by default does not support symlinks. If those directories happened to be symlinks, use:\n\n```\n$ sshfs user@host:/remote/path /local/path -o follow_symlinks\n```\n\n"
    },
    {
      "title": "Files not refreshed",
      "level": 3,
      "content": "If you see old content on remote, consider using option dir_cache=no:\n\n```\n$ sshfs user@host:/remote/path /local/path -o dir_cache=no\n```\n\n"
    },
    {
      "title": "Limited transfer speed on fast network",
      "level": 3,
      "content": "If you observe transfer speed that is lower than your network capabilities and high CPU usage on the party where files are copied from, disable compression (remove -C option or set -o compression=no).\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- How to mount chrooted SSH file system, with special care with owners and permissions questions.\n\n"
    }
  ]
}