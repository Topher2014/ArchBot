{
  "title": "Mirror",
  "url": "https://wiki.archlinux.org/title/Mirror",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Unofficial mirrors\n- pacman\n- DeveloperWiki:NewMirrors\n\nThis page is a guide to selecting and configuring your mirrors, and a listing of current available mirrors.\n\n"
    },
    {
      "title": "Official mirrors",
      "level": 2,
      "content": "The official Arch Linux mirror list is available from the pacman-mirrorlist package. To get an even more up-to-date list of mirrors, use the Pacman Mirrorlist Generator page.\n\nCheck the status of the mirrors by visiting the Mirror Status page. It is recommended to only use mirrors that are up to date, i.e. not out of sync.\n\nIf you want your mirror to be added to the official list, see DeveloperWiki:NewMirrors. In the meantime, add it to the Unofficial mirrors article.\n\n"
    },
    {
      "title": "IPv6-ready mirrors",
      "level": 3,
      "content": "The Pacman Mirrorlist Generator can also be used to find a list of current IPv6 mirrors.\n\n"
    },
    {
      "title": "Enabling a specific mirror",
      "level": 2,
      "content": "To enable mirrors, edit /etc/pacman.d/mirrorlist and locate your geographic region. Uncomment mirrors you would like to use.\n\nFor example:\n\n```\n## Worldwide\n#Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch\n#Server = http://mirror.rackspace.com/archlinux/$repo/os/$arch\nServer = https://mirror.rackspace.com/archlinux/$repo/os/$arch\n```\n\nSee #Sorting mirrors for tools that help choosing mirrors.\n\nIt is also possible to specify mirrors in /etc/pacman.conf. For the core repository, the default setup is:\n\n```\n[core]\nInclude = /etc/pacman.d/mirrorlist\n```\n\nTo use the kernel.org mirror as a default mirror, add it before the Include line:\n\n```\n[core]\nServer = https://mirrors.kernel.org/archlinux/$repo/os/$arch\nInclude = /etc/pacman.d/mirrorlist\n```\n\npacman will now try to connect to this mirror first. Proceed to do the same for core-testing, extra, and extra-testing, if applicable.\n\n"
    },
    {
      "title": "Force pacman to refresh the package lists",
      "level": 3,
      "content": "Mirrors can be out of sync and the package list from the old mirror may not correspond to the package list of the new mirror, even though the dates of the lists may suggest that they do.\n\nAfter creating/editing /etc/pacman.d/mirrorlist, issue the following command:\n\n```\n# pacman -Syyu\n```\n\nPassing two --refresh/-y flags forces pacman to refresh all package lists even if they are considered to be up to date.\n\nNote: This is not necessary when using successfully syncing mirrors or checking timestamp of mirror's lastsync file to ensure package lists are up to date.\n\n```\n# pacman -Syyuu\n```\n\nThis is not necessary when using successfully syncing mirrors or checking timestamp of mirror's lastsync file to ensure package lists are up to date.\n\n"
    },
    {
      "title": "Sorting mirrors",
      "level": 2,
      "content": "When downloading packages, pacman uses the mirrors in the order they are listed in /etc/pacman.d/mirrorlist, i.e. the order servers appear in the list sets their priority. If a package download fails (e.g. file not found, connection timeout), the next list entry is used.\n\nIt is not optimal to only rank mirrors based on speed since the fastest servers might be out-of-sync. Instead, make a list of mirrors sorted by their speed, then remove those from the list that are out of sync according to their status.\n\nIt is recommended to regularly repeat this process to keep the list of mirrors up-to-date.\n\n"
    },
    {
      "title": "Ranking an existing mirror list",
      "level": 4,
      "content": "The pacman-contrib package provides a Bash script, /usr/bin/rankmirrors, which can be used to rank the mirrors according to their connection and opening speeds to take advantage of using the fastest local mirror.\n\nBack up the existing /etc/pacman.d/mirrorlist:\n\n```\n# cp /etc/pacman.d/mirrorlist /etc/pacman.d/mirrorlist.backup\n```\n\nTo prepare mirrorlist.backup for ranking with rankmirrors, the following actions can be carried out:\n\n- Edit mirrorlist.backup and uncomment the servers to be tested\n- If the servers in the file are grouped by country, one can extract all the servers of a specific country by using: $ awk '/^## Country Name$/{f=1; next}f==0{next}/^$/{exit}{print substr($0, 1);}' /etc/pacman.d/mirrorlist.backup\n- To uncomment every mirror, run the following sed line: # sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.backup\n- Finally, rank the mirrors, here with the operand -n 6 to only output the 6 fastest mirrors: # rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist\n\n```\n$ awk '/^## Country Name$/{f=1; next}f==0{next}/^$/{exit}{print substr($0, 1);}' /etc/pacman.d/mirrorlist.backup\n```\n\n```\n# sed -i 's/^#Server/Server/' /etc/pacman.d/mirrorlist.backup\n```\n\n```\n# rankmirrors -n 6 /etc/pacman.d/mirrorlist.backup > /etc/pacman.d/mirrorlist\n```\n\n"
    },
    {
      "title": "Fetching and ranking a live mirror list",
      "level": 4,
      "content": "In order to start with a shortlist of up-to-date mirrors based in some countries and feed it to rankmirrors one can fetch the list from the Pacman Mirrorlist Generator. The command below pulls the up-to-date mirrors in either France or the United Kingdom which support the https protocol, it uncomments the servers in the list and then ranks them and outputs the 5 fastest.\n\n```\n$ curl -s \"https://archlinux.org/mirrorlist/?country=FR&country=GB&protocol=https&use_mirror_status=on\" | sed -e 's/^#Server/Server/' -e '/^#/d' | rankmirrors -n 5 -\n```\n\nExisting tools:\n\n"
    },
    {
      "title": "Server-side ranking",
      "level": 3,
      "content": "The official Pacman Mirrorlist Generator provides an easy way to obtain a ranked list of mirrors. Because all ranking is done on a single server that takes multiple factors into account, the amount of load on the mirrors and the clients is significantly lower compared to ranking on each individual client.\n\n"
    },
    {
      "title": "Client-side ranking",
      "level": 3,
      "content": "Other popular alternatives are:\n\n- ghostmirror — Unlike other mirror software, GhostMirror checks that mirrors are synchronized, performs an actual download speed test in addition to a simple ping test, automates everything via systemd, and, if properly configured, allows you to say goodbye to manual mirror management.\n\n- mirro-rs — An Arch Linux mirrorlist manager with a TUI.\n\n- rate-mirrors — Everyday-use client-side map-aware mirror ranking tool.\n\n- Reflector — Retrieves the latest mirrorlist from the MirrorStatus page, filters and sorts them by speed and overwrites /etc/pacman.d/mirrorlist. Provides automation with a systemd service and timer.\n\n- shiny-mirrors — An alternative to reflector, written in Rust.\n\n"
    },
    {
      "title": "Missing mirrorlist",
      "level": 3,
      "content": "In case you encounter the following error:\n\n```\nerror: config file /etc/pacman.d/mirrorlist could not be read: No such file or directory\n```\n\nGet the mirrorlist directly from the website:\n\n```\n# curl -o /etc/pacman.d/mirrorlist https://archlinux.org/mirrorlist/all/\n```\n\nBe sure to uncomment a preferred mirror as described in #Enabling a specific mirror.\n\nAlternatively, use one of the methods for generating a mirrorlist listed under #Sorting mirrors.\n\n"
    },
    {
      "title": "Misbehaving mirrors",
      "level": 3,
      "content": "If you are certain a mirror is not operating properly and that is not reflected on the mirrors status page, change the mirror and consider opening a bug report. For mirrors the issue should be opened in the arch-mirrors project at the Arch Linux GitLab. You may also send a mail to mirrors@archlinux.org.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GitHub archweb mirrorlist.py - source code of the archweb mirrorlist generator\n\n"
    }
  ]
}