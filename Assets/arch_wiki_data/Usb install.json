{
  "title": "Usb install",
  "url": "https://wiki.archlinux.org/title/Usb_install",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Installation guide\n- General recommendations\n- General troubleshooting\n- Install Arch Linux from VirtualBox\n- Solid state drive\n\nThis page explains how to perform a regular Arch installation onto removable media (e.g. a USB flash drive). In contrast to having a LiveUSB as covered in USB flash installation medium, the result will be a persistent installation identical to normal installation to HDD.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "There are various ways of installing Arch on removable media, depending on the operating system you have available:\n\n- If you have another Linux computer available (it does not need to be Arch), you can follow the instructions at Install from existing Linux.\n- An Arch Linux CD/USB can be used to install Arch onto the removable medium, via booting the CD/USB and following the installation guide. If booting from a Live USB, the installation cannot be made to the same removable medium you are booting from.\n- If you run Windows or macOS, download VirtualBox, install VirtualBox Extensions, attach your removable medium to a virtual machine running Linux (either already installed or via a live ISO), and point the installation into the now attached drive while using the instructions at the Installation guide.\n- It is possible to install Arch on the same USB drive that you are trying to install it from. However, you cannot shut down your machine or reboot in the middle of the installation process. If you do that, you would need to create the installation media again.\n\n"
    },
    {
      "title": "Installation tweaks",
      "level": 3,
      "content": "- Before creating the initial RAM disk, in /etc/mkinitcpio.conf move the block and keyboard hooks before the autodetect hook. This is necessary to allow booting on multiple systems each requiring different modules in early userspace.\n- If you have chosen to install Arch onto a USB mass storage device and want to be able to continue to use it as a cross-platform removable drive, this can be accomplished by creating a partition housing an appropriate file system (most likely NTFS or exFAT). Note that the data partition may need to be the first partition on the device, as Windows assumes that there can only be one partition on a removable device, and will happily automount an EFI system partition otherwise. Remember to install dosfstools and ntfs-3g. Some tools are available online that may allow you to flip the Removable Medium Bit (RMB) on your USB mass storage device. This would trick operating systems into treating your USB mass storage device as an external hard disk and allow you to use whichever partitioning scheme you choose.\n- If your Arch installation is on a removable drive that needs to have microcode for both manufacturer processors, install both amd-ucode and intel-ucode packages. See Microcode#Loading microcode.\n\nNote: **not** \n\n"
    },
    {
      "title": "GRUB",
      "level": 3,
      "content": "Follow the instructions on GRUB#BIOS systems and GRUB#UEFI systems to install GRUB for both BIOS and UEFI booting:\n\n```\n# grub-install --target=i386-pc /dev/sdX --recheck\n# grub-install --target=x86_64-efi --efi-directory=esp --removable --recheck\n```\n\n"
    },
    {
      "title": "Syslinux",
      "level": 3,
      "content": "Using your UUID:\n\n```\nLABEL Arch\n        MENU LABEL Arch Linux\n        LINUX ../vmlinuz-linux\n        APPEND root=UUID=3a9f8929-627b-4667-9db4-388c4eaaf9fa rw\n        INITRD ../initramfs-linux.img\n```\n\n"
    },
    {
      "title": "rEFInd",
      "level": 3,
      "content": "```\nmenuentry \"Arch Linux\" {\n   icon     /EFI/BOOT/icons/os_arch.png\n   volume   5028fa50-0079-4c40-b240-abfaf28693ea\n   loader   /path/to/vmlinux_image\n   initrd   /path/to/initramfs\n   options  \"root=PARTUUID=5028fa50-0079-4c40-b240-abfaf28693ea rw\"\n}\n```\n\nSee rEFInd#For manual boot stanzas for details on creating manual boot stanzas.\n\nYou must also use the --usedefault /dev/sdXY argument when installing rEFInd.\n\n"
    },
    {
      "title": "Video drivers",
      "level": 4,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nNote: **not** \n\n- The use of proprietary video drivers is not recommended for this type of installation.\n- See the note about xf86-video-intel in Intel graphics#Installation and xf86-video-nouveau in Nouveau#Installation to decide installing these.\n\nTo support most common GPUs, install xf86-video-vesa, xf86-video-ati, xf86-video-amdgpu, xf86-video-fbdev.\n\n"
    },
    {
      "title": "Audio drivers",
      "level": 4,
      "content": "To support most common sound cards, install sof-firmware and alsa-firmware. For more information about configuring audio device, see Advanced Linux Sound Architecture.\n\n"
    },
    {
      "title": "Persistent block device naming",
      "level": 4,
      "content": "It is recommended to use UUID in both fstab and boot loader configuration. See Persistent block device naming for details.\n\nAlternatively, you may create udev rule to create custom symlink for your disk. Then use this symlink in fstab and boot loader configuration. See udev#Setting static device names for details.\n\n"
    },
    {
      "title": "Kernel parameters",
      "level": 4,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nYou may want to disable KMS for various reasons, such as getting a blank screen or a \"no signal\" error from the display, when using some Intel video cards, etc. To disable KMS, add nomodeset as a kernel parameter. See Kernel parameters for more info.\n\n"
    },
    {
      "title": "Compatibility",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe fallback image should be used for maximum compatibility.\n\n"
    },
    {
      "title": "Minimizing disk access",
      "level": 3,
      "content": "When installing to a device that offers a limited number of writes before it wears out, such as a USB drive, SD card, or similar, reduce the number of writes to increase the device lifetime. This also reduces the performance impact of slow writes.\n\n- It is highly recommended to review the Improving performance#Reduce disk reads/writes article prior to selecting a file system. To sum it up, for flash-based media such as USB flash drives or SD cards, ext4 without a journal should be fine, which can be created with mkfs.ext4 -O \"^has_journal\" /dev/sdXX. The obvious drawback of using a file system with journaling disabled is data loss as a result of an ungraceful dismount. Recognize that flash has a limited number of writes, and a journaling file system will take some of these as the journal is updated. For this same reason, it is best to forget the swap partition. Note that this does not affect installing onto a portable hard drive.\n- You may want to configure systemd journal to store its journals in RAM, e.g. by creating a custom configuration file:\n\n```\n/etc/systemd/journald.conf.d/usbstick.conf\n```\n\n```\n[Journal]\nStorage=volatile\nRuntimeMaxUse=30M\n```\n\n- To disable fsync and related system calls in web browsers and other applications that do not write essential data, use the eatmydata command from libeatmydata to avoid such system calls:\n\n```\n$ eatmydata firefox\n```\n\n"
    },
    {
      "title": "UI responsiveness",
      "level": 3,
      "content": "You might encounter UI freezes on high I/O load especially on slow drives. Improving performance#Changing I/O scheduler or switching to a kernel which uses a different default scheduler can drastically affect your UI responsiveness. For example BFQ can improve UI responsiveness which is default on linux-zen, linux-ckAUR.\n\nSee Improving performance#The scheduling algorithms for more info.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Arch Linux USB - c-magyar's excellent writeup on creating a persistent Live USB installation.\n- archuseriso - Profiles for building Arch Linux Live ISO images. Bootable USB drives creation tools featuring persistent storage and encryption.\n\n"
    }
  ]
}