{
  "title": "Parental control",
  "url": "https://wiki.archlinux.org/title/Parental_control",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Several methods exist to protect and limit child activity on a computer.\n\n"
    },
    {
      "title": "Applications",
      "level": 2,
      "content": "- timekpr-next — Timekpr-nExT, a fresh, simple and easy to use screen time managing application that helps optimizing time spent at computer.\n\n- timeoutd — A lightweight alternative to timekpr, it scans /var/run/utmp every minute and checks /etc/timeouts for an entry matching a restricted user.\n\n- logkeys — A daemon that logs keypresses into a logfile for later inspection.\n\n"
    },
    {
      "title": "Restrict opening applications",
      "level": 2,
      "content": "malcontent allows setting access restrictions for flatpak based applications.\n\n```\nmalcontent-client set-app-filter timmy x-scheme-handler/http\n```\n\nThis will disallow the user timmy from opening a web browser provided by Flatpak.\n\n"
    },
    {
      "title": "Whitelist with Tinyproxy and Firehol",
      "level": 2,
      "content": "The following description will enable you to filter any user's access to the internet with a whitelist of url-s using fireholAUR and tinyproxy (or tinyproxy-gitAUR).\n\n/etc/tinyproxy/tinyproxy.conf consists of the following changes:\n\n```\nFilterURLs On\nFilterDefaultDeny Yes\nFilter \"/etc/tinyproxy/whitelist\"\n```\n\n/etc/tinyproxy/whitelist should hold the url's that will be only allowed accessed by selected users. A silly example:\n\n```\n(www|wiki|static).archlinux.org\ngoogle.com\n```\n\n/etc/firehol/firehol.conf should contain the following line:\n\n```\ntransparent_proxy \"80 443\" 8888 \"nobody root bin myaccount\"\n```\n\nwhere myaccount is my account that should not be filtered by Tinyproxy.\n\n"
    },
    {
      "title": "OpenDNS Parental Control",
      "level": 2,
      "content": "OpenDNS provides free DNS services as an alternative to your ISP's default servers. Furthermore, they provide optional filtering capabilities. Different levels of filtering is possible; see the OpenDNS main page for details.\n\nFor dynamic IP addresses, it is a good idea to keep them updated on OpenDNS. Use ddclient and edit /etc/ddclient/ddclient.conf as follows:\n\n```\n# OpenDNS.com account-configuration\nuse=web, web=myip.dnsomatic.com\nserver=updates.opendns.com\nprotocol=dyndns2\nlogin=myopendns@email.address\npassword=myopendnspassword\nmyhostname\n```\n\nYou may sometimes even set up your router to use OpenDNS, therefore allowing protection spanning on all devices connected to that router.\n\n"
    },
    {
      "title": "Editing /etc/hosts",
      "level": 2,
      "content": "You may configure your /etc/hosts file to block access to certain domains. A more draconian approach is to only allow domains explicitly stated in /etc/hosts, as described here. If you do this, please remember that this will affect your whole system, so for example pacman may be unable to connect to the update server unless you make a proper binding in your /etc/hosts.\n\n"
    },
    {
      "title": "Blocklisting using named",
      "level": 2,
      "content": "See also: BIND\n\nCreate stub zone file (\"/var/named/denied.zone\") that redirects everything to localhost\n\n```\n@                               1D IN SOA   ns1.example.com. root.example.com. (\n                                   42    ; serial (yyyymmdd##)\n                                   3H    ; refresh\n                                   15M   ; retry\n                                   1W    ; expiry\n                                   1D )  ; minimum ttl\n                               1D  IN  NS      ns.example.com.\n                      1D  IN  A       127.0.0.1\n                      1D  IN  AAAA    ::1\n\n*                      1D  IN  A       127.0.0.1\n*                      1D  IN  AAAA    ::1\n```\n\nAdd\n\n```\nzone \"SOME-DOMAIN-1.TLD\" IN { type master; file \"denied.zone\"; };\n...\nzone \"SOME-DOMAIN-N.TLD\" IN { type master; file \"denied.zone\"; };\n```\n\nto named.conf.\n\nRecent named versions support DoT and DoH, so you can expose named to internet and use it from outside your lan. (For example Firefox can use DoH, android devices has global \"private DNS server\" setting for DoT)\n\n"
    },
    {
      "title": "Squid",
      "level": 2,
      "content": "Squid is feature reach proxy that supports authorization, caching, TLS bumping, transparency with firewall, access lists based on MAC, IP, domain, and TLS SNI. It has separate article. In combination with nftables, Squid can be used to fully control which websites can be browsed by the children (see [1]).\n\n"
    },
    {
      "title": "Browser add-ons",
      "level": 2,
      "content": "Several add-ons exist for web browsers to filter web content. Some of them can even block out pages examining on their body, not only on their URL. Be warned, however, that this is not a very secure way. Starting Firefox in safe mode, messing with the Firefox profile directory or Firefox profile manager are obvious ways to attempt to shut down Firefox-based add-ons. If all else fails, the kid may simply use a different browser.\n\n"
    }
  ]
}