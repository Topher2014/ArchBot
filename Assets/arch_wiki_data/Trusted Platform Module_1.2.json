{
  "title": "Trusted Platform Module/1.2",
  "url": "https://wiki.archlinux.org/title/Trusted_Platform_Module/1.2",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "TPM 1.2 uses the \"TrouSerS\" TSS (TCG software stack) by IBM, which is packaged as trousersAUR (tcsd) and tpm-toolsAUR (userspace). All software access the TPM through the tcsd daemon.\n\n"
    },
    {
      "title": "Drivers",
      "level": 2,
      "content": "TPM drivers are natively supported in modern kernels, but might need to be loaded:\n\n```\n# modprobe tpm\n```\n\nDepending on your chipset, you might also need to load one of the following:\n\n```\n# modprobe -a tpm_{atmel,infineon,nsc,tis,crb}\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "TPM 1.2 is managed by tcsd, a userspace daemon that manages Trusted Computing resources and should be (according to the TSS spec) the only portal to the TPM device driver. tcsd is part of the trousersAUR package, which was created and released by IBM, and can be configured via /etc/tcsd.conf.\n\nTo start tcsd and watch the output, run:\n\n```\n# tcsd -f\n```\n\nor simply start and enable tcsd.service.\n\nOnce tcsd is running you might also want to install tpm-toolsAUR which provides many of the command line tools for managing the TPM.\n\nSome other tools of interest:\n\n- tpmmanager — A Qt front-end to tpm-tools\n\n- opencryptoki — A PKCS#11 implementation for Linux. It includes drivers and libraries to enable IBM cryptographic hardware as well as a software token for testing.\n\n"
    },
    {
      "title": "Basics",
      "level": 2,
      "content": "Start off by getting basic version info:\n\n```\n$ tpm_version\n```\n\nand running a selftest:\n\n```\n$ tpm_selftest -l info\n```\n\n```\nTPM Test Results: 00000000 ...\ntpm_selftest succeeded\n```\n\n"
    },
    {
      "title": "Securing SSH keys",
      "level": 2,
      "content": "There are several methods to use TPM to secure keys, but here we show a simple method based on simple-tpm-pk11-gitAUR.\n\nFirst, create a new directory and generate the key:\n\n```\n$ mkdir ~/.simple-tpm-pk11\n$ stpm-keygen -o ~/.simple-tpm-pk11/my.key\n```\n\nPoint the configuration to the key:\n\n```\n~/.simple-tpm-pk11/config\n```\n\n```\nkey my.key\n```\n\nNow configure SSH to use the right PKCS11 provider:\n\n```\n~/.ssh/config\n```\n\n```\nHost *\n    PKCS11Provider /usr/lib/libsimple-tpm-pk11.so\n```\n\nIt is now possible to generate keys with the PKCS11 provider:\n\n```\n$ ssh-keygen -D /usr/lib/libsimple-tpm-pk11.so\n```\n\n"
    },
    {
      "title": "tcsd.service failed to start",
      "level": 3,
      "content": "After installing trousersAUR, the tcsd.service service may not start correctly due to permission issues.[1] It is possible to fix this either by rebooting or by triggering the udev rule that is included in the trousersAUR package:\n\n```\n# udevadm control --reload-rules\n# udevadm trigger\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Protecting systems with the TPM\n- Embedded Security Subsystem on Thinkwiki\n- TPM Fundamentals (PDF)\n- Using a TPM\n\n"
    }
  ]
}