{
  "title": "Bubblewrap/Examples",
  "url": "https://wiki.archlinux.org/title/Bubblewrap/Examples",
  "sections": [
    {
      "title": "dhcpcd",
      "level": 2,
      "content": "Create a simple dhcpcd sandbox:\n\n- Determine available kernel namespaces\n\n```\n$ ls /proc/self/ns \ncgroup  ipc  mnt  net  pid  uts\n```\n\n- Bind as read-write the entire host / directory to / in the sandbox\n- Mount a new devtmpfs filesystem to /dev in the sandbox\n- Create new IPC and control group namespaces\n- Create a new UTS namespace and set dhcpcd as the hostname\n\n```\n# /usr/bin/bwrap --bind / / --dev /dev --unshare-ipc --unshare-cgroup --unshare-uts --hostname dhcpcd /usr/bin/dhcpcd -q -b\n```\n\n"
    },
    {
      "title": "Unbound",
      "level": 2,
      "content": "Create a more granular and complex Unbound sandbox:\n\n- Bind as read-only the system /usr directory to /usr in the sandbox\n- Create a symbolic link from the system /usr/lib directory to /lib64 in the sandbox\n- Bind as read-only the system /etc directory to /etc in the sandbox\n- Create empty /var and /run directories within the sandbox\n- Mount a new devtmpfs filesystem to /dev in the sandbox\n- Create new IPC and PID and control group namespaces\n- Create a new UTS namespace and set unbound as the hostname\n\n```\n# /usr/bin/bwrap --ro-bind /usr /usr --symlink usr/lib /lib64 --ro-bind /etc /etc --dir /var --dir /run --dev /dev --unshare-ipc --unshare-pid --unshare-cgroup --unshare-uts --hostname unbound /usr/bin/unbound -d\n```\n\n"
    },
    {
      "title": "MuPDF",
      "level": 2,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nThe power and flexibility of bwrap is best revealed when used to create an environment within a shell wrapper:\n\n- Bind as read-only the host /usr/bin directory to /usr/bin in the sandbox\n- Bind as read-only the host /usr/lib directory to /usr/lib in the sandbox\n- Create a symbolic link from the system /usr/lib directory to /lib64 in the sandbox\n- Create a tmpfs filesystem overlaying /usr/lib/gcc in the sandbox This effectively blacklists the contents of /usr/lib/gcc from appearing in the sandbox\n- Create a new tmpfs filesystem as the $HOME directory in the sandbox\n- Bind as read-only an .Xauthority file and Documents directory into the sandbox This effectively whitelists the .Xauthority file and Documents directory with recursion\n- Create a new tmpfs filesystem as the /tmp directory in the sandbox\n- Whitelist the X11 socket by binding it into the sandbox as read-only\n- Clone and create private containers for all namespaces supported by the running kernel If the kernel does not support non-privileged user namespaces, skip its creation and continue\n- Do not place network components into a private namespace This allows for network access to follow URI hyperlinks\n\n- This effectively blacklists the contents of /usr/lib/gcc from appearing in the sandbox\n\n- This effectively whitelists the .Xauthority file and Documents directory with recursion\n\n- If the kernel does not support non-privileged user namespaces, skip its creation and continue\n\n- This allows for network access to follow URI hyperlinks\n\n```\n#!/bin/sh\n#~/bwrap/mupdf.sh\n(exec bwrap \\\n--ro-bind /usr/bin /usr/bin \\\n--ro-bind /usr/lib /usr/lib \\\n--symlink usr/lib /lib64 \\\n--tmpfs /usr/lib/gcc \\\n--tmpfs $HOME \\\n--ro-bind $HOME/.Xauthority $HOME/.Xauthority \\\n--ro-bind $HOME/Documents $HOME/Documents \\\n--tmpfs /tmp \\\n--ro-bind /tmp/.X11-unix/X0 /tmp/.X11-unix/X0 \\\n --unshare-all \\\n--share-net \\\n/usr/bin/mupdf \"$@\")\n```\n\n```\n$ bwrap \\\n--ro-bind /usr/bin /usr/bin \\\n--ro-bind /usr/lib /usr/lib \\\n--symlink usr/lib /lib64 \\\n--tmpfs /usr/lib/gcc \\\n--tmpfs $HOME \\\n--ro-bind $HOME/.Xauthority $HOME/.Xauthority \\\n--ro-bind $HOME/Desktop $HOME/Desktop \\\n--tmpfs /tmp \\\n--ro-bind /tmp/.X11-unix/X0 /tmp/.X11-unix/X0 \\\n--unshare-all \\\n--share-net \\\n /usr/bin/sh\nbash-4.4$ ls -AF\n.Xauthority  Documents/\n```\n\nPerhaps the most important rule to consider when building a bubblewrapped filesystem is that commands are executed in the order they appear. From the MuPDF example above:\n\n- A tmpfs system is created followed by the bind mounting of an .Xauthority file and a Documents directory:\n\n```\n--tmpfs $HOME \\\n--ro-bind $HOME/.Xauthority $HOME/.Xauthority \\\n--ro-bind $HOME/Documents $HOME/Documents \\\n```\n\n```\nbash-4.4$ ls -a\n.  ..  .Xauthority  Desktop\n```\n\n- A tmpfs filesystem is created after the bind mounting of .Xauthority and overlays it so that only the Documents directory is visible within the sandbox:\n\n```\n--ro-bind $HOME/.Xauthority $HOME/.Xauthority \\\n--tmpfs $HOME \\\n--ro-bind $HOME/Desktop $HOME/Desktop \\\n```\n\n```\nbash-4.4$ ls -a\n.  ..  Desktop\n```\n\n"
    },
    {
      "title": "p7zip",
      "level": 2,
      "content": "Applications which have not yet been patched against known vulnerabilities constitute prime candidates for bubblewrapping:\n\n- Bind as read-only the host /usr/bin/7za executable path to the sandbox\n- Create a symbolic link from the system /usr/lib directory to /lib64 in the sandbox\n- Blacklist the sandboxed contents of /usr/lib/modules and /usr/lib/systemd with tmpfs overlays\n- Mount a new devtmpfs filesystem to /dev in the sandbox\n- Bind as read-write the host /sandbox directory to the /sandbox directory in the sandbox 7za will only run in the host /sandbox directory and/or its subdirectories when called from the shell wrapper\n- Create new cgroup/IPC/network/PID/UTS namespaces for the application and its processes If the kernel does not support non-privileged user namespaces, skip its creation and continue Creation of a new network namespace prevents the sandbox from obtaining network access\n- Add a custom or an arbitrary hostname to the sandbox such as p7zip\n- Unset the XAUTHORITY environment variable to hide the location of the X11 connection cookie 7za does not need to connect to an X11 display server to function properly\n- Start a new terminal session to prevent keyboard input from escaping the sandbox\n\n- 7za will only run in the host /sandbox directory and/or its subdirectories when called from the shell wrapper\n\n- If the kernel does not support non-privileged user namespaces, skip its creation and continue\n- Creation of a new network namespace prevents the sandbox from obtaining network access\n\n- 7za does not need to connect to an X11 display server to function properly\n\n```\n#!/bin/sh\n#~/bwrap/pz7ip.sh\n(exec bwrap \\\n--ro-bind /usr/bin/7za /usr/bin/7za \\\n--symlink usr/lib /lib64 \\\n--tmpfs /usr/lib/modules \\\n--tmpfs /usr/lib/systemd \\\n--dev /dev \\\n--bind /sandbox /sandbox \\\n--unshare-all \\\n--hostname p7zip \\\n--unsetenv XAUTHORITY \\\n--new-session \\\n/usr/bin/7za \"$@\")\n```\n\n```\nbwrap \\\n--ro-bind /usr/bin/7za /usr/bin/7za \\\n--ro-bind /usr/bin/ls /usr/bin/ls \\\n--ro-bind /usr/bin/sh /usr/bin/sh \\\n--symlink usr/lib /lib64 \\\n--tmpfs /usr/lib/modules \\\n--tmpfs /usr/lib/systemd \\\n--dev /dev \\\n--bind /sandbox /sandbox \\\n--unshare-all \\\n--hostname p7zip \\\n--unsetenv XAUTHORITY \\\n--new-session \\\n/usr/bin/sh\nbash: no job control in this shell\nbash-4.4$ ls -AF         \ndev/  lib64@  usr/\nbash-4.4$ ls -l /usr/lib/modules \ntotal 0\nbash-4.4$ ls -l /usr/lib/systemd\ntotal 0\nbash-4.4$ ls -AF /dev\nconsole  full  null  ptmx@  pts/  random  shm/  stderr@  stdin@  stdout@  tty  urandom  zero\nbash-4.4$ ls -A /usr/bin\n7za  ls  sh\n```\n\n"
    },
    {
      "title": "Firefox",
      "level": 2,
      "content": "Network facing applications with large surface attack areas are also ideal candidates to be bubblewrapped:\n\n- Transmission included in the sandbox to launch with magnet and torrent links\n- Example wrap supports audio (PulseAudio) and printing (CUPS/Avahi) under GNOME (Wayland) Paths in ~/.config/transmission/settings.json should reflect the --setenv HOME variable\n- Full paths are used to allow for keyboard bindings in environments which do not support variable expansion.\n- WebRenderer and hardware (accelerated) compositing support included\n\n- Paths in ~/.config/transmission/settings.json should reflect the --setenv HOME variable\n\n```\nbwrap \\\n--symlink usr/lib /lib \\\n--symlink usr/lib64 /lib64 \\\n--symlink usr/bin /bin \\\n--symlink usr/bin /sbin \\\n--ro-bind /usr/lib /usr/lib \\\n--ro-bind /usr/lib64 /usr/lib64 \\\n--ro-bind /usr/bin /usr/bin \\\n--ro-bind /usr/lib/firefox /usr/lib/firefox \\\n--ro-bind /usr/share/applications /usr/share/applications \\\n--ro-bind /usr/share/gtk-3.0 /usr/share/gtk-3.0 \\\n--ro-bind /usr/share/fontconfig /usr/share/fontconfig \\\n--ro-bind /usr/share/icu /usr/share/icu \\\n--ro-bind /usr/share/drirc.d /usr/share/drirc.d \\\n--ro-bind /usr/share/fonts /usr/share/fonts \\\n--ro-bind /usr/share/glib-2.0 /usr/share/glib-2.0 \\\n--ro-bind /usr/share/glvnd /usr/share/glvnd \\\n--ro-bind /usr/share/icons /usr/share/icons \\\n--ro-bind /usr/share/libdrm /usr/share/libdrm \\\n--ro-bind /usr/share/mime /usr/share/mime \\\n--ro-bind /usr/share/X11/xkb /usr/share/X11/xkb \\\n--ro-bind /usr/share/icons /usr/share/icons \\\n--ro-bind /usr/share/mime /usr/share/mime \\\n--ro-bind /etc/fonts /etc/fonts \\\n--ro-bind /etc/resolv.conf /etc/resolv.conf \\\n--ro-bind /usr/share/ca-certificates /usr/share/ca-certificates \\\n--ro-bind /etc/ssl /etc/ssl \\\n--ro-bind /etc/ca-certificates /etc/ca-certificates \\\n--dir \"$XDG_RUNTIME_DIR\" \\\n--ro-bind \"$XDG_RUNTIME_DIR/pulse\" \"$XDG_RUNTIME_DIR/pulse\" \\\n--ro-bind \"$XDG_RUNTIME_DIR/wayland-1\" \"$XDG_RUNTIME_DIR/wayland-1\" \\\n--dev /dev \\\n--dev-bind /dev/dri /dev/dri \\\n--ro-bind /sys/dev/char /sys/dev/char \\\n--ro-bind /sys/devices/pci0000:00 /sys/devices/pci0000:00 \\\n--proc /proc \\\n--tmpfs /tmp \\\n--bind /home/example/.mozilla /home/example/.mozilla \\\n--bind /home/example/.config/transmission /home/example/.config/transmission \\\n--bind /home/example/Downloads /home/example/Downloads \\\n--setenv HOME /home/example \\\n--setenv GTK_THEME Adwaita:dark \\\n--setenv MOZ_ENABLE_WAYLAND 1 \\\n--setenv PATH /usr/bin \\\n--hostname RESTRICTED \\\n--unshare-all \\\n--share-net \\\n--die-with-parent \\\n--new-session \\\n/usr/bin/firefox\n```\n\n"
    },
    {
      "title": "Enhancing privacy",
      "level": 3,
      "content": "- Further restrictions can be made by removing specific entries Remove the following entry to remove audio support:\n\n- Remove the following entry to remove audio support:\n\n```\n--ro-bind \"$XDG_RUNTIME_DIR/pulse\" \"$XDG_RUNTIME_DIR/pulse\" \\\n```\n\n- /sandbox represents an arbitrary location defined by the user to hold desired profile information This allows for the use of a sanitized profile copied into /sandbox via a script/cron job or manually e.g.\n\n- This allows for the use of a sanitized profile copied into /sandbox via a script/cron job or manually e.g.\n\n```\n$ cp -pR ~/.mozilla /sandbox/\n```\n\nThe location can be a network share, a USB mount, or a local filesystem or ramfs/tmpfs location\n\n- Set /home/r to obscure the actual /home/example\n- Set new user ID and group ID values\n\n```\nbwrap \\\n....\n--bind /sandbox/.mozilla /home/r/.mozilla \\\n--bind /sandbox/Downloads /home/r/Downloads \\\n...\n--setenv HOME /home/r \\\n...\n--uid 200 --gid 400 \\\n...\n/usr/bin/firefox --no-remote --private-window\n```\n\n"
    },
    {
      "title": "Chromium",
      "level": 2,
      "content": "A simple chromium sandbox on wayland and with pipewire:\n\n```\nbwrap \\\n    --symlink usr/lib /lib \\\n    --symlink usr/lib64 /lib64 \\\n    --symlink usr/bin /bin \\\n    --symlink usr/bin /sbin \\\n    --ro-bind /usr/lib /usr/lib \\\n    --ro-bind /usr/lib64 /usr/lib64 \\\n    --ro-bind /usr/bin /usr/bin \\\n    --ro-bind /etc /etc \\\n    --ro-bind /usr/lib/chromium /usr/lib/chromium \\\n    --ro-bind /usr/share /usr/share \\\n    --dev /dev \\\n    --dev-bind /dev/dri /dev/dri \\\n    --proc /proc \\\n    --ro-bind /sys/dev/char /sys/dev/char \\\n    --ro-bind /sys/devices /sys/devices \\\n    --ro-bind /run/dbus /run/dbus \\\n    --dir \"$XDG_RUNTIME_DIR\" \\\n    --ro-bind \"$XDG_RUNTIME_DIR/wayland-1\" \"$XDG_RUNTIME_DIR/wayland-1\" \\\n    --ro-bind \"$XDG_RUNTIME_DIR/pipewire-0\" \"$XDG_RUNTIME_DIR/pipewire-0\" \\\n    --ro-bind \"$XDG_RUNTIME_DIR/pulse\" \"$XDG_RUNTIME_DIR/pulse\" \\\n    --tmpfs /tmp \\\n    --dir $HOME/.cache \\\n    --bind $HOME/.config/chromium $HOME/.config/chromium \\\n    --bind $HOME/Downloads $HOME/Downloads \\\n    /usr/bin/chromium --enable-features=UseOzonePlatform --ozone-platform=wayland\n```\n\nNote: One alternative solution is to have chromium use the namespace created by bubblewrap. This can be achieved through zypakAUR which is also used by flatpak to run electron based apps inside an additional namespace. Example code that demonstrates how to use zypak with chromium/electron can be found here\n\nOne alternative solution is to have chromium use the namespace created by bubblewrap. This can be achieved through zypakAUR which is also used by flatpak to run electron based apps inside an additional namespace. Example code that demonstrates how to use zypak with chromium/electron can be found here\n\n- PipeWire: --ro-bind \"$XDG_RUNTIME_DIR/pipewire-0\" \"$XDG_RUNTIME_DIR/pipewire-0\" \\ If you are not using pipewire, feel free to remove this line\n- --bind $HOME/.config/chromium $HOME/.config/chromium \\ mounts your chromium configuration directory in the sandbox as readable and writable\n- --bind $HOME/Downloads $HOME/Downloads \\ mounts your ~/Downloads directory in the sandbox as readable and writable\n- This example can be further improved for more isolation.\n\n- If you are not using pipewire, feel free to remove this line\n\n"
    },
    {
      "title": "Skype for Linux",
      "level": 2,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nThe following example provides these features:\n\n- env -i ensures that all environment variables are unset.\n- Network is shared with the host (--share-net), /etc/resolv.conf is bind-mounted.\n- Xorg access: bind the /tmp/.X11-unix/X0 socket, set $DISPLAY.\n- D-Bus: bind the $XDG_RUNTIME_DIR/bus socket, set $DBUS_SESSION_BUS_ADDRESS.\n- Audio: bind the PulseAudio socket.\n- Video: dev-bind the /dev/video0 device.\n\nThe directory on the host where you want to keep the Skype profile can be configured with $HOST_PROFILE_PATH.\n\n```\nenv -i bwrap \\\n    --ro-bind /usr /usr \\\n    --dir /home/r \\\n    --dir /tmp \\\n    --dir /var \\\n    --dir \"$XDG_RUNTIME_DIR\" \\\n    --proc /proc \\\n    --dev /dev \\\n    --symlink usr/lib /lib \\\n    --symlink usr/lib64 /lib64 \\\n    --symlink usr/bin /bin \\\n    --symlink usr/sbin /sbin \\\n    --symlink ../tmp /var/tmp \\\n    --bind \"$HOST_PROFILE_PATH\" /home/r/.config/skypeforlinux \\\n    --ro-bind /etc/resolv.conf /etc/resolv.conf \\\n    --ro-bind /tmp/.X11-unix/X0 /tmp/.X11-unix/X0 \\\n    --ro-bind \"$XDG_RUNTIME_DIR/bus\" \"$XDG_RUNTIME_DIR/bus\" \\\n    --ro-bind \"$XDG_RUNTIME_DIR/pulse\" \"$XDG_RUNTIME_DIR/pulse\" \\\n    --dev-bind /dev/video0 /dev/video0 \\\n    --chdir / \\\n    --unshare-all \\\n    --share-net \\\n    --hostname RESTRICTED \\\n    --die-with-parent \\\n    --new-session \\\n    --setenv PATH /usr/bin \\\n    --setenv HOME /home/r \\\n    --setenv XDG_RUNTIME_DIR \"$XDG_RUNTIME_DIR\" \\\n    --setenv DISPLAY \"$DISPLAY\" \\\n    --setenv DBUS_SESSION_BUS_ADDRESS \"unix:path=$XDG_RUNTIME_DIR/bus\" \\\n    /usr/bin/skypeforlinux\n```\n\n"
    },
    {
      "title": "Steam",
      "level": 2,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nA simple Steam sandbox\n\n```\n#!/usr/bin/bash\nset -e\n\nSTEAM_HOME=\"$HOME/.local/share/steam_sandbox\"\nRUN_USER=\"$XDG_RUNTIME_DIR\"\n\nmkdir -p \"$STEAM_HOME\"\n\n_bind() {\n\t_bind_arg=$1\n\tshift\n\tfor _path in \"$@\"; do\n\t\targs+=(\"$_bind_arg\" \"$_path\" \"$_path\")\n\tdone\n}\n\nbind() {\n\t_bind --bind-try \"$@\"\n}\n\nrobind() {\n\t_bind --ro-bind-try \"$@\"\n}\n\ndevbind() {\n\t_bind --dev-bind-try \"$@\"\n}\n\nargs=(\n\t--tmpfs /tmp\n\t--proc /proc\n\t--dev /dev\n\t--dir /etc\n\t--dir /var\n\t--dir \"$RUN_USER\"\n\t--bind \"$STEAM_HOME\" \"$HOME\"\n\t--dir \"$HOME\"\n\t--dir \"$XDG_CONFIG_HOME\"\n\t--dir \"$XDG_CACHE_HOME\"\n\t--dir \"$XDG_DATA_HOME\"\n\t--dir \"$XDG_STATE_HOME\"\n\t--symlink /usr/lib /lib\n\t--symlink /usr/lib /lib64\n\t--symlink /usr/bin /bin\n\t--symlink /usr/bin /sbin\n\t--symlink /run /var/run\n\t--setenv XAUTHORITY \"$XAUTHORITY\"\n)\n\nrobind \\\n\t/usr \\\n\t/etc \\\n\t/opt \\\n\t/sys \\\n\t/var/empty \\\n\t/var/lib/alsa \\\n\t/var/lib/dbus \\\n\t\"$RUN_USER/systemd/resolve\" \\\n\t/tmp/.ICE-unix/* \\\n\t/tmp/.X11-unix/*\n\ndevbind \\\n\t/dev/dri \\\n\t/dev/nvidia* \\\n\t/dev/input \\\n\t/dev/uinput\n\n# steam\nbind \\\n\t\"$XAUTHORITY\" \\\n\t\"$HOME/.local/bin/proton\" \\\n\t\"$HOME/.pki\" \\\n\t\"$HOME/.steam\" \\\n\t\"$HOME/.steampath\" \\\n\t\"$HOME/.steampid\" \\\n\t\"$HOME/Downloads\" \\\n\t\"$RUN_USER\"/.mutter-X* \\\n\t\"$RUN_USER\"/ICE* \\\n\t\"$RUN_USER\"/dbus* \\\n\t\"$RUN_USER\"/gnome* \\\n\t\"$RUN_USER\"/pipewire* \\\n\t\"$RUN_USER\"/pulse* \\\n\t\"$RUN_USER\"/wayland* \\\n\t\"$RUN_USER/at-spi\" \\\n\t\"$RUN_USER/bus\" \\\n\t\"$RUN_USER/dconf\" \\\n\t\"$RUN_USER/systemd\" \\\n\t\"$XDG_CACHE_HOME/mesa_shader_cache\" \\\n\t\"$XDG_CACHE_HOME/nv\" \\\n\t\"$XDG_CACHE_HOME/nvidia\" \\\n\t\"$XDG_CACHE_HOME/radv_builtin_shaders64\" \\\n\t\"$XDG_CONFIG_HOME/Epic\" \\\n\t\"$XDG_CONFIG_HOME/Loop_Hero\" \\\n\t\"$XDG_CONFIG_HOME/MangoHud\" \\\n\t\"$XDG_CONFIG_HOME/ModTheSpire\" \\\n\t\"$XDG_CONFIG_HOME/RogueLegacy\" \\\n\t\"$XDG_CONFIG_HOME/RogueLegacyStorageContainer\" \\\n\t\"$XDG_CONFIG_HOME/cef_user_data\" \\\n\t\"$XDG_CONFIG_HOME/proton\" \\\n\t\"$XDG_CONFIG_HOME/pulse\" \\\n\t\"$XDG_CONFIG_HOME/unity3d\" \\\n\t\"$XDG_DATA_HOME/3909/PapersPlease\" \\\n\t\"$XDG_DATA_HOME/Colossal Order\" \\\n\t\"$XDG_DATA_HOME/Dredmor\" \\\n\t\"$XDG_DATA_HOME/FasterThanLight\" \\\n\t\"$XDG_DATA_HOME/HotlineMiami\" \\\n\t\"$XDG_DATA_HOME/IntoTheBreach\" \\\n\t\"$XDG_DATA_HOME/Paradox Interactive\" \\\n\t\"$XDG_DATA_HOME/PillarsOfEternity\" \\\n\t\"$XDG_DATA_HOME/RogueLegacy\" \\\n\t\"$XDG_DATA_HOME/RogueLegacyStorageContainer\" \\\n\t\"$XDG_DATA_HOME/Steam\" \\\n\t\"$XDG_DATA_HOME/SuperHexagon\" \\\n\t\"$XDG_DATA_HOME/Terraria\" \\\n\t\"$XDG_DATA_HOME/applications\" \\\n\t\"$XDG_DATA_HOME/aspyr-media\" \\\n\t\"$XDG_DATA_HOME/bohemiainteractive\" \\\n\t\"$XDG_DATA_HOME/cdprojektred\" \\\n\t\"$XDG_DATA_HOME/feral-interactive\" \\\n\t\"$XDG_DATA_HOME/frictionalgames\" \\\n\t\"$XDG_DATA_HOME/icons\" \\\n\t\"$XDG_DATA_HOME/proton\" \\\n\t\"$XDG_DATA_HOME/vpltd\" \\\n\t\"$XDG_DATA_HOME/vulkan\" \\\n\t\"/var/lib/bluetooth\" \\\n\t/run/systemd\n\nexec bwrap \"${args[@]}\" /usr/lib/steam/steam \"$@\"\n```\n\n"
    },
    {
      "title": "NPM, Node Version Manager (NVM), Maven Java",
      "level": 2,
      "content": "In order to be able to run npm in a project root you can use the following command.\n\nIt works in combination with Angular, Cypress and Maven Java. X11 and wayland are on top included because Cypress starts a GUI based on electron.\n\nIt allows full file access to the current directory where it is run from. Assuming you execute npm install in the current project root where npm needs to write to node_modules, package.json, etc. Also access to global npm install directory and nvm is allowed (npm -g install ...). Furthermore X11 with cypress is also able to run and even wayland apps.\n\n```\nbwrap_arguments=(\n    # no zombies\n    --die-with-parent\n\n    # network required for dependencies\n    --unshare-all\n    --share-net\n\n    # create environment for a properly running shell\n    --tmpfs /\n    --tmpfs /run\n    --dir /tmp\n    --dev /dev\n    --proc /proc\n    --ro-bind /bin /bin\n    --ro-bind /sbin /sbin\n    --ro-bind /usr /usr\n    --ro-bind /etc /etc\n    --ro-bind /lib /lib\n    --ro-bind /lib64 /lib64\n    --ro-bind /sys /sys\n    --ro-bind /var /var\n\n    # systemd-resolve for dns\n    --ro-bind /run/systemd/resolve /run/systemd/resolve\n\n    # git is used by npm to init repos, config necessary for email username\n    --ro-bind $XDG_CONFIG_HOME/git/config $XDG_CONFIG_HOME/git/config\n\n    # zsh has to look everywhere cool\n    --ro-bind $XDG_CONFIG_HOME/zsh/.zshrc $XDG_CONFIG_HOME/zsh/.zshrc\n    --ro-bind $XDG_CONFIG_HOME/zsh/.zshenv $XDG_CONFIG_HOME/zsh/.zshenv\n    --ro-bind $HOME/.zshenv $HOME/.zshenv\n\n    # Maven\n    --ro-bind /opt/maven /opt/maven\n    --ro-bind $HOME/.m2 $HOME/.m2\n\n    # NPM\n    --bind \"$XDG_DATA_HOME/npm\" \"$XDG_DATA_HOME/npm\"\n\n    # cache is needed by many programs like npm, cypress, nvm, maven\n    --bind \"$XDG_CACHE_HOME\" \"$XDG_CACHE_HOME\"\n\n    # x11, needed for cypress\n    --ro-bind \"$XAUTHORITY\" \"$XAUTHORITY\"\n\n    # wayland, might be useful\n    --ro-bind \"$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY\" \"$XDG_RUNTIME_DIR/$WAYLAND_DISPLAY\"\n\n    # current dir is assumed to be project dir and full access is allowed\n    --bind \"$(pwd)\" \"$(pwd)\"\n)\n\n# run bwrap with the arguments specified above and with the command provided by the user: zsh, npm install, etc\n$ bwrap \"${bwrap_arguments[@]}\" \"$@\"\n```\n\n"
    }
  ]
}