{
  "title": "Alacritty",
  "url": "https://wiki.archlinux.org/title/Alacritty",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Alacritty is a simple, GPU-accelerated terminal emulator written in Rust. It supports scrollback, 24-bit colors (w:Color depth#True color (24-bit), copy/paste, clicking on URLs, and custom key bindings.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the alacritty package or alacritty-gitAUR for the development version.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Alacritty searches for a configuration file at the following places in this order:\n\n- $XDG_CONFIG_HOME/alacritty/alacritty.toml\n- $XDG_CONFIG_HOME/alacritty.toml\n- $HOME/.config/alacritty/alacritty.toml\n- $HOME/.alacritty.toml\n\nVersions before 0.13.0 used a YAML configuration file. Old YAML config files can be converted to TOML by running alacritty migrate. However, automatic migration drops all comments.\n\nAlacritty does not provide a configuration file by default. Configuration options can be found at the project's homepage. If the live_config_reload option is enabled (default), most settings will take effect as soon as you save the configuration file.\n\n"
    },
    {
      "title": "Colors",
      "level": 3,
      "content": "See the alacritty-theme repository for a list of available color schemes. If your preferred color scheme is on the list, paste the provided code into your configuration file.\n\n"
    },
    {
      "title": "Font",
      "level": 3,
      "content": "If you do not want to use your system’s default font, you can specify a different font by changing the following lines:\n\n```\n[font]\nsize = 12.0\n\n[font.bold]\nfamily = \"monospace\"\nstyle = \"Bold\"\n\n[font.bold_italic]\nfamily = \"monospace\"\nstyle = \"Bold Italic\"\n\n[font.italic]\nfamily = \"monospace\"\nstyle = \"Italic\"\n\n[font.normal]\nfamily = \"monospace\"\nstyle = \"Regular\"\n```\n\nSubstitute monospace with a font name from the output of\n\n```\n$ fc-list : family style\n```\n\nNote that some fonts do not provide an Italic style but an Oblique style instead.\n\n"
    },
    {
      "title": "Spawn new instance in same directory",
      "level": 3,
      "content": "Add the following lines to your configuration file to spawn a new instance of Alacritty in the current working directory by pressing Ctrl+Shift+Enter:\n\n```\n[keyboard]\nbindings = [\n   { key = \"Return\", mods = \"Control|Shift\", action = \"SpawnNewInstance\" }\n]\n```\n\n"
    },
    {
      "title": "Vi mode and copy/paste",
      "level": 3,
      "content": "The vi mode allows moving around Alacritty's viewport and scrollback using the keyboard. By default, you can toggle it using Ctrl+Shift+Space. To copy, you can either use a mouse to select and press Ctrl+Shift+c, or enter Vi mode, start a selection using v, move around with hjkl like in vim, and copy the selection with y. To paste, press Ctrl+Shift+v. To copy/paste to/from X clipboard, you can use a mouse selection to copy and a middle mouse click to paste.\n\n"
    },
    {
      "title": "Hints",
      "level": 3,
      "content": "Terminal hints can be used to find text or hyperlinks in the visible part of the terminal and pipe it to other applications. By default, Alacritty provides hinting URLs via the Ctrl+Shift+O shortcut and opens them with xdg-open. See the HINTS section of Alacritty TOML configuration manual for details.\n\nFor example, to make filename.rs:line:character file hints (e.g. my_crate/src/server.rs:181:49) clickable and open in Visual Studio Code, one can add the following section to Alacritty's TOML config:\n\n```\nalacritty.toml\n```\n\n```\n[[hints.enabled]]\nregex = \"[^ ]+\\\\.rs:\\\\d+:\\\\d+\"\ncommand = { program = \"code\", args = [ \"--goto\" ] }\nmouse = { enabled = true }\n```\n\nMultiple types of regex-based hints can be added by adding multiple [[hints.enabled]] sections.\n\n"
    },
    {
      "title": "Switch themes on the fly",
      "level": 3,
      "content": "If you want to switch the theme, for example when connecting to a server over ssh. The following command can be used:\n\n```\n$ alacritty msg config \"$(cat ~/path/to/theme.toml)\"\n```\n\n"
    },
    {
      "title": "Mouse not working properly in Vim",
      "level": 3,
      "content": "Add set ttymouse=sgr and set mouse=a to your .vimrc or switch to Neovim. Also see this issue.\n\n"
    },
    {
      "title": "Transparent border in dwm",
      "level": 3,
      "content": "With dwm, alacritty's borders become transparent. Adding this line to drw.c in the dwm source directory and recompiling fixes the issue:\n\n```\nif (!XftColorAllocName(...))\n    die(\"error, cannot allocate color '%s'\", clrname); /* Find this line */\ndest->pixel |= 0xff << 24; /* Add this line */\n```\n\n"
    },
    {
      "title": "Terminal functionality unavailable in remote shells",
      "level": 3,
      "content": "When connecting to a remote system from an Alacritty terminal, for instance over SSH, it can occur that the system does not have an entry for Alacritty in its terminfo database (/usr/share/terminfo/a/alacritty*). Therefore, all interactive terminal functionality does not work. This can be fixed by copying the terminfo for Alacritty to the remote server, as described in termite#Terminal issues with SSH.\n\nOn the local host, using Alacritty:\n\n```\n$ infocmp > alacritty.terminfo  # export Alacritty's Terminfo\n$ scp alacritty.terminfo user@remote-host:~/  # or any other method to copy to the remote host\n```\n\nOn the remote host, in the directory where you copied alacritty.terminfo:\n\n```\n$ tic -x alacritty.terminfo  # import Terminfo for current user\n$ rm alacritty.terminfo  # optional: remove Terminfo file\n```\n\nHere is a one-liner version of the process above:\n\n```\n$ infocmp | ssh \"$user@$host\" 'tic -x /dev/stdin'\n```\n\nAlternatively, one can set the value of TERM in the configuration to xterm-256color instead of the default alacritty:\n\n```\n[env]\nTERM = \"xterm-256color\"\n```\n\n"
    },
    {
      "title": "No title bar on Wayland GNOME",
      "level": 3,
      "content": "When using Wayland GNOME, the title bar is empty and has strange icons. See https://github.com/alacritty/alacritty/issues/4739 for details.\n\nOne workaround is to launch Alacritty with Xwayland instead of native Wayland by setting an empty WAYLAND_DISPLAY environment variable.\n\n"
    },
    {
      "title": "Different font size on multiple monitors",
      "level": 3,
      "content": "By default, Alacritty attempts to scale fonts to the appropriate point size on each monitor based on the Device pixel ratio. On some setups with multiple displays, this behavior can result in vastly different physical sizes [1], [2].\n\nTo view the existing device pixel ratio values for each monitor, run alacritty -v, move the child window to each monitor, and pay attention to the reported Device pixel ratio in the parent window.\n\nForcing a constant device pixel ratio using the WINIT_X11_SCALE_FACTOR environment variable may be sufficient to fix the different font size issue:\n\n```\n$ WINIT_X11_SCALE_FACTOR=1.66 alacritty\n```\n\nThis can also be achieved by setting the value of WINIT_X11_SCALE_FACTOR in the configuration file:\n\n```\n[env]\nWINIT_X11_SCALE_FACTOR = \"1.66\"\n```\n\n"
    },
    {
      "title": "Color scheme not recovering what was previously set with pywal",
      "level": 3,
      "content": "You can add the following code to your shell's run commands (.bashrc).\n\n```\nif command -v wal > /dev/null 2>&1 && [ \"$TERM\" = \"alacritty\" ]; then\n    wal -Rqe\nfi\n```\n\nThis is better than simply adding wal -R because\n\n1. You only need this to happen in your terminal emulator window.\n1. wal -R is pretty slow and you don't need to run that in every subshell.\n1. You don't need to see StdOut, we use the -q option.\n1. We don't need to cause other parts of our desktop to reload colors again as well (i.e. gtk, xrdb, polybar, i3). This is done with the -e flag.\n\n"
    }
  ]
}