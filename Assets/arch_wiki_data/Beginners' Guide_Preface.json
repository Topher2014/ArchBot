{
  "title": "Beginners' Guide/Preface",
  "url": "https://wiki.archlinux.org/title/Beginners%27_Guide/Preface",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This document is a guide for installing Arch Linux using the live system booted from an installation medium made from an official installation image. The installation medium provides accessibility features which are described on the page Install Arch Linux with accessibility options. For alternative means of installation, see Category:Installation process.\n\nBefore installing, it would be advised to view the FAQ. For conventions used in this document, see Help:Reading. In particular, code examples may contain placeholders (formatted in italics) that must be replaced manually.\n\nThis guide is kept concise and you are advised to follow the instructions in the presented order per section. For more detailed instructions, see the respective ArchWiki articles or the various programs' man pages, both linked from this guide. For interactive help, the IRC channel and the forums are also available.\n\nArch Linux should run on any x86_64-compatible machine with a minimum of 512 MiB RAM, though more memory is needed to boot the live system for installation.[1] A basic installation should take less than 2 GiB of disk space. As the installation process needs to retrieve packages from a remote repository, this guide assumes a working internet connection is available.\n\n"
    },
    {
      "title": "Acquire an installation image",
      "level": 3,
      "content": "Visit the Download page and, depending on how you want to boot, acquire the ISO file or a netboot image, and the respective PGP signature.\n\n"
    },
    {
      "title": "Verify signature",
      "level": 3,
      "content": "It is recommended to verify the image signature before use, especially when downloading from an HTTP mirror, where downloads are generally prone to be intercepted to serve malicious images.\n\nOn a system with GnuPG installed, do this by downloading the ISO PGP signature (under Checksums in the page Download) to the ISO directory, and verifying it with:\n\n```\n$ gpg --keyserver-options auto-key-retrieve --verify archlinux-version-x86_64.iso.sig\n```\n\nAlternatively, from an existing Arch Linux installation run:\n\n```\n$ pacman-key -v archlinux-version-x86_64.iso.sig\n```\n\n- The signature itself could be manipulated if it is downloaded from a mirror site, instead of from archlinux.org as above. In this case, ensure that the public key, which is used to decode the signature, is signed by another, trustworthy key. The gpg command will output the fingerprint of the public key.\n- Another method to verify the authenticity of the signature is to ensure that the public key's fingerprint is identical to the key fingerprint of the Arch Linux developer who signed the ISO-file. See Wikipedia:Public-key cryptography for more information on the public-key process to authenticate keys.\n\n"
    },
    {
      "title": "Prepare an installation medium",
      "level": 3,
      "content": "The ISO can be supplied to the target machine via a USB flash drive, an optical disc or a network with PXE: follow the appropriate article to prepare yourself an installation medium from the ISO file.\n\nFor the netboot image, follow Netboot#Boot from a USB flash drive to prepare a USB flash drive for UEFI booting.\n\n"
    },
    {
      "title": "Boot the live environment",
      "level": 3,
      "content": "1. Point the current boot device to the one which has the Arch Linux installation medium. Typically it is achieved by pressing a key during the POST phase, as indicated on the splash screen. Refer to your motherboard's manual for details.\n1. When the installation medium's boot loader menu appears, if you used the ISO, select Arch Linux install medium and press Enter to enter the installation environment. if you used the Netboot image, choose a geographically close mirror from Mirror menu, then select Boot Arch Linux and press Enter. Tip: The ISO uses systemd-boot for UEFI and syslinux for BIOS booting. Use respectively e or Tab to enter the boot parameters. The Netboot image uses iPXE and the boot parameters can be specified in the Boot options menu. See README.bootparams for a list. A common example of manually defined boot parameter would be the font size. For better readability on HiDPI screens—when they are not already recognized as such—using fbcon=font:TER16x32 can help. See HiDPI#Linux console (tty) for a detailed explanation.\n1. \n1. You will be logged in on the first virtual console as the root user, and presented with a Zsh shell prompt.\n\n- if you used the ISO, select Arch Linux install medium and press Enter to enter the installation environment.\n- if you used the Netboot image, choose a geographically close mirror from Mirror menu, then select Boot Arch Linux and press Enter. Tip: The ISO uses systemd-boot for UEFI and syslinux for BIOS booting. Use respectively e or Tab to enter the boot parameters. The Netboot image uses iPXE and the boot parameters can be specified in the Boot options menu. See README.bootparams for a list. A common example of manually defined boot parameter would be the font size. For better readability on HiDPI screens—when they are not already recognized as such—using fbcon=font:TER16x32 can help. See HiDPI#Linux console (tty) for a detailed explanation.\n\n- The ISO uses systemd-boot for UEFI and syslinux for BIOS booting. Use respectively e or Tab to enter the boot parameters. The Netboot image uses iPXE and the boot parameters can be specified in the Boot options menu. See README.bootparams for a list.\n- A common example of manually defined boot parameter would be the font size. For better readability on HiDPI screens—when they are not already recognized as such—using fbcon=font:TER16x32 can help. See HiDPI#Linux console (tty) for a detailed explanation.\n\nTo switch to a different console—for example, to view this guide with Lynx alongside the installation—use the Alt+arrow shortcut. To edit configuration files, mcedit(1), nano and vim are available. See pkglist.x86_64.txt for a list of the packages included in the installation medium.\n\n"
    },
    {
      "title": "Set the console keyboard layout and font",
      "level": 3,
      "content": "The default console keymap is US. Available layouts can be listed with:\n\n```\n# localectl list-keymaps\n```\n\nTo set the keyboard layout, pass its name to loadkeys(1). For example, to set a German keyboard layout:\n\n```\n# loadkeys de-latin1\n```\n\nConsole fonts are located in /usr/share/kbd/consolefonts/ and can likewise be set with setfont(8) omitting the path and file extension. For example, to use one of the largest fonts suitable for HiDPI screens, run:\n\n```\n# setfont ter-132b\n```\n\n"
    },
    {
      "title": "Verify the boot mode",
      "level": 3,
      "content": "To verify the boot mode, check the UEFI bitness:\n\n```\n# cat /sys/firmware/efi/fw_platform_size\n```\n\n- If the command returns 64, the system is booted in UEFI mode and has a 64-bit x64 UEFI.\n- If the command returns 32, the system is booted in UEFI mode and has a 32-bit IA32 UEFI. While this is supported, it will limit the boot loader choice to those that support mixed mode booting.\n\n- If it returns No such file or directory, the system may be booted in BIOS (or CSM) mode.\n\nIf the system did not boot in the mode you desired (UEFI vs BIOS), refer to your motherboard's manual.\n\n"
    },
    {
      "title": "Connect to the internet",
      "level": 3,
      "content": "To set up a network connection in the live environment, go through the following steps:\n\n1. Ensure your network interface is listed and enabled, for example with ip-link(8): # ip link\n1. For wireless and WWAN, make sure the card is not blocked with rfkill.\n1. Connect to the network: Ethernet—plug in the cable. Wi-Fi—authenticate to the wireless network using iwctl. Mobile broadband modem—connect to the mobile network with the mmcli utility.\n1. Configure your network connection: DHCP: dynamic IP address and DNS server assignment (provided by systemd-networkd and systemd-resolved) should work out of the box for Ethernet, WLAN, and WWAN network interfaces. Static IP address: follow Network configuration#Static IP address.\n1. The connection may be verified with ping: # ping archlinux.org\n\n```\n# ip link\n```\n\n- Ethernet—plug in the cable.\n- Wi-Fi—authenticate to the wireless network using iwctl.\n- Mobile broadband modem—connect to the mobile network with the mmcli utility.\n\n- DHCP: dynamic IP address and DNS server assignment (provided by systemd-networkd and systemd-resolved) should work out of the box for Ethernet, WLAN, and WWAN network interfaces.\n- Static IP address: follow Network configuration#Static IP address.\n\n```\n# ping archlinux.org\n```\n\n"
    },
    {
      "title": "Update the system clock",
      "level": 3,
      "content": "In the live environment systemd-timesyncd is enabled by default and time will be synced automatically once a connection to the internet is established.\n\nUse timedatectl(1) to ensure the system clock is synchronized:\n\n```\n# timedatectl\n```\n\n"
    },
    {
      "title": "Partition the disks",
      "level": 3,
      "content": "When recognized by the live system, disks are assigned to a block device such as /dev/sda, /dev/nvme0n1 or /dev/mmcblk0. To identify these devices, use lsblk or fdisk.\n\n```\n# fdisk -l\n```\n\nResults ending in rom, loop or airootfs may be ignored. mmcblk* devices ending in rpbm, boot0 and boot1 can be ignored.\n\nThe following partitions are required for a chosen device:\n\n- One partition for the root directory /.\n- For booting in UEFI mode: an EFI system partition.\n\nUse a partitioning tool like fdisk to modify partition tables. For example:\n\n```\n# fdisk /dev/the_disk_to_be_partitioned\n```\n\n- Take time to plan a long-term partitioning scheme to avoid risky and complicated conversion or re-partitioning procedures in the future.\n- If you want to create any stacked block devices for LVM, system encryption or RAID, do it now.\n- If the disk from which you want to boot already has an EFI system partition, do not create another one, but use the existing partition instead.\n- Swap space can be set on a swap file for file systems supporting it. Alternatively, disk based swap can be avoided entirely by setting up swap on zram after installing the system.\n\n"
    },
    {
      "title": "Example layouts",
      "level": 4,
      "content": "Table content:\nMount point on the installed system | Partition | Partition type | Suggested size\n/boot1 | /dev/efi_system_partition | EFI system partition | 1 GiB\n[SWAP] | /dev/swap_partition | Linux swap | At least 4 GiB\n/ | /dev/root_partition | Linux x86-64 root (/) | Remainder of the device. At least 23–32 GiB.\n\n1. Other mount points, such as /efi, are possible, provided that the used boot loader is capable of loading the kernel and initramfs images from the root volume. See the warning in Arch boot process#Boot loader.\n\nTable content:\nMount point on the installed system | Partition | Partition type | Suggested size\n[SWAP] | /dev/swap_partition | Linux swap | At least 4 GiB\n/ | /dev/root_partition | Linux | Remainder of the device. At least 23–32 GiB.\n\nSee also Partitioning#Example layouts.\n\n"
    },
    {
      "title": "Format the partitions",
      "level": 3,
      "content": "Once the partitions have been created, each newly created partition must be formatted with an appropriate file system. See File systems#Create a file system for details.\n\nFor example, to create an Ext4 file system on /dev/root_partition, run:\n\n```\n# mkfs.ext4 /dev/root_partition\n```\n\nIf you created a partition for swap, initialize it with mkswap(8):\n\n```\n# mkswap /dev/swap_partition\n```\n\nIf you created an EFI system partition, format it to FAT32 using mkfs.fat(8).\n\n```\n# mkfs.fat -F 32 /dev/efi_system_partition\n```\n\n"
    },
    {
      "title": "Mount the file systems",
      "level": 3,
      "content": "Mount the root volume to /mnt. For example, if the root volume is /dev/root_partition:\n\n```\n# mount /dev/root_partition /mnt\n```\n\nCreate any remaining mount points under /mnt (such as /mnt/boot for /boot) and mount the volumes in their corresponding hierarchical order.\n\nFor UEFI systems, mount the EFI system partition:\n\n```\n# mount --mkdir /dev/efi_system_partition /mnt/boot\n```\n\nIf you created a swap volume, enable it with swapon(8):\n\n```\n# swapon /dev/swap_partition\n```\n\ngenfstab(8) will later detect mounted file systems and swap space.\n\n"
    },
    {
      "title": "Select the mirrors",
      "level": 3,
      "content": "Packages to be installed must be downloaded from mirror servers, which are defined in /etc/pacman.d/mirrorlist. On the live system, after connecting to the internet, reflector updates the mirror list by choosing 20 most recently synchronized HTTPS mirrors and sorting them by download rate.\n\nThe higher a mirror is placed in the list, the more priority it is given when downloading a package. You may want to inspect the file to see if it is satisfactory. If it is not, edit the file accordingly, and move the geographically closest mirrors to the top of the list, although other criteria should be taken into account.\n\nThis file will later be copied to the new system by pacstrap, so it is worth getting right.\n\n"
    },
    {
      "title": "Install essential packages",
      "level": 3,
      "content": "Use the pacstrap(8) script to install the base package, Linux kernel and firmware for common hardware:\n\n```\n# pacstrap -K /mnt base linux linux-firmware\n```\n\n- You can substitute linux with a kernel package of your choice, or you could omit it entirely when installing in a container.\n- You could omit the installation of the firmware package when installing in a virtual machine or container.\n\nThe base package does not include all tools from the live installation, so installing more packages may be necessary for a fully functional base system. To install other packages or package groups, append the names to the pacstrap command above (space separated) or use pacman to install them while chrooted into the new system. In particular, consider installing:\n\n- CPU microcode updates—amd-ucode or intel-ucode—for hardware bug and security fixes,\n- userspace utilities for file systems that will be used on the system—for the purposes of e.g. file system creation and fsck,\n- utilities for accessing and managing RAID or LVM if they will be used on the system,\n- specific firmware for other devices not included in linux-firmware (e.g. sof-firmware for onboard audio, linux-firmware-marvell for Marvell wireless and any of the multiple firmware packages for Broadcom wireless),\n- software necessary for networking (e.g. a network manager or a standalone DHCP client, authentication software for Wi-Fi, ModemManager for mobile broadband connections),\n- a console text editor (e.g nano) to allow editing configuration files from the console,\n- packages for accessing documentation in man and info pages: man-db, man-pages and texinfo.\n\nFor comparison, packages available in the live system can be found in pkglist.x86_64.txt.\n\n"
    },
    {
      "title": "Fstab",
      "level": 3,
      "content": "Generate an fstab file (use -U or -L to define by UUID or labels, respectively):\n\n```\n# genfstab -U /mnt >> /mnt/etc/fstab\n```\n\nCheck the resulting /mnt/etc/fstab file, and edit it in case of errors.\n\n"
    },
    {
      "title": "Chroot",
      "level": 3,
      "content": "Change root into the new system:\n\n```\n# arch-chroot /mnt\n```\n\n"
    },
    {
      "title": "Time",
      "level": 3,
      "content": "Set the time zone:\n\n```\n# ln -sf /usr/share/zoneinfo/Region/City /etc/localtime\n```\n\nRun hwclock(8) to generate /etc/adjtime:\n\n```\n# hwclock --systohc\n```\n\nThis command assumes the hardware clock is set to UTC. See System time#Time standard for details.\n\nTo prevent clock drift and ensure accurate time, set up time synchronization using a Network Time Protocol (NTP) client such as systemd-timesyncd.\n\n"
    },
    {
      "title": "Localization",
      "level": 3,
      "content": "Edit /etc/locale.gen and uncomment en_US.UTF-8 UTF-8 and other needed UTF-8 locales. Generate the locales by running:\n\n```\n# locale-gen\n```\n\nCreate the locale.conf(5) file, and set the LANG variable accordingly:\n\n```\n/etc/locale.conf\n```\n\n```\nLANG=en_US.UTF-8\n```\n\nIf you set the console keyboard layout, make the changes persistent in vconsole.conf(5):\n\n```\n/etc/vconsole.conf\n```\n\n```\nKEYMAP=de-latin1\n```\n\n"
    },
    {
      "title": "Network configuration",
      "level": 3,
      "content": "Create the hostname file:\n\n```\n/etc/hostname\n```\n\n```\nyourhostname\n```\n\nComplete the network configuration for the newly installed environment. That may include installing suitable network management software, configuring it if necessary and enabling its systemd unit so that it starts at boot.\n\n"
    },
    {
      "title": "Initramfs",
      "level": 3,
      "content": "Creating a new initramfs is usually not required, because mkinitcpio was run on installation of the kernel package with pacstrap.\n\nFor LVM, system encryption or RAID, modify mkinitcpio.conf(5) and recreate the initramfs image:\n\n```\n# mkinitcpio -P\n```\n\n"
    },
    {
      "title": "Root password",
      "level": 3,
      "content": "Set the root password:\n\n```\n# passwd\n```\n\n"
    },
    {
      "title": "Boot loader",
      "level": 3,
      "content": "Choose and install a Linux-capable boot loader.\n\n"
    },
    {
      "title": "Reboot",
      "level": 2,
      "content": "Exit the chroot environment by typing exit or pressing Ctrl+d.\n\nOptionally manually unmount all the partitions with umount -R /mnt: this allows noticing any \"busy\" partitions, and finding the cause with fuser(1).\n\nFinally, restart the machine by typing reboot: any partitions still mounted will be automatically unmounted by systemd. Remember to remove the installation medium and then login into the new system with the root account.\n\n"
    },
    {
      "title": "Post-installation",
      "level": 2,
      "content": "See General recommendations for system management directions and post-installation tutorials (like creating unprivileged user accounts, setting up a graphical user interface, sound or a touchpad).\n\nFor a list of applications that may be of interest, see List of applications.\n\n"
    }
  ]
}