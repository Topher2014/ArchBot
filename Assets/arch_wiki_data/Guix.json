{
  "title": "Guix",
  "url": "https://wiki.archlinux.org/title/Guix",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "GNU Guix is a package manager that offers transactional, reproducible, per-user package management.\n\nWhile Guix can be used stand-alone and provide a full GNU distribution and a kernel by itself, you can install the Guix package manager on top of Arch Linux to make Guix available to users while using a more traditional and mature Unix-like system as a base.\n\nSee the Guix manual for information on what per-user packaging commands Guix makes available to users.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "On Arch Linux you can install Guix either using the AUR or manually as described in the Guix Manual. Installing using the AUR has the advantage that pacman is aware of the package and the extra files in the /usr file tree. But contrarily to other AUR packages, uninstalling the package does not unwind the entire Guix installation. Since Guix is a package manager by itself and it can also update itself, you still have to manually uninstall the files installed via Guix (no matter whether you installed the AUR package or the manual installation). Therefore, after updating Guix once, the AUR advantage really turns into a disadvantage, as there will be many unnecessary files in the /usr file tree that are part of the Guix AUR package but that are never used by Guix anymore. Therefore, consider using the manual installation.\n\n"
    },
    {
      "title": "Manual Installation",
      "level": 3,
      "content": "For the manual installation, see chapter Installation of the Guix manual. The easiest way is to use the shell installer script linked in there. The installer can also be installed from the AUR as guix-installerAUR.\n\nAs of December 2021 this script installs files into the following locations:\n\n- /gnu/store, /var/guix (the Guix store)\n- /usr/local/share/info, /usr/local/bin, (only symlinks)\n- /root/.config/guix (a symlink to the current profile)\n- /etc/guix/acl, (keys for substitute servers)\n- /etc/profile.d/guix.sh, (sets environment variables to put the current Guix profile first in the PATH)\n- /etc/bash_completion.d/guix, /usr/share/zsh/site-functions/_guix, /usr/share/fish/vendor_completions.d/guix.fish (shell completions for Bash, Zsh, and Fish)\n\nFurthermore it installs and enables a systemd service called guix-daemon.service, and creates users guixbuilder01 ... guixbuilder10 and a group guixbuild.\n\nNow start a new login shell (alternatively reboot your machine) and you can start using Guix:\n\n```\n$ guix install glibc-locales\n```\n\n"
    },
    {
      "title": "AUR Package Installation",
      "level": 3,
      "content": "- The build check currently fails if /bin/sh is not a link to bash, which is not a problem on a default Arch installation.\n- As of 13.05.2018 guix-environment-container test fails during makepkg build if BUILDDIR environment variable points to tmpfs mount.\n\nGNU Guix is available in the AUR as guixAUR. As described in the PKGBUILD, the PGP key by the Guix distributor will need to be added first.\n\nGuix makes builds more reproducible by running the build process using an unprivileged build user account. Therefore if you want to be able to build n packages simultaneously (e.g. for serving multiple users at the same time) you should create n build user accounts. as Guix should be able to build simultaneously. The following command does this the way described in the Guix manual:\n\n```\n# groupadd --system guixbuild\n# uncomment and type e.g.  10  for   n below  -->  have ten users  \n# for i in `seq -w 1 n`;\n  do\n    useradd -g guixbuild -G guixbuild           \\\n            -d /var/empty -s `which nologin`    \\\n            -c \"Guix build user $i\" --system    \\\n            guixbuilder$i;\n  done\n```\n\nEnable/start guix-daemon.service.\n\nYou may want to authorize Guix to download and use binary packages (‘substitutes’) from the Guix Official Substitute Server:\n\n```\n# guix archive --authorize < /usr/share/guix/ci.guix.gnu.org.pub\n```\n\n"
    },
    {
      "title": "Building packages outside of /tmp",
      "level": 2,
      "content": "The unit file may need to be extended to use a different TMPDIR for building if /tmp does not provide enough space (see the Guix manual for details). To use /tmpdir for building instead of /tmp, edit guix-daemon.service to add the following lines:\n\n```\n[Service]\nEnvironment=TMPDIR=/tmpdir\n```\n\n"
    },
    {
      "title": "Uninstalling Guix",
      "level": 2,
      "content": "Stop and disable guix-daemon.service and if necessary gnu-store.mount. If you installed Guix as an AUR package, then remove Guix using pacman.\n\nRemove /etc/systemd/system/guix-daemon.service, /etc/systemd/system/guix-daemon.service.d, /etc/systemd/system/guix-daemon.service.wants, and /etc/profile.d/guix.sh if existent.\n\nNow remove all the Guix build users and their group:\n\n```\n# for i in `seq -w 1 n`; do userdel guixbuilder$i; done\n# groupdel guixbuild\n```\n\nThen remove the Guix store /gnu as well as /var/guix and /var/log/guix. Remove stale symlinks in /usr/local/share/info and /usr/local/bin. Also remove /etc/guix/acl and the shell completion files specific to Guix.\n\n"
    }
  ]
}