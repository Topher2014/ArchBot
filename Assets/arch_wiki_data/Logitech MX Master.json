{
  "title": "Logitech MX Master",
  "url": "https://wiki.archlinux.org/title/Logitech_MX_Master",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Logitech Unifying Receiver\n\nLogitech MX Master is a series of computer mice.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "The mouse should work with no special configuration if using the unified receiver USB dongle that comes with your purchase. Plug the dongle into your PC. Make sure the mouse is set to Channel 1 by pressing the switch button underneath the mouse, then press and hold the button until it starts blinking quickly. It should turn solid shortly after a few seconds, and now be connected. If you want to connect to an unconnected receiver, see Logitech Unifying Receiver\n\nTo use Bluetooth, change the channel on the bottom of the mouse, and click the connect button. Now, search for the mouse with a Bluetooth manager of your choice and pair. In future it should connect as soon as you switch to that channel when your Bluetooth is active. If you have problems with the mouse not showing when scanning, see Bluetooth#Device does not show up in scan.\n\nThe mouse exists in 3 major versions, the latest iteration having 5 revisions, but the functionalities are the same:\n\n- MX Master,\n- MX Master 2s,\n- MX Master 3:\n\nTable content:\nName | Release | Supports? | Sold with?\nMX Master 3 | 2019 | Unifying | Unifying + USB A-C\nMX Master 3 for Mac | 2020 | Unifying | USB C-C\nMX Master 3 for business | 2021 | Bolt | Bolt + USB A-C\nMX Master 3S | 2022\nMX Master 3S for Mac | Bolt | USB C-C\n\n"
    },
    {
      "title": "Mappings for extra buttons",
      "level": 2,
      "content": "Install solaar or logiopsAUR(logiops-gitAUR) to customize mouse settings:\n\n- Easy programmable buttons.\n- DPI selection.\n- Smartshift (hyperfast and click-to-click wheel mode).\n- HiresScroll.\n- Gestures.\n\nAlthough logiops has added support for the new Bolt connector in v0.3.0, problems occasionally occur. Refer to Wikipedia:List of Logitech products for a list of bolt-based devices. All bolt-based devices available in the market also have Bluetooth connectivity. Thus using Bluetooth instead can be a workaround.\n\nsolaar fully support bolt-based connectivity, including device pairing.\n\nIt is possible to use just #Xbindkeys and tweak the desktop shortcuts to obtain some customization, but with some caveats (look notes below).\n\n"
    },
    {
      "title": "Logiops",
      "level": 3,
      "content": "It can be executed as application via command line by running\n\n```\n# logid\n```\n\nOr started as logid.service.\n\nThe configuration lives in /etc/logid.cfg. But the package comes with no configuration. One needs to create this specifying the name of the device to be used. To obtain that name launching from cli\n\n```\n# logid -v\n```\n\nThe name of the detected device is printed.\n\nThen you can create the configuration file.\n\n"
    },
    {
      "title": "Examples",
      "level": 4,
      "content": "See the configuration format documentation for more detail, including the list of CIDs (button codes) and the list of key codes.\n\nThis minimal configuration file simply makes each button work as a normal mouse button, ignoring gestures. It will allow the extra buttons to be used normally, such as in games and by Xbindkeys (see below).\n\n```\n/etc/logid.cfg\n```\n\n```\ndevices: ({\n  name: \"Wireless Mouse MX Master 3\";\n\n  // A lower threshold number makes the wheel switch to free-spin mode\n  // quicker when scrolling fast.\n  smartshift: { on: true; threshold: 20; };\n\n  hiresscroll: { hires: true; invert: false; target: false; };\n\n  // Higher numbers make the mouse more sensitive (cursor moves faster),\n  // 4000 max for MX Master 3.\n  dpi: 1500;\n\n  buttons: (\n\n    // Make thumb button 10.\n    { cid: 0x53; action = { type: \"Keypress\"; keys: [\"KEY_FORWARD\"]; }; },\n\n    // Make top button 11.\n    { cid: 0x56; action = { type: \"Keypress\"; keys: [\"KEY_BACK\"];    }; }\n\n  );\n});\n```\n\nFor a more fully-featured configuration, see logid.example.cfg or this one:\n\n```\n/etc/logid.cfg\n```\n\n```\ndevices: (\n{\n    name: \"Wireless Mouse MX Master 3\";\n    smartshift:\n    {\n        on: true;\n        threshold: 30;\n    };\n    hiresscroll:\n    {\n        hires: true;\n        invert: false;\n        target: false;\n    }; \n    \n\n    thumbwheel:\n    {\n        divert: true;\n        invert: false;\n\n        left: {\n                mode: \"OnInterval\";\n                interval: 2;\n                action: {\n                        type: \"Keypress\";\n                        keys: [\"KEY_VOLUMEDOWN\"];\n                };\n        };\n        right: {\n                mode: \"OnInterval\";\n                interval: 2;\n                action: {\n                        type: \"Keypress\";\n                        keys: [\"KEY_VOLUMEUP\"];\n                };\n        };\n    \n        tap: {\n            type: \"Keypress\";\n            keys: [\"KEY_MUTE\"];\n        };\n\n    };\n    dpi: 1000;\n\n    buttons: (\n        {\n            cid: 0xc3;\n            action =\n            {\n                type: \"Gestures\";\n                gestures: (\n                    {\n                        direction: \"Up\";\n                        mode: \"OnRelease\";\n                        action =\n                        {\n                            type: \"Keypress\";\n                            keys: [\"KEY_LEFTCTRL\", \"KEY_F10\"];\n                        };\n                    },\n                    {\n                        direction: \"Down\";\n                        mode: \"OnRelease\";\n                        action =\n                        {\n                            type: \"Keypress\";\n                            keys: [\"KEY_LEFTCTRL\", \"KEY_F7\"];\n                        };\n                    },\n#                    {\n#                        direction: \"Left\";\n#                        mode: \"OnRelease\";\n#                        action =\n#                        {\n#                            type: \"CycleDPI\";\n#                            dpis: [50, 500, 1000, 1500, 2000, 3000, 4000];\n#                        };\n#                    },\n                    {\n                        direction: \"Left\";\n                        mode: \"OnRelease\";\n                        action =\n                        {\n                            type: \"Keypress\";\n                            keys: [\"KEY_LEFTMETA\", \"KEY_LEFT\"];\n                        };\n                    },\n\n#                    {\n#                        direction: \"Right\";\n#                        mode: \"OnRelease\";\n#                        action =\n#                        {\n#                            type = \"ToggleHiresScroll\";\n#                        }\n#                    },\n                    {\n                        direction: \"Right\";\n                        mode: \"OnRelease\";\n                        action =\n                        {\n                            type: \"Keypress\";\n                            keys: [\"KEY_LEFTMETA\", \"KEY_RIGHT\"];\n                        }\n                    },\n\n                    {\n                        direction: \"None\"\n                        mode: \"NoPress\"\n                    }\n                );\n            };\n        },\n        {\n            cid: 0xc4;\n            action =\n            {\n                type = \"ToggleSmartshift\";\n            };\n        },\n        {\n            # Next tab instead of fwd in history, Comment to default behavior\n            cid: 0x53;\n            action =\n            {\n                type :  \"Keypress\";\n                keys: [\"KEY_LEFTCTRL\", \"KEY_PAGEUP\"];\n            };\n        },\n        {\n            # Previous tab instead of back in history, Comment to default behavior\n            cid: 0x56;\n            action =\n            {\n                type :  \"Keypress\";\n                keys: [\"KEY_LEFTCTRL\", \"KEY_PAGEDOWN\"];\n            };\n        }\n    );\n},\n{\n# Another device to configure\nname: \"Other Logitech USB Receiver\";\n\n}\n);\n```\n\n"
    },
    {
      "title": "Xbindkeys",
      "level": 3,
      "content": "List of events sent by mouse:\n\nTable content:\nPhysical action | Defaults as | With minimal logidconfiguration above\nLeft button | button 1 | button 1\nPress to wheel | button 2 | button 2\nRight button | button 3 | button 3\nScroll wheel up | button 4 | button 4\nScroll wheel down | button 5 | button 5\nScroll hor_wheel right (up) | button 6 | button 6\nScroll hor_wheel left (down) | button 7 | button 7\nSide-bottom button | button 8 | button 8\nSide-top button | button 9 | button 9\nThumb button | Ctrl+Alt+Tab | button 10\nPress \"i\" button under wheel | Not detected by xbindkeys | button 11\n\nNotes:\n\n- It is impossible to move mouse cursor while thumb button is pressed, but possible to use any other actions (pressing buttons and scrolling wheels). Ctrl+Alt+Tab event is sent only after releasing thumb button. Using logid to reassign this button removes this limitation.\n- If you wish, you can get experience of thumb button like in Windows or Mac. In KDE go to System settings > Shortcuts > Global Shortcuts > KWin > Show all windows from all desktops. It is set to Ctrl+F10 by default. Set Ctrl+Alt+Tab for this action and apply settings.\n- \"I\" button under wheel is undetectable in Linux by default, but works as switching wheel between free and rattle mode. With logid it can be reassigned for use.\n- Logitech gestures (moving mouse up/down/left/right while thumb pressed) are not detected in Linux, but are implemented in software by logid.\n\nThe vertical wheel and the two buttons near it should work right away, however the thumb button requires some special treatment, and you might want to remap the rest.\n\nTo remap the buttons of the mouse you can use the packages xbindkeys and xautomation.\n\nxbindkeys will redirect the buttons and xte (which is included in xautomation) will execute the custom key presses. To do so, create a configuration file named .xbindkeysrc in your home directory.\n\nHere is a sample configuration for the vertical scroll wheel and the two buttons near it:\n\n```\n# thumb wheel up => increase volume and unmute\n\"amixer -D pulse set Master 4000+ unmute\"\n   b:6\n# thumb wheel down => lower volume\n\"amixer -D pulse set Master 4000-\"\n   b:7\n# backward button => previous song\n\"xte 'key XF86AudioPrev'\"\n   b:8\n# forward button => next song\n\"xte 'key XF86AudioNext'\"\n   b:9\n```\n\nIf using PulseAudio (more info here):\n\n```\n# thumb wheel up => increase volume\n\"pactl set-sink-volume @DEFAULT_SINK@ +2%\"\n   b:6\n# thumb wheel down => lower volume\n\"pactl set-sink-volume @DEFAULT_SINK@ -2%\"\n   b:7\n```\n\nIf you prefer to get a visual feedback on how the volume level changes you could use the following lines instead (Tested in GNOME and KDE)\n\n```\n# thumb wheel up => increase volume\n\"xte 'key XF86AudioRaiseVolume'\"\n   b:6\n# thumb wheel down => lower volume\n\"xte 'key XF86AudioLowerVolume'\"\n   b:7\n```\n\nNow start xbindkeys, preferably add that to the autostart list of your desktop environment.\n\nThe thumb button is special. With the Logitech software available for Windows and Mac, you would be able to map up to 5 actions to it: by pressing the button or by pressing the button and moving the mouse in one of four directions. As of November 2015, there is no way to enable the direction feature using Arch.\n\nIf you look at the keys the button triggers you will notice that it sends a series of keys, confusing xbindkeys. You need to add a short sleep here so xbindkeys will only react on the first keys send so we can at least map one action to it:\n\n```\n# thumb button => play/pause music\n# Credit to gregmuellegger https://bbs.archlinux.org/viewtopic.php?pid=1551271#p1551271\n# We need a sleep here since the button triggers a few more key codes.\n# It also triggers Control+Mod2+Control_L and Alt+Mod2+Alt_L. The sleep\n# prevents that X receives those keypresses simultaniously. Therefore they\n# might interfere and trigger unwanted actions. By the sleep we make sure that\n# the Alt+Left is receive as distinct event.\n\"sleep 0.1 && xte 'key XF86AudioPlay'\" \n   m:0xc + c:23\n```\n\nRemember that all changes to ~/.xbindkeysrc require a restart of the xbindkeys process:\n\n```\n$ pkill xbindkeys && xbindkeys\n```\n\n"
    },
    {
      "title": "Power",
      "level": 2,
      "content": "Battery status can be read as described on Logitech Unifying Receiver. e.g. Solaar (solaar) has a system tray utility.\n\n"
    },
    {
      "title": "Smart shift",
      "level": 2,
      "content": "Smart shift is where the scroll wheel switches from click-to-click to smooth scrolling automatically, based on the speed at which it is being spun.\n\n"
    },
    {
      "title": "Logiops",
      "level": 3,
      "content": "Any mouse button can be assigned to switch between modes. The default settings are with the smart-shift threshold around 20 and the top button (just below the wheel) used to toggle between always-smooth and smart-shift (clicky when scrolling slowly only). Increasing the threshold number requires the wheel to be spun faster before it will switch into smooth-scrolling mode.\n\nTo reproduce the default settings, use this snippet in the configuration file as shown above:\n\n```\n/etc/logid.cfg\n```\n\n```\n...\n  smartshift: { on: true; threshold: 20; };\n  buttons: (\n    // Make top button (0xc4) switch modes\n    { cid: 0xc4; action = { type = \"ToggleSmartshift\"; }; },\n...\n```\n\nChange the threshold or use a different button (cid) as needed.\n\n"
    },
    {
      "title": "Solaar",
      "level": 3,
      "content": "Instead of logid, Solaar can also be used to change the sensitivity of changing the mouse wheel mode (between hyperfast and click-to-click), install solaar. A slider appears that can be set somewhere between 0 and 50 (inclusive). 0 means always in hyperfast mode, 50 means always in click-to-click mode.\n\nTo change the sensitivity, change this value somewhere between 0 and 50.\n\n"
    },
    {
      "title": "Laggy mouse movements in Bluetooth mode",
      "level": 3,
      "content": "See Bluetooth mouse#Mouse lag\n\n"
    },
    {
      "title": "Sticky mouse in Bluetooth mode after few seconds idling",
      "level": 3,
      "content": "See Power management#USB autosuspend to blacklist your device.\n\n"
    },
    {
      "title": "Thumbwheel horizotal scrolling behavior different (inverted) compared to under Windows",
      "level": 3,
      "content": "This is a known behavior added in libinput ([1]) to correct the weird behavior (quirks) that the vertical/horizontal scroll wheels of this mouse (and many other Logitech products, too) is configured differently. However if one is to use this mouse on different operating systems frequently and finds this autocorrection behavior inconvenient, it is possible to specifically turn it off:\n\n```\n/etc/libinput/local-overrides.quirks\n```\n\n```\n...\n[Logitech MX Master 3]\nMatchVendor=0x46D\nMatchProduct=0x4082\nModelInvertHorizontalScrolling=0\n\n# MX Master 3 has a different PID on bluetooth\n[Logitech MX Master 3]\nMatchVendor=0x46D\nMatchProduct=0xB023\nModelInvertHorizontalScrolling=0\n...\n```\n\nSee also [2] for a list of quirks patched for other devices.\n\n"
    },
    {
      "title": "Missing scroll events on MX Master 3",
      "level": 3,
      "content": "When the scroll wheel is in ratcheting mode and one switches the direction of scroll (scroll up by two steps and down by one step instantly), the last step may not be picked up. This could mean unpredictable scrolling in firefox when smooth scrolling is disabled, or when one uses the scroll wheel to switch tabs in qt widget based applications. This is because MX Master 3 is registered as a high resolution scrolling device, which continues to send high resolution events even in ratcheting mode [3][4].\n\nTo filter out the high resolution events, use\n\n```\n/etc/libinput/local-overrides.quirks\n```\n\n```\n...\n[Logitech MX Master 3]\nMatchVendor=0x46D\nMatchProduct=0x4082\nAttrEventCode=-REL_WHEEL_HI_RES;-REL_HWHEEL_HI_RES;\n...\n```\n\nTo find the product IDs (as they vary between manufacturing runs and connection type), first find the device node:\n\n```\n# libinput list-devices | grep \"MX Master 3\" -A 5 | grep Kernel | awk '{print $2}'\n/dev/input/event9\n```\n\nThen query the device node for its IDs:\n\n```\n# udevadm info -a /dev/input/event9 | grep id/\n    ATTRS{id/product}==\"4082\"\n    ATTRS{id/vendor}==\"046d\"\n```\n\nCopy the id/vendor and id/product IDs into the MatchVendor and MatchProduct fields, prefixing them with 0x as shown.\n\n"
    }
  ]
}