{
  "title": "Mono",
  "url": "https://wiki.archlinux.org/title/Mono",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "From Wikipedia:\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the mono package.\n\nIf you need VisualBasic.Net support you have to install the VisualBasic.Net interpreter with the package mono-basicAUR.\n\n"
    },
    {
      "title": "Running Mono applications",
      "level": 2,
      "content": "You can execute Mono binaries by calling mono manually:\n\n```\n$ mono programsname.exe\n```\n\nYou can also execute Mono binaries directly, just like native binaries:\n\n```\n$ chmod 755 exefile.exe\n$ ./exefile.exe\n```\n\n"
    },
    {
      "title": "Testing Mono",
      "level": 2,
      "content": "Make a new file:\n\n```\ntest.cs\n```\n\n```\nusing System;\n\npublic class Test {\n public static void Main(string[] args) {\n  Console.WriteLine(\"Hello World!\");\n }\n}\n```\n\nThen run:\n\n```\n$ mcs test.cs\n$ mono test.exe\nHello world!\n```\n\n"
    },
    {
      "title": "Development",
      "level": 2,
      "content": "OmniSharp provides .NET/Mono development plugins/integrations for several editors, including Vim, Emacs, and Visual Studio Code.\n\nAlternatively, you can install the riderAUR IDE. If you install Rider not from AUR, you would need to install mono-msbuild, as recent Rider versions dropped support of xbuild in favour of MSBuild from net-core.\n\nIf you want the API documentation browser and some testing and development tools you have to install mono-tools.\n\n"
    },
    {
      "title": "I get an error when I try to run Mono binaries directly: \"cannot execute binary file\"",
      "level": 3,
      "content": "The binfmt_misc handler for Mono has not yet been set up, as explained in detail on the Mono Project website.\n\nTo fix this, restart the systemd-binfmt service.\n\n"
    },
    {
      "title": "I get an TLS handshake (or similar certificate based) error",
      "level": 3,
      "content": "This can be caused by either certificates missing from Mono's certificate store, or stale broken certificates remaining in Mono's certificate store.\n\nIf possible, ensure that the system certificate store is in good order by running curl -vI or similar to replicate the failing request outside Mono.\n\n- cert-sync /etc/ssl/certs/ca-certificates.crt synchronises the mono store with the system store, adding missing certificates.\n- To remove broken certificates (i.e., if above didn't help), remove the directory /usr/share/.mono, then re-run cert-sync /etc/ssl/certs/ca-certificates.crt\n- As last resort, the older tool mozroots --import --ask-remove bypasses the system certificate store and directly downloads Mozilla's trust store. This again does not remove broken certificates, and can cause other problems if you rely on private CAs.\n\nBoth cert-sync and mozroots are part of the mono package.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official Mono website\n- The Mono Handbook\n- The API reference of Mono\n- ECMA-334: C# Language Specification\n- ECMA-335: Common Language Infrastructure (CLI)\n- Instructions for running Mono applications\n\n"
    }
  ]
}