{
  "title": "Linux konsolu",
  "url": "https://wiki.archlinux.org/title/Linux_konsolu",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "İlgili makaleler\n\n- Linux console/Keyboard configuration\n- Screen capture#Virtual console\n- Color output in console\n- getty\n\n\"Linux Console\" İngilizce Vikipedi makalesinden:\n\nBu makale Linux konsolunun temellerinden ve yazı tipi gibi bazı ayarların nasıl kişiselleştirilebileceğinden bahsetmektedir. Klavye ayarları Linux console/Keyboard configuration alt sayfasında ele alınmıştır. Daha fazla özellik sunan (tam Unicode yazı tipleri, modern video kartı desteği vb.) diğer konsollar için KMSCON veya diğer benzer projelere göz atın.\n\n"
    },
    {
      "title": "Konsolun Uyarlanması",
      "level": 2,
      "content": "Kullanıcı ile direkt olarak etkileşime geçen diğer servislere kıyasla konsol, çekirdeğin içerisine gömülü hâldedir. Bu durum, Xterm gibi kullanıcı alanında çalışan normal uygulamalar olan uçbirim öykünücülerinden farklılık göstermektedir. Konsol, Linux çekirdeğinin yayınlanan tüm sürümlerinin her zaman bir parçası olmuştur ancak zamanla bazı değişikliklere uğramıştır. Bu değişikliklerden en önemlileri çerçeve belleğinin kullanımı ve Unicode desteğidir.\n\nYapılan tüm iyileştirmelere rağmen eski donanımlarla uyumlu olması gerekir ve bu sebeple çizgesel uçbirim öykünücülerine kıyasla kısıtlı özelliklere sahiptir. Linux konsolu ve uçbirim öykünücüleri arasındaki ana fark Linux konsolundaki kabukların direkt olarak TTY cihazlarına (/dev/tty*) bağlı olmasıdır. Oysaki çizgesel uçbirim öykünücülerinde kabuklar sözde-TTYlara bağlıdır (/dev/pty*).\n\nEk olarak çizgesel uçbirim öykünücüleri Linux konsoluna kıyasla birçok farklı özelliğe sahip olabilir. Örneğin kullanılabilir daha fazla yazı tipi, birden fazla sekme/pencere, ikili pencere modu, yukarı kaydırma bellekleri/sliderları (kullanıcının kaydırarak değer seçmesine izin veren bileşen), farklı arkaplan renkleri veya resimleri (tercihen saydamlık) gibi birçok ekstra özelliği barındırabilir. Bu özelliklerin bazıları Tmux veya GNU Screen gibi uçbirim çoklayıcılar ile, veya ncurses gibi kütüphanelerin yardımıyla metin esaslı kullanıcı arayüzüne sahip Vim, nano ve Emacs gibi programlar ile Linux konsolunda da kullanılabilir. Tabii bu programlar Linux konsolunda kullanıldığı gibi çizgesel uçbirim öykünücülerinde de kullanılabilir.\n\n"
    },
    {
      "title": "Sanal konsollar",
      "level": 3,
      "content": "Konsol kullanıcıya bir dizi sanal konsol olarak sunulur. Bunlar aynı anda birkaç bağımsız uçbirimin çalıştığı izlenimini verir; her sanal konsol farklı kullanıcılarla oturum açabilir, kendi kabuğunu çalıştırabilir ve kendi yazı tipi ayarlarına sahip olabilir. Sanal konsolların her biri /dev/ttyX aygıtını kullanır ve Alt+Fx tuşlarına basarak bunlar arasında geçiş yapılabilir (burada x sanal konsol numarasına eşittir ve 1'den başlayacak şekilde tüm rakamları temsil eder). /dev/console aygıtı otomatik olarak etkin sanal konsol ile eşlenir.\n\nAyrıca chvt(1), openvt(1) ve deallocvt(1) rehberlerine de bakınız.\n\n"
    },
    {
      "title": "Yazı modu",
      "level": 3,
      "content": "Linux, PC donanımı için bir çekirdek olarak başlamıştır. Hâliyle konsol o zamanlar tüm PC'lerin desteklediği standart IBM CGA/EGA/VGA grafikleri kullanılarak geliştirilmiştir. Grafikler, 16 renkli basit bir 80x25 karakter ekran sağlayan VGA metin modunda çalışıyordu. Bu eski mod, DEC VT100 serisi gibi özel metin uçbirimlerinin özellikleri ile benzerlikler barındırır. Sistem donanımı destekliyorsa metin kipinde (vga=0 nomodeset ile) önyükleme yapmak hâlâ mümkündür, ancak neredeyse tüm modern dağıtımlar (Arch Linux dahil) bunun yerine çerçeve belleği konsolunu kullanır.\n\n"
    },
    {
      "title": "Çerçeve belleği konsolu",
      "level": 3,
      "content": "Linux diğer PC dışı mimarilere taşınırken, diğer mimariler VGA uyumlu grafik adaptörleri kullanmadığından ve metin modlarını hiç desteklemeyebileceğinden daha iyi bir çözüm gerekliydi. Çerçeve belleği konsolu tüm platformlarda standart bir konsol sağlamak için uyarlanmıştır. Bu nedenle cihazın sahip olduğu grafik donanımından bağımsız olarak aynı VGA tarzı arayüzü sunar. Bu nedenle, Linux konsolu bir uçbirim öykünücü değil, kendi başına bir uçbirimdir. linux uçbirim tipini kullanır ve VT100 ile büyük ölçüde uyumludur.\n\n"
    },
    {
      "title": "Klavye kısayolları",
      "level": 2,
      "content": "Table content:\nKlavye kısayolları | Açıklama\nCtrl+Alt+Del | Sistemi yeniden başlatır (/usr/lib/systemd/system/ctrl-alt-del.target sembolik bağlantısında (symlink) belirtildiği üzere)\nAlt+F1, F2, F3, ... | n'inci sanal konsola geçiş yapar (Xorg ve Wayland'de kullanılan Ctrl+Alt+Fn kısayolu ile karıştırılmamalıdır)\nAlt+Left | Bir önceki sanal konsola geçiş yapar\nAlt+Right | Bir sonraki sanal konsola geçiş yapar\nScroll Lock | Scroll Lock aktif hâldeyken girdi ve çıktılar kilitlenir.\nCtrl+c | Güncel görevi öldürür\nCtrl+d | Dosya sonu sinyali gönderir\nCtrl+z | Güncel görevi durdurur\n\nAyrıca console_codes(4) rehberine bakın.\n\n"
    },
    {
      "title": "Yazı tipleri",
      "level": 2,
      "content": "Linux konsolu varsayılan olarak UTF-8 kodlamasını kullanır, ancak standart VGA uyumlu çerçeve belleği kullanıldığından, konsol yazı tipleri standart 256 veya 512 glifle sınırlıdır. Yazı tipi 256'dan fazla glife sahipse, renk sayısı 16'dan 8'e düşürülür. Verilen Unicode değerine görüntülenecek doğru sembolü atamak için, genellikle unimap olarak adlandırılan özel bir çeviri haritasına ihtiyaç duyulur. Geçmişte unimap'in harici olarak yüklenmesi gerekiyordu ancak günümüzde konsol yazı tiplerinin çoğunda unimap gömülü hâlde gelmektedir.\n\nVarsayılan olarak sanal konsol, CP437 karakter seti[1] ile çekirdekte gömülü olan yazı tipini kullanır, ancak bu kolayca değiştirilebilir. Çekirdek 15 adet yazı tipi seçeneği sunar. Bunlarndan iki tanesi resmi olarak desteklenen çekirdekler tarafından sağlanır: VGA 8x16 yazı tipi (CONFIG_FONT_8x16) ve Terminus 16x32 yazı tipi (CONFIG_FONT_TER16x32). Çekirdek, ekran çözünürlüğünü değerlendirir ve yazı tipini buna göre seçer. Başka bir gömülü yazı tipini kullanmak için çekirdek parametrelerine, örneğin fbcon=font:TER16x32 eklenebilir.\n\nkbd paketi, çekirdeğin karar verdiği sanal konsol yazı tipleri ve yazı tipi eşlemelerinin üzerine yazmak için bazı araçlar sunar. Kullanılabilir yazı tipleri /usr/share/kbd/consolefonts/ dizininde sağlanmıştır; .psfu ve .psfu.gz şeklinde bitenler gömülü Unicode çeviri haritasına sahiplerdir.\n\nTuşeşlemler (basılan klavye tuşu ile bilgisayarda kullanılan karakter arasındaki bağlantı) /usr/share/kbd/keymaps/ dizinin altındaki dizinler içerisindedir. Ayrıntı için Linux console/Keyboard configuration makalesine bakın.\n\n"
    },
    {
      "title": "Ön izleme ve geçici değişiklikler",
      "level": 3,
      "content": "```\n$ showconsolefont\n```\n\nkomutu istediğiniz bir yazı tipine ait glifleri ve harfleri tablo şeklinde gösterir.\n\nsetfont komutu ve önüne eklediğiniz (/usr/share/kbd/consolefonts/ içerisindeki) yazı tipi ismi ile yazı tipini geçici olarak değiştirebilirsiniz, örneğin:\n\n```\n$ setfont lat2-16 -m 8859-2\n```\n\nYazı tipi isimleri büyük-küçük harf duyarlılığına sahiptir. setfont komutuna herhangi bir parametre eklemezseniz varsayılan yazı tipini döndürür.\n\nÖrneğin yüklü olan 8x8 küçük bir yazı tipini kullanmak için aşağıdaki komutu kullanabilirsiniz:\n\n```\n$ setfont -h8 /usr/share/kbd/consolefonts/drdos8x8.psfu.gz\n```\n\nDaha büyük bir yazı tipi için, Terminus yazı tipi (terminus-font) birçok farklı boyut sunar, örneğin ter-132b oldukça büyüktür.\n\nAyrıca -d bayrağı ile kullancağınız yazı tipinin büyüklüğünü ikiye katlayabilirsiniz. Aşağıdaki örnekte 64*64 bir yazı tipi kullanılmıştır:\n\n```\n$ setfont -d ter-132n\n```\n\n- Tüm yazı tipi değiştirme komutları, herhangi bir geri dönüş sağlamasa bile hatalı yazlımadığı sürece başarılı bir şekilde çalıştırılır.\n- Terminus yazı tipi isimleri (ter-*) /usr/share/terminus-font/README belgesinde açıklanmıştır.\n\n"
    },
    {
      "title": "Kalıcı değişiklikler",
      "level": 3,
      "content": "/etc/vconsole.conf içerisindeki FONT değişkeni, açılış sırasında yazı tipini tüm konsollarda ayarlamak için kullanılır. Detaylar için vconsole.conf(5) rehberine bakın.\n\nČ, ž, đ, š veya Ł, ę, ą, ś gibi harfleri görüntüleyebilmek için lat2-16.psfu.gz yazı tipini kullanın:\n\n```\n/etc/vconsole.conf\n```\n\n```\n...\nFONT=lat2-16\nFONT_MAP=8859-2\n```\n\nBu, ISO/IEC 8859 karakterlerinin ikinci kısmının 16 boyutunda kullanılacağı anlamına gelir. Yazı tipi boyutunu farklı değerler kullanarak değiştirebilirsiniz (örneğin lat2-08). 8859 spesifikasyonu tarafından belirlenen bölgeler için Wikipedia:ISO/IEC 8859#The parts of ISO/IEC 8859 sayfasına bakın.\n\nmkinitcpio v33'ten bu yana /etc/vconsole.conf içinde belirtilen yazı tipi, initramfs'e yazı tipini ekleyen consolefont kancası (hook) aracılığıyla varsayılan olarak erken kullanıcı alanı sırasında otomatik olarak yüklenir. Daha fazla bilgi için Mkinitcpio#HOOKS bölümüne bakın.\n\nAyrıca /etc/vconsole.conf dosyasını değiştirdikten sonra systemd-vconsole-setup.service servisini yeniden başlatmanız gerekebilir.\n\nEğer yazı tipi açılış sırasında değişmiyorsa veya sadece belli bir süreliğine değişiyorsa, yüksek ihtimalle ekran kartı sürücüsü başlatıldığında ve konsol çerçeve belleğine geçiş yapıldığında sıfırlanıyordur. Varsayılan olarak çekirdek kaynak kodunda bulunan sürücüler erkenden başlatılırlar. NVIDIA kullanıcıları, ekran kartı sürücülerini /etc/vconsole.conf'dan önce başlatabilmek için NVIDIA#Early loading makalesine bakmalıdırlar.\n\n"
    },
    {
      "title": "İmleç görünümü",
      "level": 2,
      "content": "Bu konunun dokümantasyonu yetersizdir. Aşağıdaki makaleleri okumanız tavsiye edilir:\n\n- Software cursor for VGA\n- Cursor Appearance in the Linux Console\n- Disable Cursor Blinking on Linux Console\n\nTable content:\n | Donanım | Yazılım\nŞekil | (0) varsayılan (2) alt çizgi uygulanır (1) görünmez (2) alt çizgi (3) blokun alttan üçte biri (4) blokun alttan yarısı (5) blokun üçte ikisi (6) tam blok | (16) tam blok şekil değiştirilemez, ancak imlecin arka plan ve ön plan renkleri aynı renk olarak ayarlanırsa imleç bilfiil görünmez yapılabilir\nYanıp sönme | yanıp söner | sürücüye bağlı arka plan renginin en yüksek biti \"parlak\" veya \"yanıp sönen\" olarak yorumlanabilir\nRenk | konsol yazı rengi ile aynı renktedir (genellikle beyaz/gri) bağımsız bir şekilde ayarlanamaz | kullanıcı tarafından ayarlanabilir\n\nKonsol imleci Device Attributes (DA) kontrol işlevi ile ayarlanabilir. Parametreler dizisine tek tırnak işareti ile başlanması gerekir (console_codes(4) tam aksini söylese de).\n\nAşağıdaki örnekte tam blok halinde, yeşil, altında siyah semboller barındıran ve yanıp sönmeyen bir imleç verilmiştir:\n\n```\n$ printf \"\\x1b\\x5b?16;$((8+4+2+1));$((32+0+8+4+2+1))\\x63\"\n```\n\nYukarıdakinin aynısı, onaltılık kodlar (hex codes) yerine sekizli (sekizli sayı sistemindeki ile aynı \"sekizli\") ve karakterler ile de ifade edilebilir:\n\n```\n$ printf '\\033[?16;15;47c'\n```\n\nBu değişiklikler çekirdek parametreleri ile kalıcı yapılandırmalar olarak uygulanabilir:\n\n```\nvt.cur_default=0x2f0f10\n```\n\nNote: **16, 15, 47** \n\n"
    },
    {
      "title": "İmleç boyutu",
      "level": 3,
      "content": "İlk parametre, 16 (çekirdek parametresinde en sağdaki iki hex hanesi, yani 10'dur) koduna sahip olup ismi cursor size yani imleç boyutu olmasına rağmen \"yazılımsal imleci kullan\" anlamına gelir.\n\nNote: **16** \n\nEğer donanımsal imleç şeklini değiştirmek istiyorsanız karşılık gelen sayıları kullanın (0'dan 6'ya kadar, yukarıdaki tabloya göz atın).\n\n"
    },
    {
      "title": "Bit kontrol karakterini değiştirmek",
      "level": 3,
      "content": "İkincisi ise tam Türkçe karşılığı olmayan ancak bit kontrol karakterini değiştirmek şeklinde çevirebileceğimiz toggle mask parametresidir. Bu parametre bir rengin ilgili bitlerini çevirmeye yarar.\n\nTable content:\n | Arka plan (imleç bloku) | Ön plan (imlecin altındaki sembol)\n | Parlak (vurgu) veya yanıp sönen | Kırmızı | Yeşil | Mavi | Parlak (vurgu) veya yanıp sönen | Kırmızı | Yeşil | Mavi\nOndalıklar | 128 | 64 | 32 | 16 | 8 | 4 | 2 | 1\nOnaltılıklar | 80 | 40 | 20 | 10 | 8 | 4 | 2 | 1\n\n(imleç bloku)\n\n(imlecin altındaki sembol)\n\nveya yanıp sönen\n\nveya yanıp sönen\n\nÖrneğimizde ikinci parametre 15'tir (çekirdek parametresindeki orta hex değeri, yani 0f'dir), yani tüm dört ön plan (sembol) biti çevrilir. Burada en önemli kural: bit çevirme işlemi (ikinci parametre), bit ayarlamadan (üçüncü parametre) sonra yapılır.\n\nNote: **ve** \n\n"
    },
    {
      "title": "Bit kontrol karakterini ayarlama",
      "level": 3,
      "content": "Üçüncü parametre, tam Türkçe karşılığı olmayan ancak bit kontrol karakterini ayarlamak şeklinde çevirebileceğimiz set mask parametresidir. Bu parametre ilgili karakter niteliği bitlerini ayarlamaya yarar. Örneğimizde 47 (çekirdek parametresinde en soldaki iki hex hanesi, yani 2f'dir) kullanılır, bu şu anlamlara gelir:\n\n- (32) imleç bloğu için saf yeşil rengini kullan\n- (8+4+2+1) tüm dört ön plan (sembol rengi) bitini ayarla. Bu bitler ikinci parametre ile çevrilecektir, böylece imlecin altındaki sembolün rengi siyah olacaktır (0000).\n\n"
    },
    {
      "title": "HiDPI",
      "level": 2,
      "content": "HiDPI#Linux console (tty) makalesine bakın.\n\n"
    },
    {
      "title": "Konsoldan gelen sesler",
      "level": 2,
      "content": "PC speaker#Beep makalesine bakın.\n\n"
    },
    {
      "title": "Ayrıca bakınız",
      "level": 2,
      "content": "- The TTY demystified – Linus Åkesson\n\n"
    }
  ]
}