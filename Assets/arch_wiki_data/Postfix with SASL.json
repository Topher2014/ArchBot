{
  "title": "Postfix with SASL",
  "url": "https://wiki.archlinux.org/title/Postfix_with_SASL",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Postfix\n- Dovecot\n\nSMTP protocol specifications include a possibility for user authentication, but do not provide the exact details of protocol message exchange, deferring instead to the SASL (Simple Authentication and Security Layer) standard (see RFC 4954 and RFC 4422). SASL is a generic authentication framework for authentication mechanisms, of which there are many, and each of them has its own particular procedure that prescribes the necessary cryptographic steps to perform with the authentication data and messages to exchange over the connection. Therefore, in order to avoid imposing artificial limits on what authentication mechanisms can be used with it, Postfix, by itself, does not authenticate SMTP users with usernames and passwords, or via any other means. It offloads this task to a SASL implementation, which has to be installed separately. SASL authentication daemon is responsible both for the policy (i.e. where valid usernames and secrets such as passwords are kept) and mechanism (how exactly clients supply credentials). This is in contrast with e.g. OpenSMTPD, which supports only PLAIN and LOGIN SASL mechanisms, but does not rely on any external library or daemon.\n\n"
    },
    {
      "title": "Introduction",
      "level": 2,
      "content": "In this article you will learn how to setup SASL authentication for Postfix.\n\nOnce Postfix is up and running you can add SASL authentication to avoid relaying. In order to prevent anonymous users from spamming, only authenticated and trusted users will be able to send emails.\n\nSince postfix package in [extra] is already compiled with SASL support, to enable SASL authentication you have two choices:\n\n- Use cyrus-sasl package.\n- Or enable your already configured Dovecot to handle Postfix authentication (as well as its own).\n\nFrom Postfix's site:\n\n"
    },
    {
      "title": "Configuration with cyrus-sasl package",
      "level": 2,
      "content": "Install the cyrus-sasl package.\n\nTo enable SASL for accepting mail from other users, open the \"Message submission\" port (TCP 587) in /etc/postfix/master.cf, by uncommenting these lines (which are there by default, just commented):\n\n```\nsubmission inet n       -       n       -       -       smtpd\n  -o syslog_name=postfix/submission\n  -o smtpd_tls_security_level=encrypt\n  -o smtpd_sasl_auth_enable=yes\n  -o smtpd_reject_unlisted_recipient=no\n#  -o smtpd_client_restrictions=$mua_client_restrictions\n#  -o smtpd_helo_restrictions=$mua_helo_restrictions\n#  -o smtpd_sender_restrictions=$mua_sender_restrictions\n  -o smtpd_recipient_restrictions=permit_sasl_authenticated,reject\n  -o milter_macro_daemon_name=ORIGINATING\n```\n\nNote that this also enables SSL, so if you do not have a SSL certificate, keep the \"smtpd_tls_security_level\" option commented out.\n\nThe three restriction options (client, helo, sender) can also be left commented out, since smtpd_recipient_restrictions already handles SASL users.\n\nSASL can use different authentication methods. The default one is PAM (as configured in /etc/conf.d/saslauthd), but to set it up properly you have to create /etc/sasl2/smtpd.conf:\n\n```\npwcheck_method: saslauthd\nmech_list: PLAIN LOGIN\nlog_level: 7\n```\n\nSince pambase 20190105.1-1 and newer uses restrictive fallback for \"other\" PAM service, a pam configuration file is now required.[1][2]\n\nCreate /etc/pam.d/smtp.\n\n```\n#%PAM-1.0\nauth            required        pam_unix.so\naccount         required        pam_unix.so\n```\n\nIf using PAM in conjunction with openldap for authentication, an alternative pam configuration file (/etc/pam.d/smtp) could be constructed similar to: LDAP authentication#PAM configuration\n\n```\n#%PAM-1.0\nauth            sufficient      pam_ldap.so     try_first_pass minimum_uid=2000\nauth            required        pam_unix.so\n\naccount         sufficient      pam_ldap.so     minimum_uid=2000\naccount         required        pam_unix.so\n```\n\nStart/enable the saslauthd.service.\n\nRestart the postfix.service.\n\nIf wanting to validate the SASL-PAM authentication process, the following command can be run to determine if SASL can authenticate via PAM:\n\n```\n# testsaslauthd -u <username> -p <password> -s smtp\n```\n\nHopefully you should be able to telnet to your Postfix server with:\n\ntelnet localhost 587\n\nYou should then type:\n\nEHLO example.com\n\nThis is roughly what you should see:\n\n```\nTrying 127.0.0.1...\n\nConnected to localhost.localdomain\nEscape character is '^]'\n\n220 justin ESMTP Postfix\nEHLO example.com\n250-justin\n250-PIPELINING\n250-SIZE 10240000\n250-VRFY\n250-ETRN\n250-AUTH PLAIN OTP DIGEST-MD5 CRAM-MD5\n250 8BITMIME\n```\n\n"
    },
    {
      "title": "Configuration with Dovecot",
      "level": 2,
      "content": "If you are using Dovecot as your IMAP or POP mail server and your users already authenticate (with PAM maybe), then there is no need to configure another package.\n\nSimply edit /etc/postfix/master.cf and add the following lines under the submission or smtp section (depending on what you are using):\n\n```\n# SASL authentication with dovecot\n  -o smtpd_tls_security_level=encrypt\n  -o smtpd_sasl_auth_enable=yes\n  -o smtpd_sasl_type=dovecot\n  -o smtpd_sasl_path=private/auth\n  -o smtpd_sasl_security_options=noanonymous\n  -o smtpd_sasl_local_domain=$myhostname\n  -o smtpd_client_restrictions=permit_sasl_authenticated,reject\n  -o smtpd_recipient_restrictions=reject_non_fqdn_recipient,reject_unknown_recipient_domain,permit_sasl_authenticated,reject\n```\n\nUsing this configuration implies that only authenticated users can send mails. You can see this from smtpd_client_restrictions option.\n\nNow add the following to Dovecot configuration file in /etc/dovecot/conf.d/10-master.conf:\n\n```\nservice auth {\n  unix_listener /var/spool/postfix/private/auth {\n    group = postfix\n    mode = 0660\n    user = postfix\n  }\n  user = root\n}\n```\n\nAs you can see a unix socket is created in /var/spool/postfix/private/auth, the same specified in smtpd_sasl_path option of master.cf\n\nFinally restart both postfix and dovecot services.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Postfix SASL readme in Postfix official documentation.\n\n- SASL authentication with Dovecot in Dovecot official documentation.\n\n- Centos Howto Postfix SASL\n\n"
    }
  ]
}