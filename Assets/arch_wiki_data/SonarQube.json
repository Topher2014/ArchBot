{
  "title": "SonarQube",
  "url": "https://wiki.archlinux.org/title/SonarQube",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Gogs\n- Git\n\nSonarQube is code quality tool for better code and published under the LGPL3 license.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the sonarqube-binAUR package.\n\nSonarQube uses H2 database by default (not recommended). Or requires the use of a database backend, the following are supported:\n\n- PostgreSQL\n- Oracle\n- MSSQL\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The user configuration file is located at /etc/webapps/sonarqube/sonar.properties.\n\nSee the SonarQube docs for more configuration examples.\n\n"
    },
    {
      "title": "PostgreSQL",
      "level": 3,
      "content": "Install and configure PostgreSQL.\n\nSonarQube seems to support only TCP Socket\n\n"
    },
    {
      "title": "With TCP socket",
      "level": 4,
      "content": "Connect do postgresql:\n\n```\n[postgres]$ psql\n```\n\nCreate the new user while connecting to the server as postgres user (you will be prompted for a password for the new user):\n\n```\npostgres=# CREATE USER sonarqube WITH PASSWORD password;\n```\n\nCreate the sonarqube database, owned by sonarqube user:\n\n```\npostgres=# CREATE DATABASE sonarqube OWNER sonarqube;\npostgres=#GRANT ALL PRIVILEGES ON DATABASE sonarqube TO sonarqube;\n```\n\nPostgreSQL#Configure PostgreSQL to be accessible from remote hosts\n\nVerify it works:\n\n```\n$ psql --host=ip_address --dbname=sonarqube --username=sonarqube --password\n```\n\nConfigure SonarQube through the update sonar.properties:\n\n```\n/etc/webapps/sonarqube/sonar.properties\n```\n\n```\nsonar.jdbc.url=jdbc:postgresql://localhost/sonarqube\nsonar.jdbc.username=sonarqube\nsonar.jdbc.password=password\nsonar.web.javaOpts=-Xmx512m -Xms128m -XX:+HeapDumpOnOutOfMemoryError\nsonar.web.javaAdditionalOpts=-server\nsonar.web.host=0.0.0.0\nsonar.web.port=9000\nsonar.log.level=INFO\nsonar.path.logs=logs\n```\n\n"
    },
    {
      "title": "Upgrade",
      "level": 2,
      "content": "After upgrading SonarQube, follow these steps:\n\n- Update the sonar.properties file to match the new version.\n- Once SonarQube is running, a page will appear prompting you to upgrade. For detailed instructions, visit the upgrade guide.\n- Navigate to the setup page of your SonarQube server at https://ip:port/setup and click the upgrade button.\n- Once the upgrade process is complete, the normal login page will be displayed.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Start/enable sonarqube.service, the webinterface should listen on http://localhost:9000.\n\nDefault credentials are admin/admin.\n\n- You might want to configure a reverse proxy to access remotely, e.g. nginx.\n- If you want Sonarqube to not listen on all interfaces, set sonar.web.host to e.g. 127.0.0.1 in /etc/webapps/sonarqube/sonar.properties.\n\n"
    },
    {
      "title": "Usage with maven",
      "level": 3,
      "content": "```\n$ mvn clean verify sonar:sonar -Dsonar.projectKey=project key -Dsonar.projectName=project -Dsonar.host.url=http://localhost:9000 -Dsonar.token=token\n```\n\n"
    },
    {
      "title": "Usage with sonar-scanner",
      "level": 3,
      "content": "There is a package sonar-scannerAUR. Usage is:\n\n```\n$ /opt/sonar-scanner/bin/sonar-scanner -Dsonar.projectKey=project key -Dsonar.sources=. -Dsonar.host.url=http://localhost:9000 -Dsonar.token=token\n```\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "You can check the unit status or the journal.\n\nAnd there are sonarqube logs in:\n\n```\n# /var/log/sonarqube/\n```\n\nIf sonarqube is not active, one of these logs will contain an error.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Sonarqube Documentation\n- Manual for installation sonarqube\n\n"
    }
  ]
}