{
  "title": "Termite",
  "url": "https://wiki.archlinux.org/title/Termite",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Termite is a minimal VTE-based terminal emulator. It is a modal application, similar to Vim, with an insert mode and selection mode where keybindings have different functions.\n\nThe configuration file allows changing colors and setting options. Termite supports transparency along with both the 256 color and true color (16 million colors) palettes. It has a similar look and feel to urxvt.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the termiteAUR package.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Termite starts in insert mode by default. Text may be selected using the mouse, or by using selection-mode keys. In insert mode, Ctrl+Shift+c is used to copy selected text to the X clipboard, Ctrl+Shift+v to paste. Ctrl+Tab starts scrollback completion, and Ctrl+Shift+Up / Ctrl+Shift+Down scroll the screen up or down.\n\nCtrl+Shift+Space enters selection-mode, similar to vim's normal-mode. Many commands are borrowed from Vim, for example v for visual mode, Shift+v for visual line mode, Ctrl+v for visual block mode, y to copy (\"yank\") selected text, / and ? for searching, w, b, ^, $ for movement, and Escape to go back to insert mode.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Termite looks for configuration files in $XDG_CONFIG_HOME/termite/config, ~/.config/termite/config, $XDG_CONFIG_DIRS/termite/config and /etc/xdg/termite.cfg. The configuration file is used to change options such as font, colors, window hints, etc. The configuration file syntax is inspired by XDG Desktop Entry Specification .desktop files (inspired by Microsoft Windows .ini files), with three sections: options, colors, and hints.\n\nTo start customizing termite copy the base example file to your home dir first:\n\n```\n$ cp /etc/xdg/termite/config ~/.config/termite/config\n```\n\n"
    },
    {
      "title": "Font",
      "level": 3,
      "content": "Fonts are specified in the format font=<font_name> <font_size> under the options section. <font_name> is specified according to fontconfig, not Xft. Use fc-list to see which fonts are available on the system (see also Font configuration#Font paths).\n\n```\n~/.config/termite/config\n```\n\n```\n[options]\nfont = Monospace 9\nfont = xos4 Terminus 12px\nfont = Droid Sans Mono 8\n```\n\n"
    },
    {
      "title": "Colors",
      "level": 3,
      "content": "Colors consist of either a 24-bit hex value (e.g. #4a32b1), or an rgba vector (e.g. rgba(16, 32, 64, 0.5)). Valid properties for colors are foreground, foreground_bold, foreground_dim, background, cursor, cursor_foreground, and colorN (where N is an integer from zero through 254; used to assign a 24-bit color value to terminal colorN).\n\nAn amazing collection of termite color schemes can be found here: https://github.com/khamer/base16-termite/tree/master/themes\n\n```\n~/.config/termite/config\n```\n\n```\n[colors]\nforeground = #dcdccc\nbackground  = #3f3f3f\n```\n\n"
    },
    {
      "title": "Reload configuration without exiting",
      "level": 3,
      "content": "You can reload Termite's configuration file without exiting by pressing Ctrl+Shift+r from within Termite.\n\nAlternatively, you can send a USR1 signal to all Termite instances:\n\n```\n$ killall -USR1 termite\n```\n\n"
    },
    {
      "title": "Transparency",
      "level": 2,
      "content": "As of version 9, Termite supports true transparency via color definitions that specify an alpha channel value [2]. This requires a compositor to be running, such as picom or xcompmgr. Most compositors do not require special configuration for Termite to use transparency.\n\n```\n~/.config/termite/config\n```\n\n```\n[colors]\nbackground = rgba(63, 63, 63, 0.8)\n```\n\n```\n~/.config/picom.conf\n```\n\n```\nopacity-rule = [\n  \"0:_NET_WM_STATE@:32a *= '_NET_WM_STATE_HIDDEN'\"\n];\n```\n\n"
    },
    {
      "title": "Ctrl+Shift+t",
      "level": 3,
      "content": "If opening a new tab through Ctrl+Shift+t fails with no directory uri set, source /etc/profile.d/vte.sh. See GNOME/Tips and tricks#New terminals adopt current directory.\n\nIf it continues to fail, ensure your hostname is valid. See hostname(7).\n\n"
    },
    {
      "title": "Remote SSH error",
      "level": 3,
      "content": "When Termite is using remote SSH connection sometimes the error occurs: Error opening terminal: xterm-termite. or Open terminal failed: missing or unsuitable terminal: xterm-termite.\n\nThis error can occur when trying to edit file with vim or nano. To fix this issue you should execute this command on the remote system:\n\n```\n$ export TERM=xterm-color\n```\n\nAlternatively, follow the instructions on Termite's GitHub. This will allow you to use all of Termite's features when using SSH, whereas the above may not. [3]\n\n"
    },
    {
      "title": "Terminal issues with SSH",
      "level": 3,
      "content": "When Termite is used for SSH connections to a remote system which does not have its Terminfo, various issues (such as non-working backspace and weird cursor behaviour) could happen. The solution is to send your Terminfo to the remote host.\n\nOn the local host, using Termite:\n\n```\n$ infocmp > termite.terminfo  # export Termite's Terminfo\n$ scp termite.terminfo user@remote-host:~/  # or any other method to copy to the remote host\n```\n\nOn the remote host, in the directory where you copied termite.terminfo:\n\n```\n$ tic -x termite.terminfo  # import Terminfo for current user\n$ rm termite.terminfo  # optional: remove Terminfo file\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Termite readme\n\n"
    }
  ]
}