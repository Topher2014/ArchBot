{
  "title": "Yabsnap",
  "url": "https://wiki.archlinux.org/title/Yabsnap",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Btrfs\n- Snapper\n\nYabsnap is a scheduled snapshot manager for Btrfs partitions written for Arch.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the yabsnapAUR package, the development version can be installed from yabsnap-gitAUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Run the following to create a skeleton config:\n\n```\n# yabsnap create-config 'configname'\n```\n\nThis will create /etc/yabsnap/configs/confignane.conf. Edit the file to specify the following:\n\n- source - The location where a subvolume is mounted. E.g. /home.\n- dest_prefix - The full path and prefix for the snapshot names to be created. E.g. /.snapshot/@home- will create files snapshot backups such as /.snapshot/@home-20230525120000.\n\nYou can also edit other parameters to specify when backups will be triggered and cleaned up.\n\n"
    },
    {
      "title": "Viewing snapshots",
      "level": 3,
      "content": "To review existing snapshots, use:\n\n```\n$ yabsnap list\n```\n\n"
    },
    {
      "title": "Creating snapshots",
      "level": 3,
      "content": "To create snapshots for all configs, use:\n\n```\n# yabsnap create --comment 'COMMENT'\n```\n\nYou can also restrict to a specific mounted subvolume. Yabsnap will automatically find the right config for it and use it:\n\n```\n# yabsnap --source '/home' create --comment 'COMMENT'\n```\n\n"
    },
    {
      "title": "Automatic cleanups",
      "level": 3,
      "content": "Yabsnap will automatically delete snapshots based on the configurations in /etc/yabsnap/configs/*.conf.\n\n"
    },
    {
      "title": "Deleting snapshots",
      "level": 3,
      "content": "You can also manually remove snapshots, with the following commands:\n\nSpecifying full path deletes a specific snapshot:\n\n```\n# yabsnap delete /.snapshots/@home-20230525120000\n```\n\nSpecifying a timestamp deletes all matching snapshots that were taken together:\n\n```\n# yabsnap delete 20230525120000\n```\n\n"
    },
    {
      "title": "Rollback requirement: Mount by subvol and not subvolid",
      "level": 3,
      "content": "It is recommended that you mount all the volumes with subvol instead of subvolid.\n\nFor example, this can be your fstab entry:\n\n```\nUUID=[YOUR_UUID] / btrfs rw,noatime,ssd,space_cache=v2,compress=zstd,subvol=/@ 0 0\n```\n\nNote: **Do not** \n\nThe reason this works is because rollback mechanism will not edit your fstab file, it will simply ensure that the correct snapshots are mounted in the respective locations.\n\n"
    },
    {
      "title": "Rollback operation",
      "level": 3,
      "content": "The command for rollback is safe, until you execute the script it generates.\n\nThis generates a rollback script:\n\nChange the timestamp to one of your existing snapshots:\n\n```\n$ yabsnap rollback-gen 20230525081049 | tee ~/rollback.sh\n```\n\nExecuting the script will actually cause the rollback to happen. It is recommended that you review the generated lines before rolling back.\n\nOnce you have reviewed the generated script for your rollback, you can then make it executable then run it:\n\n```\n# ~/rollback.sh\n```\n\nThis will perform a rollback of all snapshots that were taken at the specified timestamp.\n\n"
    },
    {
      "title": "Comparison with Snapper",
      "level": 2,
      "content": "It was created to overcome some of the shortcomings of Snapper, specifically it does the following which are difficult or impossible to do in Snapper (as of writing):\n\n- custom destinations for backup (related issue),\n- rollback for all configs (not just the default subvolume),\n- has integrated pacman hook support.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Yabsnap github page\n\n"
    }
  ]
}