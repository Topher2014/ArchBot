{
  "title": "Rabbitmq",
  "url": "https://wiki.archlinux.org/title/Rabbitmq",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "RabbitMQ is a messaging broker, an intermediary for messaging. It gives your applications a common platform to send and receive messages, and your messages a safe place to live until received.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the rabbitmq package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "No configuration should be needed. Simply start and/or enable rabbitmq.service.\n\nDefault configuration file location /etc/rabbitmq/rabbitmq-env.conf. See more about configuration on the official docs\n\nNote: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\n"
    },
    {
      "title": "Enabling MQTT",
      "level": 3,
      "content": "RabbitMQ can act as MQTT server. For this functionality to work following plugin needs to be enabled:\n\n```\n# rabbitmq-plugins enable rabbitmq_mqtt\n```\n\nRabbitMQ service needs to be restarted for this change to take effect.\n\nClients need to authenticate before they can post to topics. RabbitMQ segregates traffic via virtual hosts, you need to issue `configured_vhost_name:your_user_name` as user name in order to authenticate.\n\n"
    },
    {
      "title": "Enabling HTTP admin",
      "level": 3,
      "content": "To enable the HTTP admin page:\n\n```\n# rabbitmq-plugins enable rabbitmq_management\n```\n\nThen navigate to <ip_address_of_host>:15672. Default credentials are username:guest password:guest\n\n"
    },
    {
      "title": "Service stop hangs for a minutes",
      "level": 3,
      "content": "Rabbitmq package install epmd (Erlang Port Mapping Daemons) as dependency. If you run rabbitmq server via systemd, it will start detached epmd process, that will not be stopped with systemctl stop. You can avoid this, if add After=epmd.service in [Unit] section. Do not forget to reload daemons.\n\n"
    },
    {
      "title": "Changed hostname",
      "level": 3,
      "content": "If you have changed your hostname after you installed rabbitmq, it will no longer be able to start. This is due to the NODENAME specified in /etc/rabbitmq/rabbitmq-env.conf. Update it to reflect your new hostname, for example:\n\n```\n/etc/rabbitmq/rabbitmq-env.conf\n```\n\n```\nNODENAME=rabbit@my-new-hostname\n...\n```\n\n"
    },
    {
      "title": "Upgraded RabbitMQ to latest version and cannot start",
      "level": 3,
      "content": "This might cause your /etc/rabbitmq/rabbitmq-env.conf to get the wrong NODENAME. For example, it might cause it to add another @hostname part. In any case, this can be fixed by following #Changed hostname.\n\nIn case the service does not start with error:\n\n```\nBOOT FAILED\n[error] <0.218.0> ===========\n[error] <0.218.0> Error during startup:  {error,failed_to_initialize_feature_flags_registry}\n```\n\nIt looks like this error is related to an incompatibility in the plugins folder after upgrade. One solution is to completely remove all trace of rabbitmq and reinstall:\n\n```\n# pacman -Rn rabbitmq\n# rm -r /etc/rabbitmq\n# rm -r /var/lib/rabbitmq [May be unnecessary]\n# pacman -S rabbitmq\n# systemctl start rabbitmq.service\n```\n\nAfter restart with latest version (4.0.5-3) they may still be issue because of missing variables. In this case add:\n\n```\n/etc/rabbitmq/rabbitmq-env.conf\n```\n\n```\nPLUGINS_DIR=\"/usr/lib/rabbitmq/plugins:/usr/lib/rabbitmq/lib/rabbitmq_server-4.0.5/plugins\"\n...\n```\n\n"
    },
    {
      "title": "Issues with rabbitmqctl and other command line tools",
      "level": 3,
      "content": "With latest version (4.0.5-3) it looks like /usr/lib/rabbitmq/bin/ is not in $PATH, also see #Erlang_cookie_error.\n\n"
    },
    {
      "title": "Erlang cookie error",
      "level": 3,
      "content": "Failure to authenticate might be caused by a wrong rabbitmq HOME setting:\n\n```\nAuthentication failed (rejected by the remote node), please check the Erlang cookie\n...\nhome dir: /root\n```\n\nHome can be set in the configuration file:\n\n```\n/etc/rabbitmq/rabbitmq-env.conf\n```\n\n```\n...\nHOME=/var/lib/rabbitmq\n...\n```\n\n"
    },
    {
      "title": "can't establish TCP connection",
      "level": 3,
      "content": "If you see this error then make sure first entry with your host name within /etc/hosts contains the same IP address as specified within /etc/rabbitmq/rabbitmq-env.conf (this error is common if you configure rabbitmq to bind to specific interface).\n\n"
    },
    {
      "title": "Can't connect with pika Python client through localhost",
      "level": 3,
      "content": "Trying to connect through localhost with pika Python client, raises an exception:\n\n```\n...\npika.exceptions.ProbableAccessDeniedError: (541, \"INTERNAL_ERROR - access to vhost '/' refused for user 'guest': vhost '/' is down\")\n```\n\nDefault configuration file /etc/rabbitmq/rabbitmq-env.conf of the package is:\n\n```\n/etc/rabbitmq/rabbitmq-env.conf\n```\n\n```\nNODENAME=rabbit@localhost\nNODE_IP_ADDRESS=0.0.0.0\nNODE_PORT=5672\n```\n\nRemoving the username part of NODENAME, and leaving the hostname of the machine (which should match the one shown in /etc/hosts), fixes the issue:\n\n```\n/etc/rabbitmq/rabbitmq-env.conf\n```\n\n```\nNODENAME=localhost\nNODE_IP_ADDRESS=0.0.0.0\nNODE_PORT=5672\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Wikipedia:RabbitMQ\n- erlang kernel parameters - kernel parameters for advanced configuration\n- rabbitmq.config example - rabbitmq.config example (not included with rabbitmq package)\n\n"
    }
  ]
}