{
  "title": "Fzf",
  "url": "https://wiki.archlinux.org/title/Fzf",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "fzf is a general-purpose command-line fuzzy finder.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the fzf package. The development version is fzf-gitAUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Shells",
      "level": 3,
      "content": "Optional fzf keybindings and completion are available for various shells:\n\n- Ctrl+t list files+folders in current directory (e.g., type git add , press Ctrl+t, select a few files using Tab, finally Enter)\n- Ctrl+r search history of shell commands\n- Alt+c fuzzy change directory\n\n"
    },
    {
      "title": "Bash",
      "level": 4,
      "content": "Source the desired files from your .bashrc:\n\n- /usr/share/fzf/key-bindings.bash\n- /usr/share/fzf/completion.bash\n\nFrom version 0.48 onwards, this can be accomplished with a single line:\n\n- eval \"$(fzf --bash)\"\n\nThe original syntax is still supported and useful for user-customized versions of the scripts.\n\n"
    },
    {
      "title": "Zsh",
      "level": 4,
      "content": "Source the desired files from your .zshrc (after vi-mode, if using that, too):\n\n- /usr/share/fzf/key-bindings.zsh\n- /usr/share/fzf/completion.zsh\n\nFrom version 0.48 onwards, this can be accomplished with a single line:\n\n- source <(fzf --zsh)\n\n"
    },
    {
      "title": "fish",
      "level": 4,
      "content": "For fish, keybindings are in:\n\n- /usr/share/fish/vendor_functions.d/fzf_key_bindings.fish\n\nfish will source this by default but the bindings have to be enabled manually:\n\n```\n~/.config/fish/functions/fish_user_key_bindings.fish\n```\n\n```\nfunction fish_user_key_bindings\n\tfzf_key_bindings\nend\n```\n\nfzf completion in fish can be enabled with custom functions: https://github.com/junegunn/fzf/wiki/Examples-(fish)\n\n"
    },
    {
      "title": "Vim",
      "level": 3,
      "content": "The basic Vim plugin is already included within the package and installed to Vim's global plugin directory. Thus, you do not need to add anything to your .vimrc to be able to use it. It only provides the FZF command, though. There is an additional Vim plugin made by the author of fzf that defines some convenience functions, see https://github.com/junegunn/fzf.vim.\n\n"
    },
    {
      "title": "Pacman",
      "level": 3,
      "content": "Try this to fuzzy-search through all available packages, with package info shown in a preview window, and then install selected packages:\n\n```\n$ pacman -Slq | fzf --multi --preview 'pacman -Si {1}' | xargs -ro sudo pacman -S\n```\n\nList all your installed packages, and then remove selected packages:\n\n```\n$ pacman -Qq | fzf --multi --preview 'pacman -Qi {1}' | xargs -ro sudo pacman -Rns\n```\n\nIf you want to add package file list in preview – may be a bit slower updating preview window (make sure you run pacman -Fy with root privileges at least once before invocation to sync the pacman file database):\n\n```\n$ pacman -Slq | fzf --multi --preview 'cat <(pacman -Si {1}) <(pacman -Fl {1} | awk \"{print \\$2}\")' | xargs -ro sudo pacman -S\n```\n\nThe paruzAUR package also provides a fzf terminal UI for paruAUR and pacman.\n\n"
    },
    {
      "title": "Alternatives",
      "level": 2,
      "content": "- skim – fuzzy finder written in Rust\n- fzy – fuzzy finder/selector\n\n"
    }
  ]
}