{
  "title": "Festival",
  "url": "https://wiki.archlinux.org/title/Festival",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Speech dispatcher\n\nFestival is a general multi-lingual speech synthesis system developed at CSTR (Centre for Speech Technology Research). It offers a general framework for building speech synthesis systems as well as including examples of various modules. As a whole it offers full text to speech through a number APIs: from shell level, though a Scheme command interpreter, as a C++ library, from Java, and an Emacs interface. Festival is multi-lingual (currently British English, American English, Italian, Czech and Spanish, with other languages available in prototype.)\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the festival package, and one or more speakers/voices:\n\n- festival-english provides a British and American English Male speaker.\n- festival-us provides American Male/Female and Scottish English Male speaker.\n\nMore speakers are available in the AUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "There is no global /etc/ configuration file, but you can configure festival with your ~/.festivalrc file, or by directly editing /usr/share/festival/festival.scm. Both of these are scheme files, using scheme syntax and rerun everytime festival is run.\n\n"
    },
    {
      "title": "Sound server",
      "level": 3,
      "content": "You must select a sound server (either PulseAudio or ALSA). The following settings will allow Festival to work if audio from other sources is already playing. Add one of these to your config:\n\nFor PulseAudio:\n\n```\n(Parameter.set 'Audio_Required_Format 'aiff)\n(Parameter.set 'Audio_Method 'Audio_Command)\n(Parameter.set 'Audio_Command \"paplay $FILE --client-name=Festival --stream-name=Speech\")\n```\n\nFor ALSA: [1]\n\n```\n(Parameter.set 'Audio_Method 'Audio_Command)\n(Parameter.set 'Audio_Command \"aplay -q -c 1 -t raw -f s16 -r $SR $FILE\")\n```\n\n"
    },
    {
      "title": "Voices",
      "level": 3,
      "content": "Arch splits the set of official voices into festival-us (recommended) and festival-english. The AUR has some others, in various states of maintenance which may or may not be currently working.\n\nTo see what voices are currently installed and what the default is, first enter Festival's #Interactive shell (a REPL scheme). To permanently change the default voice add it to your config, for example:\n\n```\n(set! voice_default voice_cmu_us_rms_cg)\n```\n\nNote: If the above command does not work, try prefixing the name of the voice with ':\n\n```\n(set! voice_default 'voice_cmu_us_rms_cg)\n```\n\nAppend to /usr/share/festival/siteinit.scm to apply for all users.\n\n"
    },
    {
      "title": "Manually",
      "level": 4,
      "content": "You can also get voices straight from Festvox [2] [3]. You will need to unzip and move the folder containing the voice to /usr/share/festival/voices/ and the way to tell what folder contains the voice is to look for a festvox/ subfolder inside of it. You can then test that your new voices are found by loading up the festival prompt.\n\n"
    },
    {
      "title": "Using Files as Input or Output",
      "level": 3,
      "content": "To read a text file:\n\n```\n$ festival --tts text_file\n```\n\nTo read a selection you highlighted with the cursor:\n\n```\n$ xsel | festival --tts\n```\n\nConvert a text file to an mp3 audio:\n\n```\n$ text2wave text_file | lame - text.mp3\n```\n\nRecord audio with a select voice:\n\n```\n$ text2wave -o output.wav -eval '(voice_german_de2_os)' text_file\n```\n\n"
    },
    {
      "title": "Interactive",
      "level": 3,
      "content": "Festival has an interactive prompt you can use for testing. Type festival to enter it. The following are some examples:\n\nTo show the voice festival speaks with:\n\n```\nvoice_default\n```\n\nTo list available voices:\n\n```\n(voice.list)\n```\n\nTo select another voice, enter (voice_name). For example:\n\n```\n(voice_cmu_us_rms_cg)\n```\n\nTo hear it speak:\n\n```\n(SayText \"Arch makes me happy\")\n```\n\nTo list available commands:\n\n```\nhelp\n```\n\nTo exit the shell:\n\n```\n(quit)\n```\n\n"
    },
    {
      "title": "Can't open /dev/dsp",
      "level": 3,
      "content": "If festival returns the following error message:\n\n```\nLinux: can't open /dev/dsp\n```\n\nSee #Sound server above.\n\n"
    },
    {
      "title": "ALSA playing at wrong speed",
      "level": 3,
      "content": "If the solution above gives you a squeaky voice, you might want to try changing your aplay options:\n\n```\n(Parameter.set 'Audio_Method 'Audio_Command)\n(Parameter.set 'Audio_Command \"aplay -Dplug:default -f S16_LE -r $SR $FILE\")\n```\n\n"
    },
    {
      "title": "Command aplay not found",
      "level": 3,
      "content": "Install the alsa-utils package.\n\n"
    },
    {
      "title": "Killing festival process doesn't stop audio",
      "level": 3,
      "content": "Killing a background festival process will not stop the audio from continuing to play.\n\nTo stop audio from playing, the child audsp processes must be killed. This can be done by executing:\n\n```\n$ pkill audsp\n```\n\n"
    },
    {
      "title": "Server",
      "level": 3,
      "content": "Install festival-freebsoft-utilsAUR to use Festival with Speech dispatcher (i.e. with the Listen feature in Firefox's Reader mode).\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Festival manual\n- List of applications/Other#Speech synthesizers\n\n"
    }
  ]
}