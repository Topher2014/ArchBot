{
  "title": "Gamescope",
  "url": "https://wiki.archlinux.org/title/Gamescope",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Steam\n- Gaming\n\nGamescope is a microcompositor from Valve that is used on the Steam Deck. Its goal is to provide an isolated compositor that is tailored towards gaming and supports many gaming-centric features such as:\n\n- Spoofing resolutions.\n- Upscaling using AMD FidelityFX™ Super Resolution or NVIDIA Image Scaling.\n- Limiting framerates.\n\nAs a microcompositor it is designed to run as a nested session on top of your existing desktop environment though it is also possible to use it as an embedded compositor as well.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Gamescope can be installed with the gamescope package (or the gamescope-gitAUR package). Additionally there is also gamescope-plusAUR which includes extra patches not present in the mainline build.\n\n"
    },
    {
      "title": "Requirements",
      "level": 3,
      "content": "- AMD: Mesa 20.3 or above\n- Intel: Mesa 21.2 or above\n- NVIDIA: proprietary drivers 515.43.04 or above, and the nvidia_drm.modeset=1 kernel parameter\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Gamescope offers many options, far too many to cover here. For a full list use the gamescope --help command from a terminal.\n\n"
    },
    {
      "title": "From a display manager",
      "level": 3,
      "content": "See Steam#Big Picture Mode from a display manager.\n\n"
    },
    {
      "title": "From a desktop session",
      "level": 3,
      "content": "The following command will run supertuxkart using Gamescope and force a 1920x1080 resolution at 60 FPS\n\n```\n$ gamescope -W 1920 -H 1080 -r 60 -- supertuxkart\n```\n\n"
    },
    {
      "title": "From Steam",
      "level": 3,
      "content": "You can run games from Steam using Gamescope by adding the following to the games launch options\n\n```\ngamescope -- %command%\n```\n\n```\ngamescope -W 1920 -H 1080 -r 60 -- %command%\n```\n\n"
    },
    {
      "title": "From Wine",
      "level": 3,
      "content": "To run programs using Gamescope through Wine, simply append wine followed by the executable.\n\n```\n$ gamescope -W 1920 -H 1080 -r 60 -- wine supertuxkart\n```\n\nAlmost all the popular Wine managers such as Lutris, Bottles, and PlayOnLinux have support for Gamescope. Using them is as simple as installing the desired Gamescope package and checking the Use Gamescope (or similar) option.\n\n"
    },
    {
      "title": "From Flatpak",
      "level": 3,
      "content": "You can also use Gamescope from Flatpak versions of Wine managers and Steam in the same way as you would from a package install. It does however require that you first install Gamescope from Flathub with the following command:\n\n```\n$ flatpak install gamescope\n```\n\n"
    },
    {
      "title": "Upscaling",
      "level": 3,
      "content": "The -F fsr and -F nis flags can be used to upscale games using AMD FidelityFX™ Super Resolution 1.0 (FSR) or NVIDIA Image Scaling v1.0.3 (NIS) respectively. You can also use -S integer for integer upscaling or -S stretch for stretch scaling.\n\nTo upscale a 720p game to 1440p using FSR:\n\n```\n$ gamescope -h 720 -H 1440 -F fsr -- supertuxkart\n```\n\nTo run a game at 1080p internal resolution but display it at 4K using NIS:\n\n```\n$ gamescope -w 1920 -h 1080 -W 3840 -H 2160 -F nis -- supertuxkart\n```\n\nGames with low resolutions typically use linear filtering on fullscreen by default and sometimes get stretched. This is specially noticeable in classic JRPG. To have a pixelated look and keep aspect ratio:\n\n```\n$ gamescope -F nearest -S fit -- tecnoballz\n```\n\nFilters can be changed while the game is running:\n\n- Super+n toggle nearest filtering.\n- Super+u toggle FSR upscaling.\n- Super+y toggle NIS upscaling.\n- Super+o increase FSR sharpness by 1.\n- Super+i decrease FSR sharpness by 1.\n\n"
    },
    {
      "title": "HDR support",
      "level": 3,
      "content": "Gamescope is a requirement for HDR10 support when playing games, to make use of this feature you must launch your Gamescope session using the --hdr-enabled flag.\n\n"
    },
    {
      "title": "Wayland support",
      "level": 3,
      "content": "Gamescope does not support Wayland clients by default. To enable support for Wayland clients, add the --expose-wayland flag to Gamescope's parameters.\n\n"
    },
    {
      "title": "SDR Gamut Wideness",
      "level": 3,
      "content": "Since SteamOS 3.5.5, Valve has changed the default color rendering for the Steam Deck LCD. The effect is achieved through Gamescope by changing the \"wideness\" of the gamut for SDR content, which can result in a warmer and more vibrant color appearance depending on the adjustment.\n\nIn a Steam game's launch options, simply add --sdr-gamut-wideness followed by a value that's equal or between 0-1:\n\n```\ngamescope --sdr-gamut-wideness 1 -- %command%\n```\n\n"
    },
    {
      "title": "Mangoapp",
      "level": 3,
      "content": "Using traditional MangoHud with gamescope is not supported. Instead the gamescope argument --mangoapp should be used. This allows MangoHud to run on top of gamescope instead of the underlying application. Certain MangoHud configurations, such as displaying FSR or HDR status, require the use of mangoapp with gamescope in order to work.\n\n"
    },
    {
      "title": "Variable Refresh",
      "level": 3,
      "content": "If your monitor supports it, enable variable refresh rate by passing the --adaptive-sync flag.\n\n"
    },
    {
      "title": "Cursor doesn't behave properly",
      "level": 3,
      "content": "If the cursor is not captured by the application, for example by limiting your camera movement or by not properly disappearing out of menu, use the --force-grab-cursor option. Some proton/wine games require this workaround.\n\n"
    },
    {
      "title": "Switching to fullscreen causes low performance",
      "level": 3,
      "content": "This is a known bug when using Gamescopes fullscreen hotkey Meta+f, if you encounter this issue it can be worked around by using the fullscreen flag -f when launching the game.\n\n"
    },
    {
      "title": "Setting Gamescopes priority",
      "level": 3,
      "content": "Another known cause of low performance and/or stuttering is not having Gamescope's priority set correctly. You can tell this is the case if you see an error like this in the terminal while Gamescope is running:\n\n```\nNo CAP_SYS_NICE, falling back to regular-priority compute and threads.\nPerformance will be affected.\n```\n\nThe following command will fix this:\n\n```\n# setcap 'CAP_SYS_NICE=eip' $(which gamescope)\n```\n\n"
    },
    {
      "title": "Window does not appear in Flatpak on NVIDIA",
      "level": 3,
      "content": "This is because Flatpak Gamescope fails to access the NVIDIA DRM's GBM backend. It can be solved by simply setting an environment variable with the following command:\n\n```\n$ flatpak override --env=GBM_BACKENDS_PATH=/usr/lib/x86_64-linux-gnu/GL/nvidia-XXX-YY-ZZ/extra/gbm packageid\n```\n\nwhere packageid is the Flatpak package identifier of Gamescope or the app you want to use Gamescope with, such as Bottles. Replace nvidia-XXX-YY-ZZ with the currently installed NVIDIA driver version; inside Flatpak, it can be queried with this command:\n\n```\n$ flatpak run --command=ls packageid /usr/lib/x86_64-linux-gnu/GL\n```\n\nwhere packageid is any Flatpak package identifier; do note that the directory only exists inside Flatpak.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe command must be reran, and modified accordingly, on every driver update.\n\n"
    },
    {
      "title": "Image corruption on Intel graphics",
      "level": 3,
      "content": "If gamescope outputs corrupted image colors on Intel graphics disabling lossless color compression can be a work-around at the cost of increased memory bandwidth utilization. [1] To disable it pass INTEL_DEBUG=noccs environment variable.\n\n"
    },
    {
      "title": "VRR stutters when HDR is enabled",
      "level": 3,
      "content": "If VRR and HDR work independently, but the framerate is unstable when they're both enabled, then you may be hitting issues with long HDR compositing times. See https://github.com/ValveSoftware/gamescope/issues/1006. This only applies to using Gamescope in embedded mode, and not when using gamescope within an existing wayland or X session.\n\nWhen using AMD graphics this can be fixed by using experimental AMD color management, which uses hardware planes to composite the final image. This requires one of two setups:\n\n"
    },
    {
      "title": "Steam Deck kernel",
      "level": 4,
      "content": "- The Steam Deck Linux kernel linux-neptune-65AUR or a kernel built with the Steam Deck color management patch\n- gamescope or gamescope-gitAUR\n\n"
    },
    {
      "title": "Linux kernel with experimental AMD color management enabled",
      "level": 4,
      "content": "Linux 6.8 or newer compiled with KCFLAGS including -DAMD_PRIVATE_COLOR, eg linux-amd-colorAUR\n\n"
    },
    {
      "title": "High polling rate mice cause stuttering",
      "level": 3,
      "content": "Moving a high polling rate mouse (observed with 4000Hz) in the game window might cause stuttering or temporary freezes [2]. Setting a lower polling rate like 1000Hz should work around this issue.\n\n"
    },
    {
      "title": "Swapchain Errors",
      "level": 3,
      "content": "A common cause of swapchain errors is improperly attempting to use mangohud instead of mangoapp. See the Mangoapp section of #Usage, above.\n\n"
    },
    {
      "title": "Launching gamescope from steam, stuttering after ~24 minutes",
      "level": 3,
      "content": "If after launching gamescope from steam you experience heavy stuttering setting in after around 24 minutes, then you can fix this by either enabling the steam overlay -e option or by overwriting the environment variable LD_PRELOAD with a different value. For example:\n\n```\n$ LD_PRELOAD=\"\" gamescope -- %command%\n```\n\nSee issue #163.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Gamescope Github Page\n- Gamescope at Steamtinkerlaunch Github Wiki\n\n"
    }
  ]
}