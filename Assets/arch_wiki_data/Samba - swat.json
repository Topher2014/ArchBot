{
  "title": "Samba - swat",
  "url": "https://wiki.archlinux.org/title/Samba_-_swat",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Active Directory Integration\n- Samba/Active Directory domain controller\n- NFS\n\nSamba is the standard Windows interoperability suite of programs for Linux and Unix. Since 1992, Samba has provided secure, stable and fast file and print services for all clients using the SMB/CIFS protocol, such as all versions of DOS and Windows, OS/2, Linux and many others.\n\nTo share files through Samba, see #Server section; to access files shared through Samba on other machines, please see #Client section.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the samba package.\n\nSamba is configured in the /etc/samba/smb.conf configuration file, which is extensively documented in smb.conf(5).\n\nBecause the samba package does not provide this file, one needs to create it before starting smb.service.\n\nA documented example as in smb.conf.default from the Samba git repository may be used to setup /etc/samba/smb.conf.\n\nNote: **This article or section is out of date.** This article or section is out of date.\n\nNote: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\n- The default configuration sets log file to a non-writable location, which will cause errors - apply one of the following workarounds: Change the log file location to a writable path: log file = /var/log/samba/%m.log Change logging to a non-file backend solution: logging = syslog with syslog only = yes, or use logging = systemd\n- If required; the workgroup specified in the [global] section has to match the Windows workgroup (default WORKGROUP).\n- The example configuration file exposes the user's home directory to the network with write access. If you see this as a security risk, consider commenting out the entire [homes] section. See smb.conf(5) § The [homes] section for details.\n\n- Change the log file location to a writable path: log file = /var/log/samba/%m.log\n- Change logging to a non-file backend solution: logging = syslog with syslog only = yes, or use logging = systemd\n\n"
    },
    {
      "title": "Enabling and starting services",
      "level": 4,
      "content": "To provide basic file sharing through SMB, enable/start smb.service. See smbd(8) for details.\n\nIf you want to make your server accessible via NetBIOS host name, set the desired name in the netbios name option in smb.conf and enable/start nmb.service. See nmbd(8) for details.\n\n"
    },
    {
      "title": "Make the server discoverable",
      "level": 4,
      "content": "Install the avahi package, then enable/start avahi-daemon.service to make the samba server discoverable with Zeroconf. It should work for most non-Windows file managers (macOS Finder, various GUI-based file managers on Linux & BSD etc.)\n\nIf avahi-daemon.service is not running, the server will still be accessible, just not discoverable, i.e. it will not show up in file managers, but you can still connect to the server directly by IP or domain.\n\nWindows Explorer relies on the WS-Discovery protocol instead; see #Windows 1709 or up does not discover the samba server in Network view.\n\n"
    },
    {
      "title": "Configure firewall",
      "level": 4,
      "content": "If you are using a firewall, do not forget to open required ports (usually 137-139 + 445). For a complete list, see Samba port usage.\n\nA Ufw App Profile for SMB/CIFS is included by default with the default installation of UFW in ufw-fileserver.\n\nAllow Samba by running ufw allow CIFS as root.\n\nIf you deleted the profile, create/edit /etc/ufw/applications.d/samba and add the following content:\n\n```\n[Samba]\ntitle=LanManager-like file and printer server for Unix\ndescription=The Samba software suite is a collection of programs that implements the SMB/CIFS protocol for unix systems, allowing you to serve files and printers to Windows, NT, OS/2 and DOS clients. This protocol is sometimes also referred to as the LanManager or NetBIOS protocol.\nports=137,138/udp|139,445/tcp\n```\n\nThen load the profile into UFW run ufw app update Samba as root.\n\nThen finally, allow Samba by running ufw allow Samba as root.\n\nTo configure firewalld to allow Samba in the home zone, run:\n\n```\n# firewall-cmd --permanent --add-service={samba,samba-client,samba-dc} --zone=home\n```\n\nThe three services listed are:\n\n- samba: for sharing files with others.\n- samba-client: to browse shares on other machines on the network.\n- samba-dc: for Samba/Active Directory domain controller.\n\n--permanent ensures the changes remain after firewalld.service is restarted.\n\n"
    },
    {
      "title": "User management",
      "level": 4,
      "content": "The following section describes creating a local (tdbsam) database of Samba users. For user authentication and other purposes, Samba can also be bound to an Active Directory domain, can itself serve as an Active Directory domain controller, or can be used with an LDAP server.\n\nSamba requires a Linux user account - you may use an existing user account or create a new one.\n\nAlthough the user name is shared with Linux system, Samba uses a password separate from that of the Linux user accounts. Replace samba_user with the chosen Samba user account:\n\n```\n# smbpasswd -a samba_user\n```\n\nDepending on the server role, existing File permissions and attributes may need to be altered for the Samba user account.\n\nIf you want the new user only to be allowed to remotely access the file server shares through Samba, you can restrict other login options：\n\n- disabling shell - usermod --shell /usr/bin/nologin --lock samba_user\n- disabling SSH logons - edit /etc/ssh/sshd_config, change option AllowUsers\n\nAlso see Security for hardening your system.\n\nSamba users can be listed using the pdbedit(8) command:\n\n```\n# pdbedit -L -v\n```\n\nTo change a user password, use smbpasswd:\n\n```\n# smbpasswd samba_user\n```\n\n"
    },
    {
      "title": "Creating an anonymous share",
      "level": 4,
      "content": "1. Create a Linux user which anonymous Samba users will be mapped to.\n\n```\n# useradd guest -s /bin/nologin\n```\n\n2. Add the following to /etc/samba/smb.conf:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n...\n[global]\nsecurity = user\nmap to guest = bad user\nguest account = guest\n\n[guest_share]\n    comment = guest share\n    path = /tmp/\n    public = yes\n    only guest = yes\n    writable = yes\n    printable = no\n```\n\nAnonymous users will now be mapped to the Linux user guest and have the ability to access any directories defined in guest_share.path, which is configured to be /tmp/ in the example above.\n\nMake sure that the Linux user guest has the proper permissions to access files in guest_share.path.\n\nAlso, make sure shares have been properly defined as per the Share Definitions section of smb.conf.default.\n\n"
    },
    {
      "title": "Enable symlink following",
      "level": 4,
      "content": "```\n/etc/samba/smb.conf\n```\n\n```\n...\n[global]\n   follow symlinks = yes\n   wide links = yes\n   unix extensions = no\n```\n\nThen, restart smb.service.\n\n"
    },
    {
      "title": "Enable server-side copy for macOS clients",
      "level": 4,
      "content": "Server-side copy eliminates the need to transfer data between the server and the client when copying files on the server. This is enabled by default, but it doesn't work with macOS clients. If you have macOS clients, you need to add the following configuration to smb.conf and then restart smb.service.\n\n```\n/etc/samba/smb.conf\n```\n\n```\n...\n[global]\n   fruit:copyfile = yes\n```\n\n"
    },
    {
      "title": "Enable Usershares",
      "level": 4,
      "content": "Usershares is a feature that gives non-root users the capability to add, modify, and delete their own share definitions. See smb.conf(5) § USERSHARES.\n\n1. Create a directory for usershares: # mkdir /var/lib/samba/usershares\n1. Create a user group: # groupadd -r sambashare\n1. Change the owner of the directory to root and the group to sambashare: # chown root:sambashare /var/lib/samba/usershares\n1. Change the permissions of the usershares directory so that users in the group sambashare can create files. This command also sets sticky bit, which is important to prevent users from deleting usershares of other users: # chmod 1770 /var/lib/samba/usershares\n\n```\n# mkdir /var/lib/samba/usershares\n```\n\n```\n# groupadd -r sambashare\n```\n\n```\n# chown root:sambashare /var/lib/samba/usershares\n```\n\n```\n# chmod 1770 /var/lib/samba/usershares\n```\n\nSet the following parameters in the smb.conf configuration file:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  usershare path = /var/lib/samba/usershares\n  usershare max shares = 100\n  usershare allow guests = yes\n  usershare owner only = yes\n```\n\nAdd the user to the sambashare group. Replace your_username with the name of your user:\n\n```\n# gpasswd sambashare -a your_username\n```\n\nRestart smb.service and nmb.service services.\n\nLog out and log back in.\n\nIf you want to share paths inside your home directory you must make it accessible for the group others.\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIn the GUI, you can use Thunar or Dolphin - right click on any directory and share it on the network.\n\nIn the CLI, use one of the following commands, replacing italic sharename, user, ... :\n\n```\n# net usershare add sharename abspath [comment] [user:{R|D|F}] [guest_ok={y|n}]\n# net usershare delete sharename\n# net usershare list wildcard-sharename\n# net usershare info wildcard-sharename\n```\n\n"
    },
    {
      "title": "Set and forcing permissions",
      "level": 4,
      "content": "Permissions may be applied to both the server and shares:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  ;inherit owner = unix only ; Inherit ownership of the parent directory for new files and directories\n  ;inherit permissions = yes ; Inherit permissions of the parent directory for new files and directories\n  create mask = 0664\n  directory mask = 2755\n  force create mode = 0644\n  force directory mode = 2755\n  ...\n\n[media]\n  comment = Media share accessible by greg and pcusers\n  path = /path/to/media\n  valid users = greg @pcusers\n  force group = +pcusers\n  public = no\n  writable = yes\n  create mask = 0664\n  directory mask = 2775\n  force create mode = 0664\n  force directory mode = 2775\n\n[public]\n  comment = Public share where archie has write access\n  path = /path/to/public\n  public = yes\n  read only = yes\n  write list = archie\n  printable = no\n\n[guests]\n  comment = Allow all users to read/write\n  path = /path/to/guests\n  public = yes\n  only guest = yes\n  writable = yes\n  printable = no\n```\n\nSee smb.conf(5) for a full overview of possible permission flags and settings.\n\n"
    },
    {
      "title": "Restrict protocols for better security",
      "level": 4,
      "content": "Append server min protocol and server max protocol in /etc/samba/smb.conf to force usage of a minimum and maximum protocol:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  server min protocol = SMB2_10\n  ; server max protocol = SMB3\n```\n\nSee server max protocol in smb.conf(5) for an overview of supported protocols. For compatibility with older clients and/or servers, you might need to set client min protocol or server min protocol to an older protocol, but please note that this makes you vulnerable to exploits.\n\nClients using mount.cifs may need to specify the correct vers=*, e.g.:\n\n```\n# mount -t cifs //SERVER/sharename /mnt/mountpoint -o username=username,password=password,iocharset=utf8,vers=3.1.1\n```\n\nSee mount.cifs(8) for more information.\n\n"
    },
    {
      "title": "Use native SMB transport encryption",
      "level": 4,
      "content": "Native SMB transport encryption is available in SMB version 3.0 or newer. Clients supporting this type of encryption include Windows 8 and newer, Windows server 2012 and newer, and smbclient of Samba 4.1 and newer.\n\nTo use native SMB transport encryption by default, set the server smb encrypt parameter globally and/or by share. Possible values are off, enabled (default value), desired, or required:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  server smb encrypt = desired\n```\n\nTo configure encryption for on the client side, use the option client smb encrypt.\n\nSee smb.conf(5) for more information, especially the paragraphs Effects for SMB1 and Effects for SMB2.\n\n"
    },
    {
      "title": "Disable printer sharing",
      "level": 4,
      "content": "By default Samba shares printers configured using CUPS.\n\nIf you do not want printers to be shared, use the following settings:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  load printers = no\n  printing = bsd\n  printcap name = /dev/null\n  disable spoolss = yes\n  show add printer wizard = no\n```\n\n"
    },
    {
      "title": "Block certain file extensions on Samba share",
      "level": 4,
      "content": "Samba offers an option to block files with certain patterns, like file extensions. This option can be used to prevent dissemination of viruses or to dissuade users from wasting space with certain files. More information about this option can be found in smb.conf(5).\n\n```\n/etc/samba/smb.conf\n```\n\n```\n...\n[myshare]\n  comment = Private\n  path = /mnt/data\n  read only = no\n  veto files = /*.exe/*.com/*.dll/*.bat/*.vbs/*.tmp/*.mp3/*.avi/*.mp4/*.wmv/*.wma/\n```\n\n"
    },
    {
      "title": "Improve throughput",
      "level": 4,
      "content": "The default settings should be sufficient for most users. However setting the 'socket options' correct can improve performance, but getting them wrong can degrade it by just as much. Test the effect before making any large changes.\n\nRead the smb.conf(5) man page before applying any of the options listed below.\n\nThe following settings should be appended to the [global] section of /etc/samba/smb.conf.\n\nSetting a deadtime is useful to stop a server's resources from being exhausted by a large number of inactive connections:\n\n```\ndeadtime = 30\n```\n\nThe usage of sendfile may make more efficient use of the system CPU's and cause Samba to be faster:\n\n```\nuse sendfile = yes\n```\n\nSetting min receivefile size allows zero-copy writes directly from network socket buffers into the filesystem buffer cache (if available). It may improve performance but user testing is recommended:\n\n```\nmin receivefile size = 16384\n```\n\nIncreasing the receive/send buffers size and socket optimize flags might be useful to improve throughput. It is recommended to test each flag separately as it may cause issues on some networks:\n\n```\nsocket options = IPTOS_LOWDELAY TCP_NODELAY IPTOS_THROUGHPUT SO_RCVBUF=131072 SO_SNDBUF=131072\n```\n\n"
    },
    {
      "title": "Enable access for old clients/devices",
      "level": 4,
      "content": "Latest versions of Samba no longer offer older authentication methods and protocols which are still used by some older clients (IP cameras, etc). These devices usually require Samba server to allow NTMLv1 authentication and NT1 version of the protocol, known as CIFS. For these devices to work with latest Samba, you need to add these two configuration parameters into [global] section:\n\n```\nserver min protocol = NT1\nntlm auth = yes\n```\n\nAnonymous/guest access to a share requires just the first parameter. If the old device will access with username and password, you also need the add the second line too.\n\n"
    },
    {
      "title": "Enable Spotlight searching",
      "level": 4,
      "content": "Spotlight allows supporting clients (e.g. MacOS Finder) to quickly search shared files.\n\nInstall and start/enable OpenSearch. Install fs2es-indexerAUR, configure the directories you want to index in /etc/fs2es-indexer/config.yml, and start/enable fs2es-indexer.service for periodic indexing.\n\nEdit smb.conf as described in the Samba wiki to enable Spotlight per share, and restart smb.service to apply the changes.\n\n"
    },
    {
      "title": "Client",
      "level": 2,
      "content": "Install smbclient for an ftp-like command line interface. See smbclient(1) for commonly used commands.\n\nFor a lightweight alternative (without support for listing public shares, etc.), install cifs-utils that provides /usr/bin/mount.cifs.\n\nDepending on the desktop environment, GUI methods may be available. See #File manager configuration for use with a file manager.\n\n- smbclient requires a /etc/samba/smb.conf file (see #Installation), which you can create as an empty file using the touch utility.\n- After installing cifs-utils or smbclient, load the cifs kernel module or reboot to prevent mount fails.\n\n"
    },
    {
      "title": "List public shares",
      "level": 3,
      "content": "The following command lists public shares on a server:\n\n```\n$ smbclient -L hostname -U%\n```\n\nAlternatively, running $ smbtree -N will show a tree diagram of all the shares. It uses broadcast queries and is therefore not advisable on a network with a lot of computers, but can be helpful for diagnosing if you have the correct sharename. The -N (-no-pass) option suppresses the password prompt.\n\n"
    },
    {
      "title": "NetBIOS/WINS host names",
      "level": 3,
      "content": "Samba clients handle NetBIOS host names automatically by default (the behavior is controlled by the name resolve order option in smb.conf). Other programs (including mount.cifs) typically use Name Service Switch, which does not handle NetBIOS by default.\n\nThe smbclient package provides a libnss driver to resolve NetBIOS host names. To use it, install it along with the samba package (which provides the winbindd daemon), start/enable winbind.service and add wins to the hosts line in nsswitch.conf(5):\n\n```\n/etc/nsswitch.conf\n```\n\n```\n...\nhosts: mymachines resolve [!UNAVAIL=return] files myhostname dns wins\n...\n```\n\nNow, during host resolving (e.g. when using mount.cifs or just ping netbios-name), winbindd will resolve the host name by sending queries using NetBIOS Name Service (NBNS, also known as WINS) protocol.\n\nBy default it sends a broadcast query to your local network. If you have a WINS server, you can add wins server = wins-server-ip to smb.conf and restart winbind.service, then winbindd and other Samba clients will send unicast queries to the specified IP.\n\nIf you want to resolve your local host name (specified in the netbios name option in smb.conf), start/enable nmb.service, which will handle incoming queries.\n\nYou can test WINS resolution with nmblookup. By default it sends broadcast queries to your local network regardless of the wins server option.\n\nNote that WINS resolution requires incoming traffic originating from port 137.\n\n"
    },
    {
      "title": "Disable NetBIOS/WINS support",
      "level": 4,
      "content": "When not using NetBIOS/WINS host name resolution, it may be preferred to disable this protocol:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  disable netbios = yes\n  dns proxy = no\n```\n\nFinally disable/stop winbind.service.\n\n"
    },
    {
      "title": "Manual mounting",
      "level": 3,
      "content": "Mount the share using mount.cifs as type. Not all the options listed below are needed or desirable:\n\n```\n# mount --mkdir -t cifs //SERVER/sharename /mnt/mountpoint -o username=username,password=password,workgroup=workgroup,iocharset=utf8,uid=username,gid=group\n```\n\nThe options uid and gid corresponds to the local (e.g. client) user/user group to have read/write access on the given path.\n\n- If the uid and gid being used does not match the user of the server, the forceuid and forcegid options may be helpful. However note permissions assigned to a file when forceuid or forcegid are in effect may not reflect the real (server) permissions. See the File And Directory Ownership And Permissions section in mount.cifs(8) § FILE AND DIRECTORY OWNERSHIP AND PERMISSIONS for more information.\n- To mount a Windows share without authentication, use \"username=*\".\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\n- SERVER — The server name.\n- sharename — The shared directory.\n- mountpoint — The local directory where the share will be mounted.\n- [-o options] — See mount.cifs(8) for more information.\n\nNote: **/** \n\n- Abstain from using a trailing /. //SERVER/sharename/ will not work.\n- If your mount does not work stable, stutters or freezes, try to enable different SMB protocol version with vers= option. For example, vers=2.0 for Windows Vista mount.\n- If having timeouts on a mounted network share with cifs on a shutdown, see wpa_supplicant#Problem with mounted network shares (cifs) and shutdown.\n\n"
    },
    {
      "title": "Storing share passwords",
      "level": 4,
      "content": "Storing passwords in a world readable file is not recommended. A safer method is to use a credentials file instead, e.g. inside /etc/samba/credentials:\n\n```\n/etc/samba/credentials/share\n```\n\n```\nusername=myuser\npassword=mypass\n```\n\nFor the mount command replace username=myuser,password=mypass with credentials=/etc/samba/credentials/share.\n\nThe credential file should explicitly readable/writeable to root:\n\n```\n# chown root:root /etc/samba/credentials\n# chmod 700 /etc/samba/credentials\n# chmod 600 /etc/samba/credentials/share\n```\n\n"
    },
    {
      "title": "Using NetworkManager and GIO/gvfs",
      "level": 4,
      "content": "NetworkManager can be configured to run a script on network status change. This script uses the gio command so that it mounts the Samba shares automatically, the same way your file manager does, as explained below. The script also safely unmounts the Samba shares before the relevant network connection is disabled by listening for the pre-down and vpn-pre-down events. Make the script executable after creating it.\n\n```\n/etc/NetworkManager/dispatcher.d/30-samba.sh\n```\n\n```\n#!/bin/sh\n\n# Find the connection UUID with \"nmcli con show\" in terminal.\n# All NetworkManager connection types are supported: wireless, VPN, wired...\nWANTED_CON_UUID=\"CHANGE-ME-NOW-9c7eff15-010a-4b1c-a786-9b4efa218ba9\"\n\n# The user the share will be mounted under\nUSER=\"yourusername\"\n# The path that appears in your file manager when you manually mount the share you want\nSMB_URL=\"smb://servername/share\"\n\n# Get runtime user directory. If it does not exist, do nothing and just exit\nXDG_RUNTIME_DIR=$(loginctl show-user --property=RuntimePath --value \"$USER\") || exit 0\n\nif [ \"$CONNECTION_UUID\" = \"$WANTED_CON_UUID\" ]; then\n    \n    # Script parameter $1: network interface name, not used\n    # Script parameter $2: dispatched event\n    \n    case \"$2\" in\n        \"up\"|\"vpn-up\")\n            su $USER -c \"DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus gio mount $SMB_URL\"\n            ;;\n        \"pre-down\"|\"vpn-pre-down\")\n            su $USER -c \"DBUS_SESSION_BUS_ADDRESS=unix:path=$XDG_RUNTIME_DIR/bus gio mount -uf $SMB_URL\"\n            ;;\n    esac\nfi\n```\n\nCreate a symlink inside /etc/NetworkManager/dispatcher.d/pre-down to catch the pre-down events:\n\n```\n# ln -s /etc/NetworkManager/dispatcher.d/30-samba.sh /etc/NetworkManager/dispatcher.d/pre-down.d/30-samba.sh\n```\n\n"
    },
    {
      "title": "As mount entry",
      "level": 4,
      "content": "This is a simple example of a cifs mount entry that requires authentication:\n\n```\n/etc/fstab\n```\n\n```\n//SERVER/sharename /mnt/mountpoint cifs _netdev,nofail,username=myuser,password=mypass 0 0\n```\n\nNote: **s** \n\n- See examples below on better security for authentication credentials\n- Spaces in sharename should be replaced by \\040 (ASCII code for space in octal). For example, //SERVER/share name on the command line should be //SERVER/share\\040name in /etc/fstab.\n- To allow users to mount it as long as the mount point resides in a directory controllable by the user; i.e. the user's home, append the users mount option. The option is users (plural). For other filesystem types handled by mount, this option is usually user; sans the \"s\".\n\n"
    },
    {
      "title": "As systemd unit",
      "level": 4,
      "content": "Create a new .mount file inside /etc/systemd/system, e.g. mnt-myshare.mount. See systemd.mount(5) for details.\n\nWhat= path to share\n\nWhere= path to mount the share\n\nOptions= share mounting options\n\n- Network mount units automatically acquire After dependencies on remote-fs-pre.target, network.target and network-online.target, and gain a Before dependency on remote-fs.target unless nofail mount option is set. Towards the latter a Wants unit is added as well.\n- Append noauto to Options preventing automatically mount during boot (unless it is pulled in by some other unit).\n- If you want to use a hostname for the server you want to share (instead of an IP address), add nss-lookup.target to After. This might avoid mount errors at boot time that do not arise when testing the unit.\n\n```\n/etc/systemd/system/mnt-myshare.mount\n```\n\n```\n[Unit]\nDescription=Mount Share at boot\n\n[Mount]\nWhat=//server/share\nWhere=/mnt/myshare\nOptions=_netdev,credentials=/etc/samba/credentials/myshare,iocharset=utf8,rw\nType=cifs\nTimeoutSec=30\n\n[Install]\nWantedBy=multi-user.target\n```\n\n- In case of an unreachable system, append ForceUnmount=true to [Mount], allowing the share to be (force-)unmounted.\n- If your share has groups with read-only access, append uid=username or gid=group to Options=, to specify your user / group allowing writing to the share.\n\nTo use mnt-myshare.mount, start the unit and enable it to run on system boot.\n\nTo automatically mount a share (when accessed, like autofs), one may use the following automount unit:\n\n```\n/etc/systemd/system/mnt-myshare.automount\n```\n\n```\n[Unit]\nDescription=Automount myshare\n\n[Automount]\nWhere=/mnt/myshare\n\n[Install]\nWantedBy=multi-user.target\n```\n\nDisable/stop the mnt-myshare.mount unit, and enable/start mnt-myshare.automount to automount the share when the mount path is being accessed.\n\n"
    },
    {
      "title": "smbnetfs",
      "level": 4,
      "content": "First, check if you can see all the shares you are interested in mounting:\n\n```\n$ smbtree -U remote_user\n```\n\nIf that does not work, find and modify the following line in /etc/samba/smb.conf accordingly:\n\n```\ndomain master = auto\n```\n\nNow restart smb.service and nmb.service.\n\nIf everything works as expected, install smbnetfs.\n\nThen, add the following line to /etc/fuse.conf:\n\n```\nuser_allow_other\n```\n\nNow copy the directory /etc/smbnetfs/.smb to your home directory:\n\n```\n$ cp -a /etc/smbnetfs/.smb ~\n```\n\nThen create a link to smb.conf:\n\n```\n$ ln -sf /etc/samba/smb.conf ~/.smb/smb.conf\n```\n\nIf a username and a password are required to access some of the shared folders, edit ~/.smb/smbnetfs.auth to include one or more entries like this:\n\n```\n~/.smb/smbnetfs.auth\n```\n\n```\nauth\t\t\t\"hostname\" \"username\" \"password\"\n```\n\nIt is also possible to add entries for specific hosts to be mounted by smbnetfs, if necessary. More details can be found in ~/.smb/smbnetfs.conf.\n\nIf you are using the Dolphin or GNOME Files, you may want to add the following to ~/.smb/smbnetfs.conf to avoid \"Disk full\" errors as smbnetfs by default will report 0 bytes of free space:\n\n```\n~/.smb/smbnetfs.conf\n```\n\n```\nfree_space_size 1073741824\n```\n\nWhen you are done with the configuration, you need to run\n\n```\n$ chmod 600 ~/.smb/smbnetfs.*\n```\n\nOtherwise, smbnetfs complains about 'insecure config file permissions'.\n\nFinally, to mount your Samba network neighbourhood to a directory of your choice, call\n\n```\n$ smbnetfs mount_point\n```\n\nThe Arch Linux package also maintains an additional system-wide operation mode for smbnetfs. To enable it, you need to make the said modifications in the directory /etc/smbnetfs/.smb.\n\nThen, you can start and/or enable the smbnetfs daemon as usual. The system-wide mount point is at /mnt/smbnet/.\n\n"
    },
    {
      "title": "autofs",
      "level": 4,
      "content": "See Autofs for information on the kernel-based automounter for Linux.\n\n"
    },
    {
      "title": "GNOME Files, Nemo, Caja, Thunar and PCManFM",
      "level": 4,
      "content": "In order to access samba shares through GNOME Files, Nemo, Caja, Thunar or PCManFM, install the gvfs-smb package.\n\nPress Ctrl+l and enter smb://servername/share in the location bar to access your share.\n\nThe mounted share is likely to be present at /run/user/your_UID/gvfs or ~/.gvfs in the filesystem.\n\n"
    },
    {
      "title": "KDE",
      "level": 4,
      "content": "KDE applications (like Dolphin) has the ability to browse Samba shares built in. Use the path smb://servername/share to browse the files. If you want to access files from on non-KDE application, you can install kio-fuse.\n\nTo use a GUI in the KDE System Settings, you will need to install the kdenetwork-filesharing package.\n\n"
    },
    {
      "title": "Other graphical environments",
      "level": 4,
      "content": "There are a number of useful programs, but they may need to have packages created for them. This can be done with the Arch package build system. The good thing about these others is that they do not require a particular environment to be installed to support them, and so they bring along less baggage.\n\n- pyneighborhoodAUR\n- LinNeighborhood, RUmba, xffm-samba plugin for Xffm are not available in the official repositories or the AUR. As they are not officially (or even unofficially supported), they may be obsolete and may not work at all.\n\n"
    },
    {
      "title": "Discovering network shares",
      "level": 3,
      "content": "If nothing is known about other systems on the local network, and automated tools such as smbnetfs are not available, you can manually probe for Samba shares.\n\nFirst, install the nmap and smbclient packages.\n\nUse nmap to scan your local network to find systems with TCP port 445 open, which is the port used by the SMB protocol. Note that you may need to use -Pn or set a custom ping scan type (e.g. -PS445) because Windows systems are usually firewalled.\n\n```\n$ nmap -p 445 \"192.168.1.*\"\n```\n\n```\nStarting Nmap 7.92 ( https://nmap.org ) at 2022-03-13 12:00 UTC\nNmap scan report for 192.168.1.1\nHost is up (0.0011s latency).\n\nPORT    STATE  SERVICE\n445/tcp open  microsoft-ds\n\nNmap scan report for 192.168.1.2\nHost is up (0.00011s latency).\n\nPORT    STATE SERVICE\n445/tcp open  microsoft-ds\n\nNmap done: 256 IP addresses (2 hosts up) scanned in 2.45 seconds\n```\n\nThe first result is another system; the second happens to be the client from where this scan was performed.\n\nNow you can connect to their IP addresses directly, but if you want to use NetBIOS host names, you can use nmblookup(1) to check for NetBIOS names. Note that this will not work if NetBIOS is disabled on the server.\n\n```\n$ nmblookup -A 192.168.1.1\n```\n\n```\nLooking up status of 192.168.1.1\n        PUTER           <00> -         B <ACTIVE>\n        HOMENET         <00> - <GROUP> B <ACTIVE>\n        PUTER           <03> -         B <ACTIVE>\n        PUTER           <20> -         B <ACTIVE>\n        HOMENET         <1e> - <GROUP> B <ACTIVE>\n        USERNAME        <03> -         B <ACTIVE>\n        HOMENET         <1d> -         B <ACTIVE>\n        MSBROWSE        <01> - <GROUP> B <ACTIVE>\n```\n\nRegardless of the output, look for <20>, which shows the host with open services.\n\nUse smbclient(1) to list which services are shared on these systems. You can use NetBIOS host name (PUTER in this example) instead of IP when available. If prompted for a password, pressing enter should still display the list:\n\n```\n$ smbclient -L \\\\192.168.1.1\n```\n\n```\nSharename       Type      Comment\n---------       ----      -------\nMY_MUSIC        Disk\nSHAREDDOCS      Disk\nPRINTER$        Disk\nPRINTER         Printer\nIPC$            IPC       Remote Inter Process Communication\n\nServer               Comment\n---------            -------\nPUTER\n\nWorkgroup            Master\n---------            -------\nHOMENET               PUTER\n```\n\n"
    },
    {
      "title": "Remote control of Windows computer",
      "level": 3,
      "content": "Samba offers a set of tools for communication with Windows. These can be handy if access to a Windows computer through remote desktop is not an option, as shown by some examples.\n\nSend shutdown command with a comment:\n\n```\n$ net rpc shutdown -C \"comment\" -I IPADDRESS -U USERNAME%PASSWORD\n```\n\nA forced shutdown instead can be invoked by changing -C with comment to a single -f. For a restart, only add -r, followed by a -C or -f.\n\nStop and start services:\n\n```\n$ net rpc service stop SERVICENAME -I IPADDRESS -U USERNAME%PASSWORD\n```\n\nTo see all possible net rpc command:\n\n```\n$ net rpc\n```\n\n"
    },
    {
      "title": "Failed to start Samba SMB/CIFS server",
      "level": 3,
      "content": "Possible solutions:\n\n- Check smb.conf on syntactic errors with testparm(1).\n- Set correct permissions for /var/cache/samba/ and restart smb.service:\n\n```\n# chmod 0755 /var/cache/samba/msg\n```\n\n"
    },
    {
      "title": "Permission issues on SELinux",
      "level": 3,
      "content": "SELinux not allow samba to access user home directories by default, to solve this, run:\n\n```\n# setsebool -P samba_enable_home_dirs 1\n```\n\nSimilarly, samba_export_all_ro and samba_export_all_rw make Samba has the ability to read or \"read and write\" all files.\n\n"
    },
    {
      "title": "Permission issues on AppArmor",
      "level": 3,
      "content": "If using a share path located outside of a home or usershares directory, whitelist it in /etc/apparmor.d/local/usr.sbin.smbd. E.g.:\n\n```\n/etc/apparmor.d/local/usr.sbin.smbd\n```\n\n```\n\"/data/\" rk,\n\"/data/**\" lrwk,\n```\n\nAfter editing, reload the AppArmor profile:\n\n```\n# apparmor_parser -r /etc/apparmor.d/usr.sbin.smbd\n```\n\n"
    },
    {
      "title": "No dialect specified on mount",
      "level": 3,
      "content": "The client is using an unsupported SMB/CIFS version that is required by the server.\n\nSee #Restrict protocols for better security for more information.\n\n"
    },
    {
      "title": "Unable to overwrite files, permissions errors",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nPossible solutions:\n\n- Append the mount option nodfs to the /etc/fstab entry.\n- Add msdfs root = no to the [global] section of the server's /etc/samba/smb.conf.\n\n"
    },
    {
      "title": "Windows clients keep asking for password even if Samba shares are created with guest permissions",
      "level": 3,
      "content": "Set map to guest inside the global section of /etc/samba/smb.conf:\n\n```\nmap to guest = Bad Password\n```\n\nIf you are still using Samba < 4.10.10, use Bad User instead of Bad Password.\n\n"
    },
    {
      "title": "Windows 10 1709 and up connectivity problems - \"Windows cannot access\" 0x80004005",
      "level": 3,
      "content": "This error affects some machines running Windows 10 version 1709 and later. It is not related to SMB1 being disabled in this version but to the fact that Microsoft disabled insecure logons for guests on this version for some, but not others.\n\nTo fix, open Group Policy Editor (gpedit.msc). Navigate to Computer configuration\\administrative templates\\network\\Lanman Workstation > Enable insecure guest logons and enable it. Alternatively,change the following value in the registry:\n\n```\n[HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanWorkstation\\Parameters]\n\"AllowInsecureGuestAuth\"=dword:1\n```\n\n"
    },
    {
      "title": "Error: Failed to retrieve printer list: NT_STATUS_UNSUCCESSFUL",
      "level": 3,
      "content": "If you are a home user and using samba purely for file sharing from a server or NAS, you are probably not interested in sharing printers through it. If so, you can prevent this error from occurring by adding the following lines to your /etc/samba/smb.conf:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  load printers = No\n  printing = bsd\n  printcap name = /dev/null\n  disable spoolss = Yes\n```\n\nRestart the samba service, smb.service, and then check your logs:\n\n```\n# cat /var/log/samba/smbd.log\n```\n\nand the error should now no longer be appearing.\n\n"
    },
    {
      "title": "Sharing a folder fails",
      "level": 3,
      "content": "It means that while you are sharing a folder from Dolphin (file manager) and everything seems ok at first, after restarting Dolphin the share icon is gone from the shared folder, and also some output like this in terminal (Konsole) output:\n\n```\n‘net usershare’ returned error 255: net usershare: usershares are currently disabled\n```\n\nTo fix it, enable usershare as described in #Enable Usershares.\n\n"
    },
    {
      "title": "\"Browsing\" network fails with \"Failed to retrieve share list from server\"",
      "level": 3,
      "content": "And you are using a firewall (iptables) because you do not trust your local (school, university, hotel) network. This may be due to the following: When the smbclient is browsing the local network it sends out a broadcast request on udp port 137. The servers on the network then reply to your client but as the source address of this reply is different from the destination address iptables saw when sending the request for the listing out, iptables will not recognize the reply as being \"ESTABLISHED\" or \"RELATED\", and hence the packet is dropped. A possible solution is to add:\n\n```\niptables -t raw -A OUTPUT -p udp -m udp --dport 137 -j CT --helper netbios-ns\n```\n\nto your iptables setup.\n\nFor Uncomplicated Firewall, you need to add nf_conntrack_netbios_ns to the end of the following line in /etc/default/ufw\n\n```\nIPT_MODULES=\"nf_conntrack_ftp nf_nat_ftp nf_conntrack_irc nf_nat_irc\"\n```\n\nand then run the following commands as root:\n\n```\necho 1 > /proc/sys/net/netfilter/nf_conntrack_helper\nufw allow CIFS\nufw reload\n```\n\nTo make this change persistent across reboots, add the following line at the end of /etc/ufw/sysctl.conf:\n\n```\nnet.netfilter.nf_conntrack_helper=1\n```\n\n"
    },
    {
      "title": "Protocol negotiation failed: NT_STATUS_INVALID_NETWORK_RESPONSE",
      "level": 3,
      "content": "The client probably does not have access to shares. Make sure clients' IP address is in hosts allow = line in /etc/samba/smb.conf.\n\nAnother problem could be, that the client uses an invalid protocol version. To check this try to connect with the smbclient where you specify the maximum protocol version manually:\n\n```\n$ smbclient -U <user name> -L //<server name> -m <protocol version: e. g. SMB2> -W <domain name>\n```\n\nIf the command was successful then create a configuration file:\n\n```\n~/.smb/smb.conf\n```\n\n```\n[global]\n  workgroup = <domain name>\n  client max protocol = SMB2\n```\n\n"
    },
    {
      "title": "Connection to SERVER failed: (Error NT_STATUS_UNSUCCESSFUL)",
      "level": 3,
      "content": "You are probably passing a wrong server name to smbclient. To find out the server name, run hostnamectl on the server and look at \"Transient hostname\" line\n\n"
    },
    {
      "title": "Connection to SERVER failed: (Error NT_STATUS_CONNECTION_REFUSED)",
      "level": 3,
      "content": "Make sure that the server has started. The shared directories should exist and be accessible.\n\n"
    },
    {
      "title": "Protocol negotiation failed: NT_STATUS_CONNECTION_RESET",
      "level": 3,
      "content": "Probably the server is configured not to accept protocol SMB1. Add option client max protocol = SMB2 in /etc/samba/smb.conf. Or just pass argument -m SMB2 to smbclient.\n\n"
    },
    {
      "title": "Password Error when correct credentials are given (error 1326)",
      "level": 3,
      "content": "Samba 4.5 has NTLMv1 authentication disabled by default. It is recommend to install the latest available upgrades on clients and deny access for unsupported clients.\n\nIf you still need support for very old clients without NTLMv2 support (e.g. Windows XP), it is possible force enable NTLMv1, although this is not recommend for security reasons:\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  lanman auth = yes\n  ntlm auth = yes\n```\n\nIf NTLMv2 clients are unable to authenticate when NTLMv1 has been enabled, create the following file on the client:\n\n```\n/home/user/.smb/smb.conf\n```\n\n```\n[global]\n  sec = ntlmv2\n  client ntlmv2 auth = yes\n```\n\nThis change also affects samba shares mounted with mount.cifs. If after upgrade to Samba 4.5 your mount fails, add the sec=ntlmssp option to your mount command, e.g.\n\n```\nmount.cifs //server/share /mnt/point -o sec=ntlmssp,...\n```\n\nSee the mount.cifs(8) man page: ntlmssp - Use NTLMv2 password hashing encapsulated in Raw NTLMSSP message. The default in mainline kernel versions prior to v3.8 was sec=ntlm. In v3.8, the default was changed to sec=ntlmssp.\n\n"
    },
    {
      "title": "Mapping reserved Windows characters",
      "level": 3,
      "content": "Starting with kernel 3.18, the cifs module uses the \"mapposix\" option by default. When mounting a share using unix extensions and a default Samba configuration, files and directories containing one of the seven reserved Windows characters : \\ * < > ? are listed but cannot be accessed.\n\nPossible solutions are:\n\n- Use the undocumented nomapposix mount option for cifs\n\n```\n# mount.cifs //server/share /mnt/point -o nomapposix\n```\n\n- Configure Samba to remap mapposix (\"SFM\", Services for Mac) style characters to the correct native ones using fruit\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  vfs objects = catia fruit\n  fruit:encoding = native\n```\n\n- Manually remap forbidden characters using catia\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n  vfs objects = catia\n  catia:mappings = 0x22:0xf022, 0x2a:0xf02a, 0x2f:0xf02f, 0x3a:0xf03a, 0x3c:0xf03c, 0x3e:0xf03e, 0x3f:0xf03f, 0x5c:0xf05c, 0x7c:0xf07c, 0x20:0xf020\n```\n\nThe latter approach (using catia or fruit) has the drawback of filtering files with unprintable characters.\n\n"
    },
    {
      "title": "Folder shared inside graphical environment is not available to guests",
      "level": 3,
      "content": "This section presupposes:\n\n1. Usershares are configured following previous section\n1. A shared folder has been created as a non-root user from GUI\n1. Guests access has been set to shared folder during creation\n1. Samba service has been restarted at least once since last /etc/samba/smb.conf file modification\n\nFor clarification purpose only, in the following sub-sections is assumed:\n\n- Shared folder is located inside user home directory path (/home/yourUser/Shared)\n- Shared folder name is MySharedFiles\n- Guest access is read-only.\n- Windows users will access shared folder content without login prompt\n\n"
    },
    {
      "title": "Verify correct samba configuration",
      "level": 4,
      "content": "Run the following command from a terminal to test configuration file correctness:\n\n```\n$ testparm\n```\n\n"
    },
    {
      "title": "Verify correct shared folder creation",
      "level": 4,
      "content": "Run the following commands from a terminal:\n\n```\n$ cd /var/lib/samba/usershares\n$ ls\n```\n\nIf everything is fine, you will notice a file named mysharedfiles\n\nRead the file contents using the following command:\n\n```\n$ cat mysharedfiles\n```\n\nThe terminal output should display something like this:\n\n```\n/var/lib/samba/usershares/mysharedfiles\n```\n\n```\npath=/home/yourUser/Shared\ncomment=\nusershare_acl=S-1-1-0:r\nguest_ok=y\nsharename=MySharedFiles\n```\n\n"
    },
    {
      "title": "Verify folder access by guest",
      "level": 4,
      "content": "Run the following command from a terminal. If prompted for a password, just press Enter:\n\n```\n$ smbclient -L localhost\n```\n\nIf everything is fine, MySharedFiles should be displayed under Sharename column\n\nRun the following command in order to access the shared folder as guest (anonymous login)\n\n```\n$ smbclient -N //localhost/MySharedFiles\n```\n\nIf everything is fine samba client prompt will be displayed:\n\n```\nsmb: \\>\n```\n\nFrom samba prompt verify guest can list directory contents:\n\n```\nsmb: \\> ls\n```\n\nIf the NTFS_STATUS_ACCESS_DENIED error is displayed, the issue is likely to be with Unix directory permissions. Ensure that your samba user has access to the folder and all parent folders. You can test this by sudoing to the user and attempting to list the mount directory, and all of its parents.\n\n"
    },
    {
      "title": "Mount error: Host is down",
      "level": 3,
      "content": "This error might be seen when mounting shares of Synology NAS servers. Use the mount option vers=1.0 to solve it.\n\n"
    },
    {
      "title": "Software caused connection abort",
      "level": 3,
      "content": "File managers that utilizes gvfs-smb can show the error Software caused connection abort when writing a file to a share/server. This may be due to the server running SMB/CIFS version 1, which many routers use for USB drive sharing (e.g. Belkin routers). To write to these shares specify the CIFS version with the option vers=1.0. E.g.:\n\n```\n/etc/fstab\n```\n\n```\n//SERVER/sharename /mnt/mountpoint cifs _netdev,guest,file_mode=0777,dir_mode=0777,vers=1.0 0 0\n```\n\nThis can also happen after updating Samba to version 4.11, which deactivates SMB1 as default, and accessing any Samba share. You can reenable it by adding\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\nclient min protocol = CORE\n```\n\n"
    },
    {
      "title": "Connection problem (due to authentification error)",
      "level": 3,
      "content": "Be sure that you do not leave any space characters before your username in Samba client configuration file as follows:\n\n```\n~/.samba\n```\n\n```\nusername= user\npassword=pass\n```\n\nThe correct format is:\n\n```\n~/.samba\n```\n\n```\nusername=user\npassword=pass\n```\n\n"
    },
    {
      "title": "Windows 1709 or up does not discover the samba server in Network view",
      "level": 3,
      "content": "With Windows 10 version 1511, support for SMBv1 and thus NetBIOS device discovery was disabled by default. Depending on the actual edition, later versions of Windows starting from version 1709 (\"Fall Creators Update\") do not allow the installation of the SMBv1 client anymore. This causes hosts running Samba not to be listed in the Explorer's \"Network (Neighborhood)\" views. While there is no connectivity problem and Samba will still run fine, users might want to have their Samba hosts to be listed by Windows automatically. wsdd implements a Web Service Discovery host daemon. This enables (Samba) hosts, like your local NAS device, to be found by Web Service Discovery Clients like Windows. The default settings should work for most installations, all you need to do is start enable wsdd.service.\n\nIf the default configuration (advertise itself as the machine hostname in group \"WORKGROUP\") should be all you need in most cases. If you need, you can change configuration options by passing additional arguments to wsdd by adding them in /etc/conf.d/wsdd (see the manual page for wsdd for details).\n\nwsdd2AUR does the same thing, but is written in C instead of Python. By default, it will look for the netbios name and workgroup values in smb.conf.\n\n"
    },
    {
      "title": "GNOME Files not showing Windows machines (version 1709 or up) with shared folders in Network view",
      "level": 3,
      "content": "See GNOME/Files#Windows machines (version 1709 or up) with shared folders don't show up in Network view.\n\n"
    },
    {
      "title": "iOS/iPadOS Files can no longer copy-to Samba share on Arch Linux beginning with iOS/iPadOS 14.5",
      "level": 3,
      "content": "Beginning with iOS/iPadOS 14.5 attempting to transfer from a device running iOS/iPadOS using the \"Files\" app to a samba share on Arch Linux will result in the error:\n\n```\nThe operation couldn't be completed\nOperation canceled\n```\n\nTo correct this problem, add add the following to the global section of your smb.conf and restart smb.service. Comment optional:\n\n```\n## addition for iOS/iPadOS 14.5+ Files transfer-to server\nvfs object = fruit streams_xattr\n```\n\nSee https://apple.stackexchange.com/q/424681 Apple.Stackexchange.com - \"The operation couldn't be completed\"/\"Operation canceled\" error message when saving to a Samba share via Files app.\n\n"
    },
    {
      "title": "Slow initial connections from certain clients without other performance problems",
      "level": 3,
      "content": "Some SMB clients, such as Solid Explorer for Android, take significantly longer to connect to Samba if they fail to resolve the NetBIOS name. Enabling nmb.service will greatly speed up initial connections if this is the case. Since this is a bug in the client software, please report such cases to the authors of conflicting software.\n\n"
    },
    {
      "title": "CUPS managed printers are not listed",
      "level": 3,
      "content": "When Samba is configured to use CUPS for printing\n\n```\n/etc/samba/smb.conf\n```\n\n```\n[global]\n   printing = cups\n   printcap name = cups\n```\n\nAnd the following symptoms occur:\n\n- smbclient -N -L <localhost> does list any printers\n- smbclient -N <localhost>/Your_Printer_Name may return tree connect failed: NT_STATUS_BAD_NETWORK_NAME\n- /usr/libexec/samba/samba-bgqd is not running\n- /var/log/samba/smbd.<hostname> may contain the following entries. It's possible that the latest versions of samba do not use this file anymore\n\n```\n[2024/08/07 14:24:18.938740,  0] ../../source3/printing/printer_list.c:58(get_printer_list_db)\n  get_printer_list_db: Failed to open printer_list.tdb\n```\n\nA workaround is to launch /usr/libexec/samba/samba-bgqd manually (without parameters). Consider creating a systemd service to keep the binary running until the bug is fixed\n\nReference: Redhat Bug [1]\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official website\n- Samba: An Introduction\n- Samba 3.2.x HOWTO and Reference Guide (outdated but still most extensive documentation)\n- Wikipedia\n- Gentoo:Samba/Guide\n- Debian:Samba/ServerSimple\n- KSMBD - A linux kernel server which implements SMB3 protocol in kernel space for sharing files over network.\n\n"
    }
  ]
}