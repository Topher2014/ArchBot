{
  "title": "Android tethering",
  "url": "https://wiki.archlinux.org/title/Android_tethering",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Tethering is a way to have internet access on your PC through your smartphone using its network connection. USB tethering and Wi-Fi access point tethering are natively supported since Android 2.2 \"Froyo\". USB #Reverse tethering, to have internet access on your smartphone through your PC, is also possible.\n\n"
    },
    {
      "title": "USB tethering",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nUSB tethering is available since Android 2.2 \"Froyo\" and usually provides a more reliable connection than Wi-Fi while being faster than Bluetooth. Since USB tethering is a wired method, it also consumes less power then wireless methods for a comparable connectivity quality.\n\n- Connect the phone to your computer via USB (the USB connection mode -- Phone Portal, Memory Card or Charge only -- is not important, but please note that you will not be able to change the USB mode during tethering)\n- Enable the tethering option from your phone. This is usually done from one of: Settings > Wireless & networks > Internet tethering (or Tethering & portable hotspot, for more recent versions) Settings > More... > Tethering & mobile hotspot > USB tethering\n- Install the usb_modeswitch package. See Mobile broadband modem#Mode switching for more information.\n- Follow Network configuration.\n\n- Settings > Wireless & networks > Internet tethering (or Tethering & portable hotspot, for more recent versions)\n- Settings > More... > Tethering & mobile hotspot > USB tethering\n\nIf you are using a cellular data plan and you have recently entered a new billing period, you may need to restart your phone.\n\n"
    },
    {
      "title": "Using systemd-networkd with udev",
      "level": 4,
      "content": "Using systemd-networkd you can automatically adjust the networking to use the phone as the gateway when plugged in.\n\n```\n/etc/udev/rules.d/90-android-tethering.rules\n```\n\n```\n# Execute pairing program when appropriate\nACTION==\"add|remove\", SUBSYSTEM==\"net\", ATTR{idVendor}==\"18d1\" ENV{ID_USB_DRIVER}==\"rndis_host\", SYMLINK+=\"android\"\n```\n\nYou may have to adjust the idVendor attribute depending on your phone. You can check using udevadm:\n\n```\n$ udevadm info /sys/class/net/enp0s26u1u2\n```\n\nThen create the corresponding systemd-networkd file:\n\n```\n/etc/systemd/network/50-enp0s26u1u2.network\n```\n\n```\n[Match]\nName=enp0s26u1u2\n\n[Network]\nDHCP=yes\n```\n\n"
    },
    {
      "title": "Wi-Fi access point",
      "level": 3,
      "content": "Using an Android phone as a Wi-Fi access point (to a 3G/4G mobile internet connection) is available for devices running Android 2.2 \"Froyo\" or newer.\n\nEnable it via one of the following:\n\n- Settings > Wireless & networks > Internet tethering > Wi-Fi access point\n- Settings > More... > Tethering & mobile hotspot > Mobile Wi-Fi hotspot\n\n- On some phones, this method will discharge the battery rapidly and tends to cause intense heating, unlike USB.\n- On some phones, it is only possible to tether the mobile data and not \"bridge\" the Wi-Fi Signal.\n\n"
    },
    {
      "title": "Tethering via Bluetooth",
      "level": 3,
      "content": "Android (from at least 4.0 onwards, possibly earlier) can provide a Bluetooth personal-area network (PAN) in access point mode.\n\nNetworkManager can perform this action and handle the network initialisation itself; consult its documentation for more details.\n\nAlternatively: pair and ensure you can connect your computer and Android device, as described on Bluetooth, then, substituting the address of the Android device (here given as AA_BB_CC_DD_EE_FF), do:\n\n```\n$ dbus-send --system --type=method_call --dest=org.bluez /org/bluez/hci0/dev_AA_BB_CC_DD_EE_FF org.bluez.Network1.Connect string:'nap'\n```\n\nThis will create a network interface bnep0. Finally, configure a network connection on this interface; Android offers DHCP by default.\n\n"
    },
    {
      "title": "USB tethering with EasyTether",
      "level": 2,
      "content": "Get the easytether linux client software. The commands to set it up and run it are as follows.\n\n```\n# pacman -U easytether-0.8.5-2-x86_64.pkg.tar.xz\n# easytether-usb\n# dhcpcd tap-easytether\n```\n\nMake sure you have the EasyTether android app installed on your phone for it to connect to. Note: The Lite app disables some connections and you must have the paid app for full functionality. For this reason, using the AziLink setup is recommended instead.\n\n"
    },
    {
      "title": "Reverse tethering",
      "level": 2,
      "content": "Reverse tethering is to provide internet connection to Android through PC. gnirehtetAUR provides reverse tethering.\n\nConnect your phone to your computer via USB like mentioned above and start:\n\n```\n$ gnirehtet run\n```\n\n"
    },
    {
      "title": "Tethering with SOCKS proxy",
      "level": 2,
      "content": "With this method tethering is achieved by port forwarding from the phone to the PC. This is suitable only for browsing. For Firefox, you should set network.proxy.socks_remote_dns to true in about:config ( address bar )\n\n"
    },
    {
      "title": "Tools needed",
      "level": 3,
      "content": "- The android-tools and android-udev packages\n- USB connection cable from your phone to PC\n- Either Tetherbot, Proxoid, or Android Proxy Server\n\n"
    },
    {
      "title": "Tetherbot",
      "level": 4,
      "content": "Tetherbot is an experimental SOCKS proxy and Port Bouncer that should allow you to connect your laptop to the internet using the internet connection (EDGE, 3G or Wifi) of your T-Mobile G1 Cellphone. It is discontinued and its website is down, but still can be accessed from Wayback Machine[1] where its APK can also be downloaded from.\n\nIn order to do SOCKS proxy via Tetherbot to connect your browser to the Internet, do:\n\n1. For your phone, open the application Tetherbot, decline Phone & Storage permissions, and press the Start Socks button\n1. Forward the port to your local computer: # adb forward tcp:1080 tcp:1080\n1. Now go to your web browser's proxy settings, set a manual proxy configuration with the proxy host address localhost and port 1080, leaving the rest blank.\n\n```\n# adb forward tcp:1080 tcp:1080\n```\n\n"
    },
    {
      "title": "Proxoid",
      "level": 4,
      "content": "Follow the instructions demonstrated in the following link.\n\n"
    },
    {
      "title": "Android Proxy Server",
      "level": 4,
      "content": "Currently available on the Google Play store and supports HTTP/HTTPS, Socks5, Shadowsocks, and TCP Relay proxies.\n\nTo initiate a SOCKS proxy to connect your browser to the Internet, do:\n\n1. Open the app Android Proxy Server, and enable the Socks5 Proxy ticker\n1. Forward the port to your local computer: # adb forward tcp:1088 tcp:1088\n1. Now go to your web browser's proxy settings, set a manual proxy configuration with the proxy host address localhost and port 1088, leaving the rest blank.\n\n```\n# adb forward tcp:1088 tcp:1088\n```\n\n"
    }
  ]
}