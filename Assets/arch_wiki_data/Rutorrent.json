{
  "title": "Rutorrent",
  "url": "https://wiki.archlinux.org/title/Rutorrent",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- LAMP\n- RTorrent\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nruTorrent is a PHP frontend/web interface to rTorrent (a console based BitTorrent client). It uses rTorrent's built-in XML-RPC server to communicate with it.\n\nIt is lightweight, highly extensible, and is designed to look similar to uTorrent.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install rutorrentAUR from the AUR. If you want to use the development version install rutorrent-gitAUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "See upstream wiki here. By default the configuration files are symlinked to /etc/webapps/rutorrent/conf.\n\n"
    },
    {
      "title": "RPC Changes",
      "level": 3,
      "content": "As of rtorrent v0.15.2 and ruTorrent v5.1.7, you must now disable JSON-RPC and enable the httprpc plugin for ruTorrent to function.\n\nrtorrent.rc\n\n```\nnetwork.rpc.use_xmlrpc.set = true\nnetwork.rpc.use_jsonrpc.set = false\n```\n\nThe httprpc plugin should be enabled by default, but if you have disabled it in ruTorrent's plugins.ini, you must remove the lines, or add:\n\nplugins.ini\n\n```\n[httprpc]\nenabled = yes\n```\n\n"
    },
    {
      "title": "Web server configuration",
      "level": 2,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\n"
    },
    {
      "title": "Apache 2.4",
      "level": 3,
      "content": "Install and configure Apache with PHP according to the LAMP page.\n\n- Edit the open_basedir value in /etc/php/php.ini to include:\n\n```\n/etc/webapps/rutorrent/conf/:/usr/share/webapps/rutorrent/php/:/usr/share/webapps/rutorrent/\n```\n\n- Enable the rTorrent XMLRPC interface on UNIX socket : rTorrent#XMLRPC interface\n\n- Enable SCGI on the socket you chose for rTorrent by adding this to /etc/httpd/conf/httpd.conf:\n\n```\nProxyPass /RPC2 scgi:///path/to/rpc.socket\n```\n\n- Lastly, add the ruTorrent folder to /etc/httpd/conf/httpd.conf\n\nAs a directory alias\n\n```\n<IfModule alias_module>\n  Alias /rutorrent /usr/share/webapps/rutorrent\n  <Directory \"/usr/share/webapps/rutorrent\">\n    Require all granted\n  </Directory>\n</IfModule>\n```\n\nAs a VirtualHost\n\n```\n<VirtualHost *:80>\n  ServerName torrent.yourwebsite.com\n  DocumentRoot /usr/share/webapps/rutorrent\n  <Directory \"/usr/share/webapps/rutorrent\">\n     Options -Indexes -MultiViews\n     Require all granted\n     AllowOverride all\n  </Directory>\n</VirtualHost>\n```\n\n"
    },
    {
      "title": "Nginx",
      "level": 3,
      "content": "- Create a link from your web root to rutorrent\n\n```\nln -s /usr/share/webapps/rutorrent/ /usr/share/nginx/html/rutorrent\n```\n\n- Edit the open_basedir value in /etc/php/php.ini to include:\n\n```\n/etc/webapps/rutorrent/conf/:/usr/share/webapps/rutorrent/php/:/usr/share/webapps/rutorrent/\n```\n\n- Enable the rTorrent XMLRPC interface: rTorrent#XMLRPC interface\n\n- Edit the following location to your rutorrent configuration at /etc/webapps/rutorrent/conf/config.php where rtorrentuser is the user running rutorrent:\n\n```\n$scgi_port = 0;\n$scgi_host = \"unix:///home/rtorrentuser/rpc.socket\";\n```\n\nNote: A multi-user setup will need user specific configuration files under /usr/share/webapps/rutorrent/conf/users for each user's socket location. Create a folder with the user's name, then create a config.php, for example:\n\n```\n/usr/share/webapps/rutorrent/conf/users/rtorrentuser/config.php\n/usr/share/webapps/rutorrent/conf/users/anotheruser/config.php\n```\n\n- Restart nginx.service.\n\n- You can now access ruTorrent at http://127.0.0.1/rutorrent\n\n"
    },
    {
      "title": "Lighttpd",
      "level": 3,
      "content": "rtorrent should be compiled with XML-RPC support.\n\nAdd the following line to your rtorrent configuration file, usually ~/.rtorrent.rc.\n\n```\nscgi_port = 127.0.0.1:5050\n```\n\nInstead of using a tcp port, it may also be possible to use a socket using the scgi_local option instead, however lighttpd may complain about permissions regardless of permissions / location of socket file.\n\nYou can choose a port other than 5050 if you like.\n\n"
    },
    {
      "title": "lighttpd",
      "level": 4,
      "content": "Install Lighttpd and PHP: lighttpd php php-cgi fcgi.\n\nAfter starting lighttpd as per the wiki, you should be able to access the test page at http://localhost:80.\n\nBy default the pages are served from /srv/http, this is where we will be putting rutorrent.\n\nEdit lighttpd's configuration file, /etc/lighttpd/lighttpd.conf.\n\nThe following lines tell lighttpd to load the fastcgi and simple-cgi modules. Fast cgi is needed for rutorrent itself, and scgi for rutorrent to communicate with rtorrent.\n\n```\nserver.modules += ( \"mod_fastcgi\" )\nserver.modules += ( \"mod_scgi\" )\n```\n\nWe need to tell lighttpd how to treat files like css, images (jpg etc.), js. Otherwise it will not know what to do with them, and you may get a dialog to download the file or rutorrent will just not work properly.\n\nHere is a long list of filetypes, it is probably overkill as most of them are not needed, but easier to cover them all.\n\n```\n/etc/lighttpd/lighttpd.conf\n```\n\n```\nmimetype.assign             = (\n      \".rpm\"          =>      \"application/x-rpm\",\n      \".pdf\"          =>      \"application/pdf\",\n      \".sig\"          =>      \"application/pgp-signature\",\n      \".spl\"          =>      \"application/futuresplash\",\n      \".class\"        =>      \"application/octet-stream\",\n      \".ps\"           =>      \"application/postscript\",\n      \".torrent\"      =>      \"application/x-bittorrent\",\n      \".dvi\"          =>      \"application/x-dvi\",\n      \".gz\"           =>      \"application/x-gzip\",\n      \".pac\"          =>      \"application/x-ns-proxy-autoconfig\",\n      \".swf\"          =>      \"application/x-shockwave-flash\",\n      \".tar.gz\"       =>      \"application/x-tgz\",\n      \".tgz\"          =>      \"application/x-tgz\",\n      \".tar\"          =>      \"application/x-tar\",\n      \".zip\"          =>      \"application/zip\",\n      \".mp3\"          =>      \"audio/mpeg\",\n      \".m3u\"          =>      \"audio/x-mpegurl\",\n      \".wma\"          =>      \"audio/x-ms-wma\",\n      \".wax\"          =>      \"audio/x-ms-wax\",\n      \".ogg\"          =>      \"application/ogg\",\n      \".wav\"          =>      \"audio/x-wav\",\n      \".gif\"          =>      \"image/gif\",\n      \".jar\"          =>      \"application/x-java-archive\",\n      \".jpg\"          =>      \"image/jpeg\",\n      \".jpeg\"         =>      \"image/jpeg\",\n      \".png\"          =>      \"image/png\",\n      \".xbm\"          =>      \"image/x-xbitmap\",\n      \".xpm\"          =>      \"image/x-xpixmap\",\n      \".xwd\"          =>      \"image/x-xwindowdump\",\n      \".css\"          =>      \"text/css\",\n      \".html\"         =>      \"text/html\",\n      \".htm\"          =>      \"text/html\",\n      \".js\"           =>      \"text/javascript\",\n      \".asc\"          =>      \"text/plain\",\n      \".c\"            =>      \"text/plain\",\n      \".cpp\"          =>      \"text/plain\",\n      \".log\"          =>      \"text/plain\",\n      \".conf\"         =>      \"text/plain\",\n      \".text\"         =>      \"text/plain\",\n      \".txt\"          =>      \"text/plain\",\n      \".dtd\"          =>      \"text/xml\",\n      \".xml\"          =>      \"text/xml\",\n      \".mpeg\"         =>      \"video/mpeg\",\n      \".mpg\"          =>      \"video/mpeg\",\n      \".mov\"          =>      \"video/quicktime\",\n      \".qt\"           =>      \"video/quicktime\",\n      \".avi\"          =>      \"video/x-msvideo\",\n      \".asf\"          =>      \"video/x-ms-asf\",\n      \".asx\"          =>      \"video/x-ms-asf\",\n      \".wmv\"          =>      \"video/x-ms-wmv\",\n      \".bz2\"          =>      \"application/x-bzip\",\n      \".tbz\"          =>      \"application/x-bzip-compressed-tar\",\n      \".tar.bz2\"      =>      \"application/x-bzip-compressed-tar\",\n      # default mime type\n      \"\"              =>      \"application/octet-stream\",\n     )\n```\n\nNext we add the configuration for scgi to connect to rtorrent. Make sure to use the same port as when configuring rtorrent.\n\n```\nscgi.server = ( \"/RPC2\" =>\n    ( \"127.0.0.1\" =>\n        (\n            \"host\" => \"127.0.0.1\",\n            \"port\" => 5050,\n            \"check-local\" => \"disable\"\n        )\n    )\n)\n```\n\nAnd finally the fastcgi settings so lighttpd knows how to deal with php.\n\n```\nfastcgi.server = ( \".php\" => ((\n                 \"bin-path\" => \"/usr/bin/php-cgi\",\n                 \"socket\" => \"/tmp/php.socket\"\n)))\n```\n\nAt this point, you should be able to test if rtorrent and lighttpd's scgi are working properly using the xmlrpc command to ask rtorrent for a list of functions. ( See https://github.com/rakshasa/rtorrent/wiki/RPC-Setup-XMLRPC#test-and-usage ).\n\n```\n$ xmlrpc localhost system.listMethods\n```\n\nThis should output a log list of methods that can be accessed through rtorrent's scgi interface. If it does not then something may be wrong. If you get error 500 (internal server error), make sure rTorrent is running.\n\nWe need to make a small change to the open_basedir line in /etc/php/php.ini, to allow rutorrent to access the binaries it needs to run.\n\n```\nopen_basedir = /srv/http/:/home/:/tmp/:/usr/share/pear/:/usr/bin\n```\n\nThe binaries are stat, id, php, curl, gzip. If these are installed somewhere other than /usr/bin, then you may need to append that to the line also.\n\n"
    },
    {
      "title": "rutorrent",
      "level": 4,
      "content": "Create a link from your web root to rutorrent\n\n```\nln -s /usr/share/webapps/rutorrent/ /srv/http/rutorrent\n```\n\nWe need to edit /srv/http/rutorrent/conf/config.php, and change the port to the one we used in rtorrent and lighttpd.\n\n```\n$scgi_port = 5050;\n$scgi_host = \"127.0.0.1\";\n```\n\n"
    },
    {
      "title": "Testing",
      "level": 4,
      "content": "rutorrent should now be set up.\n\nStart rtorrent, and restart lighttpd if you have not done so since changing the configuration.\n\nYou should now be able to access the rutorrent interface on localhost or 127.0.0.1 on port 80 (assuming you did not change the default port for lighttpd).\n\nhttp://localhost\n\n"
    },
    {
      "title": "Plugins",
      "level": 4,
      "content": "To install plugins for rutorrent, download the archive of the plugin you want and extract to rutorrent's plugin directory.\n\n```\n/srv/http/rutorrent/plugins\n```\n\nPlugins can be found on the rutorrent website: https://code.google.com/p/rutorrent/wiki/Plugins\n\n"
    },
    {
      "title": "SSL and authentication",
      "level": 4,
      "content": "Detailed information on the different authentication methods can be found here: https://redmine.lighttpd.net/projects/1/wiki/Docs_ModAuth\n\nIn this example we will digest authentication with htdigest method.\n\nIn your lighttpd directory, we will create a file called lighttpd-htdigest.user or some other filename of your choice to hold the passwords.\n\nFor htdigest, the format of the lines is:\n\n```\nusername:Realm:hash\n```\n\nUsername is your desired username, Realm is a name you chose to give to the access level. Hash is an md5sum of a string that looks like:\n\n```\nusername:Realm:password\n```\n\nSo your actual password is not stored in the file, it just contributes to the md5sum.\n\nSo using username: 'tom', Realm: 'rtorrent' and password: 'secret_pass', we can obtain the hash by running:\n\n```\n$ echo -n \"tom:rtorrent:secret_pass\" | md5sum | cut -b -32\n   6a4aaa1091eb2d1d025bbd692dee3f0c\n```\n\n-n tells echo not to print a newline, the cut command takes just the first 32 bytes so we do not get the dash at the end.\n\nSo now save the hash in a variable by running:\n\n```\n$ hash=$(echo -n \"tom:rtorrent:secret_pass\" | md5sum | cut -b -32)\n   $ echo $hash\n   6a4aaa1091eb2d1d025bbd692dee3f0c\n```\n\nNow save it to our password file:\n\n```\n# echo \"tom:rtorrent:$hash\" > /etc/lighttpd/lighttpd-htdigest.user\n```\n\nYou can use any file name you like, just add the same file to lighttpd.conf.\n\nIf root as owner of this file does not work, try http:\n\n```\n# chown http /etc/lighttpd/lighttpd-htdigest.user\n# chmod 400 /etc/lighttpd/lighttpd-htdigest.user\n```\n\nNow we will change /etc/lighttpd/lighttpd.conf to tell it to use this password file for anytime rutorrent is accessed.\n\nAdd the following lines:\n\n```\nserver.modules += ( \"mod_auth\" )\n   auth.debug = 0\n   auth.backend = \"htdigest\"\n   auth.backend.htdigest.userfile = \"/etc/lighttpd/lighttpd-htdigest.user\"\n```\n\n```\nauth.require = ( \"/rutorrent/\" => (\n                    \"method\"  => \"digest\",\n                    \"realm\"   => \"rtorrent\",\n                    \"require\" => \"valid-user\"\n                  ))\n```\n\nRestart lighttpd, and it should now require you to enter your username and password when you reload rutorrent.\n\nRestart lighttpd.service.\n\nSee Lighttpd#Enabling https via SSL. The following resources can help you add ssl to lighttpd [1][2].\n\nIf you just want to get it working, the following commands should work.\n\nCreate pem file:\n\n```\n# mkdir /etc/lighttpd/certs\n# openssl req -new -x509 -newkey rsa:2048 -keyout /etc/lighttpd/certs/lighttpd.pem -out /etc/lighttpd/certs/lighttpd.pem -days 730 -nodes\n```\n\nThen add the following lines to /etc/lighttpd/lighttpd.conf (remove '#' comments if you still want plain http enabled:\n\n```\n#$SERVER[\"socket\"] == \":443\" {\n        ssl.engine = \"enable\"\n        ssl.pemfile = \"/etc/lighttpd/certs/lighttpd.pem\"\n   #}\n```\n\nAnd change this line from 80 to 443 (if you only want ssl enabled):\n\n```\nserver.port     = 443\n```\n\nThen https should work, and depending on what you changed, http may not work anymore.\n\nNote: This cert is not signed by a Certificate Authority, so you will have to add an exception in Firefox.\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 4,
      "content": "For problems with rutorrent or lighttpd, the best place to check first is probably the lighttpd log files, in /var/log/lighttpd/, particularly error.log.\n\n```\n$ tail /var/log/lighttpd/error.log\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://github.com/Novik/ruTorrent/wiki\n- https://httpd.apache.org/docs/2.2/configuring.html\n\n"
    }
  ]
}