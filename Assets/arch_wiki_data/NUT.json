{
  "title": "NUT",
  "url": "https://wiki.archlinux.org/title/NUT",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- APC UPS\n\nThis document describes how to install the Network UPS Tools (NUT). Network UPS Tools is compatible with thousands of models of UPS. You can check the Hardware Compatibility List to see if your UPS is supported.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the nut package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "NUT has 3 daemons associated with it:\n\n- The driver which communicates with the UPS.\n- A server (upsd) which uses the driver to report the status of the UPS.\n- A monitoring daemon (upsmon) which monitors the upsd server and takes action based on information it receives.\n\nThe idea is that if you have multiple systems connected to the UPS, one can communicate the status of the UPS over the network and the others can monitor that status by running their own upsmon services. NUT has extensive documentation on the configuration however this is going to walk through a simple setup of a USB UPS and the associated server and monitor all in one system (common desktop configuration).\n\n"
    },
    {
      "title": "Driver configuration",
      "level": 3,
      "content": "The configuration here will depend on the type of UPS you have. Consult the previously mentioned Hardware Compatibility List to find what driver will likely work for your UPS. You can run the tool nut-scanner(8) which will detect NUT-compatible devices attached to your system.\n\nFor many UPS connected by USB, use the usbhid-ups(8) driver. For UPS with serial port, use port=/dev/ttySX, where X is the number of serial port (Example: /dev/ttyS1). For UPS with USB port, use port=auto.\n\n```\n/etc/nut/ups.conf\n```\n\n```\n...\n[upsname]\n    driver = usbhid-ups\n    port = auto\n```\n\nYou can name the UPS device whatever you like. ups.conf(5)\n\nStart the driver as root with upsdrvctl start. If there are no errors, you should see a message like this one for the driver usbhid-ups:\n\n```\n# upsdrvctl start\n```\n\n```\nNetwork UPS Tools - Generic HID driver 0.34 (2.4.1)\nUSB communication driver 0.31\nUsing subdriver: MGE HID 1.12\nDetected EATON - Ellipse MAX 1100 [ADKK22008]\n```\n\nIf the driver does not start cleanly, make sure you have picked the right one for your hardware. You might need to try other drivers by changing the driver= value in ups.conf.\n\nAt this point you should be able to start/enable nut-driver-enumerator.service which will automatically create nut-driver@<ups name> systemd service instance and start it.\n\n"
    },
    {
      "title": "Can't claim USB device error",
      "level": 4,
      "content": "If you receive an error message like this one:\n\n```\nCan't claim USB device [XXXX:YYYY]: could not detach kernel driver from\ninterface 0: Operation not permitted\nDriver failed to start (exit status=1)\n```\n\nOr a less specific one:\n\n```\nUSB communication driver 0.33\nNo matching HID UPS found\nDriver failed to start (exit status=1)\n```\n\nIt is most likely a problem with permissions for accessing the device. You can fix that by specifying an udev rule that sets the correct group:\n\n```\n/etc/udev/rules.d/50-ups.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"XXXX\", ATTR{idProduct}==\"YYYY\", GROUP=\"nut\"\n```\n\nWhere XXXX and YYYY are the device manufacturer and product IDs. You can see these either in the error output ([XXXX:YYYY]) or by using lsusb.\n\nAfter this is done, reload and retrigger udev rules by running:\n\n```\n# udevadm control --reload\n# udevadm trigger\n```\n\n"
    },
    {
      "title": "upsd configuration",
      "level": 3,
      "content": "By default upsd listens only on localhost tcp/3493 and this is fine for our purpose. Though it is not necessary for following this guide, you can configure upsd beyond the defaults by editing /etc/nut/upsd.conf. See upsd.conf(5).\n\nYou will need to add a user for a monitor to connect to the server and issue commands. See upsd.users(5).\n\n```\n/etc/nut/upsd.users\n```\n\n```\n...\n[upsuser]\n     password = password\n     upsmon primary\n     actions = SET\n     instcmds = ALL\n```\n\nAt this point you should be able to start/enable nut-server.service.\n\nIf it has started successfully, you can run upsc upsname to get information from the UPS. Example output from the command:\n\n```\nbattery.charge: 100\nbattery.charge.low: 10\nbattery.charge.warning: 20\nbattery.mfr.date: CPS\nbattery.runtime: 5550\nbattery.runtime.low: 300\nbattery.type: PbAcid\nbattery.voltage: 13.5\nbattery.voltage.nominal: 12\ndevice.mfr: CPS\ndevice.model: UPS CP1000AVRLCD\ndevice.type: ups\ndriver.name: usbhid-ups\ndriver.parameter.pollfreq: 30\ndriver.parameter.pollinterval: 2\ndriver.parameter.port: auto\ndriver.parameter.synchronous: no\ndriver.version: 2.7.4\ndriver.version.data: CyberPower HID 0.4\ndriver.version.internal: 0.41\ninput.transfer.high: 140\ninput.transfer.low: 90\ninput.voltage: 122.0\ninput.voltage.nominal: 120\noutput.voltage: 122.0\nups.beeper.status: disabled\nups.delay.shutdown: 20\nups.delay.start: 30\nups.load: 0\nups.mfr: CPS\nups.model: UPS CP1000AVRLCD\nups.productid: 0501\nups.realpower.nominal: 600\nups.status: OL\nups.test.result: Done and passed\nups.timer.shutdown: -60\nups.timer.start: 0\nups.vendorid: 0764\n```\n\n"
    },
    {
      "title": "upsmon configuration",
      "level": 3,
      "content": "The last step is to configure upsmon to listen to upsd and take action on events.\n\nAdd the following line to /etc/nut/upsmon.conf:\n\n```\nMONITOR upsname@localhost 1 upsduser password primary\n```\n\nHere upsname is the name of the UPS, and upsduser and password is the user and its password you set in /etc/nut/upsd.users.\n\nYou can also configure what alerts are sent, where they are sent, what action is taken when the battery is low, and more. See upsmon.conf(5).\n\nThen start/enable nut-monitor.service.\n\nYour logs should show upsmon starting and monitoring the UPS.\n\n"
    },
    {
      "title": "systemd targets",
      "level": 3,
      "content": "In order for the systemd service units to start on boot, you must enable nut.target and nut-driver.target.\n\n"
    },
    {
      "title": "NUT-Monitor",
      "level": 2,
      "content": "NUT-Monitor is a graphical user interface to monitor and manage devices connected to the Network UPS Tools server.\n\nYou can install nut-monitor with the nut-monitorAUR package.\n\n"
    },
    {
      "title": "CyberPower UPS keeps disconnecting/reconnecting",
      "level": 3,
      "content": "Some CyberPower UPS products are known to keep disconnecting/reconnecting until the driver successfully attaches to it [1]. Once the disconnect/reconnect loop starts, it can be difficult for upsd to establish connection to the UPS using default configuration (which appears to impact the proprietary driver as well).\n\nTo mitigate this issue, edit nut-driver@.service, add the following configuration, then start/enable nut-driver@cyberpower.service.\n\n```\n/etc/systemd/system/nut-driver@.service.d/override.conf\n```\n\n```\n[Unit]\nStopWhenUnneeded=no\n\n[Service]\nPIDFile=/run/nut/usbhid-ups-cyberpower.pid\nGroup=nut\nUser=nut\nRestartSec=10s\n```\n\nAdditionally, consider using maxretry in UPS configuration:\n\n```\n/etc/nut/ups.conf\n```\n\n```\nmaxretry = 5\n\n[cyberpower]\n        driver = \"usbhid-ups\"\n        port = \"auto\"\n        ...\n```\n\n"
    },
    {
      "title": "EATON 5E650iUSB fails to start driver",
      "level": 3,
      "content": "According to an issue on GitHub, there is a bug in the kernel and the following kernel parameter can be used as a workaround:\n\n```\nusbhid.quirks=0x0463:0xffff:0x08\n```\n\n"
    },
    {
      "title": "Can't claim USB device: Entity not found",
      "level": 3,
      "content": "When getting the following error from nut-driver:\n\n```\nCan't claim USB device [XXXX:XXXX]@0/0/0: Entity not found\n```\n\nSeveral users report (example [2]) that rebooting (power-cycling) the UPS can fix this issue.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Tutorial on networked NUT for Cyberpower UPS\n\n"
    }
  ]
}