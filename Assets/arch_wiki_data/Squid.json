{
  "title": "Squid",
  "url": "https://wiki.archlinux.org/title/Squid",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nSquid is a caching proxy for HTTP, HTTPS and FTP, providing extensive access controls.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "- HTTPS is already being used for ~80% (and increasing) of the internet traffic for which Squid cannot cache unless #SSL Bumping is enabled.\n- \"Your clients will be capable of identifying the proxy exists. If you are looking for a way to do it in complete secrecy, dont use Squid.\" - Squid official website\n\nInstall the squid package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "By default, the cache directories will be created in /var/cache/squid, and the appropriate permissions set up for those directories. However, for greater control, we need to delve into /etc/squid/squid.conf.\n\nThe following options might be of some use to you. If you do not have the option present in your configuration file, add it!\n\n- http_port - Sets the port that Squid binds to on your local machine. You can have Squid bind to multiple ports by specifying multiple http_port lines. By default, Squid binds to port 3128.\n\n```\nhttp_port 3128\nhttp_port 3129\n```\n\n- http_access - This is an access control list for who is allowed to use the proxy. By default only localhost is allowed to access the proxy. For testing purposes, you may want to change the option http_access deny all to http_access allow all, which will allow anyone to connect to your proxy. If you wanted to just allow access to your subnet, you can do:\n\n```\nacl ip_acl src 192.168.1.0/24\nhttp_access allow ip_acl\nhttp_access deny all\n```\n\n- cache_mgr - This is the email address of the cache manager.\n\n```\ncache_mgr squid.admin@example.com\n```\n\n- shutdown_lifetime - Specifies how long Squid should wait when its service is asked to stop. If you are running squid on your desktop PC, you may want to set this to something short.\n\n```\nshutdown_lifetime 10 seconds\n```\n\n- cache_mem - This is how much memory you want Squid to use to keep objects in memory rather than writing them to disk. Squid's total memory usage will exceed this! By default this is 8MB, so you might want to increase it if you have lots of RAM available.\n\n```\ncache_mem 64 MB\n```\n\n- visible_hostname - hostname that will be shown in status/error messages\n\n```\nvisible_hostname cerberus\n```\n\n- cache_peer - If you want your Squid to go through another proxy server, rather than directly out to the Internet, you need to specify it here.\n- login - Use this option if the parent proxy requires authentication.\n- never_direct - Tells the cache to never go direct to the internet to retrieve a page. You will want this if you have set the option above.\n\n```\ncache_peer 10.1.1.100 parent 8080 0 no-query default login=user:password\nnever_direct allow all\n```\n\n- maximum_object_size - The largest size of a cached object. By default this is 4 MB, so if you have a lot of disk space you will want to increase the size of it to something reasonable.\n\n```\nmaximum_object_size 10 MB\n```\n\n- cache_dir - This is your cache directory, where all the cached files are stored. There are many options here, but the format should generally go like:\n\n```\ncache_dir <storage type> <directory> <size in MB> 16 256\n```\n\nSo, in the case of a school's internet proxy:\n\n```\ncache_dir diskd /cache0 200000 16 256\n```\n\nIf you change the cache directory from defaults, you must set the correct permissions on the cache directory before starting Squid, else it will not be able to create its cache directories and will fail to start.\n\n"
    },
    {
      "title": "Accessing services on local hostnames",
      "level": 2,
      "content": "If you plan to access web servers on the LAN using hostnames that are not fully-defined (e.g. http://mywebapp), you may need to enable the dns_defnames option. Without this option, Squid will make a DNS request for the hostname verbatim (mywebapp), which may fail, depending on your LAN's DNS setup. With the option enabled, Squid will append any domain configured in /etc/resolv.conf when making the request (e.g. mywebapp.company.local).\n\n```\ndns_defnames on\n```\n\n"
    },
    {
      "title": "Starting",
      "level": 2,
      "content": "Once you have finished your configuration, you should check that your configuration file is correct:\n\n```\n# squid -k check\n```\n\nThen create your cache directories:\n\n```\n# squid -z\n```\n\nThen you can start/enable squid.service.\n\n"
    },
    {
      "title": "Content Filtering",
      "level": 2,
      "content": "If you are looking for a content filtering solution, see Privoxy.\n\n"
    },
    {
      "title": "Frontend",
      "level": 2,
      "content": "If you would like a web-based frontend for managing Squid, Webmin is your best bet.\n\n"
    },
    {
      "title": "Squid 4.x not supported in Webmin",
      "level": 3,
      "content": "If you receive an error indicating your version of webmin is unsupported:\n\n```\nYour version of Squid is not supported by Webmin. Only versions from 1.1 to 3.4 are supported by this module.\n```\n\nyou will need to modify the file /opt/webmin/squid/index.cgi (see issue #952)\n\n"
    },
    {
      "title": "Ad blocking with adzapper",
      "level": 2,
      "content": "Adzapper is a plugin for Squid. It catches ads of all sorts (even Flash animations) and replaces them with an image of your choice, so the layout of the page is not altered very much.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "AdZapper is not presently in the official repositories or the AUR. The script itself, and detailed information on configuration and usage, can be found at https://adzapper.sourceforge.net.\n\n"
    },
    {
      "title": "Configuration",
      "level": 3,
      "content": "```\necho \"redirect_program /usr/bin/adzapper.wrapper\" >> /etc/squid/squid.conf\n```\n\n(squid 2.6.STABLE13-1)\n\n```\necho \"url_rewrite_program /usr/bin/adzapper.wrapper\" >> /etc/squid/squid.conf\necho \"url_rewrite_children 10\" >> /etc/squid/squid.conf\n```\n\nIf you want, you can edit /etc/adzapper/adzapper.conf to configure adzapper to your liking. The configuration out of the box works wonderfully well though.\n\n"
    },
    {
      "title": "Transparent web proxy",
      "level": 2,
      "content": "Transparency happens by redirecting all www requests eth0 picks up, to Squid. You will need to add a port with an intercept (for squid 3.2) parameter. Note that at least one port must be available without the intercept parameter:\n\n```\nhttp_port 3128\n http_port 3129 intercept\n```\n\nAnd for TLS:\n\n```\nhttps_port 3130 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/etc/squid/squidCA.pem\n acl step1 at_step SslBump1\n ssl_bump peek step1\n ssl_bump splice all\n # workaround for some sites\n client_persistent_connections off\n server_persistent_connections off\n```\n\n"
    },
    {
      "title": "iptables",
      "level": 3,
      "content": "From a terminal with root privileges, run:\n\n```\n# gid=`id -g proxy`\n# iptables -t nat -A OUTPUT -p tcp --dport 80 -m owner --gid-owner $gid -j ACCEPT\n# iptables -t nat -A OUTPUT -p tcp --dport 80 -j DNAT --to-destination SQUIDIP:3129\n# iptables -t nat -A OUTPUT -p tcp --dport 443 -j DNAT --to-destination SQUIDIP:3130\n# iptables-save > /etc/iptables/iptables.rules\n```\n\nThen start the iptables.service systemd unit.\n\nReplace SQUIDIP with the public IP(s) which squid may use for its listening port and outbound connections.\n\n"
    },
    {
      "title": "Shorewall",
      "level": 3,
      "content": "Edit /etc/shorewall/rules and add\n\n```\nREDIRECT\tloc\t3129\ttcp\twww # redirect to Squid on port 3128\nACCEPT\t\t$FW\tnet\ttcp\twww # allow Squid to fetch the www content\n```\n\nRestart the shorewall systemd unit.\n\n"
    },
    {
      "title": "HTTP Authentication",
      "level": 2,
      "content": "Squid can be configured to require a user and password in order to use it. We will use digest http auth\n\nFirst create a users file with htdigest -c /etc/squid/users MyRealm username. Enter a password when prompted.\n\nThen add these lines to your squid.conf:\n\n```\nauth_param digest program /usr/lib/squid/digest_file_auth -c /etc/squid/users\n   auth_param digest children 5\n   auth_param digest realm MyRealm\n   \n   acl users proxy_auth REQUIRED\n   http_access allow users\n```\n\nAnd restart squid. Now you will be prompted to enter a username and password when accessing the proxy.\n\nYou can add more users with htdigest /etc/squid/users MyRealm newuser. You probably would like to install Apache package, which contains htdigest tool.\n\n"
    },
    {
      "title": "NTLM",
      "level": 3,
      "content": "Set up samba and winbindd and test it with\n\n```\nntlm_auth --username=DOMAIN\\\\user\n```\n\nGrant r-x access to /var/cache/samba/winbindd_privileged/ directory for squid user/group\n\nThen add something like this to squid.conf:\n\n```\nauth_param ntlm program /usr/bin/ntlm_auth --helper-protocol=squid-2.5-ntlmssp\n auth_param ntlm children 5\n auth_param ntlm max_challenge_reuses 0\n auth_param ntlm max_challenge_lifetime 2 minutes\n auth_param ntlm keep_alive off\n```\n\n```\nacl ntlm_users proxy_auth REQUIRED\n http_access allow ntlm_users\n http_access deny all\n```\n\n"
    },
    {
      "title": "Hide Browserâ€™s Real IP Address",
      "level": 2,
      "content": "Reference: Squid Proxy Hide Systemâ€™s Real IP Address\n\n```\n/etc/squid/squid.conf\n```\n\n```\n# Hide client ip\nforwarded_for delete\n \n# Turn off via header\nvia off\n \n# Deny request for original source of a request\nfollow_x_forwarded_for deny all\nrequest_header_access X-Forwarded-For deny all\n```\n\n"
    },
    {
      "title": "SSL Bumping",
      "level": 2,
      "content": "Reference: Intercept HTTPS CONNECT messages with SSL-Bump\n\n"
    },
    {
      "title": "Create Self-Signed Root CA Certificate",
      "level": 3,
      "content": "cd /etc/squid\n\n```\nopenssl req -new -newkey rsa:2048 -sha256 -days 3650 -nodes -x509 -extensions v3_ca -keyout myCA.pem -out myCA.pem\n```\n\n```\nGenerating a 2048 bit RSA private key                                                                                                                                                               \n.....+++                                                                                                                                                                                            \n.............................................................................................................................................+++                                                    \nwriting new private key to 'myCA.pem'                                                                                                                                                               \n                                                                                                                                                                                               \nYou are about to be asked to enter information that will be incorporated                              \ninto your certificate request.                                                                                                                                                                       \nWhat you are about to enter is what is called a Distinguished Name or a DN.                                                                                                                          \nThere are quite a few fields but you can leave some blank                                                                                                                                            \nFor some fields there will be a default value,                                                                                                                                                       \nIf you enter '.', the field will be left blank.                                                                                                                                                      \n                                                                                                                                                                                        \nCountry Name (2 letter code) [AU]:US\nState or Province Name (full name) [Some-State]:Illinois\nLocality Name (eg, city) []:Chicago\nOrganization Name (eg, company) [Internet Widgits Pty Ltd]:Example Company LTD.\nOrganizational Unit Name (eg, section) []:Information Technology\nCommon Name (e.g. server FQDN or YOUR name) []:Example Company LTD.\nEmail Address []:\n```\n\n"
    },
    {
      "title": "Create a DER-encoded certificate to import into users' browsers",
      "level": 3,
      "content": "openssl x509 -in myCA.pem -outform DER -out myCA.der\n\nThe result file (myCA.der) should be imported into the 'Authorities' section of users' browsers. For example, in FireFox:\n\n```\nOpen 'Preferences'\n   Go to the 'Privacy and Security' section\n   Press the 'View Certificates' button and go to the 'Authorities' tab\n   Press the 'Import' button, select the .der file that was created previously and pres 'OK'\n```\n\n"
    },
    {
      "title": "Modify Squid Configuration File",
      "level": 3,
      "content": "```\n/etc/squid/squid.conf\n```\n\n```\nhttp_port 3128 ssl-bump tls-cert=/etc/squid/myCA.pem generate-host-certificates=on dynamic_cert_mem_cache_size=4MB options=NO_SSLv3,NO_TLSv1,NO_TLSv1_1,SINGLE_DH_USE,SINGLE_ECDH_USE\nssl_bump stare all\nssl_bump bump all\n```\n\n"
    },
    {
      "title": "Create and initialize TLS certificates cache directory",
      "level": 3,
      "content": "/usr/lib/squid/security_file_certgen -c -s /var/cache/squid/ssl_db -M 4MB\n\n"
    },
    {
      "title": "Finally, Restart Squid then SSL Bump will work",
      "level": 3,
      "content": "Restart squid.service.\n\n"
    },
    {
      "title": "Squid needs to be restarted after boot",
      "level": 3,
      "content": "If you are using both squid and NetworkManager, the following error means that squid is launched before the Wi-Fi connection is enabled by NetworkManager (/etc/resolv.conf is empty).\n\n```\n/var/log/squid/cache.log\n```\n\n```\nWarning: Could not find any nameservers. Trying to use localhost \nPlease check your /etc/resolv.conf file\nor use the 'dns_nameservers' option in squid.conf.\n```\n\nYou can:\n\n- Enable NetworkManager-wait-online.service systemd unit.\n- Using NetworkManager dispatcher instead of systemd to start squid\n\nDisable the squid.service systemd unit with the following script:\n\n```\n/etc/NetworkManager/dispatcher.d/10_squid\n```\n\n```\nif test \"$1\" = 'wlp2s0'\nthen\n    if test \"$2\" = 'up'\n    then\n        systemctl start squid\n    else\n        systemctl stop squid\n    fi\nfi\n```\n\nMake sure it is executable\n\n"
    },
    {
      "title": "Additional Resources",
      "level": 2,
      "content": "- Elite Proxy Config Example(cached) (cache-two)\n\n"
    }
  ]
}