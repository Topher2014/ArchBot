{
  "title": "Wordpress",
  "url": "https://wiki.archlinux.org/title/Wordpress",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Apache HTTP Server\n- PHP\n- MariaDB\n- phpMyAdmin\n\nWordPress is a free and open source content management system (CMS) created by Matt Mullenweg and first released in 2003. WordPress has a vast and vibrant community that provides tens of thousands of free plugins and themes to allow the user to easily customize the appearance and function of their WordPress CMS. WordPress is licensed under the GPLv2.\n\nThe biggest feature of WordPress is its ease in configuration and administration. Setting up a WordPress site takes five minutes. The WordPress administration panel allows users to easily configure almost every aspect of their website including fetching and installing plugins and themes. WordPress provides effortless automatic updates.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "WordPress requires Apache HTTP Server, PHP and MariaDB to be installed and configured. See the respective pages for information. During PHP configuration, be aware that some WordPress features require PHP extensions that may not be turned on by default.\n\nInstall the wordpress package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The configuration method used here assumes you are using WordPress on a local network.\n\n"
    },
    {
      "title": "Host config",
      "level": 3,
      "content": "Make sure your /etc/hosts file is setup correctly. This will be important when accessing your WordPress CMS from a local network. Your /etc/hosts file should look something like the following,\n\n```\n#<ip-address>   <hostname.domain.org>   <hostname>\n127.0.0.1       lithium.kaboodle.net    localhost lithium\n::1             lithium.kaboodle.net    localhost lithium\n```\n\n"
    },
    {
      "title": "Configure Apache",
      "level": 3,
      "content": "You will need to create a configuration file for Apache to find your WordPress install. Create the following file and edit it your favorite text editor:\n\n```\n# /etc/httpd/conf/extra/httpd-wordpress.conf\n```\n\n```\nAlias /wordpress \"/usr/share/webapps/wordpress\"\n<Directory \"/usr/share/webapps/wordpress\">\n\tAllowOverride All\n\tOptions FollowSymlinks\n\tRequire all granted\n</Directory>\n```\n\nChange /wordpress in the first line to whatever you want. For example, /myblog would require that you navigate to http://hostname/myblog to see your WordPress website.\n\nAlso change the paths to your WordPress install folder in case you did a manual install. Do not forget to append the parent directory to the php_admin_value variable as well as shown below.\n\n```\n# /etc/httpd/conf/extra/httpd-wordpress.conf\n```\n\n```\nAlias /myblog \"/mnt/data/srv/wordpress\"\n<Directory \"/mnt/data/srv/wordpress\">\n\tAllowOverride All\n\tOptions FollowSymlinks\n\tRequire all granted\n</Directory>\n```\n\nNext edit the Apache HTTP Server configuration file and add the following:\n\n```\n# /etc/httpd/conf/httpd.conf\n```\n\n```\nInclude conf/extra/httpd-wordpress.conf\n```\n\nSince the WordPress index is written in PHP add the following line within the <IfModule dir_module> block:\n\n```\n# /etc/httpd/conf/httpd.conf\n```\n\n```\n<IfModule dir_module>\n    DirectoryIndex index.php\n</IfModule>\n```\n\nNow restart httpd.service (Apache).\n\n"
    },
    {
      "title": "Configure Nginx",
      "level": 3,
      "content": "Example server block configuration from https://www.nginx.com/resources/wiki/start/topics/recipes/wordpress/:\n\n```\n# Upstream to abstract backend connection(s) for php\nupstream php {\n       server unix:/tmp/php-cgi.socket;\n       server 127.0.0.1:9000;\n}\n\nserver {\n       ## Your website name goes here.\n       server_name domain.tld;\n       ## Your only path reference.\n       root /var/www/wordpress;\n       ## This should be in your http block and if it is, it's not needed here.\n       index index.php;\n\n       location = /favicon.ico {\n               log_not_found off;\n               access_log off;\n       }\n\n       location = /robots.txt {\n               allow all;\n               log_not_found off;\n               access_log off;\n       }\n\n       location / {\n               # This is cool because no php is touched for static content.\n               # include the \"?$args\" part so non-default permalinks doesn't break when using query string\n               try_files $uri $uri/ /index.php?$args;\n       }\n\n       location ~ \\.php$ {\n               #NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\n               include fastcgi_params;\n               fastcgi_intercept_errors on;\n               fastcgi_pass php;\n               #The following parameter can be also included in fastcgi_params file\n               fastcgi_param  SCRIPT_FILENAME $document_root$fastcgi_script_name;\n       }\n\n       location ~* \\.(js|css|png|jpg|jpeg|gif|ico)$ {\n               expires max;\n               log_not_found off;\n       }\n}\n```\n\n"
    },
    {
      "title": "Configure MariaDB",
      "level": 3,
      "content": "MariaDB can be configured using a plethora of tools, but the most common are the command-line or phpMyAdmin.\n\n"
    },
    {
      "title": "Using MariaDB command-line tool",
      "level": 4,
      "content": "First, login as root. You will be asked for your MariaDB root password:\n\n```\n$ mysql -u root -p\n```\n\nThen create a user and database:\n\n```\nMariaDB> CREATE DATABASE wordpress;\nMariaDB> GRANT ALL PRIVILEGES ON wordpress.* TO \"wp-user\"@\"localhost\" IDENTIFIED BY \"choose_db_password\";\nMariaDB> FLUSH PRIVILEGES;\nMariaDB> EXIT\n```\n\nSee WordPress.org [1] for details.\n\n"
    },
    {
      "title": "Using phpMyAdmin",
      "level": 4,
      "content": "See phpMyAdmin to install and configure phpMyAdmin.\n\nIn your web browser, navigate to your phpMyAdmin host and perform the following steps:\n\n1. Login to phpMyAdmin.\n1. Click \"user\" and then click \"Add user\".\n1. Give the pop up window a name and a password.\n1. Select \"Create database with same name and grant all privileges\".\n1. Click the \"Add user\" button to create the user.\n\n"
    },
    {
      "title": "WordPress installation",
      "level": 2,
      "content": "Once you have set up your http server, php, and mariadb, it is time to install and configure WordPress itself.\n\nThe WordPress installation procedure will use the URL in the address field of your web browser as the default website URL. If you have navigated to http://localhost/wordpress, your website will be accessible from your local network, but it will be broken in appearance and function.\n\n1. Navigate to http://hostname/wordpress.\n1. Click the \"Create a Configuration File\" button.\n1. Click the \"Let's go!\" button.\n1. Fill in you database information created in the previous section\n1. Click \"Submit\".\n\nIf you installed wordpress, then this setup procedure will not have the correct permissions to create the wp-config.php file used by WordPress. You will have to do this step yourself as root using information WordPress will provide.\n\nA page will appear saying WordPress can not write the wp-config.php file. Copy the text in the edit box and open /usr/share/webapps/wordpress/wp-config.php as root in your text editor. Paste the copied text into the editor and save the file.\n\nAfter that, you will have to change permissions of the /usr/share/webapps/wordpress/ and all the files inside it to user http and group http by using chown so that the webserver can access it:\n\n```\n# chown http:http -R /usr/share/webapps/wordpress/\n```\n\nFinally, Click \"Run the install\" and WordPress will populate the database with your information. Once complete, you will be shown \"Success!\" page. Click the login button to finish your installation.\n\nNow would be a good time to access your website from all your devices to be sure your WordPress installation is setup correctly.\n\n"
    },
    {
      "title": "Finding new themes",
      "level": 4,
      "content": "There are tens of thousands of themes available for WordPress. Searching on google for a good theme can be like wading through a river filled with trash. Good places for looking for themes include:\n\n- Official WordPress theme website\n- Smashing Magazine\n- The Theme Factory\n- Woo Themes\n\n"
    },
    {
      "title": "Install using the admin panel",
      "level": 4,
      "content": "Before installing a theme using the admin panel, you will need to setup an FTP server on your WordPress host. To maintain a high level of protection, you might set up a user on your system specifically for WordPress, give it the home directory of <path to your WordPress install>/wp-content, disallow anonymous login, and allow no more users to log in than for WordPress (and obviously others as required by your setup).\n\nOnce the FTP server is setup, login to your WordPress installation and click \"Appearance->Install Themes->Upload\". From there select your zip file that contains your theme and click \"Install Now\". You will be presented with a box asking for FTP information, enter it and click \"Proceed\". You might need to update file ownership and rights if WordPress reports that it is unable to write to the directory. If you have been following along closely, you should now have an installed theme. Activate it if you wish.\n\n"
    },
    {
      "title": "Install manually",
      "level": 4,
      "content": "Download the archive and extract into the wp-content/themes folder:\n\n```\n$ cd /path/to/wordpress/root/directory\n$ cd wp-content/themes\n```\n\nGet the theme archive and extract:\n\n```\n$ wget http://www.example.com/MyTheme.zip\n$ unzip MyTheme.zip\n```\n\nRemove the archive (optional):\n\n```\n$ rm MyTheme.zip\n```\n\nBe sure to follow any additional instructions as provided by the theme author.\n\nSelect your new theme from the theme chooser (Appearance > Themes).\n\n"
    },
    {
      "title": "Installing a plugin",
      "level": 3,
      "content": "The steps for installing a plugin are the same as they are for installing a theme. Just click the \"Plugins\" link in the left navigation bar and follow the steps.\n\n"
    },
    {
      "title": "Updating",
      "level": 3,
      "content": "Every now and then when you log into wordpress there will be a notification informing you of updates. If you have correctly installed and configured an FTP client, and have the correct filesystem permissions to write in the WordPress install path then you should be able to perform updates at the click of a button. Just follow the steps.\n\nAlternatively, you can use SSH to update your installation with the SSH SFTP Updater Support plugin.\n\n"
    },
    {
      "title": "Appearance is broken (no styling)",
      "level": 3,
      "content": "Your WordPress website will appear to have no styling to it when viewing it in a web browser (desktop or mobile) that does not have its hostnames mapped to ip addresses correctly.\n\nThis occurs because you used a url with the hostname of your server, instead of an ip address, when doing the initial setup and WordPress has used this as the default website URL.\n\nTo fix this, you will either need to edit your /etc/hosts file or setup a proxy server. See Squid.\n\nAnother option is changing a value in the database table of your WordPress, specifically the wp_options table. The fix is to change the siteurl option to point directly to the domain name and not \"localhost\".\n\n"
    },
    {
      "title": "Plugins are unable to install: Could not create directory",
      "level": 3,
      "content": "Your WordPress site need appropriate permissions to your local files. It does not have the permissions to create files/directory. Apache with Arch uses the user `http`.\n\nTo give the appropriate permissions run the following command:\n\n```\n# chown -R http:http your-wordpress-directory/wp-content\n```\n\nIn addition, if you use a setup with php-fpm (as of version 7.4), you need to override the php-fpm systemd unit file, as php-fpm is hardened, making /usr read-only. Edit php-fpm.service and add the following lines to the file:\n\n```\noverride.conf\n```\n\n```\n[Service]\nReadWritePaths=/usr/share/webapps/wordpress\n```\n\n"
    },
    {
      "title": "Cannot save plugins to localhost",
      "level": 3,
      "content": "WordPress uses by default only a ftp server to download plugins. In order to also download them locally append the following config:\n\n```\n# wordpress_root_location/wp-config.php\n```\n\n```\ndefine('FS_METHOD', 'direct');\n```\n\n"
    },
    {
      "title": "There has been an error cropping your image.",
      "level": 3,
      "content": "Wordpress needs `php-gd` to modify images. Install php-gd, then enable the extension by uncommenting the following line in /etc/php/php.ini:\n\n```\nextension=gd\n```\n\n"
    },
    {
      "title": "Call to undefined function mysql_connect()",
      "level": 3,
      "content": "You can usually see this error if you are using mysql/mariadb with php>=7.0.0 and have debug enabled in wordpress config.\n\nThis issue can be solved by uncommenting the following line in /etc/php/php.ini:\n\n```\nextension=mysqli\n```\n\n"
    },
    {
      "title": "502 Gateway Error after starting nginx",
      "level": 3,
      "content": "This can be caused due to the php upstream defined as server 127.0.0.1:9000; in the nginx configuration file not being installed and configured.\n\nInstall the php-fpm package. Open the following file and go to the line:\n\n```\n# /etc/php/php-fpm.d/www.conf\n```\n\n```\nlisten = /run/php-fpm/php-fpm.sock\n```\n\nChange it to:\n\n```\n# /etc/php/php-fpm.d/www.conf\n```\n\n```\nlisten = '127.0.0.1:9000'\n```\n\nEnable and Restart php-fpm.\n\nRestart nginx.\n\n"
    },
    {
      "title": "WP-CLI",
      "level": 3,
      "content": "WP-CLI is the command-line interface for WordPress. You can update plugins, configure multisite installations and much more, without using a web browser.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- WordPress\n- Content management system\n\n"
    }
  ]
}