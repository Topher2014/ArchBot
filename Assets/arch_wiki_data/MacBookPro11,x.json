{
  "title": "MacBookPro11,x",
  "url": "https://wiki.archlinux.org/title/MacBookPro11,x",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nThe MacBook Pro 11,x consists of models with Retina display shipped by Apple In Late 2013 and Mid 2014. Like its predecessors, it is based on Intel chipset, although some manual configuration might be required in specific cases in order to deal with Apple-related features.\n\nLike previous MacBook models, the MacBook Pro 11,x supports UEFI. This page will cover the current status of hardware support on Arch Linux, as well as post-installation recommendations.\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "Before proceeding with the installation of Arch Linux, it is important to ensure that the latest firmware updates for you MacBook are installed. This procedure requires OS X. In OS X, open the App Store and check for updates. If your Mac finds and installs any updates, make sure to reboot your computer, and then check again for updates to make sure that you installed everything.\n\nIt is advisable to keep OS X installed, because MacBook firmware updates can only be installed using OS X. However, if you plan to remove OS X completely, make backups of these files, which you will need in Linux for adjusting the color profile:\n\n```\n/Library/ColorSync/Profiles/Displays/*\n```\n\n"
    },
    {
      "title": "Partitioning",
      "level": 2,
      "content": "MacBooks are partitioned using the GPT scheme by default. For MacBooks running OS X versions up to and including 10.12, the partition layout will typically look like this:\n\n- EFI: the ~200 MB EFI system partition\n- Macintosh HD: the main partition containing your OS X installation, formatted using HFS+\n- Recovery HD: a secondary HFS+ partition containing utilities for restoring backups, formatting and re-installing OS X, typically booted by holding Cmd+r while your MacBook is starting up\n\nFor 2013/2014 MacBooks running macOS 10.13 or later, the partition layout is simpler:\n\n- EFI: the ~200 MB EFI system partition\n- Macintosh HD: an APFS container partition containing volumes for Apple's EFI loaders, the macOS system/user files, the recovery image and for swap in macOS.\n\nAs a general rule, partitioning is no different from any other hardware that Arch Linux can be installed on. If you plan on keeping OS X for the purpose of dual booting, you need to manually shrink the main OS X HFS+/APFS partition from within OS X's Disk Utility program.\n\nNote: **Recovery** \n\nNote: **must** \n\nNote: **disable** \n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Installation is similar to any other standard laptop. Please refer to the official Installation guide for more detailed instructions, as the following content mainly describes deviations from those instructions that are specific to this MacBook model.\n\nAs this Mac model does not include a CD or DVD drive, you may wish to copy the Arch installation media onto a USB flash drive. With the Arch installation media on a flash drive, you can boot it by holding down the Alt (or Option) key while your Mac starts up, and then selecting the applicable EFI Boot option when the Apple boot manager appears.\n\nAs this model of notebook has a high DPI display, the console font displayed will be extremely small and depending on your preferences is likely to be uncomfortable to use. You may wish to change this for a more legible font, an example of which is;\n\n```\n$ setfont sun12x22\n```\n\n"
    },
    {
      "title": "Internet",
      "level": 3,
      "content": "Thunderbolt Ethernet adapters and USB-to-Ethernet adapters are usually picked up automatically. In case you use a Thunderbolt ethernet adapter, you may have to power on the machine with the adapter plugged in for it to be picked up by the system.\n\nAnother easy option is to use USB tethering with an Android device. For more information, see Android tethering.\n\nIf you have neither, the only option is to use the onboard wireless adapter. Depending on your model, you may have the Broadcom BCM43602, which is supported by the open source brcmfac module that is built-in to the Linux kernel and typically enabled by default. If this is the case, you should have wireless available from the installer with no further configuration necessary.\n\nOther BCM43XX chipsets may only be supported by a proprietary driver such as b43 or wl. The broadcom-wl package is included in the Arch installer media, but may need to be manually enabled before the chipset will function correctly. The b43 driver is also built-in to the kernel and included in the installation media, but it requires external proprietary firmware from the b43-firmwareAUR package which will need to be downloaded from another machine connected to the internet.\n\nYou can list the network interfaces available from the installer environment by running ip link show. If you can see your wireless interface in the list, you should now be able to use wifi-menu to select and connect to your wireless network.\n\nIf the Linux loopback device is the only listed interface, you may need to load an alternative Broadcom driver. To do this, begin by ensuring that all Broadcom drivers have been unloaded.\n\n```\n# rmmod ssb\n# rmmod bcma\n# rmmod b43\n# rmmod wl\n```\n\nThen try loading brcmfmac again.\n\n```\n# modprobe bcma\n```\n\nWait a few seconds and then list your network interfaces again. If you still cannot see your wireless interface, unload brcmfmac again and try reloading wl.\n\n```\n# rmmod bcma\n# modprobe wl\n```\n\nIf the wireless interface is still not listed, you will need to compile the b43-firmwareAUR package on another computer with pacman installed, put the generated package file on a second USB storage device, install the package within the Arch live environment and then load the b43 module, much like above. See Broadcom wireless and makepkg for more information.\n\n"
    },
    {
      "title": "Setup bootloader",
      "level": 2,
      "content": "MacBooks can be easily configured to use systemd-boot or GRUB directly from the Apple bootloader, without the need for third-party tools such as rEFInd. Systemd-boot is the recommended way for systems that support UEFI.\n\n- First, make sure you mounted the EFI System Partition at /boot (that is within the chroot, so mount it as /mnt/boot with mount /dev/sdXY /mnt/boot)\n- Proceed with Installation guide normally\n- Once inside the chrooted environment, type the following command to install systemd-boot: # bootctl --path=/boot install The above command will copy the systemd-boot binary to /boot/EFI/Boot/BOOTX64.EFI and add systemd-boot itself as the default EFI application (default boot entry) loaded by the EFI Boot Manager.\n- Proceed to systemd-boot#Configuration in order to correctly set up the bootloader.\n\n```\n# bootctl --path=/boot install\n```\n\nAt the next reboot, the Apple Boot Manager, shown when holding down the option key when booting the MacBook, should display Arch Linux (it will be displayed as EFI Boot as a possible boot option).\n\nNote: Obviously, you can replace the Arch logo with any other icon you like.\n\n```\n$ wget -O /tmp/archlinux.svg https://archlinux.org/logos/archlinux-icon-crystal-64.svg\n$ rsvg-convert -w 128 -h 128 -o /tmp/archlogo.png /tmp/archlinux.svg\n# png2icns /boot/.VolumeIcon.icns /tmp/archlogo.png\n$ rm /tmp/archlogo.png\n$ rm /tmp/archlinux.svg\n```\n\nObviously, you can replace the Arch logo with any other icon you like.\n\nNote: Keep in mind, however, it is also possible to load OS X from systemd-boot.\n\n```\n$ diskutil mount disk0s1\n```\n\nKeep in mind, however, it is also possible to load OS X from systemd-boot.\n\n"
    },
    {
      "title": "Post installation",
      "level": 2,
      "content": "See General recommendations for system management directions and post-installation tutorials.\n\nAdditionally, you might want to have a look at the Power management page for useful tips in power management and battery-saving software.\n\n"
    },
    {
      "title": "Kernel parameters",
      "level": 3,
      "content": "Due to this bug, it might be required to add acpi_osi= as a kernel boot parameter in order to improve battery life.\n\nDue to this bug, it may be necessary to disable GPE06 by adding acpi_mask_gpe=0x06 as a kernel boot parameter. To verify that this is required, check cat /sys/firmware/acpi/interrupts/gpe06. There should be a rapidly increasing number of interrupts registered, and one of your cores should be pegged at 100%.\n\n"
    },
    {
      "title": "Fan control",
      "level": 3,
      "content": "Install mbpfan-gitAUR or macfand-gitAUR (or the no longer maintained macfanctldAUR) and enable the mbpfan.service, macfanctld.service, or macfand.service in order to prevent laptop overheating.\n\n"
    },
    {
      "title": "Console",
      "level": 3,
      "content": "Largest console font can be achieved by using:\n\n```\n/etc/vconsole.conf\n```\n\n```\n...\nFONT=sun12x22\n```\n\n"
    },
    {
      "title": "Graphics",
      "level": 3,
      "content": "MacBook Pro with only integrated Intel graphics and no discrete GPU are supported out of the box. See Intel graphics for additional details and configuration options.\n\n- MacbookPro11,5 (MacBook Pro Retina, 15-inch, Mid 2015 with AMD Radeon R9 M370X) This uses amdgpu through the mesa driver. This should work and be installed by default. The amdgpu-pro drivers do not support this GPU. To get GPU switching enabled: Set up a boot to terminal in GRUB and refind in case of issues. https://github.com/0xbb/gpu-switch can be used to enable/disable discrete graphics, but this should not be necessary. Make sure drivers for either X11 (xf86-video-amdgpu and xf86-video-intel) or Wayland for both Intel graphics and AMDGPU are installed. use REFInd with spoof_osx_version enabled in refind.conf (setting to 10.11 confirmed to work for this model) to have firmware enable graphics muxing hardware. This is a muxed graphics device and more information about apple-gmux can be found here: https://docs.kernel.org/gpu/vga-switcheroo.html. Test with $ glxinfo | grep \"OpenGL renderer\" && DRI_PRIME=1 glxinfo | grep \"OpenGL renderer\"\n\n- This uses amdgpu through the mesa driver. This should work and be installed by default. The amdgpu-pro drivers do not support this GPU.\n- To get GPU switching enabled: Set up a boot to terminal in GRUB and refind in case of issues. https://github.com/0xbb/gpu-switch can be used to enable/disable discrete graphics, but this should not be necessary. Make sure drivers for either X11 (xf86-video-amdgpu and xf86-video-intel) or Wayland for both Intel graphics and AMDGPU are installed. use REFInd with spoof_osx_version enabled in refind.conf (setting to 10.11 confirmed to work for this model) to have firmware enable graphics muxing hardware. This is a muxed graphics device and more information about apple-gmux can be found here: https://docs.kernel.org/gpu/vga-switcheroo.html. Test with $ glxinfo | grep \"OpenGL renderer\" && DRI_PRIME=1 glxinfo | grep \"OpenGL renderer\"\n\n```\n$ glxinfo | grep \"OpenGL renderer\" && DRI_PRIME=1 glxinfo | grep \"OpenGL renderer\"\n```\n\nVersions which include a discrete Nvidia GPU should need additional configuration:\n\n- MacBook Pro 11,3: nvidia drivers work, see NVIDIA or Nouveau. In case you use the proprietary driver, see the following link [1] for additional details. It is possible to configure the integrated intel GPU, provided you are using GRUB as your bootloader of choice. See below for details. The xf86-video-nouveau package seems to be stable. Switching to VTs and back works fine from MATE and GNOME. Sometimes Chromium causes a \"kernele rejected pixbuf\" error which freezes the desktop. The nvidia-dkms driver has been crashing a lot. The nvidia driver seems to be super stable, but GNOME desktop will not like to start, showing you a \"Oh no! Something has gone wrong\" message. Cinnamon Desktop is buttery smooth with the NVIDIA driver, and if you want your GNOME desktop, you can run gnome-shell --replace & while in Cinnamon desktop to switch to GNOME Shell as a workaround.\n\n- nvidia drivers work, see NVIDIA or Nouveau. In case you use the proprietary driver, see the following link [1] for additional details.\n- It is possible to configure the integrated intel GPU, provided you are using GRUB as your bootloader of choice. See below for details.\n- The xf86-video-nouveau package seems to be stable. Switching to VTs and back works fine from MATE and GNOME. Sometimes Chromium causes a \"kernele rejected pixbuf\" error which freezes the desktop.\n- The nvidia-dkms driver has been crashing a lot.\n- The nvidia driver seems to be super stable, but GNOME desktop will not like to start, showing you a \"Oh no! Something has gone wrong\" message. Cinnamon Desktop is buttery smooth with the NVIDIA driver, and if you want your GNOME desktop, you can run gnome-shell --replace & while in Cinnamon desktop to switch to GNOME Shell as a workaround.\n\nNote that the video output ports (HDMI and DisplayPort) are hardwired to the Nvidia GPU, so they will not work if you use the Intel GPU and power off the Nvidia GPU. Switching GPUs requires a reboot, so if you primarily keep the laptop docked at a desk, configuring switchable graphics may not be worth the hassle of setting it up and then rebooting every time you need to switch. However, the Nvidia GPU does use significantly more power than the Intel one, so you will take a significant hit to battery life.\n\n"
    },
    {
      "title": "Getting the integrated intel card to work on 11,3",
      "level": 4,
      "content": "By default the integrated card is powered off. To fix this we need a GRUB function called apple_set_os. This function has not officially been merged yet, so we need to build GRUB ourselves.\n\n- Download the grub-gitAUR package from the AUR.\n- Get the patch from [2].\n- Put the patch contents into a file labeled something like apple.patch\n- Add this patch to your PKGBUILD and run makepkg -si.\n- Reboot into OS X and download gfxCardStatus v2.2.1 (newer versions do not work properly) run the app and specify the integrated card.\n- Reboot and at the GRUB prompt type c to get into console, followed by apple_set_os at the prompt.\n\nYou should now be able to install xf86-video-intel and get your card running.\n\nNote that the HDMI port and MiniDP are soldered to the NVIDIA card meaning that to run external displays you need to use the dedicated card.\n\n"
    },
    {
      "title": "Alternative method to disable NVIDIA card",
      "level": 4,
      "content": "While the above method for switching graphics works, there is a more effective method that does not require the use of gfxCardStatus or a patched GRUB installation (but it can be used if desired).\n\nFirst, the Intel GPU will not function without a patch called apple_set_os. You can either use a patched GRUB or use rEFInd with spoof_osx_version set in refind.conf. This will need to be loaded before each boot of Arch or else the Intel GPU will not function. It can be chainloaded via GRUB.\n\nThen you will need to download an application called gpu-switch for switching the GPU on dual MacBook Pros, it is fairly easy to use as well. It can be downloaded from here, https://github.com/0xbb/gpu-switch.\n\nSecondly, once you have downloaded gpu-switch, extract the application to your home directory and open up a terminal emulator and cd to that directory. To switch to the Intel graphics, run gpu-switch -i as root, and the card will be active on reboot. Conversely, to enable the dedicated card instead, run gpu-switch -d as root. You must have booted with the aforementioned patch for this to work.\n\nNext, gpu-switch will not completely power down the dedicated card. To do that, you will have to create a custom grub menuentry and compile a program that will power off the dedicated card.\n\nTo do that, please refer to the following article, MacBookPro10,x#Graphics.\n\nYou should now have working integrated graphics and the dedicated GPU should now power down. If you get a blank screen after doing this, wait and see what happens, if it stays blank for a prolonged period of time, try resetting the SMC, and then booting back into Arch.\n\nI noticed that afterwards VGA switcheroo disabled the nouveau driver, if this workaround still does not work, try installing a cronjob package, and adding the following:\n\n@reboot echo OFF > /sys/kernel/debug/vgaswitcheroo/switch @reboot echo IGD > /sys/kernel/debug/vgaswitcheroo/switch\n\nI'm not sure if the vgaswitcheroo commands actually do anything, I need somebody to test this workaround and let me know how it works for them.\n\nTo see if you dedicated GPU is actually disabled, run:\n\n```\n# cat /sys/kernel/debug/vgaswitcheroo/switch\n```\n\n"
    },
    {
      "title": "Microcode",
      "level": 3,
      "content": "You may need to install intel-ucode, especially if you have Nvidia drivers. Read the wiki page to learn more about Microcode.\n\n"
    },
    {
      "title": "HiDPI",
      "level": 3,
      "content": "See HiDPI for information on how to tweak the system for a Retina screen.\n\n"
    },
    {
      "title": "Sound",
      "level": 3,
      "content": "If you do not want to hear the annoying sound at system start-up, one way to get rid of it is to turn sound off while under Mac OS.\n\nAlso, if you are using PulseAudio, sometimes it thinks HDMI is the default sound card; to solve this problem, install pavucontrol and set Analog Stereo as the fallback device.\n\n"
    },
    {
      "title": "Touchpad",
      "level": 3,
      "content": "One method is to install xf86-input-synaptics and configure to your liking:\n\n```\n/etc/X11/xorg.conf.d/50-synaptics.conf\n```\n\n```\nSection \"InputClass\"\n    MatchIsTouchpad \"on\"\n    Identifier      \"touchpad catchall\"\n    Driver          \"synaptics\"\n    # 1 = left, 2 = right, 3 = middle\n    Option          \"TapButton1\" \"1\"\n    Option          \"TapButton2\" \"3\"\n    Option          \"TapButton3\" \"2\"\n    # Palm detection\n    Option          \"PalmDetect\" \"1\"\n    # Horizontal scrolling\n    Option \"HorizTwoFingerScroll\" \"1\"\n    # Natural Scrolling (and speed)\n    Option \"VertScrollDelta\" \"-100\"\n    Option \"HorizScrollDelta\" \"-100\"\nEndSection\n```\n\n"
    },
    {
      "title": "Ctrl-Click as Right-Click",
      "level": 4,
      "content": "Using this SuperUser receipt [3] I got Ctrl-click working as right-click. I had to increase the sleep time to 0.1 though.\n\n"
    },
    {
      "title": "input-mtrack",
      "level": 4,
      "content": "Another method is to use xf86-input-mtrack-gitAUR. If you like to have a thumb resting on the touchpad, this driver is the right choice, because it has an option for IgnoreThumb.\n\nWith this config the touchpad behavior becomes more osx-like.\n\n```\n/etc/X11/xorg.conf.d/00-touchpad.conf\n```\n\n```\nSection \"InputClass\"\n    MatchIsTouchpad \"on\"\n    Identifier      \"Touchpads\"\n    Driver          \"mtrack\"\n    Option          \"Sensitivity\" \"0.64\"\n    Option          \"FingerHigh\" \"5\"\n    Option          \"FingerLow\" \"1\"\n    Option          \"IgnoreThumb\" \"true\"\n    Option          \"IgnorePalm\" \"true\"\n    Option          \"DisableOnPalm\" \"true\"\n    Option          \"TapButton1\" \"1\"\n    Option          \"TapButton2\" \"3\"\n    Option          \"TapButton3\" \"2\"\n    Option          \"TapButton4\" \"0\"\n    Option          \"ClickFinger1\" \"1\"\n    Option          \"ClickFinger2\" \"2\"\n    Option          \"ClickFinger3\" \"3\"\n    Option          \"ButtonMoveEmulate\" \"false\"\n    Option          \"ButtonIntegrated\" \"true\"\n    Option          \"ClickTime\" \"25\"\n    Option          \"BottomEdge\" \"30\"\n    Option          \"SwipeLeftButton\" \"8\"\n    Option          \"SwipeRightButton\" \"9\"\n    Option          \"SwipeUpButton\" \"0\"\n    Option          \"SwipeDownButton\" \"0\"\n    Option          \"ScrollDistance\" \"75\"\n    Option          \"VertScrollDelta\" \"-111\"\n    Option          \"HorizScrollDelta\" \"-111\"\nEndSection\n```\n\n"
    },
    {
      "title": "Swap Opt and Command Key",
      "level": 3,
      "content": "Swapping opt and cmd is supported by the hid_apple module:\n\n```\n# echo 1 > /sys/module/hid_apple/parameters/swap_opt_cmd\n```\n\nTo make the change permanent add the option to /etc/modprobe.d/hid_apple.conf and regenerate the initramfs.\n\n```\noptions hid_apple swap_opt_cmd=1\n```\n\n"
    },
    {
      "title": "Keyboard backlight",
      "level": 3,
      "content": "See Mac/Troubleshooting#Keyboard backlight.\n\n"
    },
    {
      "title": "Screen backlight",
      "level": 3,
      "content": "- Intel, works on Linux 3.13\n- Framebuffer, works for MacBook Pro 11,1 and 11,3 via /sys/class/backlight/gmux_backlight/brightness.\n- Brightness in /sys/class/backlight/gmux_backlight/brightness can be modified comfortably via the gmux_backlightAUR[broken link: package not found] utility without root privileges. Requires the setpci setting below.\n- Nvidia, does not work using default settings. Try executing as root setpci -v -H1 -s 00:01.00 BRIDGE_CONTROL=0. It may be worthwhile to create a systemd unit to execute this on boot.\n- AMD models may require a patched kernel for the backlight to be adjusted. The linux-macbookAUR[broken link: package not found] kernel fixes this.\n\n"
    },
    {
      "title": "Suspend",
      "level": 3,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nWorks from Linux 3.13.\n\nIt may be necessary to disable USB's wakeup ability by by echoing XHC1 to /proc/acpi/wakeup in order to prevent immediate wakeup on suspend. This also holds for MacBook Air 2013. To make this permanent, create a systemd unit:\n\n```\n/etc/systemd/system/fix-spurious-wakeups.service\n```\n\n```\n[Service]\nType=oneshot\nExecStart=sh -c \"echo XHC1 > /proc/acpi/wakeup\"\nRemainAfterExit=true\n[Install]\nWantedBy=multi-user.target\n```\n\nAnd then do a daemon-reload and enable fix-spurious-wakeups.service.\n\nNo backlight after suspend with Linux 3.12. Use hibernate instead.\n\n"
    },
    {
      "title": "Powersave",
      "level": 3,
      "content": "Disabling the internal cardreader and bluetooth controller may save battery life. When not using them, create the following udev rules:\n\n```\n/etc/udev/rules.d/99-apple_cardreader.rules\n```\n\n```\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"05ac\", ATTRS{idProduct}==\"8406\", RUN+=\"/usr/local/sbin/remove_ignore_usb-device.sh 05ac 8406\"\n```\n\n```\n/etc/udev/rules.d/99-apple_broadcom_bcm2046_bluetooth.rules\n```\n\n```\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"05ac\", ATTRS{idProduct}==\"8289\", RUN+=\"/usr/local/sbin/remove_ignore_usb-device.sh 05ac 8289\"\nSUBSYSTEMS==\"usb\", ATTRS{idVendor}==\"0a5c\", ATTRS{idProduct}==\"4500\", RUN+=\"/usr/local/sbin/remove_ignore_usb-device.sh 0a5c 4500\"\n```\n\nAs udev's OPTIONS==\"ignore_device\" may not work reliably, the above rules use a script to manually remove the usb device from /sys/bus/usb/devices/.\n\nIf battery life is not satisfactory, it may help to use power saving utilities, such as tlp, and/or powertop from the official repositories. To better optimize battery life, TLP also has a configuration file located at /etc/default/tlp that you can edit to suit your machine. For more information, visit the wiki pages for these tools, TLP and Powertop, respectively.\n\n"
    },
    {
      "title": "SD Card Reader",
      "level": 3,
      "content": "Disappears sporadically after suspend as of Linux 3.18. Workaround:\n\n```\n/etc/modprobe.d/xhci-reset-on-suspend.conf\n```\n\n```\n# Reset XHCI USB devices on suspend/resume, fixes SD Card reader vanishing after suspend\noptions xhci_hcd quirks=0x80\n```\n\nNote: As of Linux 3.18.6-1 (and possibly earlier versions post-3.18), this fix may not be needed and might cause issues ranging from failed suspend to the SD card not being recognized at all. Test with and without the fix to determine which works best for you.\n\n"
    },
    {
      "title": "Repurpose the power key",
      "level": 3,
      "content": "By default systemd handles the power key as defined in /etc/systemd/logind.conf. By setting HandlePowerKey=ignore systemd ignores power key events.\n\nNow the power key can be repurposed as keycode 124. For example in i3 conf:\n\n```\nbindcode 124 ...\n```\n\n"
    },
    {
      "title": "Web cam",
      "level": 3,
      "content": "A reverse engineered driver is being developed here: https://github.com/patjak/facetimehd/ . It is marked experimental, but basic functionality seems to be working. Install facetimehd-dkmsAUR and facetimehd-dataAUR.\n\n"
    },
    {
      "title": "Wi-Fi",
      "level": 3,
      "content": "- broadcom-wl or broadcom-wl-dkms works Stability is an issue for some, look at Broadcom wireless for possible fixes (e.g. downgrading kernel works if your card is BCM4360) If stability is still an issue after the above, a possible alternative is to connect on a 802.11g network. More recent standards can cause the BCM4360 to disconnect randomly.\n\n- Stability is an issue for some, look at Broadcom wireless for possible fixes (e.g. downgrading kernel works if your card is BCM4360)\n- If stability is still an issue after the above, a possible alternative is to connect on a 802.11g network. More recent standards can cause the BCM4360 to disconnect randomly.\n\n"
    },
    {
      "title": "Backlight keys / Suspend support",
      "level": 3,
      "content": "linux-macbookAUR[broken link: package not found] is an AUR package created specifically for MacBook laptops that includes patches for these issues, as well fixing powering off correctly and CPU frequency scaling with the intel_pstate driver.\n\n"
    },
    {
      "title": "Discussions",
      "level": 2,
      "content": "- https://bbs.archlinux.org/viewtopic.php?id=171883\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- MacBookPro10,x\n- Mac\n\n"
    },
    {
      "title": "Example",
      "level": 2,
      "content": "- https://github.com/GoGoGadgetRepo/ArchInstallMBP\n\n"
    }
  ]
}