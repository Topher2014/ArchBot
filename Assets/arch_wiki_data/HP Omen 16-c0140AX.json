{
  "title": "HP Omen 16-c0140AX",
  "url": "https://wiki.archlinux.org/title/HP_Omen_16-c0140AX",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Table content:\nHardware | PCI/USB ID | Working?\nGPU (Integrated) | 1002:1638 | Yes\nGPU (Dedicated) | 1002:73ff | Yes\nEthernet | 10ec:8168 | Yes\nWireless | 10ec:8852 | Yes\nBluetooth | 0bda:2852 | Yes\nAudio | 1022:15e2 | Yes\nTouchpad | 04f3:31c2 | Yes\nWebcam | 0408:5425 | Yes\nCard Reader | 17a0:9750 | Yes\nTPM | 1022:15df | Yes\n\nThis page is about the HP Omen 16-c0140AX which is the AMD Advantage variant of the Omen series. Its equipped with a Ryzen 5800H (54W) and Radeon 6600M (100+10W). It features a 144Hz IPS Full HD Anti-Glare Display, 16 GB of 3200MHz Samsung RAM and a WD PC SN730 1TB SSD.\n\nIt includes a 81Whr Battery that provides 9 hours of backup on idle if tuned properly. You can have about 7-8 hours of document editing and 5-7 hours of video watching based on how heavy the codec is. It is not advisable to play games while using battery power as it can significantly reduce the battery's lifespan.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Before installation, disable Secure Boot in your UEFI (press the F10 key on boot). Alternatively you can manually setup Secure Boot for added security.\n\nMake sure you use the latest kernels (avoid linux-lts) as there are many features that severely benefit the laptop in the latest kernels.\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "fwupd does not support this device.\n\n"
    },
    {
      "title": "Secure Boot",
      "level": 3,
      "content": "You can enable Secure Boot Setup Mode from the UEFI Menu, but you will not be able to make modifications such as adding or removing keys. Additionally, the UEFI will accept files that are signed with multiple keys, as long as at least one of the keys is valid.\n\n"
    },
    {
      "title": "Hidden menus",
      "level": 3,
      "content": "- Ctrl+F10 - access advanced BIOS Setup which only has a toggle for Precision Boost Overdrive,\n- Meta+B - pressed while powering on to enter BIOS Recovery mode.\n\n"
    },
    {
      "title": "CPU",
      "level": 3,
      "content": "This laptop supports the AMD Pstate EPP CPU scheduler. It can be enabled using the amd-pstate=active kernel parameter since linux ≥ 6.3 . This provides a slight improvement in CPU performance and a significant improvement in battery life when using the powersave governor on battery.\n\n"
    },
    {
      "title": "GPU",
      "level": 3,
      "content": "There was a issue where the dedicated GPU used to be constantly woken up every minute and thus increasing power usage. This also inadvertently caused a failure to enter S3 Suspend occasionally. This was fixed in the DRM Driver patches that were merged with kernel 6.3.\n\n"
    },
    {
      "title": "Suspension and hibernation",
      "level": 3,
      "content": "Hibernation works just fine with no issues. Suspension too works fine most of the time and lands in the S3 state. There are times when suspension fails which has been explained in the GPU section above. This issue has been fixed in kernel version ≥ 6.3.\n\n"
    },
    {
      "title": "Max Performance",
      "level": 3,
      "content": "The laptop has been seen to have some peculiar performance related issues. All issues were fixed by setting the EC register 0x95 to a value of 0x31. This value is noted to be set when enabling Performance mode in the Omen Command Center in Windows and is hence safe to modify.\n\nTo set the register from shell:\n\n```\n# modprobe -r ec_sys\n# modprobe ec_sys write_support=1\n# echo -n -e \"\\0x31\" | dd of=/sys/kernel/debug/ec/ec0/io bs=1 seek=149 count=1 conv=notrunc\n```\n\nEnabling this does not lead to any unnecessary increase in power consumption, so you can set it to run automatically at startup.\n\n"
    },
    {
      "title": "Temperature monitoring",
      "level": 2,
      "content": "By default the kernel loads the k10temp module to check CPU thermals, but the zenpower module provides more info and can be installed with zenpower3-dkmsAUR:\n\n```\n$ sensors zenpower-pci-00c3\n```\n\n```\nzenpower-pci-00c3\n Adapter: PCI adapter\n SVI2_Core:     1.46 V  \n SVI2_SoC:    913.00 mV \n Tdie:         +46.8°C  (high = +95.0°C)\n Tctl:         +46.8°C  \n SVI2_P_Core:  10.56 W  \n SVI2_P_SoC:    3.52 W  \n SVI2_C_Core:   7.91 A  \n SVI2_C_SoC:    3.83 A\n```\n\n"
    },
    {
      "title": "Cooling fan",
      "level": 2,
      "content": "Fan speed can be monitored from the hp-wmi module via sensors:\n\n```\n$ sensors hp-isa-0000\n```\n\n```\nhp-isa-0000\n Adapter: ISA adapter\n fan1:        2760 RPM\n fan2:        2921 RPM\n```\n\nMinimal fan boost control is provided by the hp-wmi module in the sysfs. To activate the Boost feature, simply set pwm1_enable to 0. Conversely, to disable it, set the same parameter to 2. This can be located at /sys/devices/platform/hp-wmi/hwmon/hwmon*.\n\nTo do the same from shell:\n\n```\n# echo 0 > /sys/devices/platform/hp-wmi/hwmon/hwmon*/pwm1_enable\n```\n\n"
    },
    {
      "title": "Fan control Script",
      "level": 3,
      "content": "The automatic fan speed control is rather bothersome due to the fact that it runs constantly and creates noise even when temperatures are low. Additionally, it does not increase fan speed quickly when temperatures rise. Fortunately, the fan speed can be manually adjusted by writing values to the Embedded Controller (EC).\n\nTo simply this process you may use this python script to change, monitor and automatically adjust fan speed based on temperature via the CLI.\n\n"
    },
    {
      "title": "RGB",
      "level": 3,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThe keyboard RGB can be changed using a modified hp-wmi module. Clone the latest branch of this git repository and then install the kernel module using DKMS. You may do so with these shell commands:\n\n```\n$ git clone -b rebase-6.2 https://github.com/ranisalt/hp-omen-linux-module\n# dkms install --force hp-omen-linux-module\n```\n\nAfter installing the module (and rebooting) you can modify and read the RGB values in the path /sys/devices/platform/hp-wmi/rgb_zones\n\n```\n# cd /sys/devices/platform/hp-wmi/rgb_zones\n# echo FF0000 > zone02\n```\n\n```\n# cat zone02\n```\n\n```\nred: 255, green: 0, blue: 0\n```\n\n"
    },
    {
      "title": "Function keys",
      "level": 3,
      "content": "Table content:\nKey | Visible?1 | Marked?2 | Effect\nFn+F1 | Yes | Yes | Meta+P\nFn+F2 | Yes | Yes | XF86MonBrightnessDown\nFn+F3 | Yes | Yes | XF86MonBrightnessUp\nFn+F4 | No | Yes | Enables/disables keyboard backlight\nFn+F5 | Yes | Yes | XF86AudioMute\nFn+F6 | Yes | Yes | XF86AudioLowerVolume\nFn+F7 | Yes | Yes | XF86AudioRaiseVolume\nFn+F8 | Yes | Yes | XF86AudioPrev\nFn+F9 | Yes | Yes | XF86AudioPlay\nFn+F10 | Yes | Yes | XF86AudioNext\nFn+F11 | Yes | Yes | Toggle XF86TouchpadOn, XF86TouchpadOff\nFn+F12 | No | Yes | Enables/disables Meta Key\nOmen Key | Yes | Yes | XF86Launch2\n\n1. The key is visible to xev and similar tools\n1. The physical key has a symbol on it, which describes its function\n\n"
    }
  ]
}