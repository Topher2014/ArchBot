{
  "title": "Lenovo IdeaPad Flex 5 13IML05 Chromebook",
  "url": "https://wiki.archlinux.org/title/Lenovo_IdeaPad_Flex_5_13IML05_Chromebook",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nGPU | 8086:9b41 | Yes\nSSD | 144d:a809 | Yes\nMicroSD card reader |  | Yes\nKeyboard |  | Yes\nKeyboard backlight |  | Yes\nWiFi | 8086:02f0 | Yes\nBluetooth | 8087:0026 | Yes\nSpeakers | 8086:02c8 | Yes\nMicrophone |  | Yes\n3.5mm jack |  | Partial\nTouchpad | 06cb:cde1 | Yes\nTouchscreen | 27c6:0e32 | Yes\nStylus | 27c6:0e32 | Untested\nWebcam | 174f:244f | Yes\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "This Chromebook does not support Legacy Boot Mode. Even if you try to invoke it by pressing CTRL+L on the Developer Mode boot screen, it will show two options without a choice. Therefore it is necessary to flash a custom firmware.\n\n"
    },
    {
      "title": "UEFI firmware flashing",
      "level": 3,
      "content": "- This step relies on third-party scripts and firmware and may damage your hardware or data.\n- After performing this step, it will not be possible to use ChromeOS (unless you flash the original firmware back).\n\n- If you decide to boot without the battery to disable Firmware Write Protection, remove the battery according to the official manual and do not connect it back until the new firmware is flashed.\n- If your Chromebook has turned into a brick, you can try to unbrick it by flashing the original firmware with a special cable called SuzyQable.\n\n1. Disable Firmware Write Protection by booting without battery or using SuzyQable.\n1. Enable Developer Mode.\n1. Use MrChromebox's Firmware Utility Script.\n\n"
    },
    {
      "title": "Arch Linux installation",
      "level": 3,
      "content": "Note: If you plan to use F2FS, read about the power management issue first.\n\nIf you plan to use F2FS, read about the power management issue first.\n\n- Use UEFI-compatible bootloaders (e.g. systemd-boot).\n- The SSD disk is /dev/nvme0n1.\n\nUse auditctl(8) to suppress audit messages that appear every second:\n\n```\n# auditctl -e0\n```\n\nFollow the Installation guide.\n\n"
    },
    {
      "title": "Power management",
      "level": 3,
      "content": "As of January 20, 2022, the power management is broken in the Linux kernel (5.16.1). It is also broken in the official linux-lts (5.15.15) package.\n\nThe Chromebook hangs when closing the lid, restarting, and shutting down.\n\nAn older kernel linux-lts510AUR can be used as a workaround.\n\nThe issue appears to be resolved as of kernel version 5.19.16 or earlier.\n\n"
    },
    {
      "title": "Lid sensor",
      "level": 3,
      "content": "As of kernel version 5.19.16 or perhaps earlier, the lid sensor causes the system to wakeup shortly after suspending, regardless of whether the lid is closed.\n\nA workaround is to disable wakeup events from the lid sensor. An example udev rule:\n\n```\n/etc/udev/rules.d/lid.rules\n```\n\n```\n# Disable wakeups from lid sensor\nACTION==\"add\", SUBSYSTEM==\"acpi\", KERNEL==\"PNP0C0D:00\", ATTR{power/wakeup}=\"disabled\"\n```\n\n"
    },
    {
      "title": "Sound",
      "level": 3,
      "content": "- The 3.5mm jack will only work with headphones. In all cases will be used Chromebook's microphone.\n- Headphones connected to the 3.5mm jack will have minor noise, so it is recommended to use Bluetooth instead.\n\nInstall the following packages:\n\n- sof-firmware - sound driver\n- pulseaudio - PulseAudio\n- pulseaudio-alsa - required to connect ALSA with PulseAudio\n- acpid - acpid is required to make work the 3.5mm jack\n\nDescribe the sound card using the ALSA configuration file:\n\n```\n/etc/asound.conf\n```\n\n```\n# Devices for PulseAudio\npcm.speakers \"hw:0,5\"\npcm.microphone \"plughw:0,1\"\npcm.headphones \"hw:0,0\"\n\n# Force ALSA based applications (e.g. speaker-test(1)) to use PulseAudio\npcm.!default pulse\nctl.!default pulse\n```\n\nForce PulseAudio to use the devices defined above:\n\n```\n/etc/pulse/default.pa.d/devices.pa\n```\n\n```\n# This line is required for Bluetooth\nload-module module-switch-on-connect\n\nload-module module-alsa-sink device=speakers sink_name=speakers\nload-module module-alsa-source device=microphone\nload-module module-alsa-sink device=headphones sink_name=headphones\n```\n\nFind and delete or comment out the following block of code to prevent conflicts:\n\n```\n/etc/pulse/default.pa\n```\n\n```\n### Automatically load driver modules depending on the hardware available\n.ifexists module-udev-detect.so\nload-module module-udev-detect\n.else\n### Use the static hardware detection module (for systems that lack udev support)\nload-module module-detect\n.endif\n```\n\nCreate the following script to automatically switch sinks with acpid because of the 3.5mm jack:\n\n```\n/etc/acpi/headphones_jack.sh\n```\n\n```\n# License: 0BSD\n\n#!/bin/bash\n\nfunction get_active_pulseaudio_users_ids {\n    active_pulseaudio_users_ids=`ps -C pulseaudio -o ruid=`\n}\n\nfunction set_up_environment {\n    local user_id=\"$1\"\n    export HOME=`getent passwd $user_id | cut -d: -f6`\n    export PULSE_RUNTIME_PATH=\"/var/run/user/$user_id/pulse\"\n}\n\nfunction set_sink {\n    local user_id=\"$1\"\n    local sink_name=\"$2\"\n    sudo -u \"#$user_id\" -E pacmd set-default-sink $sink_name\n}\n\nif [ \"$2\" == \"HEADPHONE\" ]; then\n    get_active_pulseaudio_users_ids\n\n    for user_id in $active_pulseaudio_users_ids; do\n        set_up_environment $user_id\n        if [ \"$3\" == \"plug\" ]; then\n            set_sink $user_id \"headphones\"\n        else\n            set_sink $user_id \"speakers\"\n        fi\n    done\nfi\n```\n\nMake the script executable.\n\nRegister the script as a listener:\n\n```\n/etc/acpi/events/headphones_jack\n```\n\n```\nevent=jack/headphone\naction=/etc/acpi/headphones_jack.sh %e\n```\n\nEnable acpid.service\n\nThe sound should work after reboot.\n\n"
    },
    {
      "title": "Touchscreen",
      "level": 3,
      "content": "As of January 12, 2022, the Linux kernel (5.15.13) uses the wrong module for the touchscreen due to a bug.\n\nTherefore, it is necessary to block it:\n\n```\n/etc/modprobe.d/blacklist.conf\n```\n\n```\nblacklist elants_i2c\n```\n\nThe kernel will load the correct module after reboot.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Gentoo Linux » Lenovo IdeaPad Flex 5 13IML05 Chromebook\n- Lenovo » IdeaPad Flex 5 CB 13IML05 Platform Specifications\n- Lenovo » Hardware Maintenance Manual - Flex 5 CB-13IML05\n\n"
    }
  ]
}