{
  "title": "Arch is the best",
  "url": "https://wiki.archlinux.org/title/Arch_is_the_best",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Arch is the best is a very sophisticated and exquisite, ego-boosting and mind-blowing (albeit perhaps a bit over-engineered) project which gives proof of Arch's superiority.\n\n"
    },
    {
      "title": "History",
      "level": 2,
      "content": "The visionary project was originally devised in April 2008 by long time Arch community member lucke as a simple shell script which provided irrefutable proof that \"Arch is the best\". It was announced to the world with a forum post, thus illuminating other people's minds, who immediately started porting it to multiple different languages, both programming and verbal, so that every being on the planet could fully appreciate and benefit from this revolutionary discovery.\n\n"
    },
    {
      "title": "The code",
      "level": 2,
      "content": "The \"Arch is the best\" project is ported to many programming languages.\n\n```\nПредупреждение(\"Arch is the best!\");\n```\n\n```\nREPORT zwhat_is_the_best.\nWRITE 'Arch is the best'.\n```\n\n```\nwith Ada.Text_IO;\nuse Ada.Text_IO;\nprocedure ArchIsTheBest is\nbegin\n   Put_Line(\"Arch is the best!\");\nend ArchIsTheBest;\n```\n\n```\nopen import IO\nmain = run (putStrLn \"Arch is the best!\")\n```\n\n```\n'Arch is the best!'\n```\n\n```\ndisplay alert \"Arch is the best!\"\nsay \"Indeed, Arch is the best.\"\n```\n\n```\nIT'S SHOWTIME\nTALK TO THE HAND \"Arch is the best!\"\nYOU HAVE BEEN TERMINATED\n```\n\n```\nimplement main () = println! \"Arch is the best!\"\n```\n\n```\nBEGIN {\n   print \"Arch is the best!\"\n}\n```\n\n```\n10 PRINT \"Arch is the best!\"\n```\n\n```\n@echo off\necho Arch is the best!\npause\n```\n\n```\n<v\"Arch is the best!\"0\n <,_@#:\n```\n\n```\nHORA DO SHOW\n    CE QUER VER ESSA PORRA? (\"Arch is the best!\\n\");\n    BORA CUMPADE 0;\nBIRL\n```\n\n```\nprint \"Arch is the best!\"\n```\n\n```\n+;+;;;;;+;+; ;+;+;;+;;;+; +;;+;;;+;;+; ;;;+;+;+;;+;\n;;;;;+;+;;\n+;+;;+;+;+;;+; +;;+;;+;;;+;\n;;;;;+;+;;\n;;+;+;+;;;+; ;;;+;+;+;;+; +;+;+;+;;+;;+;\n;;;;;+;+;;\n;+;+;;;+;;+; +;+;+;+;;+;;+; +;;+;;+;;;+; ;;+;+;+;;;+;\n+;+;;;;+;+;;\n```\n\n```\n#!/bin/sh\necho \"Arch is the best!\"\n```\n\n```\n#!/bin/sh\nyes Arch is the best!\n```\n\n```\n++>++++++>+++++<+[>[->+<]<->++++++++++<]>>.<[-]>[-<++>]\n<----------------.---------------.+++++.<+++[-<++++++++++>]<.\n>>+.++++++++++.<<.>>+.------------.---.<<.>>---.\n+++.++++++++++++++.+.<<+.[-]++++++++++.\n```\n\n```\n#include <stdio.h>\nint main(void)\n{\n   puts(\"Arch is the best!\");\n   return 0;\n}\n```\n\n```\nusing System;\nConsole.WriteLine (\"Arch is the best!\");\n```\n\n```\n#include <iostream>\nint main ()\n{\n   std::cout << \"Arch is the best!\\n\";\n}\n```\n\n```\nimport std;\nint main()\n{\n    std::println(\"Arch is the best!\");\n}\n```\n\n```\nIDENTIFICATION DIVISION.\n    PROGRAM-ID.  TheBest.\n\n    PROCEDURE DIVISION.\n        DISPLAY \"Arch is the best!\".\n        STOP RUN.\n```\n\n```\nalert 'Arch is the best!'\n```\n\n```\n(prn \"Arch is the best!\")\n```\n\n```\n(princ \"Arch is the best!\")\n```\n\n```\nputs \"Arch is the best!\"\n```\n\n```\n# For giving the message to your friends\nrequire \"http/server\"\n\nserver = HTTP::Server.new(80) do |context|\n  context.response.content_type = \"text/plain\"\n    context.response.print \"Arch is the best!\"\nend\n\nputs \"Listening.\"\nserver.listen\n```\n\n```\n#!/bin/csh\necho \"Arch is the best!\"\n```\n\n```\nbody * {\n    display: none;\n}\n\nbody::before {\n    content: \"Arch is the best!\";\n    font-family: monospace;\n    font-size: 2.7rem;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n}\n```\n\n```\n(set-logic QF_SLIA)\n(set-info :status sat)\n(set-option :produce-models true)\n(define-const arch String \"Arch is the best\")\n(declare-fun result () String)\n(assert (= arch result))\n(check-sat)\n\n(get-value (result))\n```\n\n```\nimport std.stdio : writeln;\n void main()\n {\n     writeln(\"Arch is the best\");\n }\n```\n\n```\nmethod Main() {\n     print \"Arch is the best!\";\n }\n```\n\n```\nmain(){\n   print('Arch is the best');\n }\n```\n\n```\nprint(\"Arch is the best\")!\n```\n\nor even better:\n\n```\nconst const const arch = \"the best\"!\n```\n\n```\nconsole.loge with '                So Arch'\n console.loge with '     Much Good'\n console.loge with '                          Wow'\n```\n\n```\nDESCRIPTION=\"Arch is the best!\"\nSRC_URI=\"https://wiki.archlinux.org/index.php/Arch_is_the_best\"\n\nLICENSE=\"GFDL_1.3\"\nSLOT=\"0\"\nKEYWORDS=\"\"\nIUSE=\"\"\n\nDEPEND=\"\"\nRDEPEND=\"\"\n\nsrc_compile() {\neinfo \"Arch is the best!\"\n}\n```\n\n```\nskriv (\"Arch är bäst!)\n```\n\n```\n(message \"Arch is the best!\")\n```\n\n```\n🏁 🍇\n    😀 🔤Arch is the best!🔤❗️\n🍉\n```\n\n```\nIO.puts \"Arch is the best!\"\n```\n\n```\n-module(arch).\n-export([is_the_best/0]).\n   is_the_best() -> io:fwrite(\"Arch is the best!\\n\").\n```\n\n```\n-module(arch).\n -export([ultimate_question/0,the_answer/0]).\n the_answer() ->\n     receive\n         {Client,who_is_the_best} ->\n             Client ! {self(),\"Arch is the best!\"};\n         {Client,_} ->\n             Client ! {self(),\"Taco Taco Taco!\"}\n     end,\n     the_answer().\n ultimate_question() ->\n     Pid = spawn(arch,the_answer,[]),\n     Pid ! {self(),who_is_the_best},\n     receive\n         {Pid,Response} -> io:format(\"~s~n\",[Response])\n     end.\n```\n\n```\nprintfn \"Arch is the best!\"\n```\n\n```\n\"Arch is the best\" print\n```\n\n```\nDear Princess Celestia: Letter About Arch Linux.\nToday I learned:\n    I wrote \"Arch is the best!\".\nYour faithful student, Twilight Sparkle\n```\n\n```\nfunction arch_is_the_best --on-event fish_prompt\n   echo -ne \"\\e[94mArch is the best!\\e[0m\"\n end\n```\n\n```\n.\" Arch is the best\" cr -- kiss way\n```\n\n```\nprogram arch\n   print *,\"Arch is the best!\"\nend program arch\n```\n\n```\nRequire Import String.\nOpen Scope string_scope.\nCompute (\"Arch is the best!\").\n```\n\n```\ninit\n print \"Arch is the best\"\n```\n\n```\n#!/usr/bin/env gjs\nprint ('Arch is the best');\n```\n\n```\nimport gleam/io\n\npub fn main() {\n  io.println(\"Arch is the best!\")\n}\n```\n\n```\npackage main\n\nimport \"fmt\"\n\nfunc main() {\n\tfmt.Println(\"Arch is the best!\")\n}\n```\n\n```\nprintln 'Arch is the best!'\n```\n\n```\n#!/usr/local/bin/guile -s\n!#\n(display \"Arch is the best!\")\n(newline)\n```\n\n```\nuse fmt;\n\nexport fn main() void = {\n    fmt::println(\"Arch is the best!\")!;\n};\n```\n\n```\nmain = putStrLn \"Arch is the best!\"\n```\n\n```\npackage;\n\nclass Main {\n   public static function main() {\n       Sys.println(\"Arch is the best!\");\n   }\n}\n```\n\n```\nA ; r ; c\n   < l i n u x\n  > ; b ; e ; s\n \\ 2 3 * ; e ; h\n; h ; * 3 2 ; i ;\n ; G N U @ ; < /\n  ; t ; * 3 3 /\n   ; t ; 2 < /\n    s ; * 3 /\n```\n\n```\n\"Arch is the best!\\n\";\n```\n\n```\n<!DOCTYPE html>\n<html lang='en'>\n   <head>\n      <title>Arch is the best!</title>\n   </head>\n   <body>\n       Arch is the best!\n   </body>\n</html>\n```\n\nArch is the best!\n\n```\nmodule Main\n\nmain : IO ()\nmain = putStrLn \"Arch is the best!\"\n```\n\nhook\n\n```\n#/bin/bash\nrun_hook() {\n    echo \"Arch is the best\"\n}\n```\n\ninstall\n\n```\ninstall() {\n   inst_hook \"$moddir/arch_is_the_best\" \"$hookdir/arch_is_the_best\"\n}\n\nbuild() {\n    add_runscript\n}\n```\n\n```\nPLEASE NOTE THAT THIS WAS MADE FOR C-INTERCAL\n       DO ,10 <- #18\n       DO ,10SUB#1 <- #126\n       DO ,10SUB#2 <- #52\n       DO ,10SUB#3 <- #136\nPLEASE DO ,10SUB#4 <- #176\n       DO ,10SUB#5 <- #18\n       DO ,10SUB#6 <- #110\n       DO ,10SUB#7 <- #200\nPLEASE DO ,10SUB#8 <- #202\n       DO ,10SUB#9 <- #214\n       DO ,10SUB#10 <- #24\n       DO ,10SUB#11 <- #112\nPLEASE DO ,10SUB#12 <- #162\n       DO ,10SUB#13 <- #190\n       DO ,10SUB#14 <- #160\nPLEASE DO ,10SUB#15 <- #216\n       DO ,10SUB#16 <- #160\n       DO ,10SUB#17 <- #170\nPLEASE DO ,10SUB#18 <- #52\n       DO READ OUT ,10\n       DO GIVE UP\n```\n\nAlso a much larger ASCII-transcoding version.\n\n(Non-portable C-INTERCAL I/O had to be used, since INTERCAL-72 does not allow arbitrary characters.)\n\n```\n\"Arch is the best!\" println\n```\n\n```\npublic class ArchIsTheBest {\n   public static void main(String[] args) {\n       System.out.println(\"Arch is the best!\");\n   }\n}\n```\n\n```\nconsole.log('Arch is the best!');\n```\n\n```\nalert('Arch is the best!');\n```\n\n```\nprintln(\"Arch is the best!\")\n```\n\n```\nseq 1 100 | jq '\"Arch is the best!\"'\n```\n\n```\nDrukuj(\"Arch is the best!\").\n```\n\n```\nfun main() {\n   println(\"Arch is the best!\")\n}\n```\n\n```\n\\documentclass{standalone}\n\n\\begin{document}\n  Arch is the best!\n\\end{document}\n```\n\n```\ndef main : IO Unit := IO.println \"Arch is the best!\"\n```\n\n```\n\\version \"2.12.3\"\n\\include \"english.ly\"\n\\header { title = \"Arch is the best!\" }\n\\score\n{\n   <<\n      \\relative c' { c4 e g c \\bar \"||\" }\n      \\addlyrics   { Arch is the best! }\n   >>\n}\n```\n\n```\nponer(\"Arch es el mejor\")\n```\n\n```\nHAI\nCAN HAS STDIO?\nVISIBLE \"ARCH IS TEH PWNZ LOL!\"\nKTHXBYE\n```\n\n```\nGoal True. idtac \"Arch is the best!\". trivial. Qed.\n```\n\n```\nprint \"Arch is the best!\"\n```\n\n```\nbCBA@?>=<;:9876543210/.-,+*)('&%$#\"!~}|{zyxwvutsrqponmlkjihgfedcba`_^]\n\\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?>=<;:9y16543210/.-,+*)('&}C#\"!~}|{zyxwvu\ntsrqponmlkjihgfedcba`_^]\\[ZYXWVUTSRQPONMLK-CgGFEDCBA@?>=<;:98x6543210/\n.-,+*)('&%$#\"!~}|u;yxwpun4rqpRhmf,jihgIe^$ba`_^]\\[ZYXQVUTMqQPONMFjJI+A\neEDC%A:^>=<|:981U54t21*/.-&Jk)('&}C#\"!aw={z\\xwvun4lqpi/mlkjiKaf_%p\n```\n\n```\narchisthebest:\n       echo Arch is the best!\n```\n\n```\ndisp('Arch is the best!');\n```\n\n```\nLei ha clacsonato\n   voglio antani, Mascetti come se fosse 0\n   voglio carattere, Mascetti\n   stuzzica\n       carattere come se fosse brematurata la supercazzola scrivi con antani o scherziamo?\n       carattere a posterdati\n       antani come se fosse antani più 1\n   e brematura anche, se antani minore o uguale di 16\n   carattere come se fosse 13 carattere a posterdati carattere come se fosse 10 carattere a posterdati\nvaffanzum!\nblinda la supercazzola Mascetti scrivi con ingresso Mascetti o scherziamo?\n   voglio spazio, Mascetti come se fosse 1 con scappellamento a sinistra per 5\n   voglio esci, Mascetti\n   che cos'è l'ingresso?\n       0: esci come se fosse 65\n       o magari 1: esci come se fosse 114\n       o magari 2: esci come se fosse ingresso per 49 più 1\n       o magari 3: esci come se fosse ingresso per 34 più 2\n       o magari 4: esci come se fosse spazio\n       o magari 5: esci come se fosse ingresso per 21\n       o magari 6: esci come se fosse 115\n       o magari 7: esci come se fosse spazio\n       o magari 8: esci come se fosse 116\n       o magari 9: esci come se fosse 104\n       o magari 10: esci come se fosse ingresso per 10 più 1\n       o magari 11: esci come se fosse spazio\n       o magari 12: esci come se fosse 66\n       o magari 13: esci come se fosse 101\n       o magari 14: esci come se fosse ingresso per 8 più 3\n       o magari 15: esci come se fosse ingresso per 7 più ingresso meno 4\n       o tarapia tapioco: esci come se fosse spazio più 1\n   e velocità di esecuzione\nvaffanzum esci!\n```\n\n```\nwriteln(\"Arch is the best!\");\n```\n\n```\nbebin azinja() {\n  bechap(\"Arch is the best!\");\n}\n```\n\n```\n/* mbld -b aitb aitb.myr */\nuse std\nconst main = {\n  std.put(\"Arch is the best!\\n\")\n}\n```\n\n```\n;nasm -f elf32 arch.asm\n;ld -o arch arch.o\n;./arch\n\nsection .text\nglobal _start\n_start:\n    mov edx,len\n    mov ecx,msg\n    mov ebx,1\n    mov eax,4\n    int 0x80\n    xor ebx,ebx\n    mov eax,1\n    int 0x80\nmsg:\n    db \"Arch is the best!\",10\nlen equ $-msg\n```\n\n```\n;nasm -f elf64 arch.asm\n;ld -o arch arch.o\n;./arch\n\nsection .text\nglobal _start\ns:\n    db 'Arch is the best!',0ah\nl equ $-s\n_start:\n    mov rax,1\n    mov rdi,1\n    mov rsi,s\n    mov rdx,l\n    syscall\n    mov rax,60\n    xor rdi,rdi\n    syscall\n```\n\n```\necho \"Arch is the best!\"\n```\n\n```\nconsole.log('Arch is the best!');\n```\n\n```\nrequire('http').createServer((req,res) => {res.writeHead(200, {'Content-Type': 'text/plain'});res.end('Arch is the best!');}).listen(80);\n```\n\n```\nNSLog(@\"Arch is the best!\");\n```\n\n```\nprint_endline \"Arch is the best!\"\n```\n\n```\nprintf(\"Arch is the best!\\n\")\n```\n\n```\nOok. Ook. Ook. Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook. Ook. Ook! Ook? Ook. Ook? Ook! Ook? Ook! Ook! Ook. Ook? Ook. Ook. Ook? Ook. Ook? Ook! Ook? Ook. Ook! Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook? Ook! Ook. Ook? Ook. Ook! Ook? Ook! Ook! Ook? Ook! Ook. Ook? Ook! Ook? Ook! Ook! Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook? Ook! Ook? Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook? Ook! Ook! Ook? Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook? Ook? Ook! Ook? Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook. Ook. Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook? Ook. Ook? Ook. Ook! Ook. Ook. Ook? Ook. Ook? Ook! Ook! Ook! Ook! Ook! Ook! Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook. Ook. Ook. Ook! Ook. Ook? Ook. Ook? Ook. Ook. Ook. Ook! Ook. Ook! Ook? Ook! Ook! Ook? Ook! Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook. Ook! Ook.\n```\n\n```\nServer.start(\n   Server.http,\n   { title: \"Arch is the best\"\n   , page: function() { <h1>Arch is the best!</h1> }\n   }\n )\n```\n\n```\nprogram ArchIsTheBest;\nbegin\n  writeln('Arch is the best!');\nend.\n```\n\n```\n%PDF-1.1\n\n1 0 obj\n<< /Type /Catalog\n/Pages 2 0 R\n>>\nendobj\n\n2 0 obj\n<< /Type /Pages\n/Kids [3 0 R]\n/Count 1\n/MediaBox [0 0 595 842]\n>>\nendobj\n\n3 0 obj\n<<  /Type /Page\n/Parent 2 0 R\n/Resources\n<< /Font\n<< /F1\n<< /Type /Font\n/Subtype /Type1\n/BaseFont /Times-Roman\n>>\n>>\n>>\n/Contents 4 0 R\n>>\nendobj\n\n4 0 obj\n<< /Length 48 >>\nstream\nBT\n/F1 72 Tf\n55 460 Td\n(Arch is the best!) Tj\nET\nendstream\nendobj\n\nxref\n0 5\n0000000000 65535 f \n0000000016 00000 n \n0000000066 00000 n \n0000000148 00000 n \n0000000303 00000 n \ntrailer\n<<  /Root 1 0 R\n/Size 5\n>>\nstartxref\n402\n%%EOF\n```\n\n```\n#!/usr/bin/env perl\nprint \"Arch is the best!\\n\";\n```\n\n```\n#!/usr/bin/env php\n<?php echo \"Arch is the best!\\n\" ?>\n```\n\n```\nprint(\"Arch is the best!\",0,0,#1897D1)\nframe\n```\n\n```\nArchIsBest: proc options (main);\n  put skip list(\"Arch is the best!\");\nend ArchIsBest;\n```\n\n```\nactor Main\n  new create(env: Env) =>\n    env.out.print(\"Arch is the best!\")\n```\n\n```\n.section .data\narchIsBest:\n   .ascii  \"Arch is the best!\\n\"\narchIsBest_len:\n   .long   . - archIsBest\n   .section .text\n   .globl _start\n_start:\n   xorl %ebx, %ebx\n   movl $4, %eax\n   xorl %ebx, %ebx\n   incl %ebx\n   leal archIsBest, %ecx\n   movl archIsBest_len, %edx\n   int $0x80\n   xorl %eax, %eax\n   incl %eax\n   xorl %ebx, %ebx\n   int $0x80\n```\n\n```\ninclude \"std.porth\"\nproc main in\n   \"Arch is the best!\" puts\nend\n```\n\n```\ninicio\n escrever \"Arco é o melhor!\"\nfim\n```\n\n```\n%!PS\n/monospace 60 selectfont\n10 420 moveto\n(Arch is the best!) show\nshowpage\n```\n\n```\nWrite-Output \"Arch is the best!\"\n```\n\n```\nprintln(\"Arch is the best!\");\n```\n\n```\nformat('Arch is the best~n',[]).\n```\n\n```\nprint('Arch is the best!')\n```\n\n```\nshow \"Arch is the best!\"\n```\n\n```\nPRINT \"Arch is the best!\"\n```\n\n```\nimport QtQuick.Controls 2.15\n\nLabel{\n    text: \"Arch is the best!\"\n    font.pixelSize: 22\n}\n```\n\n```\narchIsBest <- function() { cat(\"Arch is the best!\\n\") }\narchIsBest()\n```\n\n```\n#lang racket\n\n(let ([str \"Arch is the best!\\n\"])\n    (write-string str)\n    (values))\n```\n\n```\n#!/usr/bin/env raku\nsay 'Arch is the best!';\n```\n\n```\n#!/usr/bin/ruby -w\nputs 'Arch is the best!'\n```\n\n```\nfn main() {\n    println!(\"Arch is the best!\");\n}\n```\n\n```\nsalt '*' event.fire '{\"data\":\"Arch Is the best!\"}' 'arch/best'\n```\n\n```\nobject ArchIsBest extends App {\n     println(\"Arch is the best!\")\n }\n```\n\nLink to scratchblocks where you can see what it would look like as actual scratch code\n\n```\nwhen green flag clicked\nsay [Arch is the best!]\n```\n\n```\n(display \"Arch is the best!\\n\")\n```\n\n```\n#!/usr/bin/env seed\nprint ('Arch is the best');\n```\n\n```\nArch is the Best.\n\nArthur, a young man who is the best.\nIsabella, a likewise young woman who be.\nThe Ghost, an undead who is the article.\nBeatrice, a young woman who is an adjective.\n\n\n                    Act I: Setting of the Variables.\n\n                    Scene I: Setting of Isabella and Arthur.\n\n[Enter Arthur and Isabella]\n\nArthur:\n You are as dirty as the square of the sum of a rotten smelly foul devil\n and a vile lie! You are as bold as the sum of yourself and an evil hog!\n\nIsabella:\n Thou art as big as the square of a cute fair sweet flower! You are as proud\n as the sum of thyself and a cow.\n\n[Exit Arthur]\n\n                    Scene II: Setting of The Ghost.\n\n[Enter The Ghost]\n\nIsabella:\n You art as loving as myself. Thou are as huge as the sum of yourself and twice\n a red old hair. You are as cowardly as the sum of yourself and a fat goat!\n\n[Exit Isabella]\n\n                    Scene III: Setting of Beatrice.\n\n[Enter Beatrice]\n\nThe Ghost:\n Thou are as good as the sum of Isabella and a mighty fine rich noble King.\n\n[Exeunt The Ghost and Beatrice]\n\n                    Act II: Printing Arch is the Best.\n\n                    Scene I: Arch.\n\n[Enter Arthur and Beatrice]\n\nBeatrice:\n Speak thy mind! You art as peaceful as the quotient between thyself and the\n clearest Lord.\n\nArthur:\n Speak your mind!\n\n[Exeunt Arthur and Beatrice]\n\n[Enter Isabella and The Ghost]\n\nThe Ghost:\n Thou are as normal as the sum of thyself and a town. Speak thy mind!\n\nIsabella:\n Speak your mind!\n\n[Exit Isabella]\n\n[Enter Arthur]\n\nThe Ghost:\n Speak thy mind!\n\n[Exit Arthur]\n\n                    Scene II: is.\n\n[Enter Beatrice]\n\nBeatrice:\n Thou are as old as the sum of yourself and a nose. Speak your mind!\n\nThe Ghost:\n You art as pretty as the sum of thyself and a face. Speak your mind.\n\n[Exit The Ghost]\n\n[Enter Arthur]\n\nBeatrice:\n Speak thy mind.\n\n                    Scene III: the.\n\nArthur:\n You are as blue as the sum of yourself and a hamster. Speak thy mind!\n\n[Exit Arthur]\n\n[Enter The Ghost]\n\nBeatrice:\n You are as prompt as the sum of thyself and a lie! Speak your mind.\n\n[Exit Beatrice]\n\n[Enter Isabella]\n\nThe Ghost:\n You art as happy as the sum of thyself and a large moon. Speak thy mind!\n\n[Exit The Ghost]\n\n[Enter Arthur]\n\nIsabella:\n Speak thy mind.\n\n[Exit Arthur]\n\n                    Scene IV: Best.\n\n[Enter Beatrice]\n\nBeatrice:\n Thou are as blue as the sum of the sum of a curse and thyself and a bad\n codpiece. Speak your mind! You art as lovely as the sum of the sum of the\n happiness and yourself and a blossoming flower. Speak thy mind.\n\nIsabella:\n You are as healthy as the sum of yourself and a plague! Speak thy mind.\n Thou art as huge as the sum of thyself and a hero. Speak your mind!\n\n[Exit Beatrice]\n\n[Enter Arthur]\n\nIsabella:\n You art as green as the sum of thyself and a mother. Speak your mind.\n\n[Exeunt]\n```\n\n```\nShoes.app :width => 135, :height => 30 do\n    para \"Arch is the Best!\"\nend\n```\n\n```\nTranscript show: 'Arch is the best!'.\n```\n\n```\npragma solidity ^0.6.0;\n\ncontract ArchIsTheBest {\n  function archIsTheBest() external pure returns (string memory) {\n    return \"Arch is the best!\";\n  }\n}\n```\n\n```\nSELECT 'Arch is the best!';\nSELECT 'Arch is the best!' from dual; -- for Oracle DB\n```\n\n```\nprint \"Arch is the best!\\n\"\n```\n\n```\nprint(\"Arch is the best!\")\n```\n\n```\n#!/usr/bin/env tclsh\nputs \"Arch is the best!\"\n```\n\n```\nArch is the best!\n\\bye\n```\n\n```\nsay it with me, \"Arch is the best!\";\namerica is great.\n```\n\n```\n#include <Uefi.h>\nEFI_STATUS EFIAPI\nArchIsTheBest (\n              IN EFI_HANDLE        ImageHandle,\n              IN EFI_SYSTEM_TABLE  *SystemTable\n              )\n{\n   SystemTable -> ConOut-> OutputString(SystemTable->ConOut, L\"Arch is the best!\\n\"); \n   return EFI_SUCCESS;\n}\n```\n\n```\nfn main() {\n        println('Arch is the best!')\n}\n```\n\n```\nvoid main(string[] args) {\nstdout.printf(\"\\nArch is the best!\\n\\n\");\n}\n```\n\n```\n\"Arch maj law' Hoch maj puS!\" cha'\n```\n\n```\nmodule top;\n  initial $display(\"Arch is the best!\");\nendmodule\n```\n\n```\nuse std.textio.all;\n\nentity top is\nend top;\n\narchitecture behaviour of top is begin\n  process begin\n    write (output, String'(\"Arch is the best!\"));\n    wait;\n  end process;\nend behaviour;\n```\n\n```\necho \"Arch is the best!\"\n```\n\n```\nModule Arch\n  Sub Main()\n      MsgBox(\"Arch is the best!\")\n  End Sub\nEnd Module\n```\n\n```\n吾有一言。曰「「阿祺，盡善矣。」」。書之。\n```\n\n```\n42 print(\"Arch is the best!\");\n```\n\nThis language does not work very well in the wiki, so here's the code.\n\n```\nvoid setup()\n{\n   Serial.begin(9600);\n}\nvoid loop()\n{\n   Serial.print(\"Arch is the best!\");\n}\n```\n\n```\nPrint[\"Arch is the best\"]\n```\n\ncc -lX11 arch.c\n\n```\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h>\n\n#include <X11/Xlib.h>\n\nint main()\n{\n       Display *d;\n       Window w;\n       XEvent e;\n       int s;\n\n       if (!(d = XOpenDisplay(NULL))) {\n               fprintf(stderr, \"Couldn't open display, but Arch is the best!\\n\");\n               exit(1);\n       }\n\n       s = DefaultScreen(d);\n       w = XCreateSimpleWindow(d, RootWindow(d,s), 0, 0, 110, 20, 0, \n                               0, WhitePixel(d,s));\n       XSelectInput(d, w, ExposureMask | KeyPressMask);\n       XMapWindow(d,w);\n\n       while (1) {\n               XNextEvent(d, &e);\n               if (e.type == Expose) {\n                       XDrawString(d, w, DefaultGC(d, s), 5, 15, \"Arch is the best!\", 17);\n               }\n       }\n\n       XCloseDisplay(d);\n       return 0;\n}\n```\n\n```\n(define-const arch String \"Arch is the best\")\n(simplify (str.++ arch))\n```\n\n```\nconst std = @import(\"std\");\n\npub fn main() !void {\n    std.debug.warn(\"Arch is the best!\\n\", .{});\n}\n```\n\n```\nFUNC Main() int\n  IO.write(\"Arch is the best!\")\n  RETURN 0\n}\n```\n\n```\n#!/bin/zsh -f\nsetopt extendedglob\nprint -- $(echoti setaf 2) ${$(<<<${${${(@j: :)${(@s:_:)${:-What_Linux_is_the_best?}}}/* (#b)([A-Z]i)/Arch $match[1]}} tr '?' '!')} $terminfo[sgr0]\n```\n\n"
    }
  ]
}