{
  "title": "Pacman/Roseta",
  "url": "https://wiki.archlinux.org/title/Pacman/Roseta",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Esta página usa uma tabela para exibir a correspondência dos comandos de gerenciamento de pacotes entre algumas das distribuições Linux mais populares. A inspiração original foi dada pela comparação da linha de comando de gerenciamento de software do openSUSE[link inativo 2024-01-13 ⓘ].\n\n"
    },
    {
      "title": "Operações básicas",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nInstalar um ou mais pacotes por nome | pacman -S | dnf install | apt install | zypper install ou zypper in | emerge [-a]\nRemover um ou mais pacotes por nome | pacman -Rs | dnf remove | apt remove | zypper remove ou zypper rm | emerge -[a]vc\nPesquisar por um ou mais pacotes pela expressão no nome, descrição ou descrição curta. Quais campos exatos estão sendo pesquisados por padrão variam em cada ferramenta. Principalmente as opções trazem ferramentas a par. | pacman -Ss | dnf search | apt search | zypper search ou zypper se [-s] | emerge -S\nAtualizar pacotes - instala pacotes que já tenham uma versão mais antiga instalada | pacman -Syu | dnf upgrade | apt update e então apt upgrade | zypper update ou zypper up | emerge -[a]uDN @world\nAtualizar pacotes - outra forma do comando de atualização, que pode executar atualizações mais complexas, como atualizações de distribuição. Quando o comando de atualização usual omite as atualizações de pacotes, que incluem alterações nas dependências, esse comando pode realizar essas atualizações. | pacman -Syu | dnf distro-sync | apt update e então apt dist-upgrade | zypper dup | emerge -[a]uDN @world\nLimpar todos os caches locais. As opções podem limitar o que é realmente limpo. autoclean remove apenas informações desnecessárias e obsoletas. | pacman -Sc ou pacman -Scc | dnf clean all | apt autoclean ou apt clean | zypper clean | eclean distfiles\nRemover dependências que não são mais necessárias porque, por exemplo, o pacote que precisava das dependências foi removido. | pacman -Qdtq | pacman -Rs - | dnf autoremove | apt autoremove | zypper rm -u | emerge [-a] --depclean\nRemover os pacotes que não estão mais incluídos em nenhum repositório. | pacman -Qmq | pacman -Rs - | dnf repoquery --extras | aptitude purge '~o' |  | \nMarcar um pacote instalado anteriormente como uma dependência, conforme explicitamente necessário. | pacman -D --asexplicit | dnf mark install | apt-mark manual |  | emerge --select\nInstalar um ou mais pacotes como dependência / sem marcar como explicitamente necessário. | pacman -S --asdeps | dnf install e então dnf mark remove | apt-mark auto |  | emerge -[a]1\nBaixar apenas os pacotes fornecidos sem descompactar ou instalá-los | pacman -Sw | dnf download | apt install --download-only (para o cache de pacotes) ou apt download (contorna o cache de pacotes) | zypper --download-only | emerge [-a] --fetchonly\nIniciar um shell para inserir vários comandos em uma sessão |  |  | apt-config shell | zypper shell | \nMostrar um log de ações realizadas pelo gerenciamento de software. | leia /var/log/pacman.log | dnf history | leia /var/log/dpkg.log | leia /var/log/zypp/history | veja /var/log/portage\nObter um despejo de todas as informações do sistema - impressões, salvamentos ou semelhantes do estado atual do sistema de gerenciamento de pacotes. A saída preferida é texto ou XML. (Nota: Por que um ou outro? Nenhuma ferramenta oferece a opção de escolher o formato de saída.) | veja /var/lib/pacman/local | veja /var/lib/rpm/Packages | apt-cache stats |  | emerge --info\nEntregar de e-mail sobre alterações de pacotes |  |  | apt install apt-listchanges |  | \n\n"
    },
    {
      "title": "Consultando pacotes específicos",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nMostrar toda ou maior parte da informação sobre um pacote. A verbosidade das ferramentas para o comando padrão varia. Mas com as opções, as ferramentas estão em pé de igualdade. | pacman -Si ou pacman -Qi | dnf list ou dnf info | apt show ou apt-cache policy | zypper info ou zypper if | emerge -S, emerge -pv ou eix\nMostrar informação do pacote local: Nome, versão, descrição, etc. | pacman -Qi | rpm -qi / dnf info installed | dpkg -s ou aptitude show | zypper info ou rpm -qi | emerge -pv ou emerge -S\nMostrar informação do pacote remoto: Nome, versão, descrição, etc. | pacman -Si | dnf info | apt-cache show ou aptitude show | zypper info | emerge -pv and emerge -S ou equery meta\nMostrar arquivos providos pelo pacote local | pacman -ql | rpm -ql | dpkg -L | rpm -Ql | equery files ou qlist\nMostrar arquivos providos por um pacote remoto | pacman -Fl | dnf repoquery -l ou repoquery -l (do pacote yum-utils) | apt-file list |  | pfl\nBuscar o pacote que provê ARQUIVO | pacman -Qo | rpm -qf (instalado somente) ou dnf provides (tudo) ou repoquery -f (do pacote yum-utils) | dpkg -S ou dlocate | zypper search -f | equery belongs ou qfile\nListar arquivos que o pacote é dono. De novo, esta funcionalidade pode ser replicada por outros comandos mais complexos. | pacman -Ql ou pacman -Fl | dnf repoquery -l | dpkg-query -L | rpm -ql | equery files ou qlist\nMostrar pacotes que oferecem a expressão dada. O reverso do provides. Majoritariamente um atalho para procurar por um campo específico. Outras ferramentas podem oferecer esta funcionalidade através de comandos de busca. | pacman -F | dnf provides | apt-file search | zypper what-provides ou zypper wp | equery belongs (somente pacotes instalados) ou pfl\nPesquisar todos os pacotes para encontrar qual é dono do arquivo específico. auto-apt está usando esta funcionalidade. | pacman -Fs | dnf provides | apt-file search | zypper search -f | equery belongs ou qfile\nMostrar o changelog de um pacote | pacman -Qc | rpm -q --changelog | apt-get changelog | rpm -q --changelog | equery changes -f\n\n"
    },
    {
      "title": "Consultando listas de pacotes",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nProcurar por pacote(s) ao buscar a expressão no nome, descrição, descrição curta. Os campos exatos que são procurados por padrão variam em cada ferramenta. A maioria das opções tem ferramentas em par. | pacman -Ss | dnf search | apt search | zypper search ou zypper se -s | emerge -S ou eix\nListar pacotes que tem uma atualização disponível. Nota: Alguns oferecem um comando especial para limitar a saída para certas fontes de instalação, outros usam opções. | pacman -Qu | dnf list updates ou dnf check-update | apt-get upgrade (pressione n para somente ver a lista) | zypper list-updates ou zypper patch-check (somente para patches) | emerge -uDNp @world\nMostrar uma lista de todos os pacotes em todas as fontes de instalação que são manuaseadas pelos gerenciadores de pacotes. Algumas ferramentas oferecem opções ou comandos adicionais para limitar a saída para uma fonte de instalação específica. | pacman -Sl | dnf list available | apt-cache dumpavail ou apt-cache dump (somente cache) ou apt-cache pkgnames | zypper packages | portageq all_best_visible /\nGerar uma lista de pacotes instalados | pacman -Q | dnf list installed | dpkg --list | grep ^i | zypper search --installed-only | qlist -IC\nListar pacotes que são instalados mas não estão (mais) disponíveis em qualquer fonte de instalação. | pacman -Qm | dnf list extras | deborphan | zypper se -si | grep 'System Packages' | eix-test-obsolete\nListar pacotes que foram recentemente adicionados para uma das fontes de instalação, que são recentes. |  | dnf list recent | aptitude search '~N' ou aptitude forget-new |  | eix-diff\nListar pacotes locais instalados junto com a versão | pacman -Q | rpm -qa | dpkg -l | zypper search -s ou rpm -qa | qlist -ICv\nProcurar por nomes ou descrições de pacotes localmente instalados | pacman -Qs | rpm -qa '*<str>*' | aptitude search '~i(~n $name|~d $description)' |  | eix -S -I\nListar pacotes que não são exigidos por nenhum pacote | pacman -Qt | dnf leaves ou package-cleanup --leaves --all | deborphan -anp1 |  | emerge -pc\nListar pacotes instalados explicitamente (não como dependência) | pacman -Qe | dnf history userinstalled | apt-mark showmanual |  | emerge -pvO @selected ou eix --selected\nListar pacotes instalados automaticamente (como dependência) | pacman -Qd |  | apt-mark showauto |  | \n\n"
    },
    {
      "title": "Consultando dependências de pacotes",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nMostrar pacotes que precisam de X para serem instalados, mostra dependências reversas. | pacman -Sii | dnf repoquery --alldeps --whatrequires ou repoquery --whatrequires | apt-cache rdepends ou aptitude search ~D$pattern | zypper search --requires | emerge -pvc\nMostrar pacotes que conflitam com dada expressão (geralmente pacote). Busca também pode ser usada para replicar esta função. |  | dnf repoquery --conflicts | aptitude search '~C$pattern' |  | \nListar todos os pacotes que são exigidos para dado pacote, mostra dependências. | pacman -Si ou pacman -Qi | dnf repoquery --requires ou repoquery -R | apt-cache depends ou apt-cache show | zypper info --requires | emerge -ep\nListar o que o atual pacote fornece |  | dnf provides | dpkg -s ou aptitude show | zypper info --provides | equery files ou qlist\nListar todos os pacotes que precisam de um pacote específico |  | dnf repoquery --installed --alldeps --whatrequires | aptitude search ~D{depends,recommends,suggests}:$pattern ou aptitude why | zypper search --requires | equery depends -a\nMostrar todos os pacotes que são especificados como obsoletos. |  | dnf list obsoletes | apt-cache show |  | \nGerar uma saída apropriada para processar dado(s) pacote(s) com dotty. |  |  | apt-cache dotty |  | \n\n"
    },
    {
      "title": "Gerenciamento de fontes de instalação",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nGerenciar fontes de instalação | edite /etc/pacman.conf | edite /etc/yum.repos.d/${REPO}.repo | edite /etc/apt/sources.list | edite /etc/zypp/repos.d/${REPO}.repo | layman ou eselect repository\nAdicionar uma fonte de instalação para o sistema. Algumas ferramentas oferecem comandos adicionais para certas fontes, outras permitem todos os tipos de URI para o comando de adicionar. De novo outros, como apt e dnf, forçam a edição da lista de fontes. apt-cdrom é um comando especial, que oferece opções especiais feitas para ter CDs/DVDs como fonte. | edite /etc/pacman.conf | /etc/yum.repos.d/*.repo | apt-cdrom add | zypper service-add | layman ou overlays\nAtualizar a informação sobre a(s) fonte(s) de instalação ou todas elas. | pacman -Sy (sempre atualize o sistema todo depois) | dnf clean expire-cache e então dnf check-update | apt-get update | zypper refresh ou zypper ref | emerge --sync ou layman -S\nMostrar uma lista de todas as fontes de instalação incluindo informações importantes como URI, alias etc. | cat /etc/pacman.d/mirrorlist | cat /etc/yum.repos.d/* | apt-cache policy | zypper service-list | layman -l ou eselect repository list\nListar todos os pacotes de dado repositório | paclist <repo> |  |  |  | eix --in-overlay\nDesabilitar uma fonte de instalação para uma operação |  | dnf --disablerepo= |  |  | emerge package::repo-to-use\nBaixar pacotes da distribuição em uma versão diferente da atualmente instalada. |  | dnf --releasever= | apt-get install -t release package ou apt-get install package/release (dependências não são cobertas) |  | echo \"category/package ~amd64\" >> /etc/portage/package.keywords e então emerge package\n\n"
    },
    {
      "title": "Sobreposição",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nAdicionar uma trava para não mudar o atual estado de um pacote | edite /etc/pacman.conf modificando o vetor IgnorePkg | edite dnf.conf adicionando a opção exclude | apt-mark hold pkg | zypper al ou coloque o nome do pacote em /etc/zypp/locks | /etc/portage/package.mask\nDeletar uma trava de pacote | edite /etc/pacman.conf removendo o pacote da linha IgnorePkg |  | apt-mark unhold pkg | zypper rl ou remova o nome do pacote de /etc/zypp/locks | /etc/portage/package.mask (ou package.unmask)\nMostrar uma lista de todas as travas | cat /etc/pacman.conf |  | /etc/apt/preferences | zypper ll ou veja /etc/zypp/locks | cat /etc/portage/package.mask\nConfigurar a prioridade de dado pacote para evitar atualização, forçar downgrade ou sobrescrever qualquer comportamento padrão. Pode também ser usado para dar preferência a uma versão do pacote de certa fonte de instalação. | edite /etc/pacman.conf modificando os vetores HoldPkg e/ou IgnorePkg |  | /etc/apt/preferences, apt-cache policy | zypper mr -p | edite /etc/portage/package.accept_keywords adicionando uma linha com =category/package-version\nRemover uma prioridade anteriormente definida |  |  | /etc/apt/preferences | zypper mr -p | edite /etc/portage/package.accept_keywords removendo a linha desejada\nMostrar uma lista de conjunto de prioridades |  |  | apt-cache policy ou /etc/apt/preferences | zypper lr -p | grep -r . /etc/portage/package.accept_keywords\nIgnorar problemas que prioridades podem causar |  |  |  | n/a | \n\n"
    },
    {
      "title": "Verificação e correção",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nVerificar um único pacote | pacman -Qk (pode adicionar outro k) | rpm -V | debsums | rpm -V | equery check\nVerificar todos os pacotes | pacman -Qk (pode adicionar outro k) | rpm -Va | debsums | rpm -Va | equery check\nReinstalar dado pacote; isto reinstalará o dado pacote sem reclamar sobre dependências | pacman -S | dnf reinstall | apt install --reinstall | zypper install --force | emerge -1O\nVerificar dependências do sistema todo; usada se o processo de instalação foi forçadamente interrompido | pacman -Dk | dnf repoquery --requires | apt-get check | zypper verify | emerge -uDN @world\nUsar alguma mágica para consertar dependências quebradas em um sistema | para nível de dependência do pacman, use pacman -Dk; para nível de biblioteca compartilhada, use findbrokenpkgsAUR ou lddd (do devtools) | dnf repoquery --unsatisfied | apt-get --fix-broken e então aptitude install | zypper verify | revdep-rebuild\nAdicionar um checkpoint para o pacote do sistema para futuramente voltar a esse estado |  | (desnecessário, é feito em toda transação) |  | n/a | \nRemover um checkpoint do sistema | n/a | n/a |  | n/a | \nProver uma lista de todos os checkpoints do sistema | n/a | dnf history list |  | n/a | \nVolta todos os pacotes até certa data ou checkpoint específico | n/a | dnf history rollback |  | n/a | \nDesfazer uma única transação especificada | n/a | dnf history undo |  | n/a | \n\n"
    },
    {
      "title": "Usando arquivos de pacotes e compilando pacotes",
      "level": 2,
      "content": "Table content:\nAção | Arch | Red Hat/Fedora | Debian/Ubuntu | SLES/openSUSE | Gentoo\nBuscar um pacote suprido na linha de comando ao invés de uma entrada no banco de dados no gerenciamento de pacotes | pacman -Qp | rpm -qp | dpkg -I |  | \nListar os conteúdos do arquivo de um pacote | pacman -Qpl | rpmls rpm -qpl | dpkg -c | rpm -qpl | \nInstalar um pacote local, ex. app.rpm e usar as fontes de instalação para resolver dependências | pacman -U | dnf install | apt install | zypper in | emerge\nAtualizar pacote(s) com pacotes locais e usar fontes de instalação para resolver conflitos de dependências | pacman -U | dnf upgrade | debi |  | emerge\nAdicionar um pacote local para o cache local, majoritariamente para propósitos de debug. | cp nome-do-arquivo /var/cache/pacman/pkg/ |  | apt-cache add nome-do-arquivo | n/a | cp nome-do-arquivo /usr/portage/distfiles\nExtrair um pacote | tar -Jxvf | rpm2cpio | cpio -vid | dpkg-deb -x | rpm2cpio | cpio -vid | tar -jxvf\nInstalar/Remover pacotes para satisfazer dependências de compilação. Usa informação no pacote fonte | Use ABS e makepkg -seoc | dnf builddep | apt-get build-dep | zypper si -d | emerge -o\nMostrar o pacote fonte dado nome do pacote |  | dnf repoquery -s | apt-cache showsrc | n/a | \nBaixar a fonte do respectivo(s) pacote(s) | Use ABS e makepkg -o | dnf download --source | apt-get source ou debcheckout | zypper source-install | emerge --fetchonly\nCompilar um pacote | makepkg -s | rpmbuild -ba (normal) ou mock (no chroot) | debuild | rpmbuild -ba, então compile, e osc build | ebuild ou quickpkg\nVerificar por possíveis problemas de empacotamento | namcap(precisa instalar namcap) | rpmlint | lintian | rpmlint | repoman\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Changes in DNF CLI compared to Yum\n\n"
    }
  ]
}