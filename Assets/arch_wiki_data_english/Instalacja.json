{
  "title": "Instalacja",
  "url": "https://wiki.archlinux.org/title/Instalacja",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Powiązane artykuły\n\n- Help:Browsing\n- Help:Style\n\nPonieważ zdecydowana większość ArchWiki zawiera wskazówki, które mogą wymagać wyjaśnienia dla nowych użytkowników Arch Linuxa (lub ogólnie GNU/Linuksa), opis tych podstawowych procedur został napisany zarówno w celu uniknięcia nieporozumień przy asymilacji artykułów, jak i w celu powstrzymania powtórzeń w samej treści.\n\n"
    },
    {
      "title": "Organizacja",
      "level": 2,
      "content": "Większość artykułów w ArchWiki nie podejmuje prób wprowadzenia całościowego wprowadzenia do jednego tematu; zamiast tego są napisane zgodnie z zasadą \"Don't Repeat Yourself\", przy założeniu, że użytkownik będzie szukał i czytał każdy materiał pomocniczy, którego jeszcze nie rozumie. O ile jest to możliwe, taki materiał pomocniczy jest wskazany w artykule za pomocą specjalnego formatowania, patrz #Formatowanie.\n\nZ powodu tej organizacji może być konieczne zbadanie kilku powiązanych źródeł w celu pełnego zrozumienia artykułu na ArchWiki. W szczególności użytkownicy, którzy są nowi w świecie Arch Linuxa (lub ogólnie GNU/Linuxa) powinni liczyć się z czytaniem dużej liczby artykułów nawet przy rozwiązywaniu prostych problemów. Szczególnie ważne jest zapoznanie się z materiałem pomocniczym przed próbą uzyskania dodatkowej pomocy od innych użytkowników.\n\n"
    },
    {
      "title": "Formatowanie",
      "level": 2,
      "content": "- link do sekcji w obecnym artykule: #Organizacja\n- link do innego artykuły na ArchWiki\n- link do zewnętrznej strony\n- link do strony man: intro(1)\n- strona man która jest dostępna tylko offline: foo(1)\n- link do pakietu w oficjalnym repozytorium: foobar\n- link do pakietu w AUR: foobarAUR\n\n"
    },
    {
      "title": "Root, zwykły czy inny użytkownik",
      "level": 2,
      "content": "Niektóre linie są napisane jako tak:\n\n```\n# mkinitcpio -p linux\n```\n\nInne mogą mieć inny prefiks:\n\n```\n$ makepkg -s\n```\n\nZnak hash (#) wskazuje, że polecenie musi być uruchomione jako root, podczas gdy znak dolara ($) pokazuje, że polecenie powinno być uruchamiane jako zwykły użytkownik.\n\nGdy polecenia muszą być uruchamiane jako określony użytkownik, będą one poprzedzone nazwą użytkownika w nawiasach kwadratowych, na przykład:\n\n```\n[postgres]$ initdb -D /var/lib/postgres/data\n```\n\nOznacza to, że należy użyć narzędzia do podniesienia uprawnień np. sudo:\n\n```\n$ sudo -u postgres initdb -D /var/lib/postgres/data\n```\n\nGodny uwagi wyjątek, na który należy zwrócić uwagę:\n\n```\n# Ten alias powoduje, że ls jest wyświetlony z kolorami\nalias ls='ls --color=auto'\n```\n\nW tym przykładzie kontekst hash informuje, że nie należy go uruchamiać jako polecenia W tym przypadku hash oznacza \"komentarz\". Komentarz może być tekstem objaśniającym, który nie będzie interpretowany przez powiązany program.\n\nPo dalszej analizie znaki \"do oddania\" zawierają wielką literę po znaku #. Zwykle komendy Unixa nie są tak pisane i przez większość czasu są krótkimi skrótami zamiast pełnych angielskich słów (np. \"Copy\" (Kopiuj) staje się \"cp\").\n\nJednak większość artykułów ułatwia to rozpoznanie, powiadamiając o tym czytelnika:\n\nDołącz do do ~/ścieżka/do/pliku:\n\n```\n# Ten alias powoduje, że ls jest wyświetlony z kolorami\nalias ls='ls --color=auto\n```\n\n"
    },
    {
      "title": "Dołącz do, dodaj, stwórz, zedytuj",
      "level": 2,
      "content": "Kiedy jesteś poproszony o dołączenie do, dodania do, stworzenia, lub zedytowania jednego lub więcej plików, zakłada się, że powinieneś użyć jednej z poniższych metod.\n\nAby stworzyć lub zmodyfikować pliki wielowierszowe, zaleca się użycie edytora tesktowego. Na przykład korzystając z nano polecenie do edycji pliku /etc/bash.bashrc to:\n\n```\n# nano /etc/bash.bashrc\n```\n\nAby stworzyć lub zastąpić plik pojedyńczą liniją, łatwiejsze może być użycie przekierowania wyjścia. Poniższy przykład tworzy lub zastępuje zawartość pliku /etc/hostname tekstem mojanazwahosta.\n\n```\n# echo mojanazwahosta > /etc/hostname\n```\n\nPrzekierowanie wyjścia może być również użyte do dołączenia tekstu do pliku. Poniższy przykład dołącza tekst [niestandardowe-repo] do pliku /etc/pacman.conf.\n\n```\n# echo \"[niestandardowe-repo]\" >> /etc/pacman.conf\n```\n\nKiedy jesteś poproszony o stworzenie directories, use the mkdir command:\n\n```\n# mkdir /mnt/boot\n```\n\n"
    },
    {
      "title": "Stwórz plik wykonywalnym",
      "level": 3,
      "content": "Po stworzeniu pliku, jeśli ma być uruchamiany jako skrypt (ręcznie lub wywołany przez inny program), musi być ustawiony jako plik wykonywalny, na przykład:\n\n```\n$ chmod +x ciekawy-skrypt\n```\n\nZobacz chmod. Niektóre aplikacje jak menadżery plików mogą zawierać opcje żeby zrobić to samo.\n\n"
    },
    {
      "title": "Instalowanie pakietów",
      "level": 2,
      "content": "Gdy artykuł zachęca do zainstalowania niektórych pakietów w tradycyjny sposób, nie będzie wskazywał szczegółowych instrukcji jak to zrobić, zamiast tego po prostu wymieni nazwy pakietów do zainstalowania.\n\nPoniższe podroździały zawierają przegląd ogólnych procedur instalacyjnych w zależności od rodzaju paczki.\n\n"
    },
    {
      "title": "Oficjalne pakiety",
      "level": 3,
      "content": "W przypadku pakietów z oficjalnych repozytoriów przeczytasz coś takiego:\n\nTo znaczy że masz musisz uruchomić:\n\n```\n# pacman -S foobar\n```\n\nArtykuł pacman (Polski) zawiera szczegółowe wyjaśnienia, jak radzić sobie z zarządzaniem pakietami w Arch Linuxie.\n\n"
    },
    {
      "title": "Arch User Repository",
      "level": 3,
      "content": "Dla pakietów z Arch User Repository (AUR) przeczytasz coś takiego:\n\nOznacza to, że musisz kliknąć link foobarAUR, pobrać archiwum PKGBUILD, wypakować je, zweryfikować zawartość i wkońcu uruchomić w tym samym folderze:\n\n```\n$ makepkg -si\n```\n\nArtykuł Arch User Repository zawiera wszystkie szczegółowe wyjaśnienia i najlepsze praktyki dotyczące pakietów AUR.\n\n"
    },
    {
      "title": "Kontrolowanie usług systemd",
      "level": 2,
      "content": "Gdy artykuł zachęca do \"uruchomienia\", \"włączenia\", \"zatrzymania\" lub \"ponownego uruchomienia\" niektórych jednostek systemowych (np. Usługi), nie wskaże jednak on szczegółowych instrukcji, ale zamiast tego zobaczycie coś takiego:\n\nTo oznacza że musisz uruchomić:\n\n```\n# systemctl start przykład.service\n```\n\nGodnym uwagi poleceniem, które nie jest zgodne z tym dokładnym wzorcem, jest daemon-reload, które zostanie wywołane bez argumentów.\n\nArtykuł systemd zawiera wszystkie szczegółowe wyjaśnienia dotyczące interakcji z jednostkami systemd w Arch Linux.\n\n"
    },
    {
      "title": "Konfiguracja ogólnosystemowa kontra jednego użytkownika",
      "level": 2,
      "content": "Należy pamiętać, że istnieją dwa różne rodzaje konfiguracji w systemie GNU/Linux. Konfiguracja \"systemowa\" dotyczy wszystkich użytkowników. Ponieważ ogólnosystemowe ustawienia są zwykle zlokalizowane w katalogu /etc, uprawnienia roota (administratora) są wymagane, aby je zedytować. Na przykład, aby zastosować ustawienie Bash, które dotyczy wszystkich użytkowników, należy zmodyfikować /etc/bash.bashrc.\n\n\"Konfiguracja\" specyficzna dla użytkownika wpływa tylko na jednego użytkownika. Pliki dotfiles są używane do konfiguracji specyficznej dla danego użytkownika. Na przykład plik ~/.bashrc jest specyficznym dla użytkownika plikiem konfiguracyjnym. Pomysłem tego jest to, że każdy użytkownik może zdefiniować własne ustawienia, takie jak aliasy, funkcje i inne interaktywne funkcje, takie jak np. wygląd powłoki bash, bez zmieniana ustawień innych użytkowników.\n\n"
    },
    {
      "title": "Powszechne pliki powłoki",
      "level": 3,
      "content": "Bash i inne powłoki zgodne z Bourne, takie jak Zsh, uruchamiają pliki w zależności od tego, czy powłoka jest powłoką logowania czy też powłoką interaktywną. Aby uzyskać bardziej szczegółowe informacje, zobacz Bash#Configuration files i Zsh#Startup/Shutdown files.\n\n"
    },
    {
      "title": "Pseudo-zmienne w przykładach kodu",
      "level": 2,
      "content": "Niektóre bloki kodu mogą zawierać tak zwane pseudo-zmienne, które, jak sama nazwa wskazuje, nie są rzeczywistymi zmiennymi używanymi w kodzie. Zamiast tego są one ogólnymi symbolami zastępczymi i muszą być ręcznie zastąpione przez specyficzne dla systemu elementy konfiguracyjne, zanim kod będzie mógł być uruchamiany lub analizowany. Typowe powłoki, takie jak bash i zsh, dostarczają uzupełnianie poprzez kliknięcie TAB, aby automatycznie uzupełniać parametry dla typowych poleceń, takich jak systemctl.\n\nW artykułach zgodnych z Help:Style/Formatting and punctuation \"pseudo-zmienne\" są sformatowane kursywą. Na przykład:\n\n- Uruchom nazwa_interfejsu@nazwa_interfejsu.service dla interfejsu sieciowego zidentyfikowanego na wyjściu z komendy ip link.\n\nW tym przypadku nazwa_interfejsu jest używany jako symbol zastępczy \"pseudo-zmiennej\" w systemowej jednostce szablonu. Wszystkie systemowe jednostki szablonów, które można rozpoznać po znaku @, wymagają argumentu jako element konfiguracyjny specyficzny dla systemu. Zobacz systemd#Using units.\n\n- Polecenie dd if=data_source of=/dev/sdX bs=sector_size count=sector_number seek=partitions_start_sector można uruchomić jako root, aby wyczyścić partycję o określonych parametrach.\n\nW tym przypadku \"pseudo-zmienne\" są używane do opisania parametrów, które muszą zostać zastąpione. Szczegółowe informacje na temat ich zbierania są omówione w rozdziale Securely wipe disk#Calculate blocks to wipe manually, który zawiera to polecenie.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nW przypadku przykładów plików wklejanie pseudo-zmiennych w rzeczywistych plikach konfiguracyjnych może spowodować uszkodzenie programów, które ich używają.\n\n"
    },
    {
      "title": "Elipsy",
      "level": 3,
      "content": "W większości przypadków elipsy (...) nie są częścią rzeczywistej zawartości pliku lub składnią kodu, a zamiast tego reprezentują pominięty lub opcjonalny tekst, który nie jest istotny dla omawianego tematu.\n\nNa przykład HOOKS = \"... encrypt ... filesystems ...\" lub:\n\n```\n/etc/X11/xorg.conf.d/50-synaptics.conf\n```\n\n```\nSekcja \"InputClass\"\n     ...\n     Opcja \"CircularScrolling\" \"on\"\n     Opcja \"CircScrollTrigger\" \"0\"\n     ...\nEndSection\n```\n\nPamiętaj jednak, że w kilku przypadkach elipsy mogą być znaczącą częścią składni kodu: uważni użytkownicy będą mogli łatwo rozpoznać te przypadki przez kontekst.\n\n"
    }
  ]
}