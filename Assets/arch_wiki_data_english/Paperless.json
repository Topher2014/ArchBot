{
  "title": "Paperless",
  "url": "https://wiki.archlinux.org/title/Paperless",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Paperless is an open source document management system that indexes your scanned documents and allows you to easily search for documents and store metadata alongside your documents. This article refers to Paperless-ngx, a community-maintained fork of Paperless-ng, which in turn is a fork of the original Paperless project that have both been given up.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the paperless-ngx-venvAUR package.\n\n"
    },
    {
      "title": "Folders",
      "level": 3,
      "content": "Paperless gets installed to /usr/share/paperless. The persistent storage of Paperless is located at /var/lib/paperless and contains the media folder, the data folder (by default containing the SQLite database), the consume folder for document consumption, the temporary uploads folder and tmp convert folder. The consume folder has write permissions for everyone in the paperless group.\n\n"
    },
    {
      "title": "Consumption folder permissions",
      "level": 3,
      "content": "If you wish to allow users (e.g. \"http\") to put documents in the consumption folder, add them to the paperless user group.\n\n"
    },
    {
      "title": "OCR languages",
      "level": 3,
      "content": "If you want Paperless to consume documents in a language other than English, you need to install the corresponding tesseract language data package. For German that would be tesseract-data-deu.\n\n"
    },
    {
      "title": "Reduce the size of generated PDF documents",
      "level": 3,
      "content": "You might want to install the optional dependency jbig2enc-gitAUR so Paperless can use it to reduce the size of generated PDF documents.\n\n"
    },
    {
      "title": "Migrating from Paperless-ng",
      "level": 3,
      "content": "If you have paperless-ng installed and wish to migrate to paperless-ngx-venvAUR, you can install paperless-ngx-venvAUR and choose to remove paperless-ng when asked. No data will be lost. Still, you will need to run as root:\n\n```\n# paperless-manage makemigrations\n```\n\nAfter that, apply the usual database migrations as the paperless user:\n\n```\n[paperless]$ paperless-manage migrate\n```\n\nFinally, restart paperless.target.\n\n"
    },
    {
      "title": "Start",
      "level": 2,
      "content": "Start/enable paperless.target. Your Paperless instance should now be available at port 8000.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "For details on Paperless configuration, visit its official documentation. The configuration file is located at /etc/paperless.conf.\n\nDo not forget to restart paperless.target after changing configurations.\n\n"
    },
    {
      "title": "Adjust the configuration to your needs",
      "level": 3,
      "content": "Open the configuration file located at /etc/paperless.conf at adjust the parameters to your needs, especially those concerning OCR. For explanations of the individual settings, refer to the official documentation.\n\n"
    },
    {
      "title": "Set a secret key",
      "level": 3,
      "content": "After initial installation, you should generate and set a secret key. You do not need to remember it, but since it is used for securing signed data, you should keep it secret. To set a secret key, uncomment and modify the following line:\n\n```\n/etc/paperless.conf\n```\n\n```\n#PAPERLESS_SECRET_KEY=change-me\n```\n\nTo generate a key and set it in the configuration file, you can simply run the following command:\n\n```\n# sed -i /etc/paperless.conf -e \"s|#PAPERLESS_SECRET_KEY=change-me|PAPERLESS_SECRET_KEY=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 32)|\"\n```\n\n"
    },
    {
      "title": "Run database migrations",
      "level": 3,
      "content": "After initial installation and after updates, you should run the database migrations:\n\n```\n[paperless]$ paperless-manage migrate\n```\n\n"
    },
    {
      "title": "Create admin user",
      "level": 3,
      "content": "After initial installation, you should create an admin user for your Paperless instance:\n\n```\n[paperless]$ paperless-manage createsuperuser\n```\n\n"
    },
    {
      "title": "Nginx",
      "level": 3,
      "content": "Install Nginx and use the following configuration as a starting point for the Paperless virtual host:\n\n```\n/etc/nginx/sites-available/paperless.domain.tld\n```\n\n```\nserver {\n\n    server_name paperless.domain.tld;\n    listen 80;\n    listen [::]:80;\n\n    location / {\n\n        # Adjust host and port as required.\n        proxy_pass http://localhost:8000/;\n\n        # These configuration options are required for WebSockets to work.\n        proxy_http_version 1.1;\n        proxy_set_header Upgrade $http_upgrade;\n        proxy_set_header Connection \"upgrade\";\n\n        proxy_redirect off;\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\n        proxy_set_header X-Forwarded-Host $server_name;\n    }\n\n}\n```\n\n"
    },
    {
      "title": "Pacman hook",
      "level": 3,
      "content": "To automatically run migrations for the Paperless database on package updates, you can make use of the included pacman hook:\n\n```\n# mkdir -vp /etc/pacman.d/hooks\n# ln -sv /usr/share/paperless/docs/paperless.hook /etc/pacman.d/hooks/\n```\n\n"
    },
    {
      "title": "BadSignature errors logged when trying to import documents",
      "level": 3,
      "content": "If you see BadSignature errors when trying to import documents, it is likely that your configuration file located at /etc/paperless.conf is not taken into account because the template configuration file /usr/share/paperless/paperless.conf is given precedence. In that case, remove or rename /usr/share/paperless/paperless.conf and restart paperless.target.\n\n"
    },
    {
      "title": "Warning about misconfigured retry and timeout",
      "level": 3,
      "content": "If you see a warning about misconfigured retry and timeout, you can safely ignore it and wait for the simple upstream fix in python-django-qAUR. The warning would look like this:\n\n```\ngunicorn[29457]: /usr/lib/python3.9/site-packages/django_q/conf.py:136: UserWarning: Retry and timeout are misconfigured. Set retry larger than timeout,\ngunicorn[29457]:         failure to do so will cause the tasks to be retriggered before completion.\ngunicorn[29457]:         See https://django-q.readthedocs.io/en/latest/configure.html#retry for details.\ngunicorn[29457]:   warn(\"\"\"Retry and timeout are misconfigured. Set retry larger than timeout,\n```\n\n"
    },
    {
      "title": "Thumbnail generation with ImageMagick fails",
      "level": 3,
      "content": "You have to disable a policy rule in /etc/ImageMagick-7/policy.xml. Add <!-- and --> to comment out the following line:\n\n```\n/etc/ImageMagick-7/policy.xml\n```\n\n```\n<!-- <policy domain=\"delegate\" rights=\"none\" pattern=\"gs\" /> -->\n```\n\nConsider the possible security implications noted at the beginning of the ImageMagick article. Also note that Paperless will fall back to using ghostscript anyway if the ImageMagick policy rule stays active.\n\n"
    },
    {
      "title": "The consumer service keeps one CPU core constantly at 100%",
      "level": 3,
      "content": "Uncomment the line concerning the PAPERLESS_CONSUMER_POLLING setting in your /etc/paperless.conf configuration file:\n\n```\n/etc/paperless.conf\n```\n\n```\nPAPERLESS_CONSUMER_POLLING=10\n```\n\n"
    }
  ]
}