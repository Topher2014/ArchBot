{
  "title": "Input method",
  "url": "https://wiki.archlinux.org/title/Input_method",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Fonts#Non-latin scripts\n- Locale\n\n"
    },
    {
      "title": "Input method",
      "level": 2,
      "content": "From Wikipedia:Input method:\n\nIn simpler words, an IME is an application that allows us to use Latin characters in order to type non-Latin characters.\n\nSome IMEs do this through a process called romanization, which is the transliteration of non-Latin language sounds into the Latin equivalents that most closely resemble them. As an example, the Japanese written word for \"sake\" or \"rice wine\" is 酒, also written as さけ, and romanized as \"sake\". The IME's role is to act as a middleman between the keyboard and the input fields, so that when we type \"sake\" it will intercept the keyboard's input, replace \"sake\" with 酒 or さけ (as chosen by users) and type the native characters for us instead of the keys we pressed.\n\nThere are also IMEs that do not make use of romanization. One of the most prominent ones, Cangjie, does so by decomposing Chinese characters into their radicals, matching these radicals to a second set of its own internal radicals, and finally matching these internal radicals to the Latin characters. As an example, the Chinese written word for \"wine\" is also 酒, which consists of the radicals 氵, 一, ⼉, 口 and 一. Cangjie matches these radicals to the internal radicals 水, 一, 金, 田 and 一, and then matches these to the Latin characters emcw; this means that when we type \"emcw\", Cangjie will intercept the keyboard's input, replace \"emcw\" with 酒, and type that character on the screen.\n\n"
    },
    {
      "title": "Input method framework",
      "level": 3,
      "content": "Most IMEs work as part of an input method framework (commonly abbreviated as IMF), which is an application that allows the user to easily switch between different IMEs. In fact, this is the exact same application that many of us unknowingly use everyday to switch between the different Latin keyboard layouts (e.g. English, Spanish, German, etc).\n\nThe most common IMF is IBus (often used in GTK-based environments like GNOME), followed by Fcitx5 (mostly used in Qt-based environments like KDE), Scim, Fcitx, and Uim. Very uncommon ones include Gcin, Nimf and Hime. [1] Additionally, Emacs is a very popular text editor that has its own internal IMF.\n\nSee also Wikipedia:List of input methods for Unix platforms.\n\n"
    },
    {
      "title": "List of available input method editors",
      "level": 2,
      "content": "The following table shows the IMEs for various languages currently available in the Arch repositories and the AUR.\n\nNote: **Mozc** \n\nTable content:\nIMFIME | Fcitx5 | Fcitx | IBus | Uim | Emacs | Scim | Hime | Gcin | Nimf\nChinese\nRime | fcitx5-rime | fcitx-rime | ibus-rime | – | – | – | – | – | built-in\nPinyin | fcitx5-chinese-addons | built-in | ibus-pinyinAUR | – | – | scim-pinyinAUR | – | – | built-in\nZhuyin | fcitx5-chewing | fcitx-chewing | ibus-chewing | – | – | scim-chewingAUR | – | – | built-in\nCangjieSuchengSmartCangjie | fcitx5-table-extra | fcitx-table-extra | ibus-table-chinese | – | – | scim-tablesAUR | – | – | –\nWubi | built-in | built-in | ibus-table | built-in | – | scim-tablesAUR | – | – | –\nLibpinyin | – | fcitx-libpinyin | ibus-libpinyin | – | – | – | – | – | –\nSunPinyin | – | fcitx-sunpinyin | ibus-sunpinyin | – | – | – | – | – | –\nJapanese\nMozc | fcitx5-mozc-utAUR | fcitx-mozc-utAUR | ibus-mozcAUR | – | emacs-mozcAUR | – | – | – | –\nAnthy | fcitx5-anthy | fcitx-anthy | ibus-anthy | built-in | – | scim-anthyAUR | built-in | built-in | built-in\nSKK | fcitx5-skk | fcitx-skk | ibus-skk | built-in | – | – | – | – | –\nKKC | fcitx5-kkc | fcitx-kkc | ibus-kkc | – | – | – | – | – | –\nKorean\nLibhangul | fcitx5-hangul | fcitx-hangul | ibus-hangul | built-in | – | scim-hangulAUR | – | – | built-in\nVietnamese\nUniKey | fcitx5-unikey | fcitx-unikey | ibus-unikey | – | – | – | – | – | –\nBamboo | fcitx5-bamboo | – | ibus-bambooAUR | – | – | – | – | – | –\nIndic\nAvro (Bangla) | – | – | ibus-avro-gitAUR | – | – | – | – | – | –\nHelakuru (Sinhala) | – | – | ibus-helakuruAUR | – | – | – | – | – | –\nm17n | fcitx5-m17n | fcitx-m17n | ibus-m17nAUR | – | – | scim-m17nAUR | – | – | –\nOpenBangla Keyboard (Bangla) | fcitx5-openbangla-gitAUR | – | openbangla-keyboardAUR | – | – | – | – | – | –\nSayura (Sinhala) | fcitx5-sayura | fcitx-sayura | – | – | – | – | – | – | –\nVarnam | – | – | govarnam-ibus-gitAUR | – | – | – | – | – | –\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "In order for your desktop environment to properly register an installed input method framework as available and assign it to handle user input, a set of environment variables must be configured accordingly.\n\nNote: **NOT** \n\n"
    },
    {
      "title": "Fcitx5",
      "level": 3,
      "content": "See Fcitx5#Integration for more information.\n\n"
    },
    {
      "title": "Fcitx",
      "level": 3,
      "content": "See Fcitx for more information.\n\n```\nGTK_IM_MODULE=fcitx\nQT_IM_MODULE=fcitx\nXMODIFIERS=@im=fcitx\n```\n\n"
    },
    {
      "title": "IBus",
      "level": 3,
      "content": "See IBus for more information.\n\n```\nGTK_IM_MODULE=ibus\nQT_IM_MODULE=ibus\nXMODIFIERS=@im=ibus\n```\n\n"
    },
    {
      "title": "Uim",
      "level": 3,
      "content": "See Uim for more information.\n\n```\nGTK_IM_MODULE=uim\nQT_IM_MODULE=uim\nXMODIFIERS=@im=uim\n```\n\n"
    },
    {
      "title": "Emacs",
      "level": 3,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nAccording to this Fcitx wiki entry, \"in some case, including emacs and java. Emacs has a historical bug, that under en_US.UTF-8 or similar locale, it will never use XIM (Though emacs is a gtk app, it use XIM). The only way to walkaround this is to use LC_CTYPE to fix this.\"\n\n"
    },
    {
      "title": "Scim",
      "level": 3,
      "content": "See Scim for more information.\n\n```\nGTK_IM_MODULE=scim\nQT_IM_MODULE=scim\nXMODIFIERS=@im=scim\n```\n\n"
    },
    {
      "title": "Xim",
      "level": 3,
      "content": "```\nGTK_IM_MODULE=xim\nQT_IM_MODULE=xim\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Fedora:I18N/InputMethods\n- Gentoo:Input methods\n- Wikipedia:Input method\n\n"
    }
  ]
}