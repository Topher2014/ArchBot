{
  "title": "Tomu",
  "url": "https://wiki.archlinux.org/title/Tomu",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Smartcards\n- Universal 2nd Factor\n- Yubikey\n\nThe Tomu is a family of open-source FIDO2 security keys. This article describes how to set up and use it. So far this page is limited to The original Tomu – help to expand it.\n\n"
    },
    {
      "title": "Dependencies",
      "level": 3,
      "content": "To build Tomu images, you will need to install arm-none-eabi-gcc and arm-none-eabi-newlib. To flash software on the Tomu, use dfu-util.\n\n"
    },
    {
      "title": "Verifying",
      "level": 3,
      "content": "Your Tomu should arrive with dfu-util installed. If you insert Tomu into the USB port and toboot starts, the green and red led should flash alternately. To check if your Tomu is running the boot loader toboot, and which version, run:\n\n```\n# dfu-util --list\n```\n\n```\n...\nFound DFU: [1209:70b1] ver=0101, devnum=19, cfg=1, intf=0, path=\"1-1.2\", alt=0, name=\"Tomu Bootloader (5) v2.0-rc7\", serial=\"UNKNOWN\"\n```\n\n"
    },
    {
      "title": "Update the boot loader (toboot)",
      "level": 3,
      "content": "If the boot loader of your Tomu is not the newest version, you should update it. You can compile it yourself, or download a prebuilt version. Install the update like this:\n\n```\n# dfu-util -d 1209:70b1 -D toboot-booster.dfu\n```\n\n"
    },
    {
      "title": "Installing other software",
      "level": 3,
      "content": "If you do not want to use Tomu as U2F token but use it for different purposes, you can find example applications on GitHub. They can be installed with df-util:\n\n```\n# dfu-util -d 1209:70b1 -D application.dfu\n```\n\n"
    },
    {
      "title": "Installing U2F firmware (chopstx port)",
      "level": 3,
      "content": "The code for the U2F firmware for Tomu can be found on GitHub. Clone it with git and compile it:\n\n```\n$ git clone https://github.com/im-tomu/chopstx.git\n$ cd chopstx/u2f\n$ make\n```\n\nYou have two options:\n\n- Flash it without a key: If flashed without a key, the firmware generates EC private key on its first boot and erases it when it enters the boot loader! You cannot create a backup. But this has the advantage that the key will never exist outside Tomu. Make sure to have an alternative second factor or recovery possibility. You cannot update the software without losing the private key.\n- Inject a private key: Generate a key on your computer, inject it into the firmware and flash them together to the Tomu.\n\n"
    },
    {
      "title": "Injecting a private key (optional)",
      "level": 4,
      "content": "Generate your private key:\n\n```\n$ openssl ecparam -name prime256v1 -genkey -noout -outform der -out key.der\n```\n\nYou may want to back it up encrypted and/or offline. Inject it to the build:\n\n```\n$ ./inject_key.py --key key.der\n```\n\n"
    },
    {
      "title": "Flashing",
      "level": 4,
      "content": "You can flash the software to the device:\n\n```\n# dfu-util -v -d 1209:70b1 -D build/u2f.bin\n```\n\nWhen the flashing is successful, the LEDs should have stopped flashing. Remove it and plug it in again – with the U2F software the red LED should flash only very shortly and quickly.\n\n"
    },
    {
      "title": "Updating or restoring",
      "level": 4,
      "content": "If you have injected a private key, you can build the software again and inject the key. You must however set the counter to a value at least 1 higher than it was on the Tomu:\n\n```\n$ ./inject_key.py --key key.der --ctr 1001\n```\n\nIf you still have the original Tomu (i.e. you want to update) you can find out the counter in the Yubikey demo site. Otherwise, set it to a value \"big enough\".\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "You can use https://webauthn.io/ or the Yubikey demo site to test your U2F key or with pamu2fcfg on terminal:\n\nPlug the Tomu in. When the application (for example your browser) asks you to press the button, the red LED on the Tomu starts to blink. You have now to press the \"lower button\". The capacitive buttons are the four contact areas on the end of the Tomu. The \"lower\" one is from watching at it from the side with the chip on it. Press it with your finger – it can be tricky to reach – in worst case use a metal screwdriver or similar. When you pressed it, the red LED stays on for a few seconds then the application receives the answer.\n\n"
    }
  ]
}