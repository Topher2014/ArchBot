{
  "title": "Fcitx",
  "url": "https://wiki.archlinux.org/title/Fcitx",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Fcitx5\n- IBus\n- SCIM\n- uim\n\nFcitx is a lightweight input method framework aimed at providing environment independent language support for Linux. It supports a lot of different languages and also provides many useful non-CJK features.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the fcitx package.\n\n"
    },
    {
      "title": "Input method engines",
      "level": 3,
      "content": "Fcitx provides built-in input methods for Chinese Pinyin and table-based input (for example Wubi).\n\nDepending on the language you wish to type, other input method engines are available:\n\n"
    },
    {
      "title": "Chinese",
      "level": 4,
      "content": "- fcitx-baidupinyinAUR, fcitx wrapper for Baidu Pinyin IM engine.\n- fcitx-chewing is a popular Zhuyin input engine for Traditional Chinese based on libchewing.\n- fcitx-cloudpinyin uses internet sources to provide input candidates. The selected cloud result will be added to local dictionary. It support all fcitx pinyin input method except fcitx-rime.\n- fcitx-googlepinyin, Googlepinyin wrapper for fcitx.\n- fcitx-libpinyin, based on libpinyin. It has a better algorithm than fcitx-sunpinyin.\n- fcitx-rime, based on schemas from the Rime IME project.\n- fcitx-sogoupinyinAUR, Sogou input method supporting Jianpin, fuzzy sound, cloud input, English input, and mixed skin.\n- fcitx-sunpinyin, based on sunpinyin. It strikes a good balance between speed and accuracy.\n\n"
    },
    {
      "title": "Japanese",
      "level": 4,
      "content": "- fcitx-anthy, a popular Japanese input engine. However, it is not actively developed anymore.\n- fcitx-mozc, based on Mozc, the Open Source Edition of Google Japanese Input.\n- fcitx-kkc, a Japanese Kana Kanji input engine, based on libkkc.\n- fcitx-skk, a Japanese Kana Kanji input engine, based on libskk.\n\n"
    },
    {
      "title": "Other languages",
      "level": 4,
      "content": "- fcitx-hangul, for typing Korean hangul, based on libhangul.\n- fcitx-m17n, for other languages provided by M17n.\n- fcitx-sayura, for typing Sinhalese.\n- fcitx-unikey, for typing Vietnamese characters.\n\n"
    },
    {
      "title": "Input method module",
      "level": 3,
      "content": "To obtain a better experience in Qt programs, install fcitx-qt4AUR, fcitx-qt5 or fcitx-qt6 input method modules as your need, or the fcitx-im group to install fcitx, fcitx-qt5 and fcitx-qt6. Without these modules, the input method may work on most applications but you may experience input method hang up, preview window screen location error or no preview error.\n\nApplications below do not use GTK/Qt input module:\n\n- Applications use Tk, motif or xlib\n- Emacs, Opera, OpenOffice, LibreOffice, Skype, Wine, Java, Xterm, urxvt, WPS\n\n"
    },
    {
      "title": "Others",
      "level": 3,
      "content": "- fcitx-ui-light, light UI for fcitx.\n- fcitx-table-extra adds Cangjie, Zhengma, Boshiamy support.\n- fcitx-table-other, tables for Latex, Emoji and others.\n- #GUI configuration tools\n\nOthers packages (including git version) are also available in the AUR. All components of fcitx will requires fcitx to restart after install.\n\n"
    },
    {
      "title": "Desktop Environment Autostart",
      "level": 3,
      "content": "If you are using any XDG compatible desktop environment such as KDE, GNOME, Xfce, LXDE, after you re-login, the autostart should work out of the box. If not, run the fcitx executable. To see if fcitx is working correctly, open an application and press Ctrl+Space (the default shortcut for switching the input method) to invoke fcitx and input some words.\n\nIf fcitx failed to start with your desktop automatically or if you want to change the parameters to start fcitx, configure autostart or edit the fcitx-autostart.desktop file in your ~/.config/autostart/ directory (copy it from /etc/xdg/autostart/ if it does not exist yet).\n\nWhen other input methods with xim support are also running, fcitx may fail to start due to an xim error. Ensure that no other input methods are running before you start fcitx.\n\nAlso please set the following environment variables to prefer IM modules for GTK/Qt applications.\n\nFor i3 and Sway users, add exec --no-startup-id fcitx -d in your configuration file. fcitx5 users should add exec --no-startup-id fcitx5 -d instead.\n\n"
    },
    {
      "title": "Set environment variables for IM modules",
      "level": 3,
      "content": "Set the following environment variables to register the input method modules.\n\n```\nGTK_IM_MODULE=fcitx\nQT_IM_MODULE=fcitx\nXMODIFIERS=@im=fcitx\n```\n\nWithout these variables, applications may fallback to XIM protocol, except for Qt5 applications which do not have XIM support and require an IM module in place.\n\nIf fcitx process does not start automatically, you might need to add fcitx & in your ~/.xinitrc. If fcitx & does not start, type sleep 2 after it.\n\n- Avoid .bashrc for this, see GregsWiki:DotFiles.\n- If all Qt applications have problem with fcitx, run qtconfig (qtconfig-qt4), and go to the third tab, make sure fcitx is in the Default Input Method combo-box.\n\n"
    },
    {
      "title": "XIM",
      "level": 3,
      "content": "Optionally, you can use the X Input Method (XIM) in your GTK and/or Qt programs without installing the above modules in which case you need to change the corresponding lines above as following:\n\n```\nGTK_IM_MODULE=xim\nQT_IM_MODULE=xim\n```\n\nIf you change it in ~/.xprofile or ~/.xinitrc, add export.\n\n- Gtk2 uses /usr/lib/gtk-2.0/2.10.0/immodules.cache as immodule cache file since 2.24.20. If you have set GTM_IM_MODULE_FILE environment variable or do not use install script of official packages to update the cache, please change/clear the environment variable and use /usr/bin/gtk-query-immodules-2.0 --update-cache to update immodule cache.\n- Qt5 applications no longer support XIM protocol as Qt4 did, and rely on IM modules entirely for communicating with fcitx.\n\n"
    },
    {
      "title": "GUI configuration tools",
      "level": 3,
      "content": "fcitx provides a KDE configuration module (kcm-fcitx) and a GTK3 configuration tool (fcitx-configtool).\n\nRun fcitx-config-gtk3 after fcitx-configtool is installed. Unset Only Show Current Language if you want to enable an input method for a different language.\n\nStop fcitx manually before changing configuration, or the change may be lost.\n\nIn order to enable spell checking, press Ctrl+Alt+h when fcitx is on an input method provided by fcitx-keyboard.\n\n"
    },
    {
      "title": "Input methods configuration",
      "level": 3,
      "content": "You can add/remove input methods in the GUI tools. Note that the search is case sensitive.\n\nThe first set input method is the inactive state, while all the rest will be active states. You generally want the inactive state to be one of the Keyboard options (e.g. \"Keyboard - English (US)\"). These options just input based on the keyboard layout in the name.\n\nUnder Global Config, the Trigger Input Method shortcut will only switch between the inactive and last used active state. The Scroll between Input Methods will by default only scroll between different active states, but can also be set to include the inactive state in the advanced settings. Furthermore, the Scroll between Input Methods shortcut has to be pressed in order, e.g. ALT_SHIFT will only activate if alt is pressed before shift.\n\nConfiguration settings for IME's can be found by by setting the keyboard to the desired IME and right-clicking the tray icon.\n\n"
    },
    {
      "title": "Change default UI",
      "level": 3,
      "content": "Fcitx support kimpanel protocol to provide better desktop integration.\n\n- Gnome-Shell: You can install kimpanel from extensions.gnome.org or gnome-shell-extension-kimpanel-gitAUR, which provides a similar user experience as ibus-gjs.\n\n"
    },
    {
      "title": "Extend pinyin dictionary",
      "level": 3,
      "content": "Pinyin dictionary is located at ~/.config/fcitx/pinyin. File pybase.mb is for single characters and file pyphrase.mb defines pinyin phrases. To extend them, put your file into /usr/share/fcitx/pinyin and restart fcitx.\n\n"
    },
    {
      "title": "Skins",
      "level": 3,
      "content": "You can download skins and extract them to one of the following directories, you can create the directory if it does not exist:\n\n```\n/usr/share/fcitx/skin   #Global settings\n~/.config/fcitx/skin    #User settings\n```\n\n"
    },
    {
      "title": "Cloud Pinyin configuration",
      "level": 3,
      "content": "After installing the fcitx-cloudpinyin input method, restart fcitx. If you could not find it in configuration GUI, enable advanced settings. The cloud query result will be added to current input method dictionary automatically.\n\nIf your network prevents you from accessing Google, change Cloud Pinyin source to Baidu.\n\nThe query result from cloud will list as secondary candidate by default and it is configurable. If the result already exists, only one item is shown.\n\n"
    },
    {
      "title": "Shortcut keys",
      "level": 3,
      "content": "Some commonly used default shortcut keys:\n\n- Ctrl+Space - activates the input method\n- Left Shift - temporarily switches to English\n- Ctrl+Shift - switch between input methods\n- -/= - page forward/backward\n- Shift+Space - Full-width, half-width switching\n\n"
    },
    {
      "title": "Vim",
      "level": 3,
      "content": "If you often use Fcitx under Vim, you can install the vim-fcitxAUR plugin, or add the following code to ~/.vimrc. When exiting insert mode, Fcitx is automatically closed, otherwise the reverse:\n\n```\n\"##### auto fcitx  ###########\nlet g:input_toggle = 1\nfunction! Fcitx2en()\n   let s:input_status = system(\"fcitx-remote\")\n   if s:input_status == 2\n      let g:input_toggle = 1\n      let l:a = system(\"fcitx-remote -c\")\n   endif\nendfunction\n\nfunction! Fcitx2zh()\n   let s:input_status = system(\"fcitx-remote\")\n   if s:input_status != 2 && g:input_toggle == 1\n      let l:a = system(\"fcitx-remote -o\")\n      let g:input_toggle = 0\n   endif\nendfunction\n\nset ttimeoutlen=150\n\"Exit insert mode\nautocmd InsertLeave * call Fcitx2en()\n\"Enter insert mode\nautocmd InsertEnter * call Fcitx2zh()\n\"##### auto fcitx end ######\n```\n\n"
    },
    {
      "title": "Special symbols",
      "level": 3,
      "content": "Create ~/.config/fcitx/data/pySym.mb, the content of the file is as follows:\n\n```\n#The first line with \"#\" is a comment\n #Format: coding symbol\n #Code can only be lowercase letters, after pinyin analysis, the longest is 10 (such as py is 2, pinyin is also 2)\n #Mathematics symbols\n sxfh ＋\n sxfh －\n sxfh ＜\n sxfh ＝\n sxfh ＞\n sxfh ±\n sxfh ×\n sxfh ÷\n sxfh ∈\n sxfh ∏\n sxfh ∑\n sxfh ∕\n sxfh √\n sxfh ∝\n```\n\nEnter a code directly to match the corresponding special symbol.\n\n"
    },
    {
      "title": "Clipboard Access",
      "level": 3,
      "content": "You can use fcitx to input text in you clipboard (as well as a short clipboard history and primary selection). The default trigger key is Ctrl-;. You can change the trigger key as well as other options in the Clipboard addon configure page.\n\n"
    },
    {
      "title": "fcitx-remote",
      "level": 3,
      "content": "fcitx-remote is a commandline tool that can be used to control the fcitx state. It is installed with the fcitx package.\n\nOne option worth elaborating upon here is fcitx-remote -s imname, which switches to the input method identified by imname. The correct imname for an in use input method can be found by executing fcitx-diagnose, and looking under the \"## Input Methods:\" section.\n\n"
    },
    {
      "title": "Input special character",
      "level": 3,
      "content": "See Fcitx5#Input special characters, this content also applies to Fcitx.\n\n"
    },
    {
      "title": "Disable or change Extra key for trigger input method [sic]",
      "level": 3,
      "content": "This setting is under the Global Config tab and defaults to SHIFT Both, meaning that pressing either shift key will immediately change input methods. Although it should only apply when a shift key is pressed individually, it tends to randomly interrupt typing capital letters, selecting text with the keyboard, etc. while using standard keyboard input.\n\nIn addition, this setting may revert to default without warning at any time. To ensure fcitx's configuration cannot be modified, you must make the file immutable: chattr +i ~/.config/fcitx/config (as the root user).\n\n"
    },
    {
      "title": "Diagnose the problem",
      "level": 3,
      "content": "If you have problems using fcitx, eg. Ctrl+Space fail to work in all applications, then the first thing you should try is to diagnose using fcitx-diagnose. The output of fcitx-diagnose should contain the clue to most common problems. Providing the output of it will also help when you consult other people(eg. in IRC or forums).\n\n"
    },
    {
      "title": "Emacs",
      "level": 3,
      "content": "If your LC_CTYPE is English, you may not be able to use input method in emacs due to an old emacs bug. You can set your LC_CTYPE to something else such as zh_CN.UTF-8 before emacs starts to get rid of this problem.\n\nNote that the corresponding locale should be generated on your your system.\n\nThe default fontset will use `-*-*-*-r-normal--14-*-*-*-*-*-*-*' as basefont (in src/xfns.c), if you do not have one matched (like terminus or 75dpi things, you can look the output of `xlsfonts'), XIM can not be activated. According to FAQ and Fonts, it is likely that xorg-fonts-misc-otbAUR is the one that should be installed since xorg-fonts-misc no longer provides the required fontset.\n\n"
    },
    {
      "title": "Emacs Daemon",
      "level": 4,
      "content": "If you are using emacs daemon/client mode, LC_CTYPE should be set when starting the daemon. For example, by running emacs daemon with LC_CTYPE=zh_CN.UTF-8 emacs --daemon.\n\nIf starting emacs daemon from systemd, set Environment=\"LC_CTYPE=zh_CN.UTF-8\" \"XMODIFIERS=@im=fcitx\" in the unit file.\n\n(XMODIFIERS may need to be set explicitly here as systemd does not load .xprofile. Check the initial-environment variable in emacs to verify both variables are set correctly.)\n\n"
    },
    {
      "title": "Ctrl+Space fail to work in GTK programs",
      "level": 3,
      "content": "This problem sometimes happens especially when the locale is set as English. Please make sure your GTK_IM_MODULE is set correctly.\n\nSee also FAQ\n\nIf you have set the *_IM_MODULE environment variables to fcitx but cannot activate fcitx, please check if you have installed the corresponding input method modules.\n\nSome programs can only use xim, if you are using these programs, please make sure your XMODIFIERS is set properly and be aware of the problems you may have. These programs include all programs that are not using GTK or Qt (e.g. programs that use tk, motif, or xlib directly), emacs, opera, openoffice, libreoffice, skype.\n\nIf you cannot enable fcitx in gnome-terminal under Gnome and the above way does not work, try:\n\n```\n$ gsettings set org.gnome.settings-daemon.plugins.xsettings overrides \"{'Gtk/IMModule':<'fcitx'>}\"\n```\n\n"
    },
    {
      "title": "Buildin Chinese Pinyin Default NOT ACTIVE",
      "level": 3,
      "content": "If your locale is en_US.UTF-8, fcitx did NOT enable the buildin Chinese Pinyin input method by default. There is only fcitx-keyboard-us input method enabled. You can get a notice by fcitx-diagnose command like this:\n\n```\n## Input Methods:\n       1.  Found 1 enabled input methods:\n               fcitx-keyboard-us\n       2.  Default input methods:\n           **You only have one input method enabled, please add a keyboard input method as the first one and your main input method as the second one.**\n```\n\nThen you should add Pinyin or Shuangpin input method to actived input methods by the GUI configure tool.\n\n"
    },
    {
      "title": "fcitx and KDE",
      "level": 3,
      "content": "For some reasons, KDE does not handle keyboard layouts properly. For example, if you switch from US (English) to LT (Lithuanian), all numbers on the keyboard should produce Lithuanian letters, but they still produce numbers as the output. This can be fixed by these steps:\n\n1. Turn off fcitx if it is running in the background.\n1. Disable stuff related to KDE: At System settings > Input devices > Layouts (tab) make sure that Configure layouts is unchecked. At System settings > Input devices > Advanced (tab) make sure that Configure keyboard options is unchecked.\n1. Start fcitx to start it. You can close the terminal - fcitx will still be running in the background.\n1. Set up your needed layouts (right click on the system tray icon, then Configure).\n1. Right click on the system tray icon, then Exit\n\n1. At System settings > Input devices > Layouts (tab) make sure that Configure layouts is unchecked.\n1. At System settings > Input devices > Advanced (tab) make sure that Configure keyboard options is unchecked.\n\nAt this point you should have working layouts, native KDE layouts switch icon should appear and you can switch them by mouse scroll or click on it.\n\n"
    },
    {
      "title": "Input method switched to English unintentionally",
      "level": 3,
      "content": "For instance, in XMind, when the user presses Enter to create a node, input method is always switched to English, and has to be switched back to Chinese manually.\n\nTo fix this issue, open the fcitx GUI configuration tool (provided by fcitx-configtool), switch to tab Global Config, in dropdown menu Share State Among Window, select PerProgram or All.\n\n"
    },
    {
      "title": "xmodmap settings being overwritten",
      "level": 3,
      "content": "fcitx controls keyboard layout, so your xmodmap settings will be overwritten. Since 4.2.7, Fcitx will try to load ~/.Xmodmap if it exists.\n\nFor more details on how you can save your xmodmap changes see FAQ\n\n"
    },
    {
      "title": "Fcitx and setxkbmap",
      "level": 4,
      "content": "If you are using setxkbmap for another language, then (as per above) fcitx can overwrite them and even prevent from switching to that language in certain applications (e.g. QuteBrowser).\n\nIf you would like to prevent that and manage your xmodmap layouts independently from fcitx then follow these steps:\n\n1. Open the fcitx GUI configuration tool (provided by fcitx-configtool)\n1. Switch to tab Addon\n1. Select Advanced\n1. Search for xkb#\n1. Select X Keyboards Integration\n1. Click Configure\n1. Unselect Allow to Override System XKB Settings\n1. Click OK\n\n"
    },
    {
      "title": "Fcitx preedit box is too small with HiDPI",
      "level": 3,
      "content": "See HiDPI#Fcitx\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Fcitx GitLab\n- Fcitx Wiki\n\n"
    }
  ]
}