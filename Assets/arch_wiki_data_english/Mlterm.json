{
  "title": "Mlterm",
  "url": "https://wiki.archlinux.org/title/Mlterm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "mlterm is a very fast low latency terminal emulator that has many unique features such as rendering variable width fonts, proper bidirectional support out of the box, a daemon mode, multiple XIM as well as true background transparency.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the mlterm-gitAUR package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Settings are stored permanently in plain text files under ~/.mlterm/.\n\nMost are defined in ~/.mlterm/main\n\nAll settings can be set through command line options.\n\nA GUI configuration wizard can be opened with Ctrl+RightMouse and assist in experimenting with different settings.\n\n"
    },
    {
      "title": "Padding",
      "level": 3,
      "content": "Padding can be enabled by setting the inner_border=value in the main configuration file ~.mlterm/main or using the --border=value option.\n\n"
    },
    {
      "title": "Fonts",
      "level": 3,
      "content": "Fonts are defined separately in two different files ~/.mlterm/aafont (monospace) and ~/.mlterm/vaafont (non-monospace).\n\n```\nENCODING = FONT NAME, SIZE\n```\n\nEach encoding can use a different font. Check the man page for a complete list of encodings.\n\nMlterm is provided with a tool called mlfc that populates aafont with a list of Unicode blocks-Font pairs that can assist you further down with choosing which fonts to use for specific languages.\n\n"
    },
    {
      "title": "Using variable width fonts",
      "level": 4,
      "content": "mlterm can properly display variable width fonts. First, define them in .mlterm/vaafont\n\n```\nDEFAULT = Latin Modern Roman, 12\n```\n\nAnd enable the option in .mlterm/main\n\n```\nuse_variable_column_width = true\n```\n\nAlternatively, you can pass it on the command line --varwidth or check the Variable column width option in the Font dialog of the configuration window. Antialiasing needs to be enabled otherwise it will fallback to monospace.\n\n```\nuse_anti_alias = true\n```\n\nDepending on the font, adjust Screen size ratio against font size in order to fit the window to the new variable width of its cells. Use the --wscr percentage option or save it permanently in the main configuration file:\n\n```\nscreen_width_ratio = percentage\n```\n\n"
    },
    {
      "title": "Custom colors",
      "level": 3,
      "content": "You can define your custom colors in ~/.mlterm/color file with the following color names :\n\n```\nblack=#48483e\nred=#dc2566\ngreen=#8fc029\nyellow=#d4c96e\nblue=#55bcce\nmagenta=#9358fe\ncyan=#56b7a5\nwhite=#acada1\nhl_black=#76715e\nhl_red=#fa2772\nhl_green=#a7e22e\nhl_yellow=#e7db75\nhl_blue=#66d9ee\nhl_magenta=#ae82ff\nhl_cyan=#66efd5\nhl_white=#cfd0c2\n```\n\nIn addition, foreground and background color values need to be specified separately either with -f and -b arguments or permanently stored in .mlterm/main :\n\n```\nfg_color = #f1ebeb\nbg_color = #272822\n```\n\nValues for the previous examples correspond to the .Xresources monokai color theme.[1]\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "You can access the backscroll mode to scroll the buffer by pressing Shift+Up or Shift+Prior keys or using the mouse wheel.\n\nTo enter buffer selection mode, press Ctrl+Shift+Enter and use arrow keys to navigate. Begin and end your selection by pressing the space Space key. The selected text will be copied to your clipboard.\n\nBoth modes support vi movement using hjkl and u/d keys to navigate the screen.\n\n"
    },
    {
      "title": "Backspace key sequence",
      "level": 3,
      "content": "By default, BackSpace sends ^H. Because some programs don't recognize this key sequence, you can add the following to your ~/.mlterm/key file :\n\n```\nBackSpace=\"\\x7f\"\n```\n\n"
    },
    {
      "title": "Fix dots appearing outside the text drawing area",
      "level": 3,
      "content": "Some fonts have glyphs (e.g. arabic letters, diacritic marks, brackets etc.) that overflow the text drawing area. They can produce dots that stick on the terminal and accumulate over time. Similar to xterm's useClipping setting, enable clipping either with the --clp option or by adding\n\n```\nuse_clipping = true\n```\n\nto your main configuration file.\n\n"
    },
    {
      "title": "Render CJK characters when using Xft",
      "level": 3,
      "content": "If you see empty glyph boxes when rendering CJK characters, that is because the font you are using does not support them, and unlike using cairo, mlterm with Xft does not look for a fallback fonts as an alternative (as explained by the author in GitHub issue#18).\n\nIf your default font does not support CJK glyphs, you can specify such font (such as Noto Sans Mono CJK JP) as a fallback font besides your default font in ~/.mlterm/aafont :\n\n```\nDEFAULT = Fantasque Sans Mono 12\nISO10646_UCS4_1_FULLWIDTH = Noto Sans Mono CJK JP 10\n```\n\n"
    },
    {
      "title": "Render Arabic script in Xft",
      "level": 3,
      "content": "If your main font is not supporting Arabic unicode ranges, you can specifically instruct mlterm to use a font with proper support for Arabic characters (such as DejaVu Sans Mono) by providing an exhaustive list of all unicode ranges for the Arabic script :\n\n```\nU+10a60-10a7f = DejaVu Sans Mono, 10\nU+10a80-10a9f = DejaVu Sans Mono, 10\nU+600-6ffj    = DejaVu Sans Mono, 10\nU+750-77f     = DejaVu Sans Mono, 10\nU+8a0-8ff     = DejaVu Sans Mono, 10\nU+1ee00-1eeff = DejaVu Sans Mono, 10 \nU+10e60-10e7f = DejaVu Sans Mono, 10\nU+fe70-feff   = DejaVu Sans Mono, 10\nU+fb50-fdff   = DejaVu Sans Mono, 10\n```\n\n"
    },
    {
      "title": "Arabic script rendering when using fixed width fonts",
      "level": 3,
      "content": "When entering in Arabic on a R-to-L line, proper rendering of ligatures might need a screen refresh when using fixed width fonts. One workaround is to enable the variable column width option and set your vaafont to the fixed width font. follow this issue on github.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- LWN.net article about terminal emulators\n- Typometer a tool to measure input latency\n\n"
    }
  ]
}