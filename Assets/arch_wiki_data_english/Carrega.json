{
  "title": "Carrega",
  "url": "https://wiki.archlinux.org/title/Carrega",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Help:Navegação\n- Help:Estilo\n\nPorque a vasta maioria do ArchWiki contém indicações que podem precisar de clarificação para usuários novos ao Arch Linux (ou GNU/Linux em geral), esse resumo de procedimentos básicos foi escrito para evitar confusão na assimilação dos artigos e para evitar repetição de conteúdo.\n\n"
    },
    {
      "title": "Organização",
      "level": 2,
      "content": "A maioria dos artigos no ArchWiki não tentam fornecer uma introdução holística a um único tópico; eles são escritos em conformidade ao princípio \"Don't Repeat Yourself\" (\"Não se repita\"), sob a presunção de que o usuário vai buscar e ler qualquer material de suporte que ele ainda não entenda. Quando possível, tal material de suporte é indicado no artigo por um formato especial, veja #Formatação.\n\nPor causa dessa organização, pode ser necessário examinar diversas fontes pra entender completamente um artigo do ArchWiki. Em particular, usuários que são novos no Arch (ou GNU/Linux em geral) devem esperar acabar lendo um grande número de artigos mesmo para resolver problemas simples. É especialmente importante estudar o material de suporte antes de procurar por ajuda adicional de outros usuários.\n\n"
    },
    {
      "title": "Formatação",
      "level": 2,
      "content": "- link para uma seção no artigo atual: #Organização\n- link para outro artigo do ArchWiki\n- link para uma página web externa\n- link para uma página man: intro(1)\n- uma página man que está disponível offline: foo(1)\n- link para um pacote nos repositórios oficiais: foobar\n- link para um pacote no AUR: foobarAUR\n\n"
    },
    {
      "title": "Root, usuário comum ou outro usuário",
      "level": 2,
      "content": "Algumas linhas são escritas assim:\n\n```\n# mkinitcpio -p linux\n```\n\nOutras possuem um prefixo diferente:\n\n```\n$ makepkg -s\n```\n\nO sinal de cerquilha ou tralha (#) indica que o comando precisa ser executado como o superusuário (root), sendo que o sinal de cifrão ($) mostra que o comando deve ser executado como um usuário comum.\n\nQuando os comandos precisam ser executados como um usuário específico, eles serão prefixados pelo nome de usuário entre colchetes, por exemplo:\n\n```\n[postgres]$ initdb -D /var/lib/postgres/data\n```\n\nIsso significa que você deve usar uma ferramenta de elevação de privilégios, por exemplo, com sudo:\n\n```\n$ sudo -u postgres initdb -D /var/lib/postgres/data\n```\n\nUma exceção notável para ter cuidado com:\n\n```\n# Esse alias faz o ls colorizar a listagem\nalias ls='ls --color=auto'\n```\n\nNeste exemplo, o contexto do sinal de cerquilha comunica que isso não deve ser executado como um comando; em vez disso, deve ser editado em um arquivo. Então, neste caso, o sinal de cerquilha representa um comentário. Um comentário pode ser um texto explicativo que não será interpretado pelo programa associado. A denotação de scripts Bash para comentário se parece com o PS1 de root.\n\nApós uma observação mais detalhada, nota-se que os comentários geralmente se iniciam com caractere maiúsculos logo após o sinal #. Geralmente, comandos Unix não são escritos desta forma e, na maioria das vezes, elas são abreviações em vez de palavras completas em inglês (ex.:, Copy se torna cp).\n\nIndependentemente, a maioria dos artigos facilita o discernimento notificando os leitores:\n\nAcrescente ao ~/caminho/para/arquivo:\n\n```\n# Esse alias faz o ls colorizar a listagem\nalias ls='ls --color=auto'\n```\n\n"
    },
    {
      "title": "Acrescentar, adicionar, criar, editar",
      "level": 2,
      "content": "Ao ser solicitado a acrescentar a, adicionar a, criar ou editar um ou mais arquivos, está implícito que você deve usar um dos seguintes métodos.\n\nPara criar ou modificar arquivos multilinha, sugere-se usar um editor de texto. Por exemplo, usando o comando nano para editar o arquivo /etc/bash.bashrc:\n\n```\n# nano /etc/bash.bashrc\n```\n\nPara criar ou sobrescrever um arquivo de uma string, pode ser mais simples usar um redirecionamento da saída. O exemplo a seguir cria ou sobrescreve os conteúdos do arquivo /etc/hostname com o texto meuhostname.\n\n```\n# echo meuhostname > /etc/hostname\n```\n\nRedirecionamento de saída também pode ser usado para anexar um texto a um arquivo. O exemplo a seguir acrescenta o texto [repo-personalizado] ao final do arquivo /etc/pacman.conf.\n\n```\n# echo \"[repo-personalizado]\" >> /etc/pacman.conf\n```\n\nAo ser solicitado a criar diretórios, use o comando mkdir:\n\n```\n# mkdir /mnt/boot\n```\n\n"
    },
    {
      "title": "Tornar executável",
      "level": 3,
      "content": "Após criar um arquivo, se ele é feito para ser executado com um script (seja manualmente ou chamado por um outro programa), ele precisa ser definido como executável, por exemplo com:\n\n```\n$ chmod +x script\n```\n\nVeja chmod. Alguns aplicativos como gerenciador de arquivos podem fornecer interfaces gráficas para fazer o mesmo.\n\n"
    },
    {
      "title": "Source",
      "level": 2,
      "content": "Alguns aplicativos, notavelmente shells de linha de comando, usam scripts para suas configurações: após modificá-los, eles devem ser carregados, usando o source, de forma que as alterações sejam aplicadas. No caso do bash, por exemplo, isso é feito executando (você também pode substituir source por .):\n\n```\n$ source ~/.bashrc\n```\n\nQuando o wiki sugere modificar tal script de configuração, ele não vai lembrar-lhe explicitamente de carregar o arquivo, e apenas em alguns casos ele vai apontar essa seção com um link de lembrete.\n\n"
    },
    {
      "title": "Instalação de pacotes",
      "level": 2,
      "content": "Quando um artigo o convida para instalar alguns pacotes na forma convenciona, ele não vai indicar as instruções detalhadas para fazê-lo; ele vai simplesmente mencionar os nomes dos pacotes a serem instalados.\n\nAs subseções abaixo fornecem uma visão geral dos procedimentos genéricos de instalação dependendo do tipo de pacote.\n\n"
    },
    {
      "title": "Pacotes oficiais",
      "level": 3,
      "content": "Para pacotes dos repositórios oficiais, você precisará ler alguma coisa como:\n\nIsso significa que você tem que executar:\n\n```\n# pacman -S foobar\n```\n\nO artigo do pacman contém explicações detalhadas para lidar com gerenciamento de pacote na proficiência do Arch Linux.\n\n"
    },
    {
      "title": "Arch User Repository",
      "level": 3,
      "content": "Para pacotes do Arch User Repository (AUR) você lerá alguma coisa como:\n\nIsso significa que, em geral, você tem que seguir o link foobarAUR, baixar o pacote com o PKGBUILD, extraí-lo, verificar o conteúdo e, finalmente, executar na mesma pasta:\n\n```\n$ makepkg -si\n```\n\nO artigo do Arch User Repository contém todas as explicações detalhadas e melhores práticas para lidar com pacotes do AUR.\n\n"
    },
    {
      "title": "Controle de unidades do systemd",
      "level": 2,
      "content": "Quando um artigo o convida para start (iniciar), enable (habilitar), etc., alguma unidade de systemd (ex.: um serviço), ele não indicará as instruções detalhadas para fazê-lo; em vez disso, você lerá, em páginas em inglês, alguma coisa como:\n\nIsso significa que você tem que executar:\n\n```\n# systemctl start exemplo.service\n```\n\nUm comando notável que não segue esse padrão exato é daemon-reload, que será chamado sem argumentos.\n\nA seção systemd#Usando units contém uma lista estruturada de ações disponíveis (como start, enable, enable and start, etc.) com seus comandos systemctl correspondentes.\n\n"
    },
    {
      "title": "Configuração do sistema versus específica do usuário",
      "level": 2,
      "content": "É importante se lembrar que há dois tipos diferentes de configurações em um sistema GNU/Linux. A configuração do sistema afeta todos os usuários. Já que as configurações dos sistemas geralmente estão localizados no diretório /etc, privilégios de root são exigidos para alterá-los. Por exemplo, para aplicar uma configuração de Bash que afeta todos os usuários, /etc/bash.bashrc deve ser modificado.\n\nConfiguração específico do usuário afeta apenas um único usuário. Dotfiles, que são arquivos iniciados com ponto, são usados para configuração específica do usuário. Por exemplo, o arquivo ~/.bashrc é o arquivo de configuração específica de usuário. A ideia é que cada usuário pode definir suas próprias configurações, tal como aliases, funções e outros recursos interativos como o prompt, sem afetar as preferências de outros usuários.\n\n"
    },
    {
      "title": "Arquivos de shell comum",
      "level": 3,
      "content": "Bash e outros shells compatíveis com Bourne, tal como Zsh, também carregam arquivos dependendo do shell ser um shell de login ou um shell interativo. Veja Bash#Configuration files e Zsh#Startup/Shutdown files para detalhes.\n\n"
    },
    {
      "title": "Pseudo-variáveis no exemplos de código",
      "level": 2,
      "content": "Alguns blocos de código podem conter as chamadas pseudo-variáveis, que, como o nome sugere, não são realmente variáveis usadas no código. Em vez disso, elas são substitutos genéricos e têm que ser substituídos manualmente com itens de configuração do sistema antes do código poder ser executado ou analisado. Shells comuns como bash e zsh fornecem completação por tab para autocompletar parâmetros para comandos comuns, tal como systemctl.\n\nNos artigos que estão em conformidade com Help:Estilo/Formatação e pontuação, pseudo-variáveis são formatadas em itálico. Por exemplo:\n\n- Enable (equivalente a Habilite) o dhcpcd@nome_interface.service para a interface de rede identificada a partir da saída do comando ip link.\n\nNeste caso nome_interface é usado como um substituto pseudo-variável em uma unidade modelo de systemd. Todas as unidades modelo de systemd, identificáveis pelo sinal @, exigem um item de configuração do sistema como argumento. Veja systemd#Usando units.\n\n- O comando dd if=origem_dados of=/dev/sdX bs=tamanho_setor count=número_setor seek=setor_início_partições pode ser executado como root para apagar uma partição com parâmetros específicos.\n\nNeste caso, as pseudo-variáveis são usadas para descrever os parâmetros que devem ser substituídos por elas. Detalhes sobre como juntá-las são elaborados na seção Securely wipe disk#Calculate blocks to wipe manually, que fornece o comando.\n\nNo caso dos exemplos de arquivos, colar pseudo-variáveis em arquivos de configuração reais pode quebrar os programas que os usam.\n\n"
    },
    {
      "title": "Reticências",
      "level": 3,
      "content": "Na maioria dos casos, as reticências (...) não são parte do conteúdo do arquivo ou saída de código e, em vez disso, representam texto omitido ou opcional que não é relevante para o assunto discutido.\n\nPor exemplo HOOKS=\"... encrypt ... filesystems ...\" ou:\n\n```\n/etc/X11/xorg.conf.d/50-synaptics.conf\n```\n\n```\nSection \"InputClass\"\n    ...\n    Option      \"CircularScrolling\"          \"on\"\n    Option      \"CircScrollTrigger\"          \"0\"\n    ...\nEndSection\n```\n\nEsteja ciente de que, em alguns casos, reticências podem ser parte significante da sintaxe do código: usuários atenciosos serão capazes de reconhecer facilmente esses casos pelo contexto.\n\n"
    }
  ]
}