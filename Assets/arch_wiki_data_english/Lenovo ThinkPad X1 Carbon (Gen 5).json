{
  "title": "Lenovo ThinkPad X1 Carbon (Gen 5)",
  "url": "https://wiki.archlinux.org/title/Lenovo_ThinkPad_X1_Carbon_(Gen_5)",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nGPU | 8086:5916 | Yes\nWireless | 8086:24fd | Yes\nEthernet | 8086:15d8 | Yes\nMobile broadband |  | Yes\nAudio | 8086:9d71 | Yes\nTouchpad |  | Yes\nTrackPoint |  | Yes\nWebcam | 13d3:5682 | Yes\nFingerprint Reader | 138a:0097 | Partial\nBluetooth | 8087:0a2b | Yes\nmicroSD card reader | 10ec:525a | Yes\n\n"
    },
    {
      "title": "Model description",
      "level": 2,
      "content": "Lenovo ThinkPad X1 Carbon, Gen 5.\n\nTo ensure you have this version, install the package dmidecode and run:\n\n```\n# dmidecode -t system | grep Version\n```\n\n```\nVersion: ThinkPad X1 Carbon 5th\n```\n\n"
    },
    {
      "title": "TrackPoint",
      "level": 3,
      "content": "Lenovo uses several different trackpoint types in the 5th generation X1 Carbon. Only the standard ALPS variant has Linux support.\n\n"
    },
    {
      "title": "Fingerprint reader",
      "level": 3,
      "content": "See Lenovo ThinkPad T460p#Fingerprint reader; the X1 Carbon (Gen 5) and T460p use fingerprint readers with the same issue. See also https://linux-hardware.org/?id=usb:138a-0097.\n\n"
    },
    {
      "title": "Function Key actions are \"swapped\"",
      "level": 3,
      "content": "If the action performed when pressing a Function Key is \"swapped\" (Example: Pressing F10 kills Bluetooth instead of sending F10), this can be reversed in BIOS.\n\nEnter BIOS and change Config > Keyboard/Mouse > F1-F12 as Primary Function to \"Enabled\".\n\n"
    },
    {
      "title": "Keyboard Fn Shortcuts",
      "level": 3,
      "content": "- Fn+4 sends XF86Sleep (puts computer to sleep by default)\n- Fn+S sends Alt_L+Sys_Req\n- Fn+P sends Pause\n- Fn+B sends Control_L+Break\n- Fn+K sends Scroll_Lock\n- Fn+Space toggles the keyboard backlight\n- Fn by itself sends XF86WakeUp (wakes computer from sleep by default)\n\n"
    },
    {
      "title": "Special buttons",
      "level": 3,
      "content": "See Laptop/Lenovo#Special buttons.\n\n"
    },
    {
      "title": "Display",
      "level": 3,
      "content": "There are two options for displays:\n\n- 14\" FHD IPS (1920 x 1080): Works\n- 14\" WQHD (2560 x 1440): Works\n\n"
    },
    {
      "title": "Backlight Control",
      "level": 3,
      "content": "I had issues with the thinkpad_acpi module in linux-4.12 and linux-4.13. When loaded no acpi events are generated for Fn+F5 and Fn+F6 keypress by default, because\n\n```\nkernel: thinkpad_acpi: This ThinkPad has standard ACPI backlight brightness control, supported by the ACPI video driver\nkernel: thinkpad_acpi: Disabling thinkpad-acpi brightness events by default...\nkernel: thinkpad_acpi: Standard ACPI backlight interface available, not loading native one\n```\n\nSetting the acpi_brightness=vendor kernel parameter helped but gave issues with brightness save/restore. In linux-4.14 this issue is resolved.\n\n"
    },
    {
      "title": "TrackPoint Scrolling",
      "level": 3,
      "content": "TrackPoint Scrolling is working out of the box in GNOME and MATE. In some WindowManagers, the TrackPoint middle-button scrolling can be enabled by installing the xorg-xinput package and appending the following line to your .xinitrc:\n\n```\nxinput set-prop \"TPPS/2 ALPS TrackPoint\" \"libinput Scroll Method Enabled\" 0 0 1\n```\n\n"
    },
    {
      "title": "Lenovo ThinkPad Thunderbolt 3 Dockingstation",
      "level": 3,
      "content": "The USB-C Dock is a Thunderbolt 3 device. Plugging it in results in a whole lot of PCI entries:\n\n```\n06:00.0 PCI bridge: Intel Corporation JHL6540 Thunderbolt 3 Bridge (C step) [Alpine Ridge 4C 2016] (rev 02)\n07:00.0 PCI bridge: Intel Corporation JHL6540 Thunderbolt 3 Bridge (C step) [Alpine Ridge 4C 2016] (rev 02)\n07:01.0 PCI bridge: Intel Corporation JHL6540 Thunderbolt 3 Bridge (C step) [Alpine Ridge 4C 2016] (rev 02)\n07:02.0 PCI bridge: Intel Corporation JHL6540 Thunderbolt 3 Bridge (C step) [Alpine Ridge 4C 2016] (rev 02)\n07:04.0 PCI bridge: Intel Corporation JHL6540 Thunderbolt 3 Bridge (C step) [Alpine Ridge 4C 2016] (rev 02)\n3c:00.0 USB controller: Intel Corporation Device 15d4 (rev 02)\n```\n\nAs of stock kernel 5.2.1, the dock is fully functional with appropriate kernel modules enabled. In particular, you must enable the r8152 kernel module. See also the Kernel module article on how to enable r8152 persistently. This driver allows the kernel to recognize the USB devices and ethernet port of the dock.\n\nFinally, in order for the internal USB hub in the dock to work, you need to set Thunderbolt 3 security appropriately. To do this, use the bolt tool, which can be installed via bolt. Go to \"Security level\" under Thunderbolt settings in the BIOS, and set it to \"Secure\". After booting, attach the dock and (using the laptop's own keyboard) run boltctl list to find the UUID of your dock. Following that, run boltctl enroll --policy=auto <uuid> to give the dock permission to access the PCIe bus automatically whenever it is plugged in. You may need to reboot your system after this. This procedure is verified to work with the X1 Carbon Gen 5 and Lenovo's dock. It may or may not work with other docks.\n\nAlso remember to enable the \"Support in pre boot environment\" for USB peripherals connected to the dock to work at all.\n\n"
    },
    {
      "title": "HP Thunderbolt 3 Dock",
      "level": 3,
      "content": "The HP Thunderbolt 3 Dock is working out of the box with the insecure method described above. It is not known whether the secure method works with this dock.\n\n"
    },
    {
      "title": "Lenovo p27h-10 (USB Type C)",
      "level": 3,
      "content": "Charging while using the monitor via USB-Type-C is working but the dock functionality needs investigation (e.g. speakers, mouse, directly from the monitor).\n\n"
    },
    {
      "title": "BIOS",
      "level": 2,
      "content": "Downloads and instructions for updating the BIOS can be found in [1].\n\nIn order to update the BIOS, you may either use a bootable ISO or the BIOS Update Utility for Linux. The update utility is only supported on UEFI BIOS version 1.34 or higher [2].\n\n"
    },
    {
      "title": "ISO",
      "level": 3,
      "content": "The ISO files provided by Lenovo are only bootable from a CD or DVD, not from USB. So in order to create a bootable media, you either need an external (R/W) DVD or converting the ISO file so that it can be written to a USB.\n\n"
    },
    {
      "title": "DVD",
      "level": 4,
      "content": "1. Download the ISO file from [3] (and remember to validate its checksum).\n1. Put a DVD in your external DVD writer, and locate what device it was assigned to (e.g., using lsblk). For this example, we assume that it is assigned to /dev/sr0.\n1. Burn it to the DVD: growisofs -Z /dev/sr0=n1mur23w.iso\n1. Reboot, enter the device boot menu by pressing F12, and carfully follow the instructions on the screen.\n\n"
    },
    {
      "title": "USB",
      "level": 4,
      "content": "According to Lenovo ThinkPad X1 Carbon (Gen 6)#Manual (El Torito), it is possible to create a bootable USB like so:\n\n1. Download the ISO file\n1. Install geteltoritoAUR\n1. Convert the ISO image: geteltorito.pl -o bios-update.img n1mur23w.iso\n1. Burn bios-update.img to a USB using dd\n1. Reboot and select the USB as boot device\n\n"
    },
    {
      "title": "Trackpoint/Trackpad not working",
      "level": 3,
      "content": "Several different trackpoints are used with the X1 Carbon Gen 5. There are at least three different trackpoints in use. You can identify them in dmesg as either LEN0071, LEN0072 or LEN0073.\n\nThere is a bug in Synaptics drivers that prevent both Trackpoint and Trackpad to function properly if Trackpoint is enabled at boot. This issue affects the Elantech trackpoint as well as one of the ALPS variants.\n\nIf you have the Elantech trackpoint, identified as LEN0073 you will see the following in your dmesg log.\n\n```\nkernel: psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1\nkernel: psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1\nkernel: psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1\nkernel: psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1\nkernel: psmouse serio1: TouchPad at isa0060/serio1/input0 lost sync at byte 1\nkernel: psmouse serio1: issuing reconnect request\n```\n\nAdd psmouse.synaptics_intertouch=1 to your kernel parameters.\n\n"
    },
    {
      "title": "TrackPoint stops working after waking up from suspend",
      "level": 3,
      "content": "A workaround is to manually insert the elan_i2c module after waking up from suspend:\n\n```\n# modprobe elan_i2c\n```\n\nSee this bugticket for details.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://www.thinkwiki.org/wiki/ThinkWiki\n\n"
    }
  ]
}