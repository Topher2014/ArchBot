{
  "title": "Libero",
  "url": "https://wiki.archlinux.org/title/Libero",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "From Microsemi's website:\n\nThis article shows how to install the Microsemi Libero FPGA Design Toolchain on Arch Linux.\n\n"
    },
    {
      "title": "Preparations",
      "level": 3,
      "content": "Libero needs about 45GiB free diskspace. The size of the disk where Libero is installed must not exceed 2TB!\n\n"
    },
    {
      "title": "Package installation",
      "level": 4,
      "content": "Libero depends on some 32-bit packages from multilib. You need to enable the multilib repository if not already done.\n\nInstall the following packages: openmotif zlib libjpeg6-turbo lib32-libxft lib32-libpng12 lib32-dbus lib32-sqlite lib32-libpulse lib32-libxcomposite\n\nThe License Manager binaries also need package ld-lsb (as of lmgrd v11.16.6.0)\n\n"
    },
    {
      "title": "Qt5 32-bit dependencies",
      "level": 4,
      "content": "Parts of Liberos shared libraries also depend on 32-bit Qt5 libraries, namely libQt5XcbQpa.so.5, libQt5Gui.so.5, libQt5DBus.so.5 and libQt5Core.so.5. Sadly they are not available from the multilib repository so we have to add them manually.\n\nDownload the 32-bit installer of Qt at Qt 32-bit online installer, make it executable and run it:\n\n```\n$ ./qt-unified-linux-x86-2.0.5-2-online.run\n```\n\nIt should be sufficient to install \"Qt 5.5\" -> \"Desktop gcc\". Set a sane installation path e.g. /home/user/lib/qt5_32 where user is your username.\n\n"
    },
    {
      "title": "Extract files",
      "level": 3,
      "content": "The Installer unpacks its own Java Runtime and by default uses /tmp for temporary files even if it tells you differently. Thus make sure you have enough space available on /tmp! The default size of half the total system memory tmpfs is usually not sufficient for the installation, you have to disable it for installation and reboot the system to apply the change:\n\nFrom https://www.microsemi.com/product-directory/design-resources/1750-libero-soc#downloads download the \"Libero SoC v12.1 for Linux\" install file (You need to create an account for that). Make it executable and run it:\n\n```\n$ ./Libero_SoC_v12.1_lin.bin -i console\n```\n\nIn the installer answer the questions and set a path to extract the files to, e.g. /home/user/programs/microsemi/libero/v12.1/ and /home/user/programs/microsemi/common. There is a graphical installer available, just replace console with gui in the call above.\n\n"
    },
    {
      "title": "Silent installation",
      "level": 4,
      "content": "You can also pass the installation parameters to the script on the commandline rather than typing them in. Following an example for a default installation:\n\n```\n$ ./Libero_SoC_v12.1_lin.bin -i silent \\\n   -DUSER_INSTALL_DIR=/home/user/programs/microsemi/libero/v12.1/ \\\n   -DUSER_COMMON_DIR=/home/user/programs/microsemi/common \\\n   -DCHOSEN_FEATURE_LIST=Synplify,ModelSim,ModelsimPro,Identify,Libero \\\n   -DCHOSEN_INSTALL_FEATURE_LIST=Synplify,ModelSim,ModelsimPro,Identify,Libero \\\n   -DCHOSEN_INSTALL_SET=Libero\n```\n\n"
    },
    {
      "title": "Post-Installation",
      "level": 3,
      "content": "Reenable the tmpfs after the installation and reboot.\n\nSome modifications have to be made for Libero to run on Arch Linux.\n\nLibero tries to load an old version of the motif library. Modify the following files and change the 3 to a 4 in the case `uname` block:\n\n```\n/home/user/programs/microsemi/libero/v12.1/Libero/bin/actel_setup_vars and /home/user/programs/microsemi/libero/v12.1/Libero/bin64/actel_setup_vars\n```\n\n```\n...\ncase `uname` in\n  SunOS)\n  \t...\n  Linux)\n    arch=lin\n\n    # X/Motif\n    MOTIF_LIB=libXm.so.4\n    ...\n```\n\nFurthermore the outdated libz version shipped by Microsemi does not work with the repository version of lib32-libpng12. In /home/user/programs/microsemi/libero/v12.1/Libero/lib do the following to make Libero use your library installed by pacman:\n\n```\n$ mv libz.so.1 libz.so.1.old\n$ ln -s /lib/libz.so libz.so.1\n```\n\nRepeat the same two commands in /home/user/programs/microsemi/libero/v12.1/Libero/libfp to enable the FlashPro utilities.\n\nBy mistake the installer adds double quotes around the common path when defining the vault location. Thus Libero will create a folder called \"\" in the working directory when it is called. To change that either manually edit the file install.def to remove the double quotes from the line where VAULT_LOCATION is defined:\n\n```\n/home/user/programs/microsemi/libero/v12.1/Libero/data/install.def\n```\n\n```\n...\ndata VAULT_LOCATION '/home/user/programs/microsemi/common/vault' OVERRIDE\n...\n```\n\n... or run the commands below to remove the quotes:\n\n```\n$ cd /home/user/programs/microsemi/libero/v12.1/Libero/data\n$ sed 's/\"//g' install.def > tmp.def\n$ cp tmp.def install.def\n$ rm tmp.def\n```\n\n"
    },
    {
      "title": "Launching Libero",
      "level": 2,
      "content": "When launching Libero some environment variables have to be set.\n\n```\nLD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/user/lib/qt5_32/5.5/gcc/lib\nLM_LICENSE_FILE=\"port@domain.of.your.license.server\"\nSNPSLMD_LICENSE_FILE=\"port@domain.of.synopsys.license.server\"\n```\n\nThe $LD_LIBRARY_PATH has to include the libraries from the 32-bit Qt installation, $LM_LICENSE_FILE reflects your Libero license server on which the license daemon runs on some port under some url domain.of.your.license.server. $SNPSLMD_LICENSE_FILE is needed for the Synopsys tools used in Libero, set this to a different server and port if you have multiple license daemons running or to $LD_LIBRARY_PATH if not.\n\nWith those variabled set Libero is ready to be launched with\n\n```\n$ /home/user/programs/microsemi/libero/v12.1/Libero/bin/libero\n```\n\nYou may want to create a launch script for that:\n\n```\n/home/user/scripts/launch_libero.sh\n```\n\n```\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/home/user/lib/qt5_32/5.5/gcc/lib\nexport LM_LICENSE_FILE=\"port@domain.of.your.license.server\"\nexport SNPSLMD_LICENSE_FILE=\"port@domain.of.synopsys.license.server\"\n/home/user/programs/microsemi/libero/v12.1/Libero/bin/libero\n```\n\nDo not forget to make it executable.\n\n"
    },
    {
      "title": "Application menu entry",
      "level": 3,
      "content": "A freedesktop.org application menu entry (which a lot of desktop environments and window managers follow) can be added to the system by creating a libero.desktop file in your ~/.local/share/applications directory:\n\n```\n~/.local/share/applications/libero.desktop\n```\n\n```\n[Desktop Entry]\nVersion=1.0\nName=Libero SoC Design Suite v12.1\nComment=Microsemi Design Software for Microsemi FPGAs and SoCs\nExec=/home/user/scripts/launch_libero.sh\nIcon=/home/user/programs/microsemi/libero/v12.1/libero.xpm\nTerminal=false\nType=Application\nCategories=Development\n```\n\n"
    },
    {
      "title": "Using a FlashPro programmer",
      "level": 2,
      "content": "Using a programmer (e.g. the Microsemi FlashPro5) requires two steps: Adding rules to gain device permissions and unloading a conflicting kernel module.\n\n"
    },
    {
      "title": "Adding udev rules",
      "level": 3,
      "content": "To add the correct permissions for your user to access the programmer add the following file to your Udev ruleset as root:\n\n```\n/etc/udev/rules.d/70-microsemi.rules\n```\n\n```\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"1514\", ATTR{idProduct}==\"2008\", MODE=\"0666\", GROUP=\"microsemi-prog\"\nSUBSYSTEM==\"usb\", ATTR{idVendor}==\"0403\", ATTR{idProduct}==\"6001\", MODE=\"0666\", GROUP=\"microsemi-prog\"\n```\n\nThe group microsemi-prog is just an example, you may replace it by any group your user is in or add a new group and put your user into it with usermod.\n\nYou have to log out and in to apply the new group for the session. In a single terminal some can also apply the new group with newgrp microsemi-prog. To list your groups type id or groups.\n\n"
    },
    {
      "title": "Removing conflicting kernel module",
      "level": 3,
      "content": "When plugging in the programmer it identifies as an FTDI serial device and loads the corresponding kernel driver. Liberos software does not work with that kernel driver so we have to unload it:\n\n```\n# rmmod ftdi_sio\n```\n\nTo permanently unload the driver you may add it to your Blacklist:\n\n```\n/etc/modprobe.d/blacklist-ftdi.conf\n```\n\n```\nblacklist ftdi_sio\n```\n\n"
    },
    {
      "title": "Libero crashes with SysXceptError",
      "level": 3,
      "content": "Libero till version 12.1 does not work on disks larger than 2TB of size. Neither the Libero binaries nor the vault nor your home-folder nor any project may reside on a partition larger than that size. If you cannot change the size of the partition where your home-folder is located start Libero with a different path for your home on a smaller disk:\n\n```\n$ HOME=/path/to/fake/home libero\n```\n\nSome may add that to the startup-script to apply it on start. The install and vault locations have to be set on installation or may be edited in /home/user/programs/microsemi/libero/v12.1/Libero/data/install.def when moving the files afterwards.\n\n"
    }
  ]
}