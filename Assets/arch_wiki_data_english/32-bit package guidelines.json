{
  "title": "32-bit package guidelines",
  "url": "https://wiki.archlinux.org/title/32-bit_package_guidelines",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "32-bit – CLR – CMake – Cross – DKMS – Eclipse – Electron – Font – Free Pascal – GNOME – Go – Haskell – Java – KDE – Kernel modules – Lisp – Meson – MinGW – Node.js – Nonfree – OCaml – Perl – PHP – Python – R – Ruby – Rust - Security – Shell – VCS – Web – Wine\n\nLegacy 32-bit software can be built and installed on machines of another native architecture, such as x86_64. This article explains the production and conventions of such packages.\n\n"
    },
    {
      "title": "Package naming",
      "level": 2,
      "content": "- Prefix 32-bit versions of native packages with lib32-.\n- Package decriptions should distinguish these from native counterparts, i.e. pkgdesc+=\" (32-bit)\".\n\n"
    },
    {
      "title": "lib32",
      "level": 3,
      "content": "Specify these bash variables in a PKGBUILD to tell the compiler to output 32-bit code:\n\n```\nexport CFLAGS+=\" -m32\"\nexport CXXFLAGS+=\" -m32\"\nexport LDFLAGS+=\" -m32\"\nexport PKG_CONFIG_PATH='/usr/lib32/pkgconfig'\n```\n\n"
    },
    {
      "title": "File placement",
      "level": 4,
      "content": "Ensure lib32 package files do not conflict with native package files and include all necessary files, such as architecture-specific includes. For example, if a package builds using GNU Autoconf, specify the following to configure:\n\n```\n--program-suffix=\"-32\" \\\n--lib{exec,}dir=/usr/lib32 \\\n--includedir=/usr/include/\"$pkgbase\"32 \\\n--build=i686-pc-linux-gnu\n```\n\nIf a package builds using Meson, specify the following to arch-meson:\n\n```\n--cross-file lib32\n```\n\n"
    }
  ]
}