{
  "title": "Sxhkd",
  "url": "https://wiki.archlinux.org/title/Sxhkd",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Xbindkeys\n- Xmodmap\n\nsxhkd is a simple X hotkey daemon, by the developer of bspwm, that reacts to input events by executing commands.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install sxhkd or sxhkd-gitAUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "sxhkd defaults to $XDG_CONFIG_HOME/sxhkd/sxhkdrc for its configuration file. An alternate configuration file can be specified with the -c option.\n\nEach line of the configuration file is interpreted as so:\n\n- If it starts with #, it is ignored.\n- If it starts with one or more white space commands, it is read as a command.\n- Otherwise, it is parsed as a hotkey: each key name is separated by spaces and/or + characters.\n\nGeneral syntax:\n\n```\n[MODIFIER + ]*[@]KEYSYM\n    COMMAND\n```\n\nWhere MODIFIER is one of the following names: super, hyper, meta, alt, control, ctrl, shift, mode_switch, lock, mod1, mod2, mod3, mod4, mod5. If @ is added at the beginning of the keysym, the command will be run on key release events, otherwise on key press events. The KEYSYM names are those you will get from xev.\n\nMouse hotkeys can be defined by using one of the following special keysym names: button1, button2, button3, ..., button24. The hotkey can contain a sequence of the form STRING_1, ...,STRING_N}, in which case, the command must also contain a sequence with N elements: the pairing of the two sequences generates N hotkeys. If the command includes curly braces ({, }) eg. awk '{print $1}', escape them with backslash \\ eg. awk '\\{print $1\\}'. In addition, the sequences can contain ranges of the form A-Z where A and Z are alphanumeric characters.\n\nWhat is actually executed is SHELL -c COMMAND, which means you can use environment variables in COMMAND. SHELL will be the content of the first defined environment variable in the following list: SXHKD_SHELL, SHELL. If sxhkd receives a SIGUSR1 signal, it will reload its configuration file.\n\n"
    },
    {
      "title": "Example",
      "level": 3,
      "content": "```\n$XDG_CONFIG_HOME/sxhkd/sxhkdrc\n```\n\n```\n# On mouse button 1 press Alt_R+F1\nbutton1\n    xte \"keydown Alt_R\" \"keydown F1\" \"keyup Alt_R\" \"keyup F1\"\n\n# On mouse button 2 pause 3 seconds then press Alt_R+F2\nbutton2\n    xte \"sleep 3\" \"keydown Alt_R\" \"keydown F2\" \"keyup Alt_R\" \"keyup F2\"\n```\n\n"
    },
    {
      "title": "Bind a command to a single press of a key",
      "level": 4,
      "content": "Some users may wish to bind a command to a single keypress, in the way that the Super key opens the Start menu on Windows. In sxhkd, this is accomplished by binding to a chord chain composed of the key press and key release event of a single keysym, as in the following:\n\n```\n$XDG_CONFIG_HOME/sxhkd/sxhkdrc\n```\n\n```\n# Program launcher\nSuper_L; @Super_L\n    rofi -show drun\n```\n\nThis complicated pattern is necessary because without the explicit chord chain (i.e. a single @Super_L, sxhkd would trigger the binding on any release of the keyâ€”even when the key is used in another chord. Furthermore, keysyms must be used instead of modifiers (Super_L as opposed to super) because sxhkd does not support the use of the @ symbol (denoting key release) for modifiers.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "After configuring it, you may wish to set up sxhkd to autostart; see the corresponding article for your desktop environment or window manager for details.\n\nIf your desktop environment supports the Desktop Application Autostart Specification you can start sxhkd by creating an sxhkd.desktop file in the appropiate directory:\n\n```\n~/.config/autostart/sxhkd.desktop\n```\n\n```\n[Desktop Entry]\nName=sxhkd\nComment=Simple X hotkey daemon\nExec=/usr/bin/sxhkd\nTerminal=false\nType=Application\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official website - includes configuration options, example bindings, and source code.\n- Arch Linux forum thread\n\n"
    }
  ]
}