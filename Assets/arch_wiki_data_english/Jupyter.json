{
  "title": "Jupyter",
  "url": "https://wiki.archlinux.org/title/Jupyter",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Jupyter is a project which produces browser-based interactive environments for programming, mathematics, and data science. It supports a number of languages via plugins (\"kernels\"), such as Python, Ruby, Haskell, R, Scala, Julia and Kotlin.\n\nJupyterLab is \"Jupyterâ€™s Next-Generation Notebook Interface\", while Jupyter Notebook is the original. See the Jupyter website for a comparison.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "- For JupyterLab, install the jupyterlab package.\n- For Jupyter Notebook, install the jupyter-notebook package.\n\nTo install third-party Jupyter Notebook extensions for the current user, use the --user option while executing jupyter nbextension install. To do the same for installation of JupyterLab extensions, set the following environment variable:\n\n```\nJUPYTERLAB_DIR=$HOME/.local/share/jupyter/lab\n```\n\nand verify it by running jupyter lab paths. Then onwards follow usual installation instructions.\n\n"
    },
    {
      "title": "Running",
      "level": 2,
      "content": "To start JupyterLab run:\n\n```\n$ jupyter lab\n```\n\nTo start Jupyter Notebook run:\n\n```\n$ jupyter notebook\n```\n\nNavigate to the URL given on the standard output if a web browser does not automatically open.\n\nTo start JupyterLab without launching browser and listening on port 9999 run\n\n```\n$ jupyter lab --no-browser --port 9999\n```\n\nTo change the default behavior, edit the configuration file:\n\n```\n~/.jupyter/jupyter_lab_config.py\n```\n\n```\nc = get_config()\nc.ExtensionApp.open_browser = False\nc.ServerApp.port = 9999\n```\n\nSee jupyter lab --help-all for an overview of all options or run jupyter lab --generate-config to generate a default configuration file.\n\n"
    },
    {
      "title": "C++",
      "level": 3,
      "content": "Install the cling-jupyter-gitAUR package.\n\n"
    },
    {
      "title": "Haskell",
      "level": 3,
      "content": "Install the ihaskell-gitAUR package. Then run ihaskell install.\n\n"
    },
    {
      "title": "Julia",
      "level": 3,
      "content": "Install the julia package and run julia to get a REPL prompt. Then run:\n\n```\nusing Pkg\nPkg.add(\"IJulia\")\n```\n\nSee the Julia manual for more details on package management.\n\n"
    },
    {
      "title": "Python",
      "level": 3,
      "content": "Python 3 kernel is used by default via python-ipykernel.\n\n"
    },
    {
      "title": "Perl",
      "level": 3,
      "content": "Install the iperlAUR package and run iperl. Then press Ctrl+d. Now if you run jupyter you will see perl there.\n\n"
    },
    {
      "title": "R",
      "level": 3,
      "content": "Install the r-irkernelAUR package. Then in an R console run:\n\n```\nrequire(IRkernel)\nIRkernel::installspec()\n```\n\nAlternatively you could follow the installation instructions in IR Kernel.\n\n"
    },
    {
      "title": "Rust",
      "level": 3,
      "content": "Install the evcxr_jupyterAUR package.\n\n"
    },
    {
      "title": "SageMath",
      "level": 3,
      "content": "Install the sagemath package.\n\n"
    },
    {
      "title": "Octave",
      "level": 3,
      "content": "Install the jupyter-octave_kernelAUR package.\n\n"
    },
    {
      "title": "Maxima",
      "level": 3,
      "content": "Install the maxima-jupyter-gitAUR package.\n\n"
    },
    {
      "title": "Cadabra",
      "level": 3,
      "content": "Install the cadabra2AUR package.\n\n"
    },
    {
      "title": "Kotlin",
      "level": 3,
      "content": "Install the python-kotlin-jupyter-kernelAUR package.\n\n"
    },
    {
      "title": "Interactive widgets in JupyterLab",
      "level": 2,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIn order to enable interactive widgets in Jupyter Lab install python-ipympl and jupyterlab-widgets according to this github issue. Afterwards, in your notebook use:\n\n```\n%matplotlib widget\n```\n\nDon't forget to restart you JupyterLab instance after installing extensions.\n\nIt also might be helpful to RMB->Clear Outputs of All Cells after your extension manipulations\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official website\n- JupyterHub\n\n"
    }
  ]
}