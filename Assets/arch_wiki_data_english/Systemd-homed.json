{
  "title": "Systemd-homed",
  "url": "https://wiki.archlinux.org/title/Systemd-homed",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Users and groups\n- fscrypt\n- Security\n- PAM\n\nsystemd-homed(8) is a systemd service providing portable human-user accounts that are not dependent on current system configuration.\n\nIt achieves portability by moving all user-related information into a storage medium, optionally encrypted, and creating an ~/.identity file that contains signed information about the user, password, what groups they belong to, UID/GID and other information that would typically be scattered over multiple files in /.\n\nThis approach allows not only for a home directory portability, but also provides security by automatically managing a home directory encryption on login and locking it if the system is suspended.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "systemd-homed is part of and packaged with systemd. The pambase package since version 20200721.1-2 comes with the necessary PAM configuration to allow systemd-homed user sessions.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Start/enable the systemd-homed.service service.\n\n"
    },
    {
      "title": "homectl",
      "level": 4,
      "content": "homectl is the main utility you will use for homed. With it, you can create, update, and inspect users; their home directories; and their ~/.identity files controlled by the systemd-homed(8) service.\n\nThe simplest usage of homectl(1) is:\n\n```\n# homectl create username\n```\n\nThis command will create a user with the specified username, a free UID in range 60001–60513, create a group with the same name and a GID equal to the chosen UID, set the specified user as its member, and set the user's default shell to /bin/bash.\n\nThe home directory mount point is set to /home/username. The storage mechanism is chosen in this order:\n\n1. luks if supported;\n1. subvolume if LUKS is not supported and subvolume is supported;\n1. directory if none of the above is supported and no other manual option is specified.\n\nThe image path for the LUKS mechanism is set to /home/username.home. The directory path for the directory mechanism is set to /home/username.homedir.\n\n"
    },
    {
      "title": "userdbctl",
      "level": 4,
      "content": "A query tool used to inspect users, groups and group memberships provided by both classic UNIX mechanisms and systemd-homed.\n\n"
    },
    {
      "title": "LUKS home directory",
      "level": 4,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nA user home directory is stored in a Linux file system, inside an encrypted LUKS (Linux Unified Key Setup) volume inside a loopback file or any removable media. To use this mechanism provide --storage=luks to homectl.\n\nIf you are using a loopback file, in order to save space, the LUKS2 volume can be made to discard deleted data transparently. To use this mechanism provide --luks-discard=true and --luks-offline-discard=true to homectl. Doing so can, however, reduce security under certain situations.\n\nIf you are using a removable media, make sure that these conditions are met:\n\n- The image contains a GPT partition table. For now it should only contain a single partition, and that partition must have the type UUID 773f91ef-66d4-49b5-bd83-d683bf40ad16. Its partition label must be the user name.\n- This partition must contain a LUKS2 volume, whose label must be the user name. The LUKS2 volume must contain a LUKS2 token field of type systemd-homed. The JSON data of this token must have a record field, containing a string with base64-encoded data. This data is the JSON user record, in the same serialization as in ~/.identity, though encrypted. The JSON data of this token must also have an iv field, which contains a base64-encoded binary initialization vector for the encryption. The encryption used is the same as the LUKS2 volume itself uses, unlocked by the same volume key, but based on its own IV.\n- Inside of this LUKS2 volume must be a Linux file system, one of ext4, btrfs and XFS. The file system label must be the user name.\n- This file system should contain a single directory named after the user. This directory will become the home directory of the user when activated. It contains a second copy of the user record in the ~/.identity file, like in the other storage mechanisms.\n\n- In the event of a forceful or unexpected shutdown or power outage, in the case of a loopback file, it is possible for it to be left in a dirty state which may permanently lock the user out. See #Home directory in a dirty state for details.\n- systemd-homed does not work on 4Kn drives and LUKS with a 4096 byte sector size. See systemd issues 30393 and 30394.\n\n"
    },
    {
      "title": "fscrypt directory",
      "level": 4,
      "content": "A user home directory is stored the same way as when using the above method, but this time a native filesystem encryption is used. To use this mechanism provide --storage=fscrypt to homectl.\n\n"
    },
    {
      "title": "Directory or Btrfs subvolume",
      "level": 4,
      "content": "A user home directory is stored in /home/username.homedir and mounted to /home/username using bind mount on unlocking. When this method is used no encryption is provided. To use this mechanism provide --storage=directory or --storage=subvolume to homectl.\n\n"
    },
    {
      "title": "CIFS server",
      "level": 4,
      "content": "Here, the home directory is mounted from a CIFS (Common Internet File System) server at login. Note that CIFS is implemented via the Samba protocol. Use --storage=cifs on the homectl command line. The local password of the user is used to log into the CIFS service.\n\n"
    },
    {
      "title": "User record properties",
      "level": 3,
      "content": "You can view an entire user record with:\n\n```\n# homectl inspect username\n```\n\nYou can modify or add to the user record with:\n\n```\n# homectl update username --property=VALUE\n```\n\nSee homectl(1) for more options.\n\n"
    },
    {
      "title": "Creation",
      "level": 4,
      "content": "Create a user with LUKS encryption:\n\n```\n# homectl create username --storage=luks\n```\n\nCreate a user with fscrypt encryption (make sure that fscrypt is enabled on the file system):\n\n```\n# homectl create username --storage=fscrypt\n```\n\nCreate a user with a specific UID, shell and groups:\n\n```\n# homectl create username --shell=/usr/bin/zsh --uid=60100 --member-of=wheel,adm,uucp\n```\n\nOther options can be found in homectl(1) § USER RECORD PROPERTIES.\n\n"
    },
    {
      "title": "Deletion",
      "level": 4,
      "content": "It is possible to delete several users at the same time:\n\n```\n# homectl remove username username2\n```\n\n"
    },
    {
      "title": "Forget key on suspend",
      "level": 3,
      "content": "The suspend option can be used with pam_systemd_home.so entries in the files in /etc/pam.d/ to enable forget key on suspend. No session manager at the moment supports this feature. Furthermore, TTY sessions do not support the reauthentication mechanism. So, when session managers start supporting this feature, the suspend option should only be enabled for them. Read pam_systemd_home(8) and the Linux-PAM System Administrators' Guide for more details.\n\n"
    },
    {
      "title": "SSH remote unlocking",
      "level": 3,
      "content": "systemd-homed encrypts your home directory using your password, so SSH configured for public key authentication cannot mount it or read authorized_keys. A possible solution is to add authorized keys to your user record and require both public key and password for authentication. Add the following to /etc/ssh/sshd_config:\n\n```\n/etc/ssh/sshd_config\n```\n\n```\nPasswordAuthentication yes\nPubkeyAuthentication yes\nAuthenticationMethods publickey,password\n```\n\nUpdate your user record with your authorized keys while the user is unlocked using:\n\n```\n# homectl update username --ssh-authorized-keys=@/path/to/mounted/home/.ssh/authorized_keys\n```\n\nFrom now on, SSH will ask you to enter your password after completing key-based authentication. systemd-homed will use it to unlock and mount your home directory.\n\n"
    },
    {
      "title": "Mounting encrypted home directory for rescue",
      "level": 3,
      "content": "If you need to mount a systemd-homed-encrypted directory from a rescue disk or another machine, you will need to decrypt the directory outside of the systemd-homed framework. You may wish to keep a text file or script of this solution from the forums on your rescue disk for emergencies:\n\n```\n# losetup -fP --show username.home\n# cryptsetup open /dev/loopXpY mappername\n# mount /dev/mapper/mappername /mnt/mountpoint\n```\n\nwhere,\n\n- username.home is the file in the /home directory with your username and the .home extension as its name\n- loopXpY is the device in the /dev directory with the loop number of the loopback device created in the prior step and the partition number of the relevant partition, probably /dev/loop0p1\n- mappername is whatever alias you decide to adopt for the mapped device, e.g. user_oldhome\n- /mnt/mountpoint is wherever you want to mount your decrypted home directory\n\n"
    },
    {
      "title": "Setup user with FIDO2 hmac-secret for authentication and encryption",
      "level": 3,
      "content": "This setup requires a FIDO2 security device, and asks for a pin to login and decrypt the home directory:\n\n```\n# homectl create username --storage=fscrypt --fido2-device=auto --fido2-with-client-pin=yes --fido2-with-user-presence=no --recovery-key=yes\n```\n\nSetting up a recovery key is recommended in case the device is lost or broken. The recovery key will be used like a password to access the user and files. Instead of using a device pin, it is also possible to ask only for user presence, which requires touching the security device. Currently, homectl also requires the user to set a password as alternative login which also works as a backup secret.\n\n"
    },
    {
      "title": "Home directory remains active after logging out of Plasma",
      "level": 3,
      "content": "After logging out of Plasma, there may still be active user processes (e.g. dbus-daemon) that prevent the home directory's deactivation.\n\nThis can be solved by enabling Plasma's systemd startup.\n\n"
    },
    {
      "title": "User umask is ignored",
      "level": 3,
      "content": "There always is an umask set in /etc/login.defs, so the user's own umask set via homectl is currently ignored. See systemd issue 23007.\n\nTo solve this, set the umask in your login shell's startup files e.g. ~/.bash_profile or ~/.zprofile.\n\n"
    },
    {
      "title": "Home directory in a dirty state",
      "level": 3,
      "content": "In the event of a forceful or unexpected shutdown or power outage, it is possible for the home directory to be left in a dirty state. In this case, the user will be locked out and authenticating to the home directory may require manual intervention. The following steps assumes that the LUKS2 encrypted loop back file storage mechanism is used, and fsck can be used in the underlying filesystem to repair it.\n\nFirst, confirm the state of the loop back file is dirty and determine the path of the user's loop back file:\n\n```\n$ homectl inspect username\n```\n\nNext, using the path of the loop back file, follow the steps in #Mounting encrypted home directory for rescue.\n\nFinally, attempt to repair the filesystem using fsck on the opened LUKS2 device:\n\n```\n# fsck /dev/mapper/mappername\n```\n\nAt this point, if the repair was successful, close the LUKS2 container, detach the loop back device, then attempt to re-authenticate normally via the systemd-homed service.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nNote: **permanently** \n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://systemd.io/CONVERTING_TO_HOMED/\n- https://systemd.io/HOME_DIRECTORY/\n\n"
    }
  ]
}