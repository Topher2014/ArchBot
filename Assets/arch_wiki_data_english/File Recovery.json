{
  "title": "File Recovery",
  "url": "https://wiki.archlinux.org/title/File_Recovery",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- /Post recovery tasks#Photorec\n\nThis article lists data recovery and undeletion options for Linux.\n\n"
    },
    {
      "title": "Before you start",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThis page is mostly intended to be used for educational purposes. If you have accidentally deleted or otherwise damaged your valuable and irreplaceable data and have no previous experience with data recovery, turn off your computer immediately (Just press and hold the off button or pull the plug; do not use the system shutdown function) and seek professional help.\n\n"
    },
    {
      "title": "Failing drives",
      "level": 3,
      "content": "In the area of data recovery, it is best to work on images of disks rather than physical disks themselves. Generally, a failing drive's condition worsens over time. The goal ought to be to first rescue as much data as possible as early as possible in the failure of the disk and to then abandon the disk. The ddrescue and dd_rescue utilities, unlike dd, will repeatedly try to recover from errors and will read the drive front to back, then back to front, attempting to salvage data. They keep log files so that recovery can be paused and resumed without losing progress.\n\nSee Disk cloning.\n\nThe image files created from a utility like ddrescue can then be mounted like a physical device and can be worked on safely. Always make a copy of the original image so that you can revert if things go sour!\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nA tried and true method of improving failing drive reads is to keep the drive cold. A bit of time in the freezer is appropriate, but be careful to avoid bringing the drive from cold to warm too quickly, as condensation will form. Keeping the drive in the freezer with cables connected to the recovering PC works great.\n\nDo not attempt a filesystem check on a failing drive, as this will likely make the problem worse. Mount it read-only.\n\n"
    },
    {
      "title": "Backup flash media/small partitions",
      "level": 3,
      "content": "As an alternative to working with a 'live' partition (mounted or not), it is often preferable to work with an image, provided that the filesystem in question is not too large and that you have sufficient free HDD space to accommodate the image file. For example, flash memory devices like thumb drives, digital cameras, portable music players, cellular phones, etc. are likely to be small enough to image in many cases.\n\nBe sure to read the man pages for the utilities listed below to verify that they are capable of working with image files.\n\nTo make an image, one can use dd as follows:\n\n```\n# dd if=/dev/target_partition of=/home/user/partition.image\n```\n\n"
    },
    {
      "title": "Working with digital cameras",
      "level": 3,
      "content": "In order for some of the utilities listed in the next section to work with flash media, the device in question needs to be mounted as a block device (i.e., listed under /dev). Digital cameras operating in PTP (Picture Transfer Protocol) mode will not work in this regard. PTP cameras are transparently handled by libgphoto and/or libptp. In this case, \"transparently\" means that PTP devices do not get block devices. The alternative to PTP mode, USB Mass Storage (UMS) mode, is not supported by all cameras. Some cameras have a menu item that allows switching between the two modes; refer to your camera's user manual. If your camera does not support UMS mode and therefore cannot be accessed as a block device, your only alternative is to use a flash media reader and physically remove the storage media from your camera.\n\n"
    },
    {
      "title": "List of utilities",
      "level": 2,
      "content": "See also Wikipedia:List of data recovery software#File Recovery\n\n- ddrutility — Compliment to GNU ddrescue. Find what files are related to the bad sectors and some special tools for NTFS. No longer actively supported.\n\n- dvdisaster — Additional error protection for CD/DVD media.\n\n- Foremost — Console program to recover files based on their headers, footers, and internal data structures. This process is commonly referred to as data carving. The headers and footers can be specified by a configuration file or command line switches can be used to specify built-in file types.\n\n- PhotoRec — File data recovery software designed to recover lost files including video, documents and archives from hard disks, CD-ROMs, and lost pictures (thus the Photo Recovery name) from digital camera memory.\n\n- R-Linux — A free file recovery utility for the Ext2/Ext3/Ext4 file systems.\n\n- Scalpel — File carving and indexing application originally based on Foremost, although significantly more efficient. It allows an examiner to specify a number of headers and footers to recover filetypes from a piece of media.\n\n- TestDisk — Data recovery software primarily designed to help recover lost partitions and/or make non-booting disks bootable again when these symptoms are caused by faulty software: certain types of viruses or human error (such as accidentally deleting a Partition Table).\n\n- xfs_undelete — Traverses the inode B+trees of each allocation group and tries to recover all files on an XFS filesystem marked as deleted.\n\n"
    },
    {
      "title": "TestDisk and PhotoRec",
      "level": 2,
      "content": "TestDisk and Photorec are both open-source data recovery utilities licensed under the terms of the GNU Public License (GPL).\n\nTestDisk is primarily designed to help recover lost partitions and/or make non-booting disks bootable again when these symptoms are caused by faulty software, certain types of viruses, or human error, such as the accidental deletion of partition tables. TestDisk detects numerous filesystem including NTFS, FAT12, FAT16, FAT32, exFAT, ext2, ext3, ext4, btrfs, BeFS, CramFS, HFS, JFS, Linux Raid, Linux Swap, LVM, LVM2, NSS, ReiserFS, UFS, XFS. It can also undelete files from FAT, NTFS, exFAT and ext2 filesystem.\n\nTestDisk allows to fix partition tables, recover deleted partitions, recover FAT32 boot sector from its backup, rebuild FAT12/FAT16/FAT32 boot sectors, fix FAT tables, rebuild NTFS boot sector and more.\n\nPhotoRec is file recovery software designed to recover lost files including photographs (Hint: PhotographRecovery), videos, documents, archives from hard disks and CD-ROMs. PhotoRec ignores the filesystem and goes after the underlying data, so it will still work even with a re-formatted or severely damaged filesystems and/or partition tables.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the testdisk package, which provides both TestDisk and PhotoRec.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "After running e.g. ddrescue to create image.img, photorec image.img will open a terminal UI where you can select what file types to search for and where to put the recovered files. There is very good documentation on their wiki.\n\n"
    },
    {
      "title": "Files recovered by photorec",
      "level": 3,
      "content": "The photorec utility stores recovered files with a random names(for most of the files) under a numbered directories, e.g. ./recup_dir.1/f872690288.jpg, ./recup_dir.1/f864563104_wmclockmon-0.1.0.tar.gz.\n\n"
    },
    {
      "title": "See also",
      "level": 3,
      "content": "- How to get the original filenames: PhotoRec FAQ\n- How to add your own custom file signature: CGSecurity Wiki\n- Wiki (TestDisk): https://www.cgsecurity.org/wiki/TestDisk\n- Wiki (Photorec): https://www.cgsecurity.org/wiki/PhotoRec\n- Homepage: https://www.cgsecurity.org/\n\n"
    },
    {
      "title": "e2fsck",
      "level": 2,
      "content": "e2fsck is the ext2/ext3 filesystem checker included in the base install of Arch. e2fsck relies on a valid superblock. A superblock is a description of the entire filesystem's parameters. Because this data is so important, several copies of the superblock are distributed throughout the partition. With the -b option, e2fsck can take an alternate superblock argument; this is useful if the main, first superblock is damaged.\n\nTo determine where the superblocks are, run dumpe2fs -h on the target, unmounted partition. Superblocks are spaced differently depending on the filesystem's blocksize, which is set when the filesystem is created.\n\nAn alternate method to determine the locations of superblocks is to use the -n option with mke2fs. Be sure to use the -n flag, which, according to mke2fs(8), \"Causes mke2fs to not actually create a filesystem, but display what it would do if it were to create a filesystem. This can be used to determine the location of the backup superblocks for a particular filesystem, so long as the mke2fs parameters that were passed when the filesystem was originally created are used again. (With the -n option added, of course!)\".\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Both e2fsck and dumpe2fs are included in the base Arch install as part of e2fsprogs.\n\nSee also e2fsck(8) and dumpe2fs(8).\n\n"
    },
    {
      "title": "Working with raw disk images",
      "level": 2,
      "content": "Note: **This article or section is a candidate for merging with QEMU.** This article or section is a candidate for merging with QEMU.\n\nThis article or section is a candidate for merging with QEMU.\n\nIf you have backed up a drive using ddrescue or dd and you need to mount this image as a physical drive, see this section.\n\n"
    },
    {
      "title": "Mount the entire disk",
      "level": 3,
      "content": "To mount a complete disk image to the next free loop device, use the losetup command:\n\n```\n# losetup -f -P /path/to/image\n```\n\n- The -f flag mounts the image to the next available loop device.\n- The -P flag creates additional devices for every partition.\n\nSee also QEMU#With loop module autodetecting partitions.\n\n"
    },
    {
      "title": "Mounting partitions",
      "level": 3,
      "content": "In order to be able to mount a partition of a whole disk image, follow the steps above.\n\nOnce the whole disk image is mounted, a normal mount command can be used on the loop device:\n\n```\n# mount /dev/loop0p1 /mnt/example\n```\n\nThis command mounts the first partition of the image in loop0 to the folder to the mountpoint /mnt/example. Remember that the mountpoint directory must exist!\n\n"
    },
    {
      "title": "Getting disk geometry",
      "level": 4,
      "content": "Once the entire disk image has been mounted as a loopback device, its drive layout can be inspected.\n\n"
    },
    {
      "title": "Using QEMU to repair NTFS",
      "level": 3,
      "content": "With a disk image that contains one or more NTFS partitions that need to be chkdsked by Windows since no good NTFS filesystem checker for Linux exists, QEMU can use a raw disk image as a real hard disk inside a virtual machine:\n\n```\n# qemu -hda /path/to/primary.img -hdb /path/to/DamagedDisk.img\n```\n\nThen, assuming Windows is installed on primary.img, it can be used to check partitions on /path/to/DamagedDisk.img.\n\n"
    },
    {
      "title": "Text file recovery",
      "level": 2,
      "content": "It is possible to find deleted plain text files on a hard drive by directly searching on the block device. A preferably unique string from the file you are trying to recover is needed.\n\nUse grep to search for fixed strings (-F) directly on the partition:\n\n```\n$ grep -a -C 200 -F 'Unique string in text file' /dev/sdXN > OutputFile\n```\n\nHopefully, the content of the deleted file is now in OutputFile, which can be extracted from the surrounding context manually.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Data Recovery on the Ubuntu wiki\n\n"
    }
  ]
}