{
  "title": "Nomad",
  "url": "https://wiki.archlinux.org/title/Nomad",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Nomad is a workload orchestrator to deploy and manage containers and non-containerized applications.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the nomad package.\n\n"
    },
    {
      "title": "NVIDIA not supported",
      "level": 3,
      "content": "NVIDIA support has been disabled due to there being no way to disable a non-existent driver being loaded. When compiled with NVIDIA support, the instance immediately crashes with the following error:\n\n```\n/usr/bin/nomad: undefined symbol: nvmlDeviceGetGraphicsRunningProcesses\n```\n\nThe NVIDIA driver plugin will be externalised, see GitHub issue #8330.\n\n"
    },
    {
      "title": "Default plugin directory",
      "level": 3,
      "content": "The default plugin directory /var/lib/nomad/plugins has been changed to /usr/lib/nomad/plugins to reflect FHS.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Nomad loads all configuration files in the /etc/nomad.d directory on startup.\n\nSee https://learn.hashicorp.com/tutorials/nomad/security-enable-tls to set up TLS encryption with Nomad.\n\n"
    },
    {
      "title": "Server",
      "level": 3,
      "content": "Create a configuration file at /etc/nomad.d/server.hcl:\n\n```\n/etc/nomad.d/server.hcl\n```\n\n```\nserver {\n  enabled = true\n  bootstrap_expect = 3\n}\n```\n\n"
    },
    {
      "title": "Client",
      "level": 3,
      "content": "Create a configuration file at /etc/nomad.d/client.hcl:\n\n```\n/etc/nomad.d/client.hcl\n```\n\n```\nclient {\n  enabled = true\n}\n```\n\n"
    },
    {
      "title": "Task drivers",
      "level": 3,
      "content": "Task drivers are used by Nomad clients to execute a task and provide resource isolation.\n\nNomad ships with support for the following task drivers out of the box:\n\n- Docker (requires docker)\n- Java (requires jre-openjdk or jre-openjdk-headless)\n- QEMU (requires qemu-desktop)\n- exec & raw_exec\n\n"
    },
    {
      "title": "containerd",
      "level": 4,
      "content": "In order to use the containerd driver, Install the nomad-driver-containerd package.\n\nEnable the plugin in the client configuration, then Reload nomad.service.\n\n```\n/etc/nomad.d/containerd.hcl\n```\n\n```\nplugin \"containerd-driver\" {\n  config {\n    # Arch Linux uses cgroups v2 by default\n    # For cgroups v1, use \"io.containerd.runc.v1\"\n    containerd_runtime = \"io.containerd.runc.v2\"\n  }\n}\n```\n\n"
    },
    {
      "title": "podman",
      "level": 4,
      "content": "In order to user the podman driver, Install the nomad-driver-podman.\n\nNomad requires podman.service to be started.\n\nEnable the driver in the client configuration, then reload nomad.service.\n\n```\n/etc/nomad.d/podman.hcl\n```\n\n```\nplugin \"nomad-driver-podman\" {\n  config {\n    # Archlinux socket path for podman differs from the default value of socket_path (unix://run/podman/io.podman)\n    socket_path = \"unix://run/podman/podman.sock\"\n    # In case podman.service was started as user\n    socket_path = \"unix://run/user/USER_UID/podman/podman.sock\"\n  }\n}\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official documentation\n- External task driver documentation\n\n"
    }
  ]
}