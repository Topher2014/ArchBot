{
  "title": "Input remap utilities",
  "url": "https://wiki.archlinux.org/title/Input_remap_utilities",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nIn an X or Wayland environment, most remapping tasks can be completed with local XKB configuration, see X keyboard extension#Local XKB folder. For remapping keys in the linux console, see Linux console/Keyboard configuration. For keyboards or devices that report incorrect keycodes, see Map scancodes to keycodes.\n\nSome specialized configurations or behaviors use software daemons to translate input events. This page lists software that you can use to reconfigure input events from keyboards, mice and other hardware.\n\n"
    },
    {
      "title": "evremap",
      "level": 3,
      "content": "evremap (evremap-gitAUR) — A keyboard input remapper for Linux/Wayland systems. This tool can do remap in a following way: remap the CapsLock key so that it produces Ctrl when held, but Esc if tapped and remap n keys to m keys. E.g.: F3 to Ctrl+c, and Alt+Left to Home.\n\nAfter installation, create a config file /etc/evremap.toml (example from repo), or edit evremap.service to point to your config. Then start the service.\n\n"
    },
    {
      "title": "evdevremapkeys",
      "level": 3,
      "content": "evdevremapkeys (evdevremapkeys-gitAUR) — A daemon to remap key events on linux input devices. This tool can remap keyboard and mouse events. It can map to repeated actions (for example, do double click) and can generate them while button is pressed (for example, generate wheel up events while holding back button).\n\nIt is also possible to remap combo to combo, but this is not yet merged, and is available in pronobis fork. See here.\n\n"
    },
    {
      "title": "evsieve",
      "level": 3,
      "content": "evsieve (evsieveAUR) — A low-level utility that can read events from Linux event devices (evdev) and write them to virtual event devices (uinput), performing simple manipulations on the events along the way. Works on Wayland. Evsieve is particularly intended to be used in conjunction with the evdev-passthrough functionality of Qemu.\n\n"
    },
    {
      "title": "kbct",
      "level": 3,
      "content": "kbct (kbct-gitAUR) — Keyboard Customization Tool for Linux. Despite its name, also supports mouse events. This tool allows you to map an event (keyboard or mouse button) to another event. You can define multiple \"layers\" — lists of maps depending of which modifier you press with an input key. Unfortunately, currently the kbct does not allow you to generate multi-button event. See [1].\n\nAfter installation, edit /etc/kbct/config.yml as required, then start kbct.service.\n\n"
    },
    {
      "title": "keyd",
      "level": 3,
      "content": "keyd (keyd) — A key remapping daemon for Linux using a flexible system-wide daemon which remaps keys using kernel level input primitives (evdev, uinput). Keyd works in both graphical environments, like X11 and Wayland, and the Linux virtual console. Read the project's README for more information about how keyd compared to similar software.\n\n"
    },
    {
      "title": "Input Remapper",
      "level": 3,
      "content": "Input Remapper input-remapper-gitAUR — A utility that provides a GUI and a CLI to configure input devices remappings. Works with both X and Wayland.\n\n"
    },
    {
      "title": "wtype",
      "level": 3,
      "content": "wtype (wtype) — xdotool type for Wayland (requires compositor support for the virtual keyboard protocol).\n\n"
    },
    {
      "title": "Other",
      "level": 3,
      "content": "- Hawck - A low-level key rebinding daemon\n- IMWheel — A tool for X11 that can remap mouse wheel events depending on pressed modifier and individually per application.\n- Interception-tools — Yet another versatile tool, using various plug-ins.o\n- Mouse buttons#User tools — A list of hardware-dependent utilities to configure mouse buttons.\n- wayland-mouse-mapper — A small script for mapping mouse buttons to keystrokes on Wayland.\n- evmapy — An evdev event mapper written in Python. Not in AUR yet.\n- python-evdev — A utility that allows you to read and write input events on Linux. An event can be a key or button press, a mouse movement or a tap on a touchscreen.\n- noinputs (noinputs-gitAUR) — A utility to list and disable (inhibit) input devices.\n- xremap (xremap in AUR) — Key remapper for X11 and Wayland using evdev and uinput.\n\n"
    },
    {
      "title": "Testing",
      "level": 2,
      "content": "- evtest (evtest) — utility that can show you the button names when you press them, which can help when configuring remap utilities.\n- wev (wev) — utility to view input events in wayland, similar to xev.\n\nWith evsieve --input /dev/input/event* --print you can see all events that are emitted on your computer.\n\nAnother approach of testing keyboard buttons is with online websites. Most of such testers cannot distinguish between left and right modifiers. One example that can is: https://stendec.io/\n\n"
    }
  ]
}