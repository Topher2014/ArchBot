{
  "title": "System backup",
  "url": "https://wiki.archlinux.org/title/System_backup",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Synchronization and backup programs\n- System maintenance#Backup\n- Data-at-rest encryption#Backup for disk encryption scenarios\n- Disk cloning\n- Migrate installation to new hardware\n- File recovery\n\nA system backup is the process of backing up the operating system, files and system-specific useful/essential data. [It] primarily ensures that not only the user data in a system is saved, but also the system's state or operational condition. This helps in restoring the system to the last-saved state along with all the selected backup data.[1]\n\n"
    },
    {
      "title": "Using Btrfs snapshots",
      "level": 2,
      "content": "See Btrfs#Snapshots, #Snapshots and /boot partition, and Snapper.\n\n"
    },
    {
      "title": "Using LVM snapshots",
      "level": 2,
      "content": "See LVM#Snapshots, Create root filesystem snapshots with LVM, and #Snapshots and /boot partition.\n\n"
    },
    {
      "title": "Using rsync",
      "level": 2,
      "content": "See rsync#As a backup utility.\n\n"
    },
    {
      "title": "Using tar",
      "level": 2,
      "content": "See Full system backup with tar.\n\n"
    },
    {
      "title": "Using SquashFS",
      "level": 2,
      "content": "See Full system backup with SquashFS.\n\n"
    },
    {
      "title": "Bootable backup",
      "level": 2,
      "content": "Having a bootable backup can be useful in case the filesystem becomes corrupt or if an update breaks the system. The backup can also be used as a test bed for updates, with the testing repo enabled, etc. If you transferred the system to a different partition or drive and you want to boot it, the process is as simple as updating the backup's /etc/fstab and your boot loader's configuration file.\n\nThis section assumes that you backed up the system to another drive or partition, that your current boot loader is working fine, and that you want to boot from the backup as well.\n\n"
    },
    {
      "title": "Update the fstab",
      "level": 3,
      "content": "Without rebooting, edit the backup's fstab by commenting out or removing any existing entries. Add one entry for the partition containing the backup like the example here:\n\n```\n/dev/sdaX    /             ext4      defaults                 0   1\n```\n\nRemember to use the proper device name and filesystem type.\n\n"
    },
    {
      "title": "Update the boot loader's configuration file",
      "level": 3,
      "content": "For Syslinux, all you need to do is duplicate the current entry, except pointing to a different drive or partition.\n\nFor GRUB, it is recommended that you automatically re-generate the main configuration file. If you want to freshly install all GRUB files to somewhere other than /boot, such as /mnt/newroot/boot, use the --boot-directory flag.\n\nAlso verify the new menu entry in /boot/grub/grub.cfg. Make sure the UUID is matching the new partition, otherwise it could still boot the old system. Find the UUID of a partition with lsblk:\n\n```\n$ lsblk -no NAME,UUID /dev/sdXY\n```\n\nwhere /dev/sdXY is the desired partition (e.g. /dev/sdb3). To list the UUIDs of partitions GRUB thinks it can boot, use grep:\n\n```\n# grep UUID= /boot/grub/grub.cfg\n```\n\n"
    },
    {
      "title": "First boot",
      "level": 3,
      "content": "Reboot the computer and select the right entry in the boot loader. This will load the system for the first time. All peripherals should be detected and the empty folders in / will be populated.\n\nNow you can re-edit /etc/fstab to add the previously removed partitions and mount points.\n\n"
    },
    {
      "title": "Snapshots and /boot partition",
      "level": 2,
      "content": "If your file system supports snapshots (e.g., LVM or Btrfs), these will most likely exclude the /boot partition or ESP.\n\nYou can copy the boot partition automatically on a kernel update to your root partition with a pacman hook (make sure the hook file is owned by root):\n\n```\n/etc/pacman.d/hooks/55-bootbackup_pre.hook\n```\n\n```\n[Trigger]\nOperation = Upgrade\nOperation = Install\nOperation = Remove\nType = Path\nTarget = usr/lib/modules/*/vmlinuz\n\n[Action]\nDepends = rsync\nDescription = Backing up pre /boot...\nWhen = PreTransaction\nExec = /usr/bin/bash -c 'rsync -a --mkpath --delete /boot/ \"/.bootbackup/$(date +%Y_%m_%d_%H.%M.%S)_pre\"/'\n```\n\n```\n/etc/pacman.d/hooks/95-bootbackup_post.hook\n```\n\n```\n[Trigger]\nOperation = Upgrade\nOperation = Install\nOperation = Remove\nType = Path\nTarget = usr/lib/modules/*/vmlinuz\n\n[Action]\nDepends = rsync\nDescription = Backing up post /boot...\nWhen = PostTransaction\nExec = /usr/bin/bash -c 'rsync -a --mkpath --delete /boot/ \"/.bootbackup/$(date +%Y_%m_%d_%H.%M.%S)_post\"/'\n```\n\n"
    }
  ]
}