{
  "title": "Capacidades",
  "url": "https://wiki.archlinux.org/title/Capacidades",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "As capacidades (POSIX 1003.1e, capabilities(7)) fornecem controle refinado sobre permissões de superusuário, permitindo que o usuário root seja evitado. Os desenvolvedores de software são incentivados a substituir os usos do poderoso atributo setuid em um sistema binário com um conjunto mais mínimo de capacidades. Muitos pacotes utilizam capacidades, como CAP_NET_RAW, sendo usada para o binário ping fornecido pelo iputils. Isso permite, por exemplo, ping ser executado por um usuário normal (como no método setuid), ao mesmo tempo em que limita as consequências de segurança de uma possível vulnerabilidade no ping.\n\n"
    },
    {
      "title": "Implementação",
      "level": 2,
      "content": "Capacidades são implementadas no Linux usando atributos estendidos (xattr(7)) no espaço de nomes de segurança. Atributos estendidos são suportados por todos os principais sistemas de arquivos do Linux, incluindo Ext2, Ext3, Ext4, Btrfs, JFS, XFS e Reiserfs. O exemplo a seguir imprime as capacidades do ping com getcap e, em seguida, imprime os mesmos dados em seu formato codificado usando getfattr:\n\n```\n$ getcap /usr/bin/ping\n```\n\n```\n/usr/bin/ping = cap_net_raw+ep\n```\n\n```\n$ getfattr -d -m \"^security\\\\.\" /usr/bin/ping\n```\n\n```\n# file: usr/bin/ping\nsecurity.capability=0sAQAAAgAgAAAAAAAAAAAAAAAAAAA=\n```\n\nAtributos estendidos são copiados automaticamente por cp -a, mas alguns outros programas requerem um sinalizador especial: rsync -X.\n\nAs capacidades são definidas por scripts de instalação de pacotes no Arch (por exemplo, iputils.install).\n\n"
    },
    {
      "title": "Administração e manutenção",
      "level": 2,
      "content": "É considerado um bug se um pacote tiver capacidades excessivamente permissivas; portanto, esses casos devem ser relatados em vez de serem listados aqui. Uma capacidade essencialmente equivalente ao acesso root (CAP_SYS_ADMIN) ou permitir trivialmente o acesso root (CAP_DAC_OVERRIDE) não conta como um bug, pois o Arch não suporta nenhum sistema MAC/RBAC.\n\n"
    },
    {
      "title": "Outros programas que se beneficiam de capacidades",
      "level": 2,
      "content": "Os pacotes a seguir não possuem arquivos com o atributo setuid, mas requerem privilégios de root para funcionar. Ao ativar algumas capacidades, usuários comuns podem usar o programa sem elevação de privilégios.\n\n"
    },
    {
      "title": "beep",
      "level": 3,
      "content": "```\n# setcap cap_dac_override,cap_sys_tty_config+ep /usr/bin/beep\n```\n\n"
    },
    {
      "title": "chvt",
      "level": 3,
      "content": "```\n# setcap cap_dac_read_search,cap_sys_tty_config+ep /usr/bin/chvt\n```\n\n"
    },
    {
      "title": "iftop",
      "level": 3,
      "content": "```\n# setcap cap_net_raw+ep /usr/bin/iftop\n```\n\n"
    },
    {
      "title": "mii-tool",
      "level": 3,
      "content": "```\n# setcap cap_net_admin+ep /usr/bin/mii-tool\n```\n\n"
    },
    {
      "title": "mtr",
      "level": 3,
      "content": "```\n# setcap cap_net_raw+ep /usr/bin/mtr-packet\n```\n\n"
    },
    {
      "title": "nethogs",
      "level": 3,
      "content": "```\n# setcap cap_net_admin,cap_net_raw+ep /usr/bin/nethogs\n```\n\n"
    },
    {
      "title": "wavemon",
      "level": 3,
      "content": "```\n# setcap cap_net_admin+ep /usr/bin/wavemon\n```\n\n"
    },
    {
      "title": "Comandos úteis",
      "level": 2,
      "content": "Encontrar arquivos com setuid-root:\n\n```\n$ find /usr/bin /usr/lib -perm /4000 -user root\n```\n\nEncontrar arquivos com setgid-root:\n\n```\n$ find /usr/bin /usr/lib -perm /2000 -group root\n```\n\n"
    },
    {
      "title": "Veja também",
      "level": 2,
      "content": "- Páginas man: capabilities(7), setcap(8), getcap(8)\n- Wikibooks:Grsecurity/Appendix/Capability Names and Descriptions\n- Seccomp BPF (SECure COMPuting with filters)\n\n"
    }
  ]
}