{
  "title": "Diretrizes de pacotes CLR",
  "url": "https://wiki.archlinux.org/title/Diretrizes_de_pacotes_CLR",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "32-bit – CLR – CMake – Cross – DKMS – Eclipse – Electron – Fonte – Free Pascal – GNOME – Go – Haskell – Java – KDE – Kernel – Lisp – Meson – MinGW – Node.js – Nonfree – OCaml – Perl – PHP – Python – R – Ruby – Rust – Shell – VCS – Web – Wine\n\nEste documento define o padrão para a empacotamento de projetos Common Language Runtime (.NET) sob Arch Linux. Atualmente, apenas o Mono é capaz de fornecer um runtime CLR usável e eficiente para vários sistemas e esse padrão refletirá seu uso. Esteja ciente de que muitos programas CLR foram desenvolvidos com o Microsoft .NET em mente e, como tal, podem ou não ser executados em Mono por causa de fatores exclusivos do .NET, como chamadas P/Invoke e APIs de Gestão Digital de Direitos (DRM) da Microsoft e, portanto, não produzirá um pacote utilizável para o Arch Linux. No entanto, se combinado com Wine a partir da versão 1.5.6 (?), seu pacote pode ter a chance de executar sob ele. Consulte as diretrizes de pacotes Wine para obter mais informações, se tal for o caso.\n\n"
    },
    {
      "title": "Pegadinhas de empacotamento",
      "level": 2,
      "content": "- Sempre adicione mono a depends\n- Sempre defina arch como any. Mono não oferece suporte a compilar (executar?) montagens de 64 bits.\n- Sempre adicione !strip a options\n- Se o pacote é uma biblioteca (DLL), considere instalá-lo ao Global Assembly Cache (GAC) do Mono, se ele for usado como uma dependência.\n- Se a montagem é pré-compilada e vem com um arquivo de banco de dados para depuração de programas (Foo.dll.pdb), considere convertê-la como tal: pdb2mdb Foo.dll\n- Se o pacote destina-se a ser um executável (EXE), certifique-se de instalar em /usr/bin um shell script para executá-lo, similar a esse:\n\n```\n#!/bin/sh\nmono foo.exe $@\n```\n\n"
    },
    {
      "title": "Montagens assinadas",
      "level": 3,
      "content": "Se o pacote for instalado no GAC, certifique-se de ter um arquivo de chave assinado. Caso contrário, você pode gerar um como este: sn -k 1024 Foo.snk. Em seguida, a forma mais fácil de embutir o arquivo chave na montagem para ser desmontada assim: monodis Foo.dll --output=Foo.il. Após, remonte-o assim: ilasm /dll /key:Foo.snk Foo.il\n\n"
    },
    {
      "title": "Exemplos de PKGBUILD",
      "level": 2,
      "content": "Os exemplos a seguir vão tentar cobrir algumas das convenções mais comuns e sistemas de compilação.\n\n"
    },
    {
      "title": "Unsigned DLL",
      "level": 4,
      "content": "```\n# Maintainer: yourname <yourmail>\npkgname=foo\npkgver=1.0\npkgrel=1\npkgdesc=\"Fantabulous library for .Net\"\narch=('any')\nurl=\"http://www.foo.bar\"\nlicense=('GPL')\ndepends=('mono')\noptions=('!strip')\nsource=(\"http://www.foo.bar/foobar.tar.gz\")\nmd5sums=('4736ac4f34fd9a41fa0197eac23bbc24')\n\nbuild() {\n  cd \"${srcdir}/foobar\"\n\n  xbuild Foo.sln\n\n  # if the package is unsigned, do the following:\n  cd \"/bin/x86/Debug\"\n  monodis Foo.dll --output=Foo.il\n  sn -k 1024 Foo.snk\n  ilasm /dll /key:Foo.snk Foo.il\n}\n\npackage() {\n  cd \"${srcdir}/foobar/bin/x86/Debug\"\n\n  install -Dm644 Foo.dll \"$pkgdir/usr/lib/foobar/Foo.dll\"\n  install -Dm644 Foo.dll.mdb \"$pkgdir/usr/lib/foobar/Foo.dll.mdb\"\n  \n  # Register assembly into Mono's GAC\n  gacutil -i Foo.dll -root \"$pkgdir/usr/lib\"\n}\n```\n\n"
    }
  ]
}