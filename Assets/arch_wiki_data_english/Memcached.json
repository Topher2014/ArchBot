{
  "title": "Memcached",
  "url": "https://wiki.archlinux.org/title/Memcached",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Redis\n\nFrom Wikipedia:\n\nThe system uses a client–server architecture. The servers maintain a key–value associative array; the clients populate this array and query it by key. Keys are up to 250 bytes long and values can be at most 1 megabyte in size.\n\nClients use client-side libraries to contact the servers which, by default, expose their service at port 11211. Both TCP and UDP are supported. Each client knows all servers; the servers do not communicate with each other. If a client wishes to set or read the value corresponding to a certain key, the client's library first computes a hash of the key to determine which server to use. This gives a simple form of sharding and scalable shared-nothing architecture across the servers.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the memcached package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Memcached defaults to listening only on TCP. -l allows you to bind to specific interfaces or IP addresses. By default, memcached listens for connections only on local network interfaces. It may be preferred to change the -l option to allow listening on external addresses instead. See memcached(1).\n\nEdit memcached.service to change the parameter.\n\nThen start and/or enable memcached.service.\n\n"
    },
    {
      "title": "Client-side software",
      "level": 2,
      "content": "- C/C++: libmemcached-awesome\n- Python: python-binary-memcachedAUR, python-memcached, python-pylibmc\n- Perl: perl-cache-memcached\n- Gambas: gambas3-gb-memcached\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- unix.stackexchange.com\n- Github wiki Configuring Server\n\n"
    }
  ]
}