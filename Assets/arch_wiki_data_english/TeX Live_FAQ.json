{
  "title": "TeX Live/FAQ",
  "url": "https://wiki.archlinux.org/title/TeX_Live/FAQ",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nNote: **This article or section is a candidate for merging with TeX Live.** This article or section is a candidate for merging with TeX Live.\n\nThis article or section is a candidate for merging with TeX Live.\n\n"
    },
    {
      "title": "Bibliography / references",
      "level": 3,
      "content": "Biblatex which is in texlive-bibtexextra is then the thing you are looking for. Some templates for specialized publishers (e.g. the IEEE, some universities, etc.) are included in the texlive-publishers package.\n\n"
    },
    {
      "title": "ConTeXt",
      "level": 3,
      "content": "(English) ConTeXt should be enabled automatically. Remember that the ruby wrapper to be used with ConTeXt is\n\n```\ntexexec\n```\n\nIf ConTeXt is not enabled (or you want to use localized version), use\n\n```\ntexconfig\n```\n\nto edit the configuration file with formats, and uncomment the appropriate lines. To set up the new MarkIV implementation of ConTeXt, see https://wiki.contextgarden.net/Running_Mark_IV\n\n"
    },
    {
      "title": "texlive stopped working after update",
      "level": 3,
      "content": "- The most common reason is that your have configuration in TEXMFCONFIG or formats in TEXMFVAR that conflict with the new version.\n\n- After upgrade, TeX \"stops working\" with the following error message: Fatal format file error; I'm stymied. What one should understand is that the TeX system \"precompiles\" formats (that is, takes the macros which constitute for instance the LaTeX format, and creates a binary file (latex.fmt), which is then used when you call \"latex <somefile>\"). Now when the tex binary itself is updated, all the precompiled formats need to be recompiled as well. While pacman does that for you for system-wide formats, the info above implies that if a user (or some program like LyX) ever compiled the formats by himself, that user needs to recompile the formats manually. The command for that is fmtutil --all. (By the way, the location of *.fmt files is <texmfroot>/texmf-var/web2c.) The other option is to delete the *.fmt files from the local tree (~/.texlive/texmf-var/web2c/*.fmt) and use the system-wide generated formats, which can be regenerated with # fmtutil-sys --all\n- After upgrade, some fonts stop being used properly; or there is an error that TeX cannot find some font. This is related to the question below - you most probably have a local updmap.cfg file (check by kpsewhich updmap.cfg) which does not reflect changes in *.map files and fonts which came with the upgrade. In this case, apply the methods from #pdftex and/or dvips uses bitmap fonts instead of type1 postscript fonts.\n\n```\nFatal format file error; I'm stymied.\n```\n\n```\n# fmtutil-sys --all\n```\n\n"
    },
    {
      "title": "pdftex and/or dvips uses bitmap fonts instead of type1 postscript fonts",
      "level": 3,
      "content": "Symptoms:\n\n- zooming on PDF/ps file, fonts are really pixelated\n- when running tex, it takes a long time because it generates fonts with metafont\n- at the end of the log file generated by pdftex it includes *.pk fonts instead of *.pfb\"\n\nFiles which tell pdftex/dvips which fonts are to be included as type1 fonts (instead of traditional bitmap fonts) have suffix .map and reside somewhere in <texmfroot>/fonts/map/{pdftex,dvips}/updmap/{pdftex.map,psfonts.map} . First of all, you need to find out the name of the map file you want. The log for my TeX compilation gave me the error \"Font rtxr at 540 not found\", so I typed locate rtxr and got, among others, /usr/share/texmf-dist/fonts/afm/public/txfonts/rtxr.afm. This tells me the font package is txfonts.\n\nYou do not want to edit these mapfiles manually; they are good for checking if your favorite type1 font which causes trouble is sitting there properly.\n\n- These files are automatically generated, when you run\n\n```\n$ updmap\n```\n\nas user, or\n\n```\n# updmap-sys\n```\n\nas root for system-wide changes\n\nWhat you need to do to have your favorite fonts (for instance kpfonts or txfonts) properly used as type1 fonts in pdf and ps files is to locate the .map file that goes with the package (e.g. kpfonts.map; you do not need to actually *do* anything with the file, just know that it is there somewhere), edit updmap.cfg by running\n\n```\n$ updmap --edit\n```\n\nas user (or\n\n```\n# updmap-sys --edit\n```\n\nas root) and add the line\n\n```\nMap kpfonts.map\n```\n\nor the line\n\n```\nMixedMap kpfonts.map\n```\n\n(MixedMap indicates that fonts are also available as bitmap fonts.), and exit the editor. At this point, you should see the messages which indicate that updmap is regenerating {pdftex,psfonts}.map files.\n\nAlternatively, just run\n\n```\n$ updmap --enable Map=kpfonts\n```\n\nor (as root)\n\n```\n# updmap-sys --enable Map=kpfonts\n```\n\nif you just want to add one map without going into an editor.\n\nThis should be sufficient, and your next run of pdftex/dvips should be already including the type1 versions of fonts.\n\n"
    },
    {
      "title": "Pictures with LaTeX labels",
      "level": 3,
      "content": "Apart from some latex in-source macros (which are a bit of a PITA to write), there are excellent \"picture programming languages\" metapost and its (more-less) successor asymptote. They are pretty powerful, but have similar approach as tex itself - you write down what you want to have and how are the things related, and compiler then produces the picture. The target format is postscript for metapost; and EPS/PDF/PNG for asymptote.\n\nEven closer incorporated to TeX itself - i.e. to Plain TeX, LaTeX or ConTeXt, there are layers for each of this formats - is the relatively new PGF package with its language named TIKZ.\n\nThe Python library PyX (python-pyx) gives the possibility to use Python to program pictures, and it uses TeX for the typesetting.\n\nLast but not least: PSTricks, which gives an interface for direct inclusion of Postscript-code into TeX (ps2pdf). There are some hurdles to climb if you want to have pdf-output, because PSTricks is not compatible to pdftex.\n\n"
    },
    {
      "title": "Pictures with LaTeX labels - GUI",
      "level": 3,
      "content": "The \"grandfather\" of vector editors - xfigAUR is able to produce some output relevant to TeX. I had relatively good experience with ipe recently (saves EPS/PDF). Inkscape is a good choice too.\n\n"
    }
  ]
}