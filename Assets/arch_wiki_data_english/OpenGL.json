{
  "title": "OpenGL",
  "url": "https://wiki.archlinux.org/title/OpenGL",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "From Wikipedia:OpenGL:\n\nLearn more at Khronos.\n\nDevelopment of OpenGL ceased in 2017 in favour of Vulkan, the \"next generation\" API which offers higher performance on newer hardware.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "To run applications that use OpenGL, you will need to install the correct driver(s) for your hardware (either GPUs or CPUs).\n\n- For AMD (and ATI) it is recommended to use the open-source drivers unless you have a strong reason to use the proprietary ones.\n- For NVIDIA, the proprietary driver is recommended for cards newer than the Kepler (NVE0/GKXXX)[dead link 2025-04-06 ⓘ] series, and for better performance in general.\n\n- Intel's GenN hardware does not refer to the generation of the CPU, it refers to the generation of the GPU, which is different from the generation of the CPU.\n- To find the family of an AMD (and ATI) GPU, check Wikipedia:List of AMD graphics processing units#Features overview\n- To find the code-name of an NVIDIA GPU, check the code-name list from the Nouveau project[dead link 2025-04-06 ⓘ]\n\nMesa is an open-source OpenGL implementation, continually updated to support the latest OpenGL specification. It has a collection of open-source drivers for Intel graphics, AMD (formerly ATI) and NVIDIA GPUs. Mesa also provides software rasterizers, such as llvmpipe.\n\nThere are two Mesa packages, each with a distinct set of drivers:\n\n- mesa is the up-to-date Mesa package which includes most of the modern drivers for newer hardware: r300 : for AMD's Radeon R300, R400, and R500 GPUs. r600 : for AMD's Radeon R600 GPUs up to Northern Islands. Officially supported by AMD. radeonsi : for AMD's Southern Island GPUs and later. Officially supported by AMD. nouveau : Nouveau is the open-source driver for NVIDIA GPUs. virtio_gpu : a virtual GPU driver for virtio, can be used with QEMU based VMMs (like KVM or Xen). vmwgfx : for VMware virtual GPUs. i915 : for Intel's Gen 3 hardware. crocus : for Intel's Gen 4 to Gen 7 hardware. iris : for Intel's Gen 8 hardware and later. Officially supported by Intel. zink : a Gallium driver used to run OpenGL on top of Vulkan. d3d12 : for OpenGL 3.3 support on devices that only support D3D12 (i.e. WSL). swrast : a legacy software rasterizer. This driver is discontinued as of Mesa 22.0.0[1], but still available within the source code (ArchLinux still includes them as of 24.1.1[2]) softpipe : a software rasterizer and a reference Gallium driver. llvmpipe : a software rasterizer which uses LLVM for x86 JIT code generation and is multi-threaded.\n\n- r300 : for AMD's Radeon R300, R400, and R500 GPUs.\n- r600 : for AMD's Radeon R600 GPUs up to Northern Islands. Officially supported by AMD.\n- radeonsi : for AMD's Southern Island GPUs and later. Officially supported by AMD.\n- nouveau : Nouveau is the open-source driver for NVIDIA GPUs.\n- virtio_gpu : a virtual GPU driver for virtio, can be used with QEMU based VMMs (like KVM or Xen).\n- vmwgfx : for VMware virtual GPUs.\n- i915 : for Intel's Gen 3 hardware.\n- crocus : for Intel's Gen 4 to Gen 7 hardware.\n- iris : for Intel's Gen 8 hardware and later. Officially supported by Intel.\n- zink : a Gallium driver used to run OpenGL on top of Vulkan.\n- d3d12 : for OpenGL 3.3 support on devices that only support D3D12 (i.e. WSL).\n- swrast : a legacy software rasterizer. This driver is discontinued as of Mesa 22.0.0[1], but still available within the source code (ArchLinux still includes them as of 24.1.1[2])\n- softpipe : a software rasterizer and a reference Gallium driver.\n- llvmpipe : a software rasterizer which uses LLVM for x86 JIT code generation and is multi-threaded.\n\n- mesa-amber is the legacy Mesa package which includes the classic (non-Gallium3D) drivers for older hardware: i830 : for Intel's Gen 2 hardware. Same binary as i965. i915 : for Intel's Gen 3 hardware. Same binary as i965. i965 : for Intel's Gen 4 to Gen 11 hardware. Officially supported by Intel. radeon : for AMD's Radeon R100 GPUs. Same binary as r200. r200 : for AMD's Radeon R200 GPUs. nouveau_vieux : for NVIDIA NV04 (Fahrenheit) to NV20 (Kelvin) GPUs. swrast : a legacy software rasterizer.\n\n- i830 : for Intel's Gen 2 hardware. Same binary as i965.\n- i915 : for Intel's Gen 3 hardware. Same binary as i965.\n- i965 : for Intel's Gen 4 to Gen 11 hardware. Officially supported by Intel.\n- radeon : for AMD's Radeon R100 GPUs. Same binary as r200.\n- r200 : for AMD's Radeon R200 GPUs.\n- nouveau_vieux : for NVIDIA NV04 (Fahrenheit) to NV20 (Kelvin) GPUs.\n- swrast : a legacy software rasterizer.\n\n- nvidia-utils is the proprietary driver for NVIDIA GPUs, which includes an OpenGL implementation.\n\n- amdgpu-pro-oglpAUR is the proprietary driver for AMD GPUs.\n\n"
    },
    {
      "title": "Verification",
      "level": 2,
      "content": "To verify your OpenGL installation, you can use mesa-utils eglinfo, which should display output like this (with different values depending on your setup, of course):\n\n```\n$ eglinfo -B\n```\n\n```\nWayland platform:\nEGL API version: 1.4\nEGL vendor string: Mesa Project\nEGL version string: 1.4\nEGL client APIs: OpenGL OpenGL_ES\nOpenGL compatibility profile vendor: Mesa Project\nOpenGL compatibility profile renderer: i915 (chipset: Pineview M)\nOpenGL compatibility profile version: 2.1 Mesa 23.1.5\nOpenGL compatibility profile shading language version: 1.20\nOpenGL ES profile vendor: Mesa Project\nOpenGL ES profile renderer: i915 (chipset: Pineview M)\nOpenGL ES profile version: OpenGL ES 2.0 Mesa 23.1.5\nOpenGL ES profile shading language version: OpenGL ES GLSL ES 1.0.16\n\nX11 platform:\nEGL API version: 1.5\nEGL vendor string: Mesa Project\nEGL version string: 1.5\nEGL client APIs: OpenGL OpenGL_ES\nOpenGL core profile vendor: Mesa\nOpenGL core profile renderer: llvmpipe (LLVM 15.0.7, 128 bits)\nOpenGL core profile version: 4.5 (Core Profile) Mesa 23.1.5\nOpenGL core profile shading language version: 4.50\nOpenGL compatibility profile vendor: Mesa\nOpenGL compatibility profile renderer: llvmpipe (LLVM 15.0.7, 128 bits)\nOpenGL compatibility profile version: 4.5 (Compatibility Profile) Mesa 23.1.5\nOpenGL compatibility profile shading language version: 4.50\nOpenGL ES profile vendor: Mesa\nOpenGL ES profile renderer: llvmpipe (LLVM 15.0.7, 128 bits)\nOpenGL ES profile version: OpenGL ES 3.2 Mesa 23.1.5\nOpenGL ES profile shading language version: OpenGL ES GLSL ES 3.20\n```\n\nOn X11 platform, glxinfo works as well.\n\nFrom the same package, you can also use eglgears_x11 or glxgears (on X11) or eglgears_wayland (on Wayland) as a basic OpenGL test. You should see 3 rotating gears when running the program.\n\n"
    },
    {
      "title": "Switching between drivers",
      "level": 2,
      "content": "For Hybrid graphics, see PRIME.\n\n"
    },
    {
      "title": "Mesa",
      "level": 3,
      "content": "You can override the driver used for an application with the following environment variable:\n\n```\nMESA_LOADER_DRIVER_OVERRIDE=driver\n```\n\nBy default, Mesa searches for drivers in /lib/dri/. You can view the list of installed drivers with\n\n```\n$ ls /lib/dri/\n```\n\ndriver in driver_dri.so is the actual name of the driver. If Mesa failed to find the specified driver, it will fall back to llvmpipe.\n\nYou can also use an OpenGL software rasterizer by setting the following environment variables:\n\n```\nLIBGL_ALWAYS_SOFTWARE=true\nGALLIUM_DRIVER=driver\n```\n\ndriver can be either softpipe, llvmpipe, or swr.\n\n"
    },
    {
      "title": "OpenGL over Vulkan (Zink)",
      "level": 2,
      "content": "From the Mesa documentation:\n\nIf you are experiencing issues in your default OpenGL drivers (a bug in RadeonSI, Iris, etc.), you could try using the Zink driver.\n\nAccording to this Phoronix benchmark, the average FPS might be lower in some applications compared to RadeonSI.\n\nTo use Zink on NVIDIA drivers, use this command or similar:\n\n```\n$ env __GLX_VENDOR_LIBRARY_NAME=mesa __EGL_VENDOR_LIBRARY_FILENAMES=/usr/share/glvnd/egl_vendor.d/50_mesa.json MESA_LOADER_DRIVER_OVERRIDE=zink GALLIUM_DRIVER=zink application\n```\n\n"
    },
    {
      "title": "Development",
      "level": 2,
      "content": "Using OpenGL in code requires functions loader, read more at Khronos.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "OpenGL Hardware Database",
      "level": 3,
      "content": "GPUInfo provides user reported GPU/driver combinations, supported extensions, capabilities, etc. This information is useful for verifying compatibility / compliance of particular hardware under both OpenGL and Vulkan.\n\n"
    }
  ]
}