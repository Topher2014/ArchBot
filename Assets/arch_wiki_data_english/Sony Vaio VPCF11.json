{
  "title": "Sony Vaio VPCF11",
  "url": "https://wiki.archlinux.org/title/Sony_Vaio_VPCF11",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nNote: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\n"
    },
    {
      "title": "Xorg",
      "level": 2,
      "content": "X server works with the standard nvidia package but shows a blank screen when exiting the X server or just switching terminals using Ctrl+Alt+Fx.\n\nTo resolve the blank screen issue you need to use vesafb.\n\nInstall v86dAUR and remove any vga=<foo> kernel boot parameters.\n\nNext ensure that /etc/modprobe.d/uvesafb.conf contains:\n\n```\noptions uvesafb mode_option=1280x800-32 scroll=ywrap\n```\n\nThis is not the largest resolution available (1280x1024-32 is) but it best fits the aspect ratio of the screen.\n\nFinally add the v86d hook to HOOKS in mkinitcpio.conf:\n\n```\nHOOKS=\"base udev v86d ...\"\n```\n\nand regenerate the initramfs.\n\n"
    },
    {
      "title": "Display backlight regulation",
      "level": 2,
      "content": "I found this solution - https://code.google.com/p/vaio-f11-linux/wiki/NVIDIASetup. It is for Vaio F11, but it works for my F13 too.\n\nI have added this line in section \"Device\" in /etc/X11/xorg.conf :\n\n```\nOption    \"RegistryDwords\"    \"EnableBrightnessControl=1;PowerMizerEnable=0x1;PerfLevelSrc=0x3333;PowerMizerLevel=0x3;PowerMizerDefault=0x3;PowerMizerDefaultAC=0x3\"\n```\n\nPlus I use module sony_laptop .. MODULES=(sony_laptop) in /etc/rc.conf\n\n"
    },
    {
      "title": "Special Keys",
      "level": 2,
      "content": "The 'Display Off' and media keys work out of the box.\n\nThe 'ASSIST', 'S1' and 'VAIO' keys require configuring the appropriate keymap.\n\n"
    },
    {
      "title": "Using udev",
      "level": 3,
      "content": "Firstly run:\n\n```\n$ /lib/udev/findkeyboards\n```\n\nThen do:\n\n```\n# /lib/udev/keymap -i input/eventX\n```\n\nBUT switch input/eventX for the keyboard outputted in the first command. I got 'AT keyboard' and 'module' from the first command. 'AT keyboard' is the normal keyboard for mapping 'Fn+X' and 'module' is the hotkey keyboard.\n\nAfter doing the second command you need to press the buttons that you want to map, then Control-C to exit keymap.\n\nThen edit /lib/udev/keymaps/module-sony, adding the relevant scan code from the second command and then the event you want. All valid events are listed in https://hal.freedesktop.org/quirk/quirk-keymap-list.txt\n\nHere is an example module-sony keymap file for the VPC-F11M1E:\n\n```\n0xA0 mute # Fn+F2\n0xAE volumedown # Fn+F3\n0xB0 volumeup # Fn+F4\n0x10 brightnessdown # Fn+F5\n0x11 brightnessup # Fn+F6\n0x12 switchvideomode # Fn+F7\n0x14 zoomout # Fn+F9\n0x15 zoomin # Fn+F10\n0x17 suspend # Fn+F12\n0x28 help #Assist\n0x20 prog1 #S1\n0x49 vendor #VAIO Hotkey\n```\n\n"
    },
    {
      "title": "Using the kernel tool setkeycodes",
      "level": 3,
      "content": "See the detailed article: setkeycodes.\n\n"
    },
    {
      "title": "Suspend to RAM",
      "level": 2,
      "content": "Out of the box, a suspend will result in a proper suspending but a failure to resume, resulting in a reboot. The solution is to add the following parameter to your kernel (into the line )\n\n```\nacpi_sleep=nonvs\n```\n\nYour grub kernel entry should look like this\n\n```\nlinux /boot/vmlinuz-linux-sony root=/dev/dm-1 acpi_sleep=nonvs\n```\n\n"
    },
    {
      "title": "DTS/AC3 Over HDMI with ALSA",
      "level": 2,
      "content": "Make sure you installed ALSA.\n\n```\n$ aplay -l\n```\n\n```\n**** List of PLAYBACK Hardware Devices ****\ncard 0: Intel [HDA Intel], device 0: ALC275 Analog [ALC275 Analog]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 0: Intel [HDA Intel], device 1: ALC275 Digital [ALC275 Digital]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: NVidia [HDA NVidia], device 3: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: NVidia [HDA NVidia], device 7: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: NVidia [HDA NVidia], device 8: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\ncard 1: NVidia [HDA NVidia], device 9: HDMI 0 [HDMI 0]\n  Subdevices: 1/1\n  Subdevice #0: subdevice #0\n```\n\nThe right ALSA device to use to get a working sound over HDMI is the device 7.\n\nTo get mplayer to use it,\n\n```\nmplayer -ao alsa:device=hw=1.7 -channels 8 -ac hwdts,hwac3, <file>\n```\n\nThe comma after hwac3 is not a typo.\n\n"
    },
    {
      "title": "DTS/AC3 Over HDMI with PULSE",
      "level": 2,
      "content": "After installing pulseaudio, you will need to edit\n\n```\n/etc/pulse/default.pa\n```\n\nand add the following line\n\n```\nload-module module-alsa-sink device=hw:1,7 channels=8\n```\n\nPut channels to the highest number of channels supported by the combination of your hardware (computer + receiver/TV).\n\n"
    },
    {
      "title": "Sources",
      "level": 2,
      "content": "https://code.google.com/p/vaio-f11-linux/w/list?q=label:State-Solution\n\nMap scancodes to keycodes\n\n"
    }
  ]
}