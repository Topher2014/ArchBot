{
  "title": "Lenovo IdeaPad Slim 3 16ABR8",
  "url": "https://wiki.archlinux.org/title/Lenovo_IdeaPad_Slim_3_16ABR8",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nAudio | 1022:15e3 | Yes\nGPU | 1002:15e7 | Yes\nWireless | 10ec:b852 | Yes\nBluetooth | 0bda:4853 | Yes\nWebcam | 5986:215f | Yes\nTouchpad | 04F3:327E | Yes\nFingerprint | 27c6:550a | Yes\nTPM | 1022:15df | Yes\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Before installing, disable Secure Boot in the BIOS. You can access the BIOS by pressing F2 at the Splash screen. The boot menu can also be accessed by pressing F12.\n\n"
    },
    {
      "title": "Video",
      "level": 2,
      "content": "X works natively with a current linux and xf86-video-amdgpu.\n\nIf you are having video issues with only the xf86-video-amdgpu installed, also install the AMD PRO package amdgpu-pro-oglpAUR. See AMDGPU.\n\n"
    },
    {
      "title": "Wireless",
      "level": 2,
      "content": "You can use the native wireless driver with disable_aspm_l1=y and disable_aspm_l1ss=y Kernel module parameter in the rtw89_pci Kernel module is required in order for Wi-Fi to work.\n\nFor Bluetooth use rtw89bt-dkms-gitAUR with iommu=pt kernel parameter.\n\n"
    },
    {
      "title": "Function keys",
      "level": 2,
      "content": "No dedicated keys. The Fn functions on the keyboard are recognized and should work.\n\n"
    },
    {
      "title": "Fingerprint",
      "level": 2,
      "content": "Fingerprint needs libfprint-fpcmoh-gitAUR.\n\nFor installation see fprintd.\n\n"
    },
    {
      "title": "Power management",
      "level": 2,
      "content": "The following section was adapted from Lenovo IdeaPad 5 15are05.\n\nBattery Conservation Mode is a feature that limits battery charging to 55-60% of its capacity to improve battery life, being most useful when the laptop tends to run on external power much of the time. It can be controlled with ideapad-cmAUR. With ideapad2024-power-managementAUR or battmngrAUR it is possible to control both Battery Conservation and System performance modes.\n\n"
    },
    {
      "title": "Kernel method",
      "level": 3,
      "content": "Set the ideapad_laptop.allow_v4_dytc=1 kernel module parameter.\n\nTo use without reboot:\n\n```\n# rmmod ideapad_laptop\n# modprobe ideapad_laptop allow_v4_dytc=1\n```\n\nRestart power-profiles-daemon.service. Now power-profiles-daemon can do everything below.\n\n"
    },
    {
      "title": "System Performance Mode",
      "level": 3,
      "content": "Note: **This article or section is a candidate for merging with Laptop/Lenovo#Lenovo.** This article or section is a candidate for merging with Laptop/Lenovo#Lenovo.\n\nThis article or section is a candidate for merging with Laptop/Lenovo#Lenovo.\n\nThere are 3 modes available: Intelligent Cooling, Extreme Performance and Battery Saving. To toggle it, you need to call some ACPI methods.\n\nFirst install acpi_call (or acpi_call-lts for LTS kernel, acpi_call-dkms for other kernels) and load the kernel module:\n\n```\n# modprobe acpi_call\n```\n\nSet it to Intelligent Cooling mode:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.DYTC 0x000FB001' > /proc/acpi/call\n```\n\nSet it to Extreme Performance mode:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.DYTC 0x0012B001' > /proc/acpi/call\n```\n\nSet it to Battery Saving mode:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.DYTC 0x0013B001' > /proc/acpi/call\n```\n\nTo verify your setting:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.SPMO' > /proc/acpi/call\n# cat /proc/acpi/call; printf '\\n'\n```\n\nAs a result you get the value for the bit SPMO (either 0x0, 0x1 or 0x2).\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.FCMO' > /proc/acpi/call\n# cat /proc/acpi/call; printf '\\n'\n```\n\nAs a result you get the value for the bit FCMO (either 0x0, 0x1 or 0x2). To interpret the results the following table can be used:\n\nTable content:\nSPMO | FCMO | Mode\n0x0 | 0x0 | Intelligent Cooling\n0x1 | 0x1 | Extreme Performance\n0x2 | 0x2 | Battery Saving\n\n"
    },
    {
      "title": "Rapid Charge",
      "level": 3,
      "content": "Make sure you have set up acpi_call.\n\nTurn on:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.SBMC 0x07' > /proc/acpi/call\n```\n\nTurn off:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.SBMC 0x08' > /proc/acpi/call\n```\n\nTo verify your setting:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.QCHO' > /proc/acpi/call\n# cat /proc/acpi/call; printf '\\n'\n```\n\nwhere 0x0 stands for off and 0x1 stands for on.\n\n"
    },
    {
      "title": "Battery Conservation",
      "level": 3,
      "content": "Similarly to the #Rapid Charge, make sure you have set up acpi_call.\n\nTurn on:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.SBMC 0x03' > /proc/acpi/call\n```\n\nTurn off:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.VPC0.SBMC 0x05' > /proc/acpi/call\n```\n\nTo verify your setting:\n\n```\n# echo '\\_SB.PCI0.LPC0.EC0.BTSM' > /proc/acpi/call\n# cat /proc/acpi/call; printf '\\n'\n```\n\nwhere 0x0 stands for off and 0x1 stands for on.\n\nThere is also an alternative way to control the conservation mode of the battery.\n\n"
    },
    {
      "title": "Keyboard",
      "level": 3,
      "content": "The Keyboard will be disabled after waking up from hibernation, this bug fixes itself after an reboot. It is possible to permanently fix this bug by adding a i8042.nopnp kernel parameter, see [1].\n\n"
    },
    {
      "title": "Battery",
      "level": 3,
      "content": "The battery level may be capped above 100% (e.g. with i3-wm) which can lead to confusion.\n\n"
    },
    {
      "title": "Bluetooth",
      "level": 3,
      "content": "It seems pairing does not work correctly with pipewire-pulse. Try to connect to the Bluetooth device directly to pair with the device.\n\n"
    },
    {
      "title": "Onboard devices",
      "level": 3,
      "content": "Sometimes one or more onboard devices get soft locked, although it rarely occurs. To solve this, use rfkill (from util-linux):\n\n```\n# rfkill unblock your_device\n```\n\n"
    },
    {
      "title": "Network Adapters not working",
      "level": 3,
      "content": "It seems external network adapters over the USB-C port do not work even if they did work on other Linux devices.\n\n"
    },
    {
      "title": "EFI Boot Manager fills up",
      "level": 3,
      "content": "The EFI Boot Manager fills itself with old boot entries which need to be manually deleted after changing the OS. For that you can use efibooteditorAUR.\n\n"
    }
  ]
}