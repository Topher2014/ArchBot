{
  "title": "Firefox/Tweaks",
  "url": "https://wiki.archlinux.org/title/Firefox/Tweaks",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Firefox\n- Browser plugins\n- Firefox/Profile on RAM\n- Firefox/Privacy\n\nNote: **This article or section is a candidate for merging with Firefox#Tips and tricks.** This article or section is a candidate for merging with Firefox#Tips and tricks.\n\nThis article or section is a candidate for merging with Firefox#Tips and tricks.\n\nThis page contains advanced Firefox configuration options and performance tweaks.\n\n"
    },
    {
      "title": "Performance",
      "level": 2,
      "content": "Improving Firefox's performance is divided into parameters that can be inputted while running Firefox or otherwise modifying its configuration as intended by the developers, and advanced procedures that involve foreign programs or scripts.\n\nThis section contains advanced Firefox options for performance tweaking. For additional information see these MozillaZine articles.\n\n"
    },
    {
      "title": "Change Performance settings",
      "level": 3,
      "content": "Firefox automatically uses settings based on the computer's hardware specifications [1].\n\nAdjusting these settings can be done in Preferences or by changing the dom.ipc.processCount value to 1-8 and browser.preferences.defaultPerformanceSettings.enabled to false manually in about:config.\n\nHowever you may want to manually adjust this setting to increase performance even further or decrease memory usage on low-end devices.\n\nIn this case the Content process limit for the current user has been increased to 4:\n\n```\n$ ps -e | grep 'Web Content'\n```\n\n```\n13991 tty1     00:00:04 Web Content\n14027 tty1     00:00:09 Web Content\n14031 tty1     00:00:20 Web Content\n14040 tty1     00:00:26 Web Content\n```\n\n"
    },
    {
      "title": "WebRender",
      "level": 3,
      "content": "WebRender is a high-performance, GPU-accelerated 2D rendering engine written in Rust. It is the compositor that powers Firefox and the Servo browser engine project. As of Firefox 93, it is enabled by default for all users and uses hardware rendering by default if the hardware it is running on supports at least OpenGL 3.0 or OpenGL ES 3.0 (as of 2021-04) and meets minimum driver requirements. If your system does not meet these requirements it will fallback to software rendering using Software Webrender.\n\nIf you are experiencing rendering issues with up-to-date drivers on your machine, you can force-enable Software Webrender by setting the gfx.webrender.software preference to true in about:config.\n\n"
    },
    {
      "title": "Turn off the disk cache",
      "level": 3,
      "content": "Every object loaded (html page, jpeg image, css stylesheet, gif banner) is saved in the Firefox cache for future use without the need to download it again. It is estimated that only a fraction of these objects will be reused, usually about 30%. This is because of very short object expiration time, updates or simply user behavior (loading new pages instead of returning to the ones already visited). The Firefox cache is divided into memory and disk cache and the latter results in frequent disk writes: newly loaded objects are written to memory and older objects are removed.\n\nAn alternative approach is to use about:config settings:\n\n- Set browser.cache.disk.enable to false\n- Verify that browser.cache.memory.enable is set to true, more information about this option can be found in the browser.cache.memory Mozilla article\n- Add the entry browser.cache.memory.capacity and set it to the amount of KB you want to spare, or to -1 for automatic cache size selection (skipping this step has the same effect as setting the value to -1) The \"automatic\" size selection is based on a decade-old table that only contains settings for systems at or below 8GB of system memory. The following formula very closely approximates this table, and can be used to set the Firefox cache more dynamically: 41297 - (41606 / (1 + ((RAM / 1.16) ^ 0.75))), where RAM is in GB and the result is in KB.\n\n- The \"automatic\" size selection is based on a decade-old table that only contains settings for systems at or below 8GB of system memory. The following formula very closely approximates this table, and can be used to set the Firefox cache more dynamically: 41297 - (41606 / (1 + ((RAM / 1.16) ^ 0.75))), where RAM is in GB and the result is in KB.\n\nThis method has some drawbacks:\n\n- The content of currently browsed webpages is lost if the browser crashes or after a reboot, this can be avoided using anything-sync-daemon or any similar periodically-syncing script so that cache gets copied over to the drive on a regular basis\n- The settings need to be configured for each user individually\n\n"
    },
    {
      "title": "Move disk cache to RAM",
      "level": 3,
      "content": "An alternative is to move the \"disk\" cache to a RAM disk, giving you a solution in between the two above. The cache will now be preserved between Firefox runs (including Firefox crash recovery), but will be discarded upon reboot (including OS crash).\n\nTo do this, go to about:config and set browser.cache.disk.parent_directory to /run/user/UID/firefox, where UID is your user's ID which can be obtained by running id -u.\n\nOpen about:cache to verify the new disk cache location.\n\n"
    },
    {
      "title": "Longer interval between session information record",
      "level": 3,
      "content": "Firefox stores the current session status (opened urls, cookies, history and form data) to the disk on a regular basis. It is used to recover a previous session in case of crash. The default setting is to save the session every 15 seconds, resulting in frequent disk access.\n\nTo increase the save interval to 10 minutes (600000 milliseconds) for example, change in about:config the setting of browser.sessionstore.interval to 600000\n\nTo disable completely this feature, change browser.sessionstore.resume_from_crash to false.\n\n"
    },
    {
      "title": "Defragment the profile's SQLite databases",
      "level": 3,
      "content": "Firefox keeps bookmarks, history, passwords in SQLite databases. SQLite databases become fragmented over time and empty spaces appear all around. But, since there are no managing processes checking and optimizing the database, these factors eventually result in a performance hit. A good way to improve start-up and some other bookmarks and history related tasks is to defragment and trim unused space from these databases.\n\nYou can use profile-cleaner to do this, while Firefox is not running:\n\nTable content:\nSQLite database | Size Before | Size After | % change\nurlclassifier3.sqlite | 37 M | 30 M | 19 %\nplaces.sqlite | 16 M | 2.4 M | 85 %\n\nFirefox provides a tool to defragment and optimize the places database, which is the source of most slowdowns and profile corruptions. To access this tool, open the about:support page, search for Places Database and click the Verify Integrity button.\n\n"
    },
    {
      "title": "Cache the entire profile into RAM via tmpfs",
      "level": 3,
      "content": "If the system has memory to spare, tmpfs can be used to cache the entire profile directory, which might result in increased Firefox responsiveness.\n\n"
    },
    {
      "title": "Disable Pocket",
      "level": 3,
      "content": "If you do not use the Pocket-service, you may want to disable it by setting extensions.pocket.enabled to false in about:config.\n\n"
    },
    {
      "title": "Fonts",
      "level": 3,
      "content": "See the main article: Font configuration\n\n"
    },
    {
      "title": "Configure the DPI value",
      "level": 4,
      "content": "Modifying the following value can help improve the way fonts looks in Firefox if the system's DPI is below 96. Firefox, by default, uses 96 and only uses the system's DPI if it is a higher value. To force the system's DPI regardless of its value, type about:config into the address bar and set layout.css.dpi to 0.\n\nNote that the above method only affects the Firefox user interface's DPI settings. Web page contents still use a DPI value of 96, which may look ugly or, in the case of high-resolution displays, may be rendered too small to read. A solution is to change layout.css.devPixelsPerPx to system's DPI divided by 96. For example, if your system's DPI is 144, then the value to add is 144/96 = 1.5. Changing layout.css.devPixelsPerPx to 1.5 makes web page contents use a DPI of 144, which looks much better.\n\nIf this results in fonts that are undesirably large in releases after Firefox 103, change browser.display.os-zoom-behavior to zero. Then, type ui.textScaleFactor into the about:config search bar, select the circle next to 'number,' click the plus button to add the setting key, and edit its value to 100 times your layout.css.devPixelsPerPx value. For example, if that was set to 1.25, ui.textScaleFactor should be set to 125.\n\nSee also HiDPI#Firefox for information about HiDPI displays and [2] for calculating the DPI.\n\n"
    },
    {
      "title": "Default font settings from Microsoft Windows",
      "level": 4,
      "content": "Below are the default font preferences when Firefox is installed in Microsoft Windows. Many web sites use the Microsoft fonts.\n\n```\nProportional: Serif Size (pixels): 16\nSerif: Times New Roman\nSans-serif: Arial\nMonospace: Courier New Size (pixels): 13\n```\n\n"
    },
    {
      "title": "General user interface CSS settings",
      "level": 3,
      "content": "Firefox's user interface can be modified by editing the userChrome.css and userContent.css files in ~/.mozilla/firefox/profile/chrome/ (profile_dir is of the form hash.name, where the hash is an 8 character, seemingly random string and the profile name is usually default). You can find out the exact name by typing about:support in the URL bar, and searching for the Profile Directory field under the Application Basics section as described in the Firefox documentation.\n\n- The chrome/ folder and userChrome.css/userContent.css files may not necessarily exist, so they may need to be created.\n- toolkit.legacyUserProfileCustomizations.stylesheets must be enabled in about:config.\n\nThis section only deals with the userChrome.css file which modifies Firefox's user interface, and not web pages.\n\n"
    },
    {
      "title": "Change the interface font",
      "level": 4,
      "content": "The setting effectively overrides the global GTK font preferences, and does not affect webpages, only the user interface itself:\n\n```\n~/.mozilla/firefox/profile/chrome/userChrome.css\n```\n\n```\n* {\n    font-family: \"FONT_NAME\";\n}\n```\n\n"
    },
    {
      "title": "Hide button icons",
      "level": 4,
      "content": "Enables text-only buttons:\n\n```\n~/.mozilla/firefox/profile/chrome/userChrome.css\n```\n\n```\n.button-box .button-icon {\n    display: none;\n}\n```\n\n"
    },
    {
      "title": "Hiding various tab buttons",
      "level": 4,
      "content": "These settings hide the arrows that appear to the horizontal edges of the tab bar, the button that toggles the \"all tabs\" drop-down list, and the plus sign button that creates a new tab.\n\n```\n~/.mozilla/firefox/profile/chrome/userChrome.css\n```\n\n```\n/* Tab bar */\n\ntoolbarbutton#scrollbutton-up, toolbarbutton#scrollbutton-down {\n    /* Hide tab scroll buttons */\n    display: none;\n}\n\n.browser-toolbar > * #alltabs-button {\n    /* Hide tab drop-down list */\n    display: none;\n}\n\n.browser-toolbar > * #new-tab-button {\n    /* Hide new-tab button */\n    display: none;\n}\n```\n\n"
    },
    {
      "title": "Vertical/tree tabs",
      "level": 4,
      "content": "To place the tab bar in a sidebar/tree, use one of the following addons:\n\n- Tree Style Tab\n- Sidebery\n- Tabby\n\nFirefox addons cannot hide the native tab bar through its extension APIs - to do so, follow the setup/advanced instructions for your addon.\n\n"
    },
    {
      "title": "Hide title bar and window border",
      "level": 4,
      "content": "To replace the title bar with the tab bar, set browser.tabs.inTitlebar to 1 in about:config.\n\nOr go to \"More tools\", then \"Customize toolbar\" and then at the bottom-left corner find checkbox named \"Title Bar\". Uncheck it. If the checkbox is missing, make sure the XDG_CURRENT_DESKTOP environment variable is correctly set and/or the MOZ_GTK_TITLEBAR_DECORATION environment variable is set to \"client\".\n\n"
    },
    {
      "title": "Auto-hide Bookmarks Toolbar",
      "level": 4,
      "content": "```\n~/.mozilla/firefox/profile/chrome/userChrome.css\n```\n\n```\n#PersonalToolbar {\n    visibility: collapse !important;\n}\n\n#navigator-toolbox:hover > #PersonalToolbar {\n    visibility: visible !important;\n}\n```\n\n"
    },
    {
      "title": "Remove sidebar width restrictions",
      "level": 4,
      "content": "```\n~/.mozilla/firefox/profile/chrome/userChrome.css\n```\n\n```\n/* remove maximum/minimum  width restriction of sidebar */\n#sidebar {\n    max-width: none !important;\n    min-width: 0px !important;\n}\n```\n\n"
    },
    {
      "title": "Unreadable input fields with dark GTK themes",
      "level": 4,
      "content": "When using a dark GTK theme, one might encounter Internet pages with unreadable input and text fields (e.g. text input field with white text on white background, or black text on dark background). This can happen because the site only sets either background or text color, and Firefox takes the other one from the theme. To prevent Firefox from using theme's colors and dark themes in web pages respectively confirm browser.display.use_system_colors and widget.content.allow-gtk-dark-theme are set to false in about:config.\n\nOtherwise, if the previous modification did not solve the issue, it is possible to launch Firefox with a light GTK theme by adding a new string in about:config named widget.content.gtk-theme-override and setting it to a light theme like Breeze:light or Adwaita:light.\n\nThe extension Text Contrast for Dark Themes sets the other color as needed to maintain contrast.\n\nAlternatively set the standard colors explicitly for all web pages in userContent.css or using the stylus add-on. The style sheet is usually located in your profile folder (visit about:profiles for the path) in chrome/userContent.css, if not you can create it there.\n\nThe following sets input fields to standard black text / white background; both can be overridden by the displayed site, so that colors are seen as intended:\n\n```\ninput:not(.urlbar-input):not(.textbox-input):not(.form-control):not([type='checkbox']):not([type='radio']), textarea, select {\n    -moz-appearance: none !important;\n    background-color: white;\n    color: black;\n}\n\n#downloads-indicator-counter {\n    color: white;\n}\n```\n\nTo force Firefox to use a light theme (e.g. Adwaita) for both web content and UI, see GTK#Themes.\n\nTo force Firefox to use a light theme (e.g. Adwaita) for web content only:\n\n1. Open about:config in the address bar.\n1. Create a new widget.content.gtk-theme-override string type entry (right mouse button > New > String).\n1. Set the value to the light theme to use for rendering purposes (e.g. Adwaita:light).\n1. Restart Firefox.\n\n"
    },
    {
      "title": "Web content CSS settings",
      "level": 3,
      "content": "This section deals with the userContent.css file in which you can add custom CSS rules for web content. Changes to this file will take effect once the browser is restarted.\n\nThis file can be used for making small fixes or to apply personal styles to frequently visited websites. Custom stylesheets for popular websites are available from sources such as userstyles.org. You can install an add-on such as superUserContent[dead link 2020-03-29 ⓘ] to manage themes. This add-on creates the directory chrome/userContent.css.d and applies changes to the CSS files therein when the page is refreshed.\n\n"
    },
    {
      "title": "Import other CSS files",
      "level": 4,
      "content": "```\n~/.mozilla/firefox/profile/chrome/userContent.css\n```\n\n```\n@import url(\"./imports/some_file.css\");\n```\n\n"
    },
    {
      "title": "Block certain parts of a domain",
      "level": 4,
      "content": "```\n~/.mozilla/firefox/profile/chrome/userContent.css\n```\n\n```\n@-moz-document domain(example.com) {\n    div#header {\n        background-image: none !important;\n    } \n}\n```\n\n"
    },
    {
      "title": "Add [pdf] after links to PDF files",
      "level": 4,
      "content": "```\n~/.mozilla/firefox/profile/chrome/userContent.css\n```\n\n```\n/* add '[pdf]' next to links to PDF files */\na[href$=\".pdf\"]:after {\n    font-size: smaller;\n    content: \" [pdf]\";\n}\n```\n\n"
    },
    {
      "title": "Mouse wheel scroll speed",
      "level": 3,
      "content": "To modify the default values (i.e. speed-up) of the mouse wheel scroll speed, go to about:config and search for mousewheel.acceleration. This will show the available options, modifying the following:\n\n- Set mousewheel.acceleration.start to 1.\n- Set mousewheel.acceleration.factor to the desired number (10 to 20 are common values).\n\nAlternatively, to use system values (as how scrolling works in Chromium), set mousewheel.system_scroll_override.enabled to false.\n\nMozilla's recommendation for increasing the mousewheel scroll speed is to:\n\n- Set mousewheel.default.delta_multiplier_y between 200 and 500 (default: 100)\n\n"
    },
    {
      "title": "Pixel-perfect trackpad scrolling",
      "level": 3,
      "content": "To enable one-to-one trackpad scrolling (as can be witnessed with GTK3 applications like Nautilus), set the MOZ_USE_XINPUT2=1 environment variable before starting Firefox.\n\nIf scrolling is undesirably jerky, try enabling Firefox's Use smooth scrolling option under Preferences > General > Browsing.\n\n"
    },
    {
      "title": "Enable touchscreen gestures",
      "level": 3,
      "content": "On Wayland, touchscreen gestures are enabled by default.\n\nOn X11, make sure dom.w3c_touch_events.enabled is either set to 1 (enabled) or 2 (default, auto-detect), and set the MOZ_USE_XINPUT2=1 environment variable.\n\nOn some devices, it may be necessary to disable xinput's touchscreen gestures by running the following:\n\n```\n$ xsetwacom --set device Gesture off\n```\n\n"
    },
    {
      "title": "Mouse click on URL bar's behavior",
      "level": 3,
      "content": "In older versions of Firefox it was possible to tweak the behavior of the address bar in about:config, but this has been removed in March 2020.\n\nIn order to for example disable the behavior that selects the contents of the address bar on first click, or to allow to double click the URL to select it in full, see user contributed scripts such as https://github.com/SebastianSimon/firefox-omni-tweaks\n\n"
    },
    {
      "title": "Smooth scrolling",
      "level": 3,
      "content": "In order to get smooth physics-based scrolling in Firefox, the general.smoothScroll.msdPhysics configurations can be changed to emulate a snappier behaviour like in other web browsers. For a quicker configuration, append the following to ~/.mozilla/firefox/your-profile/user.js (requires restart):\n\n```\nuser_pref(\"general.smoothScroll.lines.durationMaxMS\", 125);\nuser_pref(\"general.smoothScroll.lines.durationMinMS\", 125);\nuser_pref(\"general.smoothScroll.mouseWheel.durationMaxMS\", 200);\nuser_pref(\"general.smoothScroll.mouseWheel.durationMinMS\", 100);\nuser_pref(\"general.smoothScroll.msdPhysics.enabled\", true);\nuser_pref(\"general.smoothScroll.other.durationMaxMS\", 125);\nuser_pref(\"general.smoothScroll.other.durationMinMS\", 125);\nuser_pref(\"general.smoothScroll.pages.durationMaxMS\", 125);\nuser_pref(\"general.smoothScroll.pages.durationMinMS\", 125);\n```\n\nAdditionally the mouse wheel scroll settings have to be changed to react in a smooth way as well:\n\n```\nuser_pref(\"mousewheel.min_line_scroll_amount\", 30);\nuser_pref(\"mousewheel.system_scroll_override_on_root_content.enabled\", true);\nuser_pref(\"mousewheel.system_scroll_override_on_root_content.horizontal.factor\", 175);\nuser_pref(\"mousewheel.system_scroll_override_on_root_content.vertical.factor\", 175);\nuser_pref(\"toolkit.scrollbox.horizontalScrollDistance\", 6);\nuser_pref(\"toolkit.scrollbox.verticalScrollDistance\", 2);\n```\n\nIf you have troubles on machines with varying performance, try modifying the mousewheel.min_line_scroll_amount until it feels snappy enough.\n\nFor a more advanced configuration which modifies the mass-spring-damper parameters, see AveYo's natural smooth scrolling configuration.\n\n"
    },
    {
      "title": "Set backspace's behavior",
      "level": 3,
      "content": "See Firefox#Backspace does not work as the 'Back' button.\n\n"
    },
    {
      "title": "Disable middle mouse button clipboard paste",
      "level": 3,
      "content": "See Firefox#Middle-click behavior.\n\n"
    },
    {
      "title": "Emacs key bindings",
      "level": 3,
      "content": "To have Emacs/Readline-like key bindings active in text fields, see GTK#Emacs key bindings.\n\n"
    },
    {
      "title": "Force-enable hardware video decoding",
      "level": 3,
      "content": "Although media.hardware-video-decoding.enabled is enabled by default, one may need to force-enable hardware video decoding by setting media.hardware-video-decoding.force-enabled to true.\n\n"
    },
    {
      "title": "Remove full screen warning",
      "level": 3,
      "content": "Warning about video displayed in full screen mode (… is now fullscreen) can be disabled by setting full-screen-api.warning.timeout to 0 in about:config.\n\n"
    },
    {
      "title": "Change the order of search engines in the Firefox Search Bar",
      "level": 3,
      "content": "To change the order search engines are displayed in:\n\n- Open the drop-down list of search engines and click Manage Search Engines... entry.\n- Highlight the engine you want to move and use Move Up or Move Down to move it. Alternatively, you can use drag-and-drop.\n\n"
    },
    {
      "title": "\"I'm Feeling Lucky\" mode",
      "level": 3,
      "content": "Some search engines have a \"feeling lucky\" feature. For example, Google has \"I'm Feeling Lucky\".\n\nTo activate them, search for keyword.url in about:config and modify its value (if any) to the URL of the search engine.\n\nFor Google, set it to:\n\n```\nhttps://www.google.com/search?btnI=I%27m+Feeling+Lucky&q=\n```\n\n"
    },
    {
      "title": "Secure DNS with DNSSEC validator",
      "level": 3,
      "content": "You can enable DNSSEC support for safer browsing.\n\n"
    },
    {
      "title": "Secure DNS with DNS over HTTPS",
      "level": 3,
      "content": "See Domain name resolution#Application-level DNS.\n\n"
    },
    {
      "title": "Adding magnet protocol association",
      "level": 3,
      "content": "In about:config set network.protocol-handler.expose.magnet to false. In case it does not exist, it needs to be created, right click on a free area and select New > Boolean, input network.protocol-handler.expose.magnet and set it to false.\n\nThe next time you open a magnet link, you will be prompted with a Launch Application dialogue. From there simply select your chosen BitTorrent client. This technique can also be used with other protocols: network.protocol-handler.expose.<protocol>.\n\n"
    },
    {
      "title": "Prevent accidental closing",
      "level": 3,
      "content": "There are different approaches to handle this:\n\nThis behavior can be disabled with browser.quitShortcut.disabled property set to true in about:config\n\nAn alternative is to add a rule in your window manager configuration file. For example in Openbox add:\n\n```\n<keybind key=\"C-q\">\n   <action name=\"Execute\">\n     <execute>false</execute>\n   </action>\n </keybind>\n```\n\nin the <keyboard> section of your ~/.config/openbox/rc.xml file.\n\nThe Disable Ctrl-Q and Cmd-Q extension can be installed to prevent unwanted closing of the browser.\n\n"
    },
    {
      "title": "Jerky or choppy scrolling",
      "level": 3,
      "content": "Scrolling in Firefox can feel \"jerky\" or \"choppy\". A post on MozillaZine gives settings that work on Gentoo, but reportedly work on Arch Linux as well:\n\n1. Set mousewheel.min_line_scroll_amount to 40\n1. Set general.smoothScroll and general.smoothScroll.pages to false\n1. Set image.mem.min_discard_timeout_ms to something really large such as 2100000000 but no more than 2140000000. Above that number Firefox will not accept your entry and complain with the error code: \"The text you entered is not a number.\"\n1. Set image.mem.max_decoded_image_kb to at least 512K\n\nNow scrolling should flow smoothly.\n\n"
    },
    {
      "title": "Run Firefox inside an nspawn container",
      "level": 3,
      "content": "See systemd-nspawn#Run Firefox.\n\n"
    },
    {
      "title": "Disable WebRTC audio post processing",
      "level": 3,
      "content": "If you are using the PulseAudio PulseAudio#Microphone echo/noise cancellation, you probably do not want Firefox to do additional audio post processing.\n\nTo disable audio post processing, change the value of the following preferences to false:\n\n- media.getusermedia.aec_enabled (Acoustic Echo Cancellation)\n- media.getusermedia.agc_enabled (Automatic Gain Control)\n- media.getusermedia.noise_enabled (Noise suppression)\n- media.getusermedia.hpf_enabled (High-pass filter)\n\n"
    },
    {
      "title": "Fido U2F authentication",
      "level": 3,
      "content": "Firefox supports the Fido U2F authentication protocol. Install libfido2 for the required udev rules.\n\n"
    },
    {
      "title": "Get ALSA working back",
      "level": 3,
      "content": "As long as Arch keeps building Firefox with ac_add_options --enable-alsa, then Firefox works fine without pulse on the system, without needing any special configurations, and without apulse (unless using pulse on the system and wanting Firefox to avoid using it). It used to be one had to allow ioctl syscalls, blocked by default by Firefox sandboxing, and required by ALSA setting security.sandbox.content.syscall_whitelist in about:config, to the right ioctl syscall number, which is 16 for x86-64 and 54 for x86-32, but not anymore. For reference, see:\n\n[4] [5]\n\n"
    },
    {
      "title": "Force-enable WebGL",
      "level": 3,
      "content": "On some platforms WebGL may be disabled even when the user desires to use it. To force-enable WebGL set webgl.force-enabled to true, to also force-enable WebGL anti-aliasing, set webgl.msaa-force to true.\n\nIf you get an error similar to this:\n\n```\nlibGL error: MESA-LOADER: failed to retrieve device information\nlibGL error: image driver extension not found\nlibGL error: failed to load driver: i915\nlibGL error: MESA-LOADER: failed to retrieve device information\n...\n```\n\nthen you can try the solution explained in Firefox bug 1480755 [6]:\n\nSet security.sandbox.content.read_path_whitelist to /sys/\n\n"
    },
    {
      "title": "Enable Recommended by Pocket",
      "level": 3,
      "content": "If you do not see \"Recommended by Pocket\" (Preferences > Home > Firefox Home Content - between \"Top Sites\" and \"Highlights\"), you can enable it by setting browser.newtabpage.activity-stream.feeds.section.topstories and browser.newtabpage.activity-stream.feeds.system.topstories to true in about:config. Although the option will still not show in Preferences, newly opened tabs/windows (if set to Firefox Home) should now display Pocket recommendations.\n\n"
    },
    {
      "title": "Prevent the download panel from opening automatically",
      "level": 3,
      "content": "As of Firefox 98, the download panel (with ongoing/recent downloads) always opens whenever a download starts.\n\nYou can disable this behavior by setting the browser.download.alwaysOpenPanel preference to false in about:config.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- MozillaZine Wiki\n- about:config entries MozillaZine article\n- Firefox touch-ups that might be desired\n\n"
    }
  ]
}