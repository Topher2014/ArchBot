{
  "title": "Swap",
  "url": "https://wiki.archlinux.org/title/Swap",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- fstab\n- Hibernation\n- zswap\n- zram\n- Swap on video ram\n- ZFS#Swap volume\n- dm-crypt/Swap encryption\n\nThis page provides an introduction to swap space and paging on GNU/Linux. It covers creation and activation of swap partitions and swap files.\n\nFrom All about Linux swap space:\n\nSupport for swap is provided by the Linux kernel and user-space utilities from the util-linux package.\n\n"
    },
    {
      "title": "Swap space",
      "level": 2,
      "content": "Swap space can take the form of a disk partition or a file. Users may create a swap space during installation or at any later time as desired. Swap space can be used for two purposes, to extend the virtual memory beyond the installed physical memory (RAM), and also for suspend-to-disk support.\n\nWhether or not it is beneficial to extend the virtual memory with swap depends on the amount of installed physical memory. If the amount of physical memory is less than the amount of memory required to run all the desired programs, then it may be beneficial to enable swap. This avoids out of memory conditions, where the Linux kernel OOM killer mechanism will automatically attempt to free up memory by killing processes. To increase the amount of virtual memory to the required amount, add the necessary difference (or more) as swap space.\n\nThe biggest drawback of using swap when running out of memory is its lower performance, see section #Performance. Hence, enabling swap is a matter of personal preference: some prefer programs to be killed over enabling swap and others prefer enabling swap and slower system when the physical memory is exhausted.\n\nTo check swap status, use:\n\n```\n$ swapon --show\n```\n\nOr to show physical memory as well as swap usage:\n\n```\n$ free -h\n```\n\n"
    },
    {
      "title": "Swap partition",
      "level": 2,
      "content": "A swap partition can be created with most GNU/Linux partitioning tools. Swap partitions are designated by the partition type GUID 0657FD6D-A4AB-43C4-84E5-0933C84B4F4F on GPT (8200 type for gdisk, swap type for fdisk) and type ID 82 on MBR.\n\nTo set up a partition as Linux swap area, the mkswap(8) command is used. For example:\n\n```\n# mkswap /dev/sdxy\n```\n\nTo enable the device for paging:\n\n```\n# swapon /dev/sdxy\n```\n\nSee swapon(8) for the options syntax.\n\n"
    },
    {
      "title": "Enabling at boot",
      "level": 3,
      "content": "To enable the swap partition at boot time, either:\n\n- use systemd#GPT partition automounting\n- or add an entry to /etc/fstab. E.g.: UUID=device_UUID none swap defaults 0 0\n\n```\nUUID=device_UUID none swap defaults 0 0\n```\n\nSee fstab for the file syntax, and systemd#systemd.mount - mounting.\n\n"
    },
    {
      "title": "Disabling swap",
      "level": 3,
      "content": "To deactivate specific swap space:\n\n```\n# swapoff /dev/sdxy\n```\n\nAlternatively use the -a switch to deactivate all swap space.\n\nSince swap is managed by systemd, it will be activated again on the next system startup. To disable the automatic activation of detected swap space permanently, run systemctl --type swap to find the responsible .swap unit and mask it.\n\n"
    },
    {
      "title": "Swap file",
      "level": 2,
      "content": "As an alternative to creating an entire partition, a swap file offers the ability to vary its size on-the-fly, and is more easily removed altogether. This may be especially desirable if disk space is at a premium (e.g. a modestly-sized SSD).\n\nTable content:\nFile system | Supports swap files\nBcachefs | No\nBtrfs | Yes\nF2FS | Yes\next4 | Yes\nJFS | Yes\nNILFS2 | No\nNTFS3 | Yes\nReiserFS | Yes\nXFS | Yes\nZFS | No\n\n"
    },
    {
      "title": "Swap file creation",
      "level": 3,
      "content": "Use mkswap(8) to create a swap file the size of your choosing (see Partitioning#Swap for advice). For example, creating a 4 GiB swap file:\n\n```\n# mkswap -U clear --size 4G --file /swapfile\n```\n\nActivate the swap file:\n\n```\n# swapon /swapfile\n```\n\nFinally, edit the fstab configuration to add an entry for the swap file:\n\n```\n/etc/fstab\n```\n\n```\n/swapfile none swap defaults 0 0\n```\n\nFor additional information, see fstab#Usage.\n\n"
    },
    {
      "title": "Swap file removal",
      "level": 3,
      "content": "To remove a swap file, it must be turned off first and then can be removed:\n\n```\n# swapoff /swapfile\n# rm -f /swapfile\n```\n\nFinally, remove the relevant entry from /etc/fstab.\n\n"
    },
    {
      "title": "Swap encryption",
      "level": 2,
      "content": "See dm-crypt/Swap encryption.\n\n"
    },
    {
      "title": "Performance",
      "level": 2,
      "content": "Swap operations are usually significantly slower than directly accessing data in RAM. However, disabling swap entirely to improve performance can sometimes lead to a degradation. If there is not enough physical memory available to hold everything, swapping out nothing leaves less memory available for file system caches, causing more frequent and costly disk usage.\n\nSwap values can be adjusted to help performance:\n\n"
    },
    {
      "title": "Swappiness",
      "level": 3,
      "content": "When memory usage reaches a certain threshold, the kernel starts looking at active memory and seeing what it can free up. File data can be written out to the file system (if changed), unloaded and re-loaded later; other data must be written to swap before it can be unloaded.\n\nThe swappiness sysctl parameter represents the kernel's preference for writing to swap instead of files. It can have a value between 0 and 200 (max 100 if Linux < 5.8); the default value is 60. A low value causes the kernel to prefer freeing up open files, a high value causes the kernel to try to use swap space, and a value of 100 means IO cost is assumed to be equal.\n\nTo check the current swappiness value:\n\n```\n$ sysctl vm.swappiness\n```\n\nAlternatively, the file /proc/sys/vm/swappiness can be read in order to obtain the raw integer value.\n\nTo temporarily set the swappiness value:\n\n```\n# sysctl -w vm.swappiness=35\n```\n\nTo set the swappiness value permanently, create a sysctl.d(5) configuration file. For example:\n\n```\n/etc/sysctl.d/99-swappiness.conf\n```\n\n```\nvm.swappiness = 35\n```\n\nTo have the boot loader set swappiness when loading the kernel, add a kernel parameter, e.g. sysctl.vm.swappiness=35.\n\nTo test and more on why this may work, take a look at this article. For a more recent counter-argument, see this article.\n\n"
    },
    {
      "title": "VFS cache pressure",
      "level": 3,
      "content": "Another sysctl parameter that affects swap performance is vm.vfs_cache_pressure, which controls the tendency of the kernel to reclaim the memory which is used for caching of VFS caches, versus pagecache and swap. Increasing this value increases the rate at which VFS caches are reclaimed[1]. For more information, see the Linux kernel documentation.\n\n"
    },
    {
      "title": "Priority",
      "level": 3,
      "content": "If you have more than one swap file or swap partition you should consider assigning a priority value (0 to 32767) for each swap area. The system will use swap areas of higher priority before using swap areas of lower priority. For example, if you have a faster disk and a slower disk, assign a higher priority to the swap area located on the fastest device. Priorities can be assigned in fstab via the pri parameter:\n\n```\nUUID=f9fe0b69-a280-415d-a03a-a32752370dee none swap defaults,pri=100 0 0\nUUID=d7eb6062-01c8-4367-ac1d-3bf1167de8bb none swap defaults,pri=10  0 0\n```\n\nOr via the --priority parameter of swapon:\n\n```\n# swapon --priority 100 /dev/sda1\n```\n\nIf two or more areas have the same priority, and it is the highest priority available, pages are allocated on a round-robin basis between them.\n\n"
    },
    {
      "title": "Striping",
      "level": 3,
      "content": "There is no necessity to use RAID for swap performance reasons. The kernel itself can stripe swapping on several devices, if you just give them the same priority in the /etc/fstab file. Refer to The Software-RAID HOWTO for details.\n\n"
    },
    {
      "title": "Discard (a.k.a. trim)",
      "level": 3,
      "content": "See Solid state drive#swap.\n\n"
    },
    {
      "title": "Compressed block device in RAM",
      "level": 3,
      "content": "See Improving performance#zram or zswap.\n\n"
    },
    {
      "title": "Using the swap space only for hibernation",
      "level": 3,
      "content": "If you only need swap as a hibernation image storage space, then you can use zswap and disable its writeback so that there are no disk writes from regular swap usage. See Power management/Suspend and hibernate#Disable zswap writeback to use the swap space only for hibernation.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- In defence of swap: common misconceptions\n\n"
    }
  ]
}