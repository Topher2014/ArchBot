{
  "title": "LDAP authentication",
  "url": "https://wiki.archlinux.org/title/LDAP_authentication",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- OpenLDAP\n- LDAP Hosts\n- Identity management\n\nThis is a guide on how to configure an Arch Linux installation to authenticate against an LDAP directory. This LDAP directory can be either local (installed on the same computer) or network (e.g. in a lab environment where central authentication is desired).\n\nThe guide is divided into two parts. The first part deals with how to setup an OpenLDAP server that hosts the authentication directory. The second part deals with how to setup the NSS and PAM modules that are required for the authentication scheme to work on the client computers. If you just want to configure Arch to authenticate against an already existing LDAP server, you can skip to the second part.\n\nNSS (which stands for Name Service Switch) is a system mechanism to configure different sources for common configuration databases. For example, /etc/passwd is a file type source for the passwd database.\n\nPAM (which stands for Pluggable Authentication Modules) is a mechanism used by Linux (and most *nixes) to extend its authentication schemes based on different plugins.\n\nSo to summarize, we need to configure NSS to use the OpenLDAP server as a source for the passwd, shadow and other configuration databases and then configure PAM to use these sources to authenticate its users.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the OpenLDAP server and configure the server and client. After you have completed that, return here.\n\n"
    },
    {
      "title": "Set up access controls",
      "level": 3,
      "content": "To make sure that no-one can read the (encrypted) passwords from the LDAP server, but still allowing users to edit some of their own select attributes (such as own password and photo), create the temporary LDIF allowpwchange.ldif\n\n```\nallowpwchange.ldif\n```\n\n```\ndn: olcDatabase={1}mdb,cn=config\nchangetype: modify\nreplace: olcAccess\nolcAccess: {0}to attrs=cn,givenName,sn,userPassword,shadowLastChange,mail,loginShell,photo by self write by anonymous auth by dn.base=\"cn=Manager,dc=example,dc=org\" write by * none\nolcAccess: {1}to * by self read by dn.base=\"cn=Manager,dc=example,dc=org\" write by * read\n```\n\nImport it on database number 0 (cn=config):\n\n```\n$ slapmodify -n 0 -l allowpwchange.ldif\n```\n\nThen restart slapd.service afterwards.\n\n"
    },
    {
      "title": "Populate LDAP tree with base data",
      "level": 3,
      "content": "Create a temporary file called base.ldif with the following text.\n\n```\nbase.ldif\n```\n\n```\n# example.org\ndn: dc=example,dc=org\ndc: example\no: Example Organization\nobjectClass: dcObject\nobjectClass: organization\n\n# Manager, example.org\ndn: cn=Manager,dc=example,dc=org\ncn: Manager\ndescription: LDAP administrator\nobjectClass: organizationalRole\nobjectClass: top\nroleOccupant: dc=example,dc=org\n\n# People, example.org\ndn: ou=People,dc=example,dc=org\nou: People\nobjectClass: top\nobjectClass: organizationalUnit\n\n# Groups, example.org\ndn: ou=Group,dc=example,dc=org\nou: Group\nobjectClass: top\nobjectClass: organizationalUnit\n```\n\nAdd it to your OpenLDAP tree:\n\n```\n$ ldapadd -D \"cn=Manager,dc=example,dc=org\" -W -f base.ldif\n```\n\nTest to make sure the data was imported:\n\n```\n$ ldapsearch -x -b 'dc=example,dc=org' '(objectclass=*)'\n```\n\n"
    },
    {
      "title": "Adding users",
      "level": 3,
      "content": "To manually add a user, create an .ldif file like this:\n\n```\nuser_joe.ldif\n```\n\n```\ndn: uid=johndoe,ou=People,dc=example,dc=org\nobjectClass: top\nobjectClass: person\nobjectClass: organizationalPerson\nobjectClass: inetOrgPerson\nobjectClass: posixAccount\nobjectClass: shadowAccount\nuid: johndoe\ncn: John Doe\nsn: Doe\ngivenName: John\ntitle: Guinea Pig\ntelephoneNumber: +0 000 000 0000\nmobile: +0 000 000 0000\npostalAddress: AddressLine1$AddressLine2$AddressLine3\nuserPassword: {CRYPT}xxxxxxxxxx\nlabeledURI: https://archlinux.org/\nloginShell: /bin/bash\nuidNumber: 9999\ngidNumber: 9999\nhomeDirectory: /home/johndoe/\ndescription: This is an example user\n```\n\nThe xxxxxxxxxx in the userPassword entry should be replaced with the value in /etc/shadow or use the slappasswd command. Now add the user:\n\n```\n$ ldapadd -D \"cn=Manager,dc=example,dc=org\" -W -f user_joe.ldif\n```\n\nYou can add a group similarly with\n\n```\ngroup_joe.ldif\n```\n\n```\ndn: cn=joe,ou=Group,dc=example,dc=org\nobjectClass: top\nobjectClass: posixGroup\ncn: joe\ngidNumber: 9999\n```\n\n"
    },
    {
      "title": "Client setup",
      "level": 2,
      "content": "Install the OpenLDAP client as described in OpenLDAP. Make sure you can query the server with ldapsearch.\n\nDepending on your target, choose either online-only or online and offline authentication.\n\n"
    },
    {
      "title": "NSS configuration",
      "level": 4,
      "content": "NSS is a system facility which manages different sources as configuration databases. For example, /etc/passwd is a file type source for the passwd database, which stores the user accounts.\n\nInstall the nss-pam-ldapd package.\n\nEdit /etc/nsswitch.conf which is the central configuration file for NSS. It tells NSS which sources to use for which system databases. We need to add the ldap directive to the passwd, group and shadow databases, so be sure your file looks like this:\n\n```\npasswd: files ldap\ngroup: files ldap\nshadow: files ldap\n```\n\nEdit /etc/nslcd.conf and change the base and uri lines to fit your ldap server setup.\n\nEdit the binddn and the bindpw if your LDAP server requires a password. Make sure you change the permission of your /etc/nslcd.conf to 0600 for nslcd to start properly.\n\nStart nslcd.service using systemd.\n\nYou now should see your LDAP users when running getent passwd on the client.\n\n"
    },
    {
      "title": "PAM configuration",
      "level": 4,
      "content": "The basic rule of thumb for PAM configuration is to include pam_ldap.so wherever pam_unix.so is included. Arch moving to pambase has helped decrease the amount of edits required. For more details about configuring pam, the Red Hat Documentation is quite good. You might also want the upstream documentation for nss-pam-ldapd.\n\nFirst edit /etc/pam.d/system-auth. This file is included in most of the other files in pam.d, so changes here propagate nicely. Updates to pambase may change this file.\n\nMake pam_ldap.so sufficient at the top of each section, except in the session section, where we make it optional.\n\n```\n/etc/pam.d/system-auth\n```\n\n```\nauth      sufficient pam_ldap.so\nauth      required  pam_unix.so     try_first_pass nullok\nauth      optional  pam_permit.so\nauth      required  pam_env.so\n\naccount   sufficient pam_ldap.so\naccount   required  pam_unix.so\naccount   optional  pam_permit.so\naccount   required  pam_time.so\n\npassword  sufficient pam_ldap.so\npassword  required  pam_unix.so     try_first_pass nullok sha512 shadow\npassword  optional  pam_permit.so\n\nsession   required  pam_limits.so\nsession   required  pam_unix.so\nsession   optional  pam_ldap.so\nsession   optional  pam_permit.so\n```\n\nThen edit both /etc/pam.d/su and /etc/pam.d/su-l identically. The su-l file is used when the user runs su --login.\n\nMake pam_ldap.so sufficient at the top of each section but below pam_rootok, and add use_first_pass to pam_unix in the auth section.\n\n```\n/etc/pam.d/su\n```\n\n```\n#%PAM-1.0\nauth      sufficient    pam_rootok.so\nauth      sufficient    pam_ldap.so\n# Uncomment the following line to implicitly trust users in the \"wheel\" group.\n#auth     sufficient    pam_wheel.so trust use_uid\n# Uncomment the following line to require a user to be in the \"wheel\" group.\n#auth     required      pam_wheel.so use_uid\nauth      required\tpam_unix.so use_first_pass\naccount   sufficient    pam_ldap.so\naccount   required\tpam_unix.so\nsession   sufficient    pam_ldap.so\nsession   required\tpam_unix.so\n```\n\nTo enable users to edit their password, edit /etc/pam.d/passwd:\n\n```\n/etc/pam.d/passwd\n```\n\n```\n#%PAM-1.0\npassword        sufficient      pam_ldap.so\npassword        required        pam_unix.so sha512 shadow nullok\n```\n\nIf you want home folders to be created at login (eg: if you are not using NFS to store home folders), edit /etc/pam.d/system-login and add pam_mkhomedir.so to the session section above any \"sufficient\" items. This will cause home folder creation when logging in at a tty, from ssh, xdm, sddm, gdm, etc. You might choose to edit additional files in the same way, such as /etc/pam.d/su and /etc/pam.d/su-l to enable it for su and su --login. If you do not want to do this for ssh logins, edit system-local-login instead of system-login, etc.\n\n```\n/etc/pam.d/system-login\n```\n\n```\n...top of file not shown...\nsession    optional   pam_loginuid.so\nsession    include    system-auth\nsession    optional   pam_motd.so          motd=/etc/motd\nsession    optional   pam_mail.so          dir=/var/spool/mail standard quiet\n-session   optional   pam_systemd.so\nsession    required   pam_env.so\nsession    required   pam_mkhomedir.so skel=/etc/skel umask=0077\n```\n\n```\n/etc/pam.d/su-l\n```\n\n```\n...top of file not shown...\nsession         required        pam_mkhomedir.so skel=/etc/skel umask=0077\nsession         sufficient      pam_ldap.so\nsession         required        pam_unix.so\n```\n\nTo enable sudo from an LDAP user, edit /etc/pam.d/sudo. You will also need to modify sudoers accordingly.\n\n```\n/etc/pam.d/sudo\n```\n\n```\n#%PAM-1.0\nauth      sufficient    pam_ldap.so\nauth      required      pam_unix.so  try_first_pass\nauth      required      pam_nologin.so\n```\n\nYou will also need to add in /etc/openldap/ldap.conf the following:\n\n```\n/etc/openldap/ldap.conf\n```\n\n```\nsudoers_base ou=sudoers,dc=example,dc=org\n```\n\n"
    },
    {
      "title": "Online and offline authentication with SSSD",
      "level": 3,
      "content": "See SSSD for an overview and installation.\n\n"
    },
    {
      "title": "SSSD configuration",
      "level": 4,
      "content": "If it does not exist create /etc/sssd/sssd.conf.\n\n```\n/etc/sssd/sssd.conf\n```\n\n```\n[sssd]\nconfig_file_version = 2\nservices = nss, pam\ndomains = LDAP\n\n[domain/LDAP]\ncache_credentials = true\nenumerate = true\n\nid_provider = ldap\nauth_provider = ldap\n\nldap_uri = ldap://server1.example.org, ldap://server2.example.org\nldap_search_base = dc=example,dc=org\nldap_id_use_start_tls = true\nldap_tls_reqcert = demand\nldap_tls_cacert = /etc/openldap/certs/cacerts.pem\nchpass_provider = ldap\nldap_chpass_uri = ldap://server1.example.org\nentry_cache_timeout = 600\nldap_network_timeout = 2\n\n# OpenLDAP supports posixGroup, uncomment the following two lines\n# to get group membership support (and comment the other conflicting parameters)\n#ldap_schema = rfc2307\n#ldap_group_member = memberUid\n\n# Other LDAP servers may support this instead\nldap_schema = rfc2307bis\nldap_group_member = uniqueMember\n```\n\nThe above is an example only. See sssd.conf(5) for the full details.\n\nFinally set the file permissions chmod 600 /etc/sssd/sssd.conf otherwise SSSD will fail to start.\n\n"
    },
    {
      "title": "NSCD configuration",
      "level": 4,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nDisable caching for passwd, group and netgroup entries in /etc/nscd.conf as it will interfere with sssd caching.\n\nKeep caching enabled for hosts entries otherwise some services may fail to start.\n\n```\n/etc/nscd.conf\n```\n\n```\n# Begin /etc/nscd.conf\n[...]\nenable-cache\t\tpasswd\t\tno\n[...]\nenable-cache\t\tgroup\t\tno\n[...]\nenable-cache\t\thosts\t\tyes\n[...]\nenable-cache\t\tnetgroup\tno\n[...]\n# End /etc/nscd.conf\n```\n\n"
    },
    {
      "title": "NSS configuration",
      "level": 4,
      "content": "Edit /etc/nsswitch.conf as follows:\n\n```\n/etc/nsswitch.conf\n```\n\n```\n# Begin /etc/nsswitch.conf\n\npasswd: files sss\ngroup: files sss\nshadow: files sss\nsudoers: files sss\n\npublickey: files\n\nhosts: files dns myhostname\nnetworks: files\n\nprotocols: files\nservices: files\nethers: files\nrpc: files\n\nnetgroup: files\n\n# End /etc/nsswitch.conf\n```\n\n"
    },
    {
      "title": "PAM configuration",
      "level": 4,
      "content": "The first step is to edit /etc/pam.d/system-auth as follows:\n\n```\n/etc/pam.d/system-auth\n```\n\n```\n#%PAM-1.0\n\nauth sufficient pam_sss.so forward_pass\nauth required pam_unix.so try_first_pass nullok\nauth optional pam_permit.so\nauth required pam_env.so\n\naccount [default=bad success=ok user_unknown=ignore authinfo_unavail=ignore] pam_sss.so\naccount required pam_unix.so\naccount optional pam_permit.so\naccount required pam_time.so\n\npassword sufficient pam_sss.so\npassword required pam_unix.so try_first_pass nullok sha512 shadow\npassword optional pam_permit.so\n\nsession     required      pam_mkhomedir.so skel=/etc/skel/ umask=0077\nsession required pam_limits.so\nsession required pam_unix.so\nsession optional pam_sss.so\nsession optional pam_permit.so\n```\n\nThese PAM changes will apply to fresh login. To also allow the su command to authenticate through SSSD, edit /etc/pam.d/su:\n\n```\n/etc/pam.d/su\n```\n\n```\n#%PAM-1.0\nauth            sufficient        pam_rootok.so\n\nauth sufficient   pam_sss.so      forward_pass\nauth            required        pam_unix.so\n\naccount [default=bad success=ok user_unknown=ignore authinfo_unavail=ignore] pam_sss.so\naccount         required        pam_unix.so\n\nsession         required        pam_unix.so\nsession optional pam_sss.so\n```\n\nEdit /etc/pam.d/sudo as follows:\n\n```\n/etc/pam.d/sudo\n```\n\n```\n#%PAM-1.0\nauth           sufficient      pam_sss.so\nauth           required        pam_unix.so try_first_pass\nauth           required        pam_nologin.so\n```\n\nAlso add sudo service to the list of enabled services and the search base in /etc/sssd/sssd.conf:\n\n```\n/etc/sssd/sssd.conf\n```\n\n```\n[sssd]\n...\nservices = nss, pam, sudo\n...\n\n[domain/LDAP]\n...\nldap_sudo_search_base = ou=sudoers,dc=example,dc=org\n...\n```\n\nAlternately, configure sudo to allow the desired LDAP users to use sudo.\n\nFor changing expired passwords when logging in using su add a password entry to /etc/pam.d/su if it is missing:\n\n```\n/etc/pam.d/su\n```\n\n```\n#%PAM-1.0\n\n[...]\n\nauth        include     system-auth\naccount     include     system-auth\nsession     include     system-auth\npassword    include     system-auth\n```\n\nStart/enable sssd.service.\n\nYou should now be able to see details of your ldap users with getent passwd username or id username.\n\nOnce you have logged in with a user the credentials will be cached and you will be able to login using the cached credentials when the ldap server is offline or unavailable.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- The official page of the nss-pam-ldapd packet\n- Debian Wiki - LDAP/NSS\n- Debian Wiki - LDAP/PAM\n- Using LDAP for single authentication\n- Heterogeneous Network Authentication Introduction\n- Discussion on suse's mailing lists about nss-pam-ldapd\n- Fedora's SSSD User Guide\n\n"
    }
  ]
}