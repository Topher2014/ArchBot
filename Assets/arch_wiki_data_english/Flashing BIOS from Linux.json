{
  "title": "Flashing BIOS from Linux",
  "url": "https://wiki.archlinux.org/title/Flashing_BIOS_from_Linux",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This article provides information on using Linux to update the BIOS of a system. Usually, the update program provided by a manufacturer must be executed under Windows. However, various utilities and methods have been published for upgrading a system BIOS under Linux.\n\n- HP users may download Windows BIOS updater from HP website, extract *.exe file and locate ISO image for burning to a CD. Using CD, upgrade is possible from BIOS menu using 'Firmware Upgrade' without using below tools. See this thread for details. Also, see the #HP section below to upgrade using an USB if your current HP BIOS allows it.\n- For users with Dell computers, Dell recommends Linux users flash their BIOS following information located here (in short, put the .EXE on a USB stick and use the F12 boot menu to access the firmware's flash utility).\n\nIn addition to the tools described below, many laptop pages include individualized instructions for a particular model. The instructions sometimes involve bespoke utilities that may even be particular to the upgrade process on a single model. If there is no page for a particular model, it may be useful to look at pages for similar models, as it might be possible to adapt a process for the target model. The HP ENVY m4-1015dx page, for example, includes instructions that may work on a variety of HP models.\n\n"
    },
    {
      "title": "fwupd",
      "level": 2,
      "content": "fwupd is a simple daemon to allow session software to update device firmware on your local machine.\n\nLarge vendors including Dell and Logitech use this way to distribute firmware updates to Linux.\n\nfwupd only supports flashing BIOS updates in UEFI mode.\n\nSee fwupd for further information about installation and usage.\n\n"
    },
    {
      "title": "BiosDisk",
      "level": 2,
      "content": "BiosDisk simplifies the process of flashing your system BIOS under Linux.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the biosdisk-gitAUR package.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "To use the biosdisk utility to create a BIOS flash image, first download the latest raw BIOS image for your system from your manufacturer's website. Make sure, however, that you always get the BIOS executable and NOT the Windows executable. You then have one of two options: create a ISO or install the image for your boot loader.\n\n- The mkimage action will create a ISO image on the user's hard drive. Usage is the following:\n\n```\n# biosdisk mkimage [-o option] [-i destination] /path/to/.exe\n```\n\n- The install action will create the biosdisk image, copy the image file to /boot, and then update the boot loader with an entry for the image. Then all the user has to do is boot the system and select the image to flash the BIOS; this will load the biosdisk image directly from the hard drive and flash the BIOS.\n\n```\n# biosdisk install [-o option] [--name=] /path/to/.exe\n```\n\n"
    },
    {
      "title": "Flashrom",
      "level": 2,
      "content": "Flashrom is a utility for identifying, reading, writing, verifying and erasing flash chips. It is designed to flash BIOS/EFI/coreboot/firmware/optionROM images on mainboards, network/graphics/storage controller cards, and various programmer devices.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the flashrom or flashrom-gitAUR package.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "Find out if your motherboard and chipset (internal) is supported by flashrom at this website. Supported Hardware You can also find out if your hardware is supported by issuing the following command\n\n```\n# flashrom --programmer internal\n```\n\nThe above command will tell you your motherboard and chipset. You can then find out if yours is supported by issuing this command:\n\n```\n# flashrom --programmer internal -L | grep CHIPNAMEfrompreviouscommand\n```\n\nOn modern mainboards you probably get more than one rom chip listed. You have to select the chipname you get from the upper command. Then you use the -c option to select which rom is affected by the command\n\n```\n# flashrom --programmer internal -c \"CHIPNAME\" -r backup_CHIPNAME.bin\n```\n\nWrite and verify the new BIOS image (proprietary or Coreboot) on the ROM chip:\n\n```\n# flashrom --programmer internal -c \"CHIPNAME\" -w newbios.bin\n```\n\nIf you want to flash other flash chips on your mainboard, you will find all options with\n\n```\n# flashrom\n```\n\n"
    },
    {
      "title": "FreeDOS",
      "level": 2,
      "content": "Some laptop manufacturers provide a DOS compatible executable to flash the system firmware. FreeDOS, a free DOS-compatible operating system, is up to the challenge, no need for proprietary DOS versions. So, all you need is a bootable floppy disk image with FreeDOS kernel on it.\n\n"
    },
    {
      "title": "Unetbootin",
      "level": 3,
      "content": "By far the easiest way to make a bootable FreeDOS USB Stick is using unetbootinAUR.\n\nYou should format a pendrive with FAT16 and flag it as \"boot\" (you may do this through a GUI with gparted or partitionmanager). Then, after mounting the flash drive, select under distribution FreeDOS and your mounted stick. The app will automatically download the image for you and copy it to the drive. Finally, you may copy everything you want to flash there (BIOS, firmwares, etc).\n\n"
    },
    {
      "title": "dosemu",
      "level": 3,
      "content": "The problem with the official FreeDOS images is the lack of extra space for holding firmware and BIOS update files and programs. The easiest way to create a DOS, bootable FAT drive of arbitrary size under Linux is to mount a FAT drive under dosemu and then make it bootable with the FreeDOS sys command.\n\nFor an alternative method, see Gentoo:BIOS Update#FreeDOS environment.\n\n"
    },
    {
      "title": "Pre-built images",
      "level": 3,
      "content": "Yet another simple solution: FreeDOS pre-built bootable USB flash drive image by Christian Taube. Instructions can be found here.\n\n"
    },
    {
      "title": "Using a FreeDOS-provided Disk Image + USB stick on Linux",
      "level": 3,
      "content": "As of writing (2017-07-11), unetbootinAUR does not support versions of FreeDOS more recent than 1.0 (current version is 1.2). The following procedure worked to upgrade an Inspiron 17-3737 to the A09 BIOS. (Dell offers this as a possibility on their site)\n\nSome notes before starting:\n\n- You can check your current BIOS version with dmidecode. You might already be at the latest version.\n- Ensure that your hardware vendor has verified this method works (use of FreeDOS to run BIOS update .exe)\n- Laptop users should not attempt this without AC power\n- This is dangerous, and you assume all risk for following this procedure.\n\nProcedure:\n\n1. Grab the latest USB installer from the FreeDOS Download Page author note: used the \"Full\" version on suspicion that it might include more drivers, etc (pure speculation)\n1. Extract the archive, you get a .img file\n1. Determine which of /dev/sdX is your USB stick (use fdisk -l)\n1. Write the image directly to the block device: dd if=FD12FULL.img of=/dev/sdX status=progress (where X is the letter representing your USB stick as a block device, do not write the image to a partition)\n1. Double-check that the image copying worked: fdisk -l (you should see a single partition on a DOS disk with the bootable (\"boot\") flag set)\n1. Mount the partition, and copy over the .exe used to update your firmware Stay on the safe side and limit the filename to 8 characters (without extension), uppercase Ensure that you verified any checksums provided by your hardware vendor\n1. Unmount and reboot. Do whatever is needed to boot from the USB drive\n\n- author note: used the \"Full\" version on suspicion that it might include more drivers, etc (pure speculation)\n\n- dd if=FD12FULL.img of=/dev/sdX status=progress (where X is the letter representing your USB stick as a block device, do not write the image to a partition)\n\n- fdisk -l (you should see a single partition on a DOS disk with the bootable (\"boot\") flag set)\n\n- Stay on the safe side and limit the filename to 8 characters (without extension), uppercase\n- Ensure that you verified any checksums provided by your hardware vendor\n\nNow you will find yourself in the FreeDOS live installation environment.\n\n1. Select your language\n1. You will be prompted to install FreeDOS Select \"No - Return to DOS\"\n1. You should see a prompt (C:\\>)\n1. Run dir /w and verify that your firmware upgrade tool is present\n1. Run the executable author note: in the case of the Dell tool, the machine displayed a splash screen and then rebooted. Upon reboot, it started the firmware upgrade automatically, and ran for about 2 minutes with the fan at full speed)\n1. Once the process specific to your vendor completes, optionally verify through the BIOS setup screen, as well as by running dmidecode when you are back in Linux\n\n- Select \"No - Return to DOS\"\n\n- author note: in the case of the Dell tool, the machine displayed a splash screen and then rebooted. Upon reboot, it started the firmware upgrade automatically, and ran for about 2 minutes with the fan at full speed)\n\n"
    },
    {
      "title": "Using a FreeDOS-provided Disk Image + USB stick with Windows",
      "level": 3,
      "content": "The author for this procedure encountered several issues related to mounting the FAT partition type of the USB using the previous method on Linux with dd. This procedure seeks to outline a method to flash the BIOS with FreeDOS, a USB stick and Ruckus on Windows.\n\nPrerequisites:\n\n- Download and install Rufus for Windows. This can be either the full installation or the portable version.\n- Download the latest Full USB installer for FreeDOS (v1.2 as of the time of writing).\n- Download the latest BIOS update from the vendors' website\n- It is assumed that dmidecode is installed on the system\n\nProcedure:\n\n1. Extract the contents of the FD12FULL.zip archive, noting the .img file\n1. Insert a flash drive and flash the FD12FULL.img file using Rufus, leaving all default options Detailed use of Rufus is not covered in this guide. Refer to Rufus' manual or documentation for detailed usage\n1. Once flashed with Rufus, rename the BIOS file with 8 uppercase characters (not including the extension) and copy it over to the flash drive\n1. Eject the flash drive and plug it into the laptop.\n1. Perform whatever steps are necessary to boot from the USB with LEGACY BOOT Author note: For my Dell Laptop, I press F12 for boot options and select 'USB Storage Device' under 'Legacy Options'. I have explicitly enabled legacy boot from within my BIOS, but this option may not be present if the system is only configured to boot with UEFI\n1. You will be presented with the FreeDOS Installation environment Select preferred language Select 'No - Return to DOS' on the next screen Type dir to view the contents of the USB flash drive To execute the BIOS upgrade file, simply type the filename and press enter Note: My upgrade took <2 minutes with the fans at full speed. The system reboot 3 times total.\n1. Once the upgrade completes and the system boots back into the OS, issue dmidecode | grep -E 'BIOS|Version' as root and validate the BIOS version has been upgraded\n\n- Detailed use of Rufus is not covered in this guide. Refer to Rufus' manual or documentation for detailed usage\n\n- Author note: For my Dell Laptop, I press F12 for boot options and select 'USB Storage Device' under 'Legacy Options'. I have explicitly enabled legacy boot from within my BIOS, but this option may not be present if the system is only configured to boot with UEFI\n\n- Select preferred language\n- Select 'No - Return to DOS' on the next screen\n- Type dir to view the contents of the USB flash drive\n- To execute the BIOS upgrade file, simply type the filename and press enter\n- Note: My upgrade took <2 minutes with the fans at full speed. The system reboot 3 times total.\n\n"
    },
    {
      "title": "Images that are too large for a floppy",
      "level": 3,
      "content": "If your flash image is too large for a floppy, go to the FreeDos bootdisk website, and download the 10Mb hard-disk image. This image is a full disk image, including partitions, so adding your flash utility will be a little trickier:\n\nFirst find the first partition (at time of writing, the first partition starts at block 63; this means that the partitions starts at offset 512 * 63 = 32256). You can either use:\n\n```\n# file -sk <image-file> | sed -r 's/.*startsector ([0-9]+).*/\\1/'\n```\n\n```\n63\n```\n\nOr:\n\n```\n# fdisk -l <image-file>\n```\n\n```\n…\nUnits = sectors of 1 * 512 = 512 bytes\n…\n      Device  Boot  Start    End  Blocks  Id  System\n              *        63  19151   9544+   1  FAT12\n```\n\nNow you can mount the image:\n\n```\n# mount -oloop,offset=$((63 * 512)) <image-file> /mnt\n```\n\nThen you can copy your flash utility onto the filesystem as normal. Once you are done:\n\n```\n# umount /mnt\n```\n\nThe image can now be copied to a USB stick for booting, or booted as a memdisk as per normal instructions.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "The OEM Bootdisk version is recommended, as it only includes kernel and command.com thus leaving more space for the flash utility and new BIOS image. Download the FreeDOS image and decompress it.\n\nCopy your BIOS flash utility and new BIOS image to the mounted floppy disk image. Load the necessary modules:\n\n```\n# modprobe -a vfat loop\n```\n\n/proc/fileystems shows if the needed file systems are supported. \"loop mount\" the floppy disk image to a temporary path:\n\n```\n$ mount --mkdir -t vfat -o loop FDOEM.144 /tmp/floppy\n```\n\nIf the mount went without errors, copy the BIOS flash utility and new BIOS image to the mounted floppy disk image. You will probably have to unzip the archive you downloaded from your motherboard vendor site, to get to those two files. For example:\n\n```\n# unzip 775Dual-VSTA\\(2.60\\).zip\n```\n\n```\nArchive: 775Dual-VSTA(2.60).zip\n inflating: 75DVSTA2.60\n inflating: ASRflash.exe\n```\n\n```\n# cp 75DVSTA2.60 ASRflash.exe /tmp/floppy\n```\n\nCheck that the two files were not too big for the floppy:\n\n```\n$ df /tmp/floppy\n```\n\n```\nFilesystem           1K-blocks      Used Available Use% Mounted on\n/tmp/FDOEM.144            1424       990       434  70% /tmp/floppy\n```\n\nUnmount the floppy disk image:\n\n```\n# umount /tmp/floppy\n```\n\nThe next step is to burn the floppy image to a CD/DVD-RW media, but in a way that it can be booted afterwards. First create a bootable CD image, and then burn it.\n\n```\n# genisoimage -o bootcd.iso -b FDOEM.144 FDOEM.144\n# wodim -v bootcd.iso\n```\n\nYou may alternatively add your image to the GRUB menu. Install syslinux and copy memdisk and your image to /boot:\n\n```\n# cp /usr/lib/syslinux/memdisk /boot\n# cp FDOEM.144 /boot/flashbios.img\n```\n\nNow add an entry to /boot/grub/menu.lst:\n\n```\n/boot/grub/menu.lst\n```\n\n```\ntitle Flash BIOS\nkernel /memdisk\ninitrd /flashbios.img\n```\n\nOr for GRUB2 in /boot/grub/grub.cfg:\n\n```\n/boot/grub/grub.cfg\n```\n\n```\nmenuentry \"Flash BIOS\" {\n linux16 /boot/memdisk\n initrd16 /boot/flashbios.img\n}\n```\n\nOr for syslinux in /boot/syslinux/syslinux.cfg:\n\n```\n/boot/syslinux/syslinux.cfg\n```\n\n```\nLABEL flashbios\n\tMENU LABEL Flash BIOS\n\tLINUX ../memdisk\n\tINITRD ../fdboot.img\n```\n\nFinally reboot your machine, making sure the CD drive is first in the boot sequence, and run the BIOS upgrade procedure when the CD boots. If using the GRUB method, choose the new entry on the list, and it should boot into FreeDOS.\n\n"
    },
    {
      "title": "Bootable optical disk emulation",
      "level": 2,
      "content": "The script Geteltorito.pl will extract the El Torito boot image. It has worked with Lenovo laptops like the X1 Carbon, X200, X220, X230, X260, X395, W540, T450, T450s and P50. It may work for other vendors as well.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the geteltoritoAUR package.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "Get the bios update iso from the vendor support site. Run the geteltorito image extraction:\n\n```\n$ geteltorito.pl -o <image>.img <image>.iso\n```\n\nCopy the image to an USB flash installation medium:\n\n```\n# dd if=<image>.img of=<destination> bs=512K\n```\n\nReboot and boot from the USB drive, follow vendor directions.\n\n"
    },
    {
      "title": "Windows PE",
      "level": 2,
      "content": "If your manufacturer only provides an exe file and you were not successful following the prior advice, you can update your bios creating a Windows PE flash drive and from there flash the bios update as normally.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "Download a ISO Windows PE to create a bootable drive.\n\nBoot the USB and go to your manufacturer website and download the respective update, and execute normally.\n\n"
    },
    {
      "title": "HP",
      "level": 3,
      "content": "Some HP BIOS, especially the ones available in their business lines -- ProDesk 600, EliteDesk 800, Thin Clients (T620, T730 etc) -- have an option to update the BIOS from within the BIOS. This option is usually available under the File Menu and is called \"Flash System ROM\". There are 2 different directory structures that seem to work. Your BIOS may or may not work with either directory structure.\n\n1. Placing the BIOS *.bin file in the root of the FAT32 formatted USB drive without any other directories. You do not need any other files.\n1. Using the directory structure as described here\n\nIf neither of the above directory structures seem to work, then either use the FreeDOS method if HP provides the relevant DOS executables for your BIOS version or get a Windows machine to first create a HP BIOS Flash Recovery USB and then use that USB to flash the BIOS using the same Flash System ROM option.\n\nProcedure:\n\n1. Download the BIOS executable from HP's support website using your serial number and indicating Windows as the OS .\n1. The exe file is an archive and can then be extracted using e.g 7z\n1. Create the appropriate directory structure in the USB as described above. If one does not work, try the other\n1. Unmount the USB\n1. Attach it to the computer whose BIOS needs to be upgraded (if using a different computer to create the USB drive)\n1. Reboot the computer and get into the BIOS using the assigned key (e.g. F10) for your BIOS.\n1. Once in the BIOS, find and select the Flash System ROM option. It may provide you with 3 options to flash from USB Hard disk Network\n1. Select the appropriate option (in this case USB) and it will pop up another text box which will have the file name of the BIN file that you put in the root of the USB drive.\n1. Hit Enter and it should indicate that current version of the BIOS and new one being upgraded to.\n1. Follow the screen prompts to upgrade the BIOS and finally reboot.\n\n- USB\n- Hard disk\n- Network\n\nFor some models, particularly around the years 2010-2014, unpacking the executable produces a file ending in .fd that contains both the BIOS file and an RSA signature for the file. Instructions have been published on how to extract from the .fd file, and some tools have been published as well. Once these files are extracted and placed on a USB drive, they can be used to perform the update. Sometimes the firmware update user interface makes it possible to navigate to the files, but it may sometimes also be necessary to place them in a particular directory with a particular name. The bios file usually has the suffix .bin and the signature file has the suffix .sig or .s12. The HP ENVY m4-1015dx page provides specific details for one such model.\n\n"
    },
    {
      "title": "ASUS",
      "level": 3,
      "content": "Modern ASUS motherboards do not require Windows for firmware update. You can update from within the UEFI with the Ez-Flash utility. However, they ask you to update ME before updating bios. The problem is that they do not include Linux update tool in the archive[2].\n\nEven if your bios is at latest version, you need update ME anyway. It is important to avoid hardware problems, such as unable to wake from sleep.\n\nDownload the System Tools from here. For this particular motherboard the latest (v15) version did not work (Unknown PCH platform). As recommended here, using v11 version worked. Extract the Linux executable from the archive (\"CSME System Tools v11 r46/FWUpdate/LINUX64/FWUpdLcl\") and place it to the folder with the firmware in archive downloaded from Asus site (MEUpdateTool_11.8.80.3746v5_S/FW/). Make the \"FWUpdLcl\" executable.\n\nShow usage:\n\n```\n$ ./FWUpdLcl\n```\n\n```\nIntel (R) Firmware Update Utility Version: 11.8.92.4222\nCopyright (C) 2007 - 2022, Intel Corporation.  All rights reserved.\n\nFWUpdLcl.exe [-H|?] [-VER] [-EXP] [-VERBOSE] [-F] [-Y] [-SAVE] \n             [-FWVER] [-PARTID] [-ALLOWSV] [-FORCERESET] [-OEMID] [-PASS] \n             [-PARTVER] \n\n-H|?                    Displays help screen. \n-VER                    Displays version information. \n-EXP                    Displays example usage of this tool. \n-VERBOSE<file>          Display the debug information of the tool. \n-F <file>               File used for updating the FW. \n-Y                      Automatically answer Yes to prompts. \n-SAVE <file>            Save the current FW to an update image. \n-FWVER<file>            Display the FW Version of current FW or update image. \n-PARTID<Partition ID>   Provide specific Partition ID to perform partial update. \n-ALLOWSV                Allows same version firmware updates. \n-FORCERESET             Automatically Reboots system after update (if needed). \n-OEMID <UUID>           OEM ID needed to perform firmware update. \n-PASS <pass>            MeBX password. Optional with the '-f' option.  \n-PARTVER <Partition ID> Display the Version of specific partition.\n```\n\nShow your current ME version:\n\n```\n# ./FWUpdLcl -FWVER\n```\n\n```\nIntel (R) Firmware Update Utility Version: 11.8.92.4222\nCopyright (C) 2007 - 2022, Intel Corporation.  All rights reserved.\n\nFW Version: 11.8.65.3590\n```\n\nShow the ME version of the file in downloaded archive:\n\n```\n$ ./FWUpdLcl -FWVER ME.bin\n```\n\n```\nIntel (R) Firmware Update Utility Version: 11.8.92.4222\nCopyright (C) 2007 - 2022, Intel Corporation.  All rights reserved.\n\nFW Version: 11.8.80.3746\n```\n\nStart flashing:\n\n```\n# ./FWUpdLcl -F ME.bin\n```\n\n```\nIntel (R) Firmware Update Utility Version: 11.8.92.4222\nCopyright (C) 2007 - 2022, Intel Corporation.  All rights reserved.\n\nCommunication Mode: MEI\nChecking firmware parameters...\n\nWarning: Do not exit the process or power off the machine before the firmware update process ends.\nSending the update image to FW for verification:  [ COMPLETE ] \n\nFW Update:  [ 100% (/)]Do not Interrupt\nFW Update is completed successfully.\n```\n\nTo be able to see new version you need reboot. Now you can see the version applied:\n\n```\n# ./FWUpdLcl -FWVER\n```\n\n```\nIntel (R) Firmware Update Utility Version: 11.8.92.4222\nCopyright (C) 2007 - 2022, Intel Corporation.  All rights reserved.\n\nFW Version: 11.8.80.3746\n```\n\n"
    },
    {
      "title": "Lenovo",
      "level": 3,
      "content": "Some firmware updates are only provided in Windows executable format. This section uses as an example the Lenovo IdeaPad L340-15API firmware. If you try to apply these steps to another system, your mileage may vary. The Lenovo IdeaPad L340-15API only offers a .exe on the Lenovo support site. This renders not just many, but all of the methods in the article futile:\n\n- Wine: while dangerous, the mentioned IdeaPad firmware failed due to a \"TDK library\" error. More on this below.\n- fwupd alone does not work because the firmware is not on the LVFS, even if other entries might be, such as the Secure Boot Forbidden Signatures Database (dbx).\n- BiosDisk only works on \"BIOS executables\" and not our executable. It is also made by Dell, so your mileage could vary with other vendors.\n- Flashrom comes with the specific warning not to use it with laptops. Many systems, and the IdeaPad included, are not supported in their hardware list either.\n- For FreeDOS to work, the firmware would need to be a DOS executable. If your firmware executable is like that of the IdeaPad discussed, it will not run in FreeDOS at all even with modern Windows executables starting with a DOS header.\n- geteltorito.pl only works if you have an ISO.\n- Windows PE, might also yield incompatibility issues. In particular, the installer might not run because it is checking the operating system for compatibility.\n\n1. The installer. The IdeaPad's firmware download comes in an installer format, specifically set up by Inno Setup. Instead of extracting by running the installer with something like Wine, use the innoextract tool: $ innoextract installer.exe\n1. We find inside another executable. This inner IdeaPad executable also does not work in FreeDOS or Windows PE. However, note the earlier mentioned TDK library error. TDK refers to the firmware dev kit made by Phoenix Technologies. It was mentioned on the badcaps forum that the executable itself will extract the contents using the /ext argument. So using Wine, run $ wine firmware.exe /ext Alternatively, using 7z has been reported as working too: $ 7z x firmware.exe\n1. We find ourselves with more .exe files in this .exe file too. None of them work in FreeDOS or Windows PE. However, note that the firmware itself is in a UEFI capsule update format, suggested in bladecoder's blog. In the extracted files, look for the .cap file. You have located the extracted firmware. Alternatively, some models use an .fd file.\n1. With the UEFI capsule in hand, the next step is to try to install it manually. Mentioned in that blog, fwupd can help with this. fwupdate is not provided in the fwupd package, but fwupdtool accomplishes the same task. First, identify the device ID of the firmware (Device ID under System Firmware): # fwupdtool get-devices\n1. Finding the ID in the devices output, use it with a manual install: # fwupdtool install-blob BIOS.ext DEVICE-ID\n1. Reboot when prompted. The screen may go completely black: wait for it to finish installing.\n1. The UEFI boot entries in NVRAM are cleared after the update. The boot loader files in the EFI system are not touched, so you simply need to recreate your previous UEFI boot entries. First, update your UEFI settings to your previous ones.\n1. Finally, boot an external boot media and either reinstall your boot loader or use efibootmgr to recreate the UEFI boot entry for your boot loader.\n\n```\n$ innoextract installer.exe\n```\n\n```\n$ wine firmware.exe /ext\n```\n\n```\n$ 7z x firmware.exe\n```\n\n- In the extracted files, look for the .cap file. You have located the extracted firmware.\n- Alternatively, some models use an .fd file.\n\n```\n# fwupdtool get-devices\n```\n\n```\n# fwupdtool install-blob BIOS.ext DEVICE-ID\n```\n\n"
    },
    {
      "title": "Acer",
      "level": 3,
      "content": "Acer firmware updates are very analogous to #Lenovo ones in that the only downloads available are Windows executable files and that the firmware updates are not available on the LVFS either. However, the update image can be extracted from these files and installed using fwupdtool just as well:\n\n1. Find the drivers download page by pasting your device model or serial number on this page: https://www.acer.com/us-en/support/drivers-and-manuals\n1. Expand BIOS/Firmware section and download the ZIP file for the latest version, in our example BIOS_Acer_1.08_A_A.zip\n1. Unpack it: # unzip BIOS_Acer_1.08_A_A.zip\n1. Inside of it, you will find an .exe file such as JH4SH108.exe, we will extract it using 7zip: # 7z x JH4SH108.exe -oOutputDir\n1. In the unpacked folder OutputDir, we should find abobios.bin – this is the UEFI capsule to install\n1. Then, identify the device ID of the firmware (Device ID under System Firmware): # fwupdtool get-devices\n1. Finding the ID in the devices output, use it with a manual install: # fwupdtool install-blob abobios.bin DEVICE-ID\n1. Reboot when prompted. You should see a screen with flashing progress of the Insyde H2OFFT (Flash Firmware Tool) tool. Verify that the BIOS Model Name of old and new BIOS exactly matches up (in this example's case, JH4SH, with new BIOS version V1.08)\n1. The UEFI boot order in the NVRAM is cleared after the update (aside from Windows Boot Manager, if it was installed). The boot loader files in the EFI system and the boot entries in the NVRAM are not touched, so you simply need to change the boot order list to match what you had before.\n1. Finally, boot an external boot media and either reinstall your boot loader or use efibootmgr to set the boot order and place your boot loader entry as the first one to boot.\n\n```\n# unzip BIOS_Acer_1.08_A_A.zip\n```\n\n```\n# 7z x JH4SH108.exe -oOutputDir\n```\n\n```\n# fwupdtool get-devices\n```\n\n```\n# fwupdtool install-blob abobios.bin DEVICE-ID\n```\n\n"
    }
  ]
}