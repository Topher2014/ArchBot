{
  "title": "Lenovo ThinkPad X1 Extreme",
  "url": "https://wiki.archlinux.org/title/Lenovo_ThinkPad_X1_Extreme",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nTouchpad |  | Yes\nKeyboard |  | Yes\nGPU (Intel) |  | Yes\nGPU (Nvidia) |  | Yes\nWebcam |  | Yes\nEthernet |  | Yes\nBluetooth |  | Yes\nCard reader |  | Yes\nAudio |  | Yes\nWireless |  | Yes\nThunderbolt |  | Yes\nFingerprint reader | 06cb:009a | Experimental\n\n"
    },
    {
      "title": "Firmware update",
      "level": 2,
      "content": "A UEFI firmware update is strongly recommended for general use of the laptop - the initial 1.13 version devices seem to ship with contains multiple bugs that can result in bricking the laptop: Reddit thread discussing the issue; another Reddit thread discussing a different bricking issue.\n\nFirmware updates are available via fwupd, the Lenovo Vantage application on Windows, or from Lenovo's website.\n\nThe latest version, v1.35, is highly recommended. All information on this page assumes the latest firmware.\n\n"
    },
    {
      "title": "Video",
      "level": 2,
      "content": "Both the HDMI port and DisplayPort outputs created when using either a USB-C adapter or Thunderbolt dock are wired to the Nvidia dGPU.\n\nA BIOS setting can be used to disable the integrated GPU, and run everything on the dedicated Nvidia card. The dedicated GPU cannot be disabled through firmware, so enabling runtime power management in some form is highly recommended when using the iGPU.\n\n"
    },
    {
      "title": "CPU thermal throttling",
      "level": 2,
      "content": "This laptop is affected by a CPU throttling bug when using Linux.\n\nBasically, the laptop's firmware uses an implementation of Intel's Dynamic Platform and Thermal Framework (DPTF) that does not work with Linux. While newer generations of ThinkPads have gotten a BIOS update to fix this, a Lenovo employee confirmed that older affected Thinkpads (including T580, T480, T480s, X1C6, P1G1 and X1E1) will not get the fix.\n\nA stress test using s-tui indicates that the CPU is limited to 38W/80C at boot, resulting in a sustained all-core frequency of around 2850 MHz on the i7-8750H.\n\n"
    },
    {
      "title": "Fix using reverse-engineered DPTF implementation",
      "level": 3,
      "content": "There is an ongoing effort to reverse-engineer DPTF on Linux. Results can be found here. Most of the work has been upstreamed already, though the implementation is still far from complete.\n\nStarting with kernel 5.12, the work-in-progress can be utilized by installing and enabling thermald, which will attempt to make use of the firmware's adaptive performance policy.\n\nUnfortunately, the current implementation does not appear to help much on this laptop. While the CPU's limit is raised to 45W/83C, the all-core frequency is erratic, resulting in only a marginal performance improvement.\n\n"
    },
    {
      "title": "Fix using dptfxtract and manual DPTF profile setting",
      "level": 3,
      "content": "Another option, which does result in full performance, is to extract the DPTF tables and use them in combination with a manual change of the DPTF profile.\n\n"
    },
    {
      "title": "Configuring thermald to use extracted dptf tables",
      "level": 4,
      "content": "First, make sure thermald is installed. Next, use Intel's proprietary dptfxtract-binAUR tool to extract the DPTF tables:\n\n```\n# dptfxtract\n```\n\nThis will populate /etc/thermald/ with multiple configuration files of the form thermal-conf.xml.*, each of which represents a converted DPTF table.\n\nThe tool also creates a copy of each of these files in the current working directory, so you may want to remove those:\n\n```\n# rm thermal-conf.xml.*\n```\n\nThe thermald service file shipped with Arch Linux enables adaptive mode by default. In order to use the extracted tables we have to override it.\n\nCreate the necessary directory if it does not exist already:\n\n```\n# mkdir -p /etc/systemd/system/thermald.service.d\n```\n\nThen create the following file:\n\n```\n/etc/systemd/system/thermald.service.d/override.conf\n```\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/thermald --systemd --dbus-enable\n```\n\nAfterwards, reload the systemd manager configuration and enable thermald.\n\n"
    },
    {
      "title": "Selecting the appropriate configuration",
      "level": 4,
      "content": "Out of all the generated configuration files, thermald will use thermal-conf.xml.auto by default. You can try any of the other configurations by adding the --config-file flag to the override.conf created earlier.\n\nThe default configuration file already unlocks full performance. A stress test indicates that the CPU is now limited to 45W/95C, resulting in a sustained all-core frequency of around 3300 MHz on the i7-8750H.\n\n"
    },
    {
      "title": "Manually setting a DPTF profile to prevent temporary re-throttling",
      "level": 4,
      "content": "The setup above is not perfect, every time the CPU temperature trips over 80C the laptop's embedded controller (EC) will re-throttle the CPU for a few seconds.\n\nThis issue can be fixed, without 'fighting the EC', by manually setting the adaptive performance DPTF profile using the following script:\n\n```\nset_dptf_adaptive.sh\n```\n\n```\n#!/bin/bash\n# Script that enables the adaptive performance DPTF profile, if available.\n\n# Check for super user privileges.\nif (( $EUID != 0 )); then\n    echo \"ERROR: script requires super user privileges. Exiting!\"\n    exit 1\nfi\n\n# from: https://github.com/torvalds/linux/blob/master/drivers/thermal/intel/int340x_thermal/int3400_thermal.c\nadaptive_performance_uuid='63BE270F-1C11-48FD-A6F7-3AF253FF3E2D'\n\n# Check if the adaptive performance profile is supported.\navailable_uuids=$(cat /sys/devices/platform/INT3400:00/uuids/available_uuids)\n\nif [[ $available_uuids != *$adaptive_performance_uuid* ]]; then\n  echo \"ERROR: adaptive performance profile not supported. Exiting!\"\n  exit 1\nfi\n\n# Find the INT3400 Thermal driver.\nINT3400=$(grep INT3400 /sys/class/thermal/thermal_zone*/type |\n          grep Thermal |\n          sed '/\\/sys\\/class\\/thermal\\/thermal_zone/ s/\\/type.*//')\n\nif [[ \"$INT3400\" == '' ]]; then\n  echo \"ERROR: unable to find the INT3400 thermal driver. Exiting!\"\n  exit 1\nfi\n\n# Temporarily disable the INT3400 thermal driver.\necho 'disabled' > \"$INT3400\"/mode\n\nif [[ $(cat \"$INT3400\"/mode) != 'disabled' ]]; then\n  echo \"ERROR: unable to disable the INT3400 thermal driver. Exiting!\"\n  exit 1\nfi\n\n# Enable the adaptive performance profile.\necho \"$adaptive_performance_uuid\" > /sys/devices/platform/INT3400:00/uuids/current_uuid\n\ncurrent_uuid=$(cat /sys/devices/platform/INT3400:00/uuids/current_uuid)\nif [[ \"$current_uuid\" != \"$adaptive_performance_uuid\" ]]; then\n  echo \"ERROR: unable to set the adaptive performance profile. Exiting!\"\n  exit 1\nfi\n\n# Re-enable the INT3400 thermal driver.\necho 'enabled' > \"$INT3400\"/mode\n\nif [[ $(cat \"$INT3400\"/mode) != 'enabled' ]]; then\n  echo \"ERROR: unable to re-enable the INT3400 thermal driver. Exiting!\"\n  exit 1\nfi\n\necho \"Successfully set the adaptive performance DPTF profile.\"\n```\n\nSave the script somewhere and create a systemd service for it:\n\n```\n/etc/systemd/system/dptf_adaptive.service\n```\n\n```\n[Unit]\nDescription=Set Intel DPTF policy to adaptive performance\n\n[Service]\nType=oneshot\nExecStart=/path/to/script/set_dptf_adaptive.sh\n\n[Install]\nWantedBy=default.target\n```\n\nDo not forget to replace /path/to/script/ in the service file.\n\nFinally, reload the systemd manager configuration and enable the service.\n\n"
    },
    {
      "title": "Disabling BDPROCHOT to prevent throttling on battery",
      "level": 4,
      "content": "- After this fix the laptop may run hotter than is comfortable when using it on your lap or similar positions.\n- Disabling BDPROCHOT can be considered a 'nuclear option' in terms of power management. Use at your own risk!\n\nThe laptop's performance on battery is far below expectations when using Linux. The cause appears to be something called 'lap mode' (documented by Lenovo, here).\n\nBasically, when unplugged, the laptop will by default assume that it is being used on the user's lap. And since Linux has no working DPTF implementation to tell the laptop otherwise, it will always assume it is being used the user's lap. Consequently, In order to keep the laptop base at a 'skin friendly' temperature, the laptop's EC throttles the CPU with BDPROCHOT (BiDirectional PROCessor HOT) when one of many thermal sensors trips a predetermined value. Effectively this will keep the CPU at around 70C max while simultaneously preventing the fans from properly spinning up. A repeated on-again off-again all-core stress test causes the CPU to throttle as low as 800 MHz.\n\nSince there is currently no known way to disable 'lap mode', the only path to full performance on battery is to disable BDPROCHOT altogether. This can be done using the following script:\n\n```\nbdprochot_disable.sh\n```\n\n```\n#!/bin/bash\n# Script that unsets the BDPROCHOT-bit on some Intel CPUs.\n\n# Check for super user privileges.\nif (( $EUID != 0 )); then\n    echo \"ERROR: script requires super user privileges. Exiting!\"\n    exit 1\nfi\n\n# Enable writing to model-specific registers of the CPU.\nmodprobe msr\n\n# Get current state of the CPU power-related bits (in base-10).\nflags=$(rdmsr 0x1FC -d)\n\n# Check if BDPROCHOT-bit is already unset.\nif [[ $((\"$flags\" & 0x00000001)) == 0 ]]; then\n    echo \"INFO: BDPROCHOT-bit is already unset. Exiting!\"\n    exit 0\nfi\n\n# Unset BRPROCHOT-bit.\nwrmsr -a 0x1FC $((\"$flags\" & 0xfffffffe))\n\n# Check if we were successful.\nflags=$(rdmsr 0x1FC -d)\n\nif [[ $((\"$flags\" & 0x00000001)) == 1 ]]; then\n    echo \"ERROR: unable to unset BDPROCHOT-bit. Exiting!\"\n    exit 1\nfi\n\necho \"Successfully disabled BDPROCHOT.\"\n```\n\nSave the script somewhere and create a systemd service for it:\n\n```\n/etc/systemd/system/bdprochot_disable.service\n```\n\n```\n[Unit]\nDescription=Disable BDPROCHOT\n\n[Service]\nType=oneshot\nExecStart=/path/to/script/bdprochot_disable.sh\n\n[Install]\nWantedBy=default.target\n```\n\nA suspend/resume-cycle will cause the EC to re-set the BDPROCHOT-bit.\n\nCreate the following file (and make it executable) to run the script on resume:\n\n```\n/lib/systemd/system-sleep/bdprochot\n```\n\n```\n#!/bin/sh\n\ncase \"$1\" in\n    post)\n        /path/to/script/bdprochot_disable.sh\n        ;;\nesac\n```\n\nDo not forget to replace /path/to/script/ in both files.\n\nFinally, reload the systemd manager configuration, enable the service and reboot.\n\nThe CPU's performance on battery should now be roughly equal as when plugged in.\n\n"
    },
    {
      "title": "Microphone noise reduction",
      "level": 2,
      "content": "PulseAudio's PulseAudio#Microphone echo/noise cancellation can be used to reduce the amount of microphone noise by adding the following to /etc/pulse/default.pa:\n\n```\n/etc/pulse/default.pa\n```\n\n```\n### Enable Echo/Noise-Cancellation\nload-module module-echo-cancel use_master_format=1 aec_method=webrtc aec_args=\"beamforming=1 mic_geometry=-0.0257,0,0,0.0257,0,0\" source_name=echoCancel_source sink_name=echoCancel_sink\nset-default-source echoCancel_source\nset-default-sink echoCancel_sink\n```\n\nThe above mic_geometry is specific to the X1 Extreme.\n\nThe module-filter-heuristics and module-filter-apply modules can sometimes result in adding additional noise, so the lines that enable them should be commented out:\n\n```\n/etc/pulse/default.pa\n```\n\n```\n#load-module module-filter-heuristics\n#load-module module-filter-apply\n```\n\nBad sound quality may also result from audio clipping, which can occur if Internal Mic Boost is larger than zero in alsamixer(1).\n\n"
    },
    {
      "title": "Fingerprint reader",
      "level": 2,
      "content": "A reverse engineering effort is ongoing here, and an experimental driver is available on the AUR as python-validityAUR.\n\nUpstream libfprint bug is tracked here.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://www.lenovo.com/us/en/laptops/thinkpad/thinkpad-x1/ThinkPad-X1-Extreme/p/22TP2TXX1E1\n- Ubuntu certification page\n\n"
    }
  ]
}