{
  "title": "DualScreen",
  "url": "https://wiki.archlinux.org/title/DualScreen",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Xorg\n- xrandr\n- NVIDIA#Multiple monitors\n- Extreme Multihead\n\nMulti-head, multi-screen, multi-display or multi-monitor represent setups with multiple display devices attached to a single computer. This article provides a general description for several multi-head setup methods, and provides some configuration examples.\n\nNote: **Monitor** \n\n- Monitor refers to a physical display device, such as an LCD panel.\n- Screen refers to an X-Window screen (that is: a monitor attached to a display).\n- Display refers to a collection of screens that are in use at the same time showing parts of a single desktop (you can drag windows among all screens in a single display).\n\n"
    },
    {
      "title": "Historical background",
      "level": 2,
      "content": "X Window System (X, X11) is the underlying graphical user interface (GUI) for most Unix/Linux computers that provide one. It was developed in 1984 at MIT. After about 35 years of development, tweaks, new features and ideas, it is generally acknowledged to be a bit of a beast. During the time of early development, the common configuration was a single running X that provided individual views to Xterminals on a time-sharing system. Today, X typically provides a single screen on a desktop or laptop.\n\nIn short, there are many ways to configure GUIs using X. When using modern versions, sometimes you can even get away with limited or no configuration. In the last few years, the boast is that X is self-configuring. Certainly, a good rule of thumb is that less configuration is better - that is, only configure what the defaults got wrong.\n\n"
    },
    {
      "title": "RandR",
      "level": 2,
      "content": "RandR (Rotate and Resize) is an X Window System extension, which allows clients to dynamically change (e.g. resize, rotate, reflect) screens. In most cases, it can fully replace the old Xinerama setup. See an explanation why RandR is better than Xinerama.\n\nRandR can be configured for the current session via the xrandr tool, arandr or persistently via an xorg.conf file.\n\n"
    },
    {
      "title": "Configuration using xrandr",
      "level": 3,
      "content": "You may arrange your screens either relatively to each other (using the --right-of, --left-of, --above, --below options), or by absolute coordinates (using the --pos option; note that in this case you usually need to know resolutions of your monitors). See xrandr(1) for details. Some frequently used settings are described below.\n\n"
    },
    {
      "title": "VGA1 left of HDMI1 at their preferred resolutions",
      "level": 4,
      "content": "```\n$ xrandr --output VGA1 --auto --output HDMI1 --auto --right-of VGA1\n```\n\n--right-of places the previous screen (HDMI1) to the right of the specified screen (VGA1).\n\n"
    },
    {
      "title": "VGA1 right of HDMI1 at fixed resolutions",
      "level": 4,
      "content": "```\n$ xrandr --output VGA1 --mode 1024x768 --pos 1920x0 --output HDMI1 --mode 1920x1080 --pos 0x0\n```\n\nor\n\n```\n$ xrandr --output VGA1 --mode 1024x768 --output HDMI1 --mode 1920x1080 --left-of VGA1\n```\n\n--left-of places the previous screen (HDMI1) to the left of the specified screen (VGA1).\n\n"
    },
    {
      "title": "Combine screens into virtual display",
      "level": 4,
      "content": "Since randr version 1.5, it has been possible to combine monitors into one virtual display. This is an updated version of what was possible with Xinerama and works with open source drivers and does not require an Xorg restart. Some desktop environments do not support this feature yet. Openbox has been tested and works with this feature.\n\nGet monitor list by doing xrandr --listmonitors\n\n```\n0: +*DisplayPort-4 1920/518x1200/324+1920+0  DisplayPort-4\n1: +DisplayPort-3 1920/518x1200/324+0+0  DisplayPort-3\n2: +HDMI-A-0 1920/518x1200/324+3840+0  HDMI-A-0\n```\n\nCreate virtual display xrandr --setmonitor SomeName auto DisplayPort-4,DisplayPort-3,HDMI-A-0. auto determines the size of the virtual display, setting this to auto will automatically create the correct size of the display array. Monitor order in this command does not matter and the monitors need to be rearranged correctly after or before this command is executed.\n\nFor a more detailed explanation see this page.\n\n"
    },
    {
      "title": "Configuration using xorg.conf",
      "level": 3,
      "content": "This is similar to using xrandr, separate Monitor section is needed for each screen. As an Identifier, the same value as reported by xrandr -q is used (i.e. Identifier \"VGA1\" is used instead of --output VGA1).\n\n"
    },
    {
      "title": "Example: dualhead configuration using relative coordinates",
      "level": 4,
      "content": "```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"Monitor\"\n    Identifier  \"VGA1\"\n    Option      \"Primary\" \"true\"\nEndSection\n\nSection \"Monitor\"\n    Identifier  \"HDMI1\"\n    Option      \"LeftOf\" \"VGA1\"\nEndSection\n```\n\n"
    },
    {
      "title": "Example: dualhead configuration using relative coordinates with custom resolutions",
      "level": 4,
      "content": "The ID for each monitor can be found by running the $ xrandr -q command and should be defined as Monitor-<ID> inside the Device section.\n\nSee Xrandr#Adding undetected resolutions.\n\n```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"Monitor\"\n  Identifier \"DVI\"\n  Modeline \"1680x1050_60.00\"  146.25  1680 1784 1960 2240  1050 1053 1059 1089 -hsync +vsync\n  Option \"PreferredMode\" \"1680x1050_60.00\"\n  Option \"LeftOf\" \"DP\"\n  Option \"DPMS\" \"true\"\nEndSection\n\nSection \"Monitor\"\n  Identifier \"DP\"\n  Modeline \"1920x1080_60.00\"  173.00  1920 2048 2248 2576  1080 1083 1088 1120 -hsync +vsync\n  Option \"PreferredMode\" \"1920x1080_60.00\"\n  Option \"RightOf\" \"DVI\"\n  Option \"DPMS\" \"true\"\nEndSection\n\nSection \"Screen\"\n  Identifier \"Screen0\"\n  Device \"Radeon\" # e.g. Radeon, Intel, nvidia\n  Monitor \"DP\"\n  DefaultDepth 24\n  SubSection \"Display\"\n    Depth 24\n    Virtual 3600 2130 # 1920 + 1680 (3600), 1080 + 1050 (2130)\n  EndSubSection\nEndSection\n```\n\n```\n/etc/X11/xorg.conf.d/20-radeon.conf\n```\n\n```\nSection \"Device\"\n  Identifier \"Radeon\"\n  Driver \"radeon\"\n  Option \"Monitor-DVI-0\" \"DVI\" # use DVI-0 as DVI\n  Option \"Monitor-DisplayPort-0\" \"DP\"\nEndSection\n```\n\n"
    },
    {
      "title": "Example: dualhead configuration using absolute coordinates",
      "level": 4,
      "content": "```\n/etc/X11/xorg.conf.d/10-monitor.conf\n```\n\n```\nSection \"Monitor\"\n    Identifier  \"VGA1\"\n    Option      \"PreferredMode\" \"1024x768\"\n    Option      \"Position\" \"1920 312\"\nEndSection\n\nSection \"Monitor\"\n    Identifier  \"HDMI1\"\n    Option      \"PreferredMode\" \"1920x1080\"\n    Option      \"Position\" \"0 0\"\nEndSection\n```\n\nThere are no negative coordinates, the setup's leftmost and highest possibly targeted point is at 0,0\n\n```\n(0,0)-----------------+ \n|                     |(1920,312)---+\n|     1920 x 1080     ||            |\n|        HDMI1        || 1024 x 768 |\n|                     ||    VGA1    |\n+---------------------++------------+\n```\n\n"
    },
    {
      "title": "Dynamic display configuration",
      "level": 2,
      "content": "The following options allow you to automatically detect when a new display is connected and then change the layout based on that. This can be useful for laptop users who frequently work in multiple different environments that require different setups.\n\n- autorandr allows you to save your current xrandr configuration as profiles based on what display hardware is connected.\n- monsAUR or mons-gitAUR is a shell script to quickly manage 2-monitors display using xrandr.\n\n"
    },
    {
      "title": "Separate screens",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThis is the original way of configuring multiple monitors with X, and it has been around for decades. Each physical monitor is assigned as an X screen, and while you can move the mouse between them, they are more or less independent.\n\nNormally the X display has a single identifier such as :0, set in the DISPLAY environment variable; but in this configuration, each screen has a different $DISPLAY value. The first screen is :0.0, the second is :0.1 and so on.\n\nWith this configuration, it is not possible to move windows between screens, apart from a few special programs like GIMP and Emacs, which have multi-screen support. For most programs, you must change the DISPLAY environment variable when launching to have the program appear on another screen:\n\n```\n# Launch a terminal on the second screen\n$ DISPLAY=:0.1 urxvt &\n```\n\nAlternatively, if you have a terminal on each screen, launching programs will inherit the DISPLAY value and appear on the same screen they were launched on. But, moving an application between screens involves closing it and reopening it again on the other screen.\n\nWorking this way does have certain advantages. For example, windows popping up on one screen will not steal the focus away from you if you are working on another screen - each screen is quite independent.\n\n"
    },
    {
      "title": "TwinView",
      "level": 2,
      "content": "TwinView is NVIDIA's extension which makes two monitors attached to a video card appear as a single screen. TwinView provides Xinerama extensions so that applications are aware there are two monitors connected, and thus it is incompatible with Xinerama. However, if you only have two monitors and they are both connected to the same NVIDIA card, there is little difference between TwinView and Xinerama (although in this situation TwinView may offer slightly better performance.)\n\nIf you wish to attach more than two monitors or monitors attached to other video cards, you will need to use Xinerama instead of TwinView. Likewise, as of April 2012, both monitors must be in the same orientation - you cannot have one in landscape and the other in portrait mode.\n\nIn the past, TwinView was the only way to get OpenGL acceleration with NVIDIA cards while being able to drag windows between screens. However modern versions of the NVIDIA closed-source driver are able to provide OpenGL acceleration even when using Xinerama.\n\nSee NVIDIA#TwinView for an example configuration.\n\n"
    },
    {
      "title": "Xinerama",
      "level": 2,
      "content": "Xinerama is the old way of doing genuine multihead X. Xinerama combines all monitors into a single screen (:0) making it possible to drag windows between screens.\n\nXinerama is configured via custom X configuration files. There is also a GUI tool named WideGuy to make toggling Xinerama easier. Note that to use WideGuy you still need an Xorg configuration with a ServerLayout section.\n\nHere are some X configuration examples:\n\nThis is a ServerLayout section which controls where each monitor sits relative to the others.\n\n```\n/etc/X11/xorg.conf.d/90-serverlayout.conf\n```\n\n```\nSection \"ServerLayout\"\n  Identifier   \"Main\"\n  Screen       0 \"Primary\"\n  Screen       1 \"DellPortraitLeft\" RightOf \"Primary\"\n  Screen       2 \"Wacom\" RightOf \"DellPortraitLeft\"\n  Screen       3 \"U2412\" LeftOf \"Primary\"\n  Option         \"Xinerama\" \"1\"  # enable XINERAMA extension.  Default is disabled.\nEndSection\n```\n\nEach Screen in the above section is defined in a separate file, such as this one:\n\n```\n/etc/X11/xorg.conf.d/30-screen-dell2001.conf\n```\n\n```\n# Define the monitor's physical specs\nSection \"Monitor\"\n  Identifier   \"Dell 2001FP\"\n  VertRefresh  60\n  Option  \"dpms\"  \"on\"\n\n  # Modelines are probably unnecessary these days, but it does give you fine-grained control\n\n  # 1600x1200 @ 60.00 Hz (GTF) hsync: 74.52 kHz; pclk: 160.96 MHz\n  Modeline \"1600x1200\"  160.96  1600 1704 1880 2160  1200 1201 1204 1242  -HSync +Vsync\nEndSection\n\n# Define a screen that uses the above monitor.  Note the Monitor value matches the above\n# Identifier value and the Device value matches one of the video cards defined below\n# (the card and connector this monitor is actually plugged in to.)\nSection \"Screen\"\n  Identifier   \"DellPortraitLeft\"\n  Device       \"GeForce 8600GTb\"\n  Monitor      \"Dell 2001FP\"\n  DefaultDepth 24\n  SubSection \"Display\"\n    Depth     24\n    Modes     \"1600x1200\"\n    ViewPort  0 0\n    Virtual   1600 1200\n  EndSubsection\n\n  # This screen is in portrait mode\n  Option \"Rotate\" \"left\"\nEndSection\n```\n\nYou will need to create a Device section for each monitor, i.e. a dual head video card will have two Device sections. The following example shows how to configure two video cards each providing two outputs, for a total of four monitors.\n\n```\n/etc/X11/xorg.conf.d/20-nvidia.conf\n```\n\n```\n# First head of first video card in the system\nSection \"Device\"\n  Identifier  \"GeForce 8600GT\"\n  Driver      \"nvidia\"\n\n  # If you have multiple video cards, the BusID controls which one this definition refers\n  # to.  You can omit it if you only have one card.\n  BusID       \"PCI:1:0:0\"\n\n  # Need to flag this as only referring to one output on the card\n  Screen      0\n\n  # For nVidia devices, this controls which connector the monitor is connected to.\n  Option      \"UseDisplayDevice\"   \"DFP-0\"\n\n  # We want control!\n  Option      \"DynamicTwinView\"    \"FALSE\"\n\n  # Various performance and configuration options\n  Option      \"AddARGBGLXVisuals\"  \"true\"\n  Option      \"UseEDIDDpi\"         \"false\"\n  Option      \"DPI\"                \"96 x 96\"\n  Option      \"Coolbits\"           \"1\"\nEndSection\n\n# Second head of same video card (note different Identifier but same BusID.)  We can omit\n# the UseDisplayDevice option this time as it will pick whichever one is remaining.\nSection \"Device\"\n  Identifier  \"GeForce 8600GTb\"\n  Driver      \"nvidia\"\n  BusID       \"PCI:1:0:0\"\n  # This is the second output on this card\n  Screen      1\n\n  # Same config options for all cards\n  Option      \"AddARGBGLXVisuals\"  \"true\"\n  Option      \"UseEDIDDpi\"         \"false\"\n  Option      \"DPI\"                \"96 x 96\"\n  Option      \"Coolbits\"           \"1\"\n  Option      \"DynamicTwinView\"    \"FALSE\"\nEndSection\n\n# First head of second video card, note different BusID.\nSection \"Device\"\n  Identifier  \"G210\"\n  Driver      \"nvidia\"\n  BusID       \"PCI:2:0:0\"\n  Screen      0\n\n  # Same config options for all cards\n  Option      \"AddARGBGLXVisuals\"  \"true\"\n  Option      \"UseEDIDDpi\"         \"false\"\n  Option      \"DPI\"                \"96 x 96\"\n  Option      \"Coolbits\"           \"1\"\n  Option      \"DynamicTwinView\"    \"FALSE\"\nEndSection\n\n# Second head of second video card.  Output connector is set here, which means the previous\n# Device will use the other connector, whatever it may be.\nSection \"Device\"\n  Identifier  \"G210b\"\n  Driver      \"nvidia\"\n  BusID       \"PCI:2:0:0\"\n  Screen      1\n  Option      \"UseDisplayDevice\"   \"DFP-1\"\n\n  # Same config options for all cards\n  Option      \"AddARGBGLXVisuals\"  \"true\"\n  Option      \"UseEDIDDpi\"         \"false\"\n  Option      \"DPI\"                \"96 x 96\"\n  Option      \"Coolbits\"           \"1\"\n  Option      \"DynamicTwinView\"    \"FALSE\"\nEndSection\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- 'How I got Dual Monitors with Nouveau Driver' forums thread\n- Six-headed, Six-user Linux System\n\n"
    }
  ]
}