{
  "title": "Xautolock",
  "url": "https://wiki.archlinux.org/title/Xautolock",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "There are numerous utilities to lock the screen of a session. But it is important to note that the utility to use is highly dependent on the environment you are in, either the virtual console, or a specific display server (Xorg or Wayland).\n\nSee List of applications/Security#Screen lockers.\n\n"
    },
    {
      "title": "By environment",
      "level": 2,
      "content": "Note: **This article or section is a candidate for merging with List of applications/Security#Screen lockers.** This article or section is a candidate for merging with List of applications/Security#Screen lockers.\n\nThis article or section is a candidate for merging with List of applications/Security#Screen lockers.\n\n"
    },
    {
      "title": "Virtual console",
      "level": 3,
      "content": "You can use vlock or physlockAUR to lock a virtual console.\n\n"
    },
    {
      "title": "Xorg",
      "level": 3,
      "content": "There are many ways to lock the session under Xorg, so this section is likely to be incomplete. Some methods however include:\n\n- xlock, in the xlockmore package -\n- xsecurelock, in the xsecurelock package\n- xscreensaver-command -lock in the xscreensaver package\n- xss-lock\n- slock in the slock package\n- kscreenlocker\n- i3lock\n- i3lock-colorAUR\n- alockAUR\n\nMost desktop environments come with some way to lock the session.\n\n"
    },
    {
      "title": "Wayland",
      "level": 3,
      "content": "You can lock the session with one of the following methods:\n\n- swaylock\n- swaylock-effects-gitAUR\n- waylock\n- gtklock\n- hyprlock\n\n"
    },
    {
      "title": "Triggering the lock",
      "level": 2,
      "content": "You can lock a session using different methods:\n\n- from a terminal\n- using a GUI: from a desktop icon using hot corners from a menu (mouse or keyboard driven)\n- from a shortcut\n- from an event: inactivity (using systemd, xss-lock or xautolock) systemd events (suspend, hibernate, etc.)\n\n- from a desktop icon\n- using hot corners\n- from a menu (mouse or keyboard driven)\n\n- inactivity (using systemd, xss-lock or xautolock)\n- systemd events (suspend, hibernate, etc.)\n\nThe last point (triggering a lock from an event) is the trickiest, because you can do it in one of two ways:\n\n- get the action trigger to execute your lock, then to execute the initial action.\n- from the event trigger, add the lock to the event chain. So far this can only be done using systemd.\n\n"
    },
    {
      "title": "Zsh",
      "level": 4,
      "content": "To execute a command after terminal inactivity, you can use the TMOUT environment variable.\n\nYou can combine it with a trap on the ALARM signal to execute the lock. Without a trap, it will just terminate the shell.\n\nYou might want to detect if you are in a graphical environment, otherwise your GUI terminals might start disappearing without you understanding why.\n\n"
    },
    {
      "title": "xss-lock",
      "level": 4,
      "content": "xss-lock is triggered by one of two things:\n\n- systemd events\n- DPMS\n\nThe advantage of this is that you can control a lock issued manually, by inactivity, and by a suspend command at the same place.\n\nTo execute an action on one of those events:\n\n```\n$ xss-lock locker-utility\n```\n\nBy default, xss-lock subscribes to suspend, hibernate, lock-session, and unlock-session with appropriate actions (run locker and wait for user to unlock or kill locker).\n\nYou can prevent xss-lock from being triggered by suspend and hibernate using --ignore-sleep.\n\nYou can trigger a manual lock using loginctl lock-session, or lock all current sessions with loginctl lock-sessions.\n\nTo configure DPMS signaling timeout:\n\n```\n# Trigger screensaver after 10 minutes of inactivity\nxset s on\nxset s 600\n```\n\nDPMS signaling can also be configured in /etc/X11/xorg.conf.d/ in the Monitor section.\n\nUsing DPMS signaling, you can set a second timer, for example to notify the user or to dim the screen. For example (from xss-lock(1)):\n\n```\n# Dim the screen after three minutes of inactivity, lock the screen two minutes later using i3lock:\nxset s 180 120\nxss-lock -n dim-screen.sh -- i3lock -n\n```\n\nAn example dim-screen.sh script can be found in /usr/share/doc/xss-lock.\n\n"
    },
    {
      "title": "xautolock",
      "level": 4,
      "content": "Install the xautolockAUR package.\n\n```\n$ xautolock -time 12 -locker \"systemctl suspend\" -detectsleep\n```\n\n- 1 min to 1 hour for time\n- 10 min to 2 hour for killtime\n\n"
    },
    {
      "title": "swayidle",
      "level": 4,
      "content": "swayidle listens for idle activity from the Wayland compositor, as well as systemd events, and executes commands accordingly. See Sway#Idle.\n\n"
    },
    {
      "title": "hypridle",
      "level": 4,
      "content": "hypridle Hyprland's idle daemon. See upstream for configuration.\n\n"
    },
    {
      "title": "D-Bus notification",
      "level": 4,
      "content": "Using loginctl lock-session, or the lock action in logind.conf(5), you can notify the system through DBUS that you want to lock. This notification can then be processed, for example by xss-lock.\n\n"
    },
    {
      "title": "Inactivity",
      "level": 4,
      "content": "In logind.conf(5), you can configure the IdleAction to lock. This will trigger a DBUS notification, that will have to be processed (for example by xsslock) to lock the session.\n\nNote that this is for a global system (so this is not ideal for a multi user environment).\n\nNote also that \"this requires that user sessions correctly report the idle status to the system\".\n\n"
    },
    {
      "title": "Units",
      "level": 4,
      "content": "You can use a Sleep hook.\n\n```\n[Unit]\nDescription=Lock the screen\nBefore=sleep.target\n\n[Service]\nUser=%I\nType=forking\nEnvironment=DISPLAY=:0\nExecStart=/usr/bin/i3lock -c 000000\n\n[Install]\nWantedBy=sleep.target\n```\n\nTo enable it for a certain user, enable sleep@Username.service.\n\nYou can use the lock action using the related ACPI event.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Geoff Greer's site: Linux Laptop Locking\n\n"
    }
  ]
}