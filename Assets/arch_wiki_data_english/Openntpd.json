{
  "title": "Openntpd",
  "url": "https://wiki.archlinux.org/title/Openntpd",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- System time\n\nOpenNTPD (part of the OpenBSD project) is a daemon that can be used to synchronize the system clock to internet time servers using the Network Time Protocol, and can also act as a time server itself if needed. It implements the Simple Network Time Protocol version 4, as described in RFC:5905, and the Network Time Protocol version 3, as described in RFC:1305.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the openntpd package. The default configuration is actually usable if all you want is to sync the time of the local computer.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "To configure OpenNTPD, you need to edit /etc/ntpd.conf. See ntpd.conf(5) for all available options.\n\n```\n$ ntpd -n\n```\n\n"
    },
    {
      "title": "Client",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nTo sync to a single particular server, edit the server directive.\n\n```\n/etc/ntpd.conf\n```\n\n```\nserver time.cloudflare.com\n```\n\nThe servers directive works the same as the server directive. However, if the DNS name resolves to multiple IP address, all of them will be synced to. The default, 2.arch.pool.ntp.org, is working and should be acceptable in most cases. You can find the server's URL in your area at www.pool.ntp.org/zone/@.\n\n```\n/etc/ntpd.conf\n```\n\n```\nservers 2.arch.pool.ntp.org\n```\n\nAny number of server or servers directives may be used.\n\n"
    },
    {
      "title": "Server",
      "level": 3,
      "content": "If you want the computer you run OpenNTPD on to also be a time server, simply uncomment and edit the \"listen\" directive.\n\nFor example:\n\n```\n/etc/ntpd.conf\n```\n\n```\nlisten on *\n```\n\nwill listen on all interfaces, and\n\n```\n/etc/ntpd.conf\n```\n\n```\nlisten on 127.0.0.1\nlisten onÂ ::1\n```\n\nwill only listen on the loopback interface.\n\nYour time server will only begin to serve time after it has synchronized itself to a high resolution. This may take hours, or days, depending on the accuracy of your system.\n\n"
    },
    {
      "title": "Start OpenNTPD at boot",
      "level": 3,
      "content": "Enable openntpd.service.\n\n"
    },
    {
      "title": "Making openntpd dependent upon network access",
      "level": 3,
      "content": "If you have intermittent network access (you roam around on a laptop, you use dial-up, etc.), it does not make sense to have openntpd running as a system daemon on start up. Here are a few ways you can control openntpd based on the presence of a network connection.\n\n"
    },
    {
      "title": "Using NetworkManager dispatcher",
      "level": 4,
      "content": "OpenNTPD can be brought up/down along with a network connection through the use of NetworkManager's dispatcher scripts.\n\nInstall networkmanager-dispatcher-openntpdAUR.\n\n"
    },
    {
      "title": "Using dhclient hooks",
      "level": 4,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nAnother possibility is to use dhclient hooks to start and stop openntpd. When dhclient detects a change in state, it will run the following scripts:\n\n- /etc/dhclient-enter-hooks\n- /etc/dhclient-exit-hooks\n\nSee dhclient-script(8).\n\n"
    },
    {
      "title": "Using dhcpcd hooks",
      "level": 4,
      "content": "```\n/etc/dhcpcd.exit-hook\n```\n\n```\nif $if_up; then\n\tsystemctl start openntpd.service\nelif $if_down; then\n\tsystemctl stop openntpd.service\nfi\n```\n\nSee dhcpcd-run-hooks(8).\n\n"
    },
    {
      "title": "Error adjusting time",
      "level": 3,
      "content": "If you find your time set incorrectly and in the log, you see:\n\n```\nopenntpd adjtime failed: Invalid argument\n```\n\nTry:\n\n```\n# ntpd -d\n```\n\nThis is also how you would manually sync your system.\n\n"
    },
    {
      "title": "constraint: failed to load constraint ca",
      "level": 3,
      "content": "OpenNTPD will fail to start on a system with AppArmor if HTTPS constraints are configured in /etc/ntpd.conf. The journal will show constraint: failed to load constraint ca.\n\nThis is because AppArmor's usr.sbin.ntpd profile does not have read access to LibreSSL's CA certificate file /etc/libressl/cert.pem.[1]\n\nThe solution is to grant access with a local override:\n\n```\n/etc/apparmor.d/local/usr.sbin.ntpd\n```\n\n```\n...\n/etc/libressl/{,cert.pem} r,\n```\n\nAfter editing, reload the AppArmor profile:\n\n```\n# apparmor_parser -r /etc/apparmor.d/usr.sbin.ntpd\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://www.openntpd.org\n- OpenNTPD Portable\n\n"
    }
  ]
}