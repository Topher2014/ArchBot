{
  "title": "NTP Daemon",
  "url": "https://wiki.archlinux.org/title/NTP_Daemon",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- NTPSec\n- Chrony\n- Time synchronization\n\nNetwork Time Protocol is the most common method to synchronize the software clock of a GNU/Linux system with internet time servers. It is designed to mitigate the effects of variable network latency and can usually maintain time to within tens of milliseconds over the public Internet. The accuracy on local area networks is even better, up to one millisecond.\n\nThe NTP Project provides a reference implementation of the protocol called simply NTP. This article further describes how to set up and run the NTP daemon, both as a client and as a server.\n\nSee System time#Time synchronization for other NTP implementations.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the ntp package. By default, ntpd works in client mode without further configuration. You can skip to #Usage if you want to use the Arch Linux default configuration file for it. For server configuration, see #NTP server mode.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The main daemon is ntpd, which is configured in /etc/ntp.conf. Refer to ntp.conf(5) for detail.\n\n"
    },
    {
      "title": "Connection to NTP servers",
      "level": 3,
      "content": "NTP servers are classified in a hierarchical system with many levels called strata: the devices which are considered independent time sources are classified as stratum 0 sources; the servers directly connected to stratum 0 devices are classified as stratum 1 sources; servers connected to stratum 1 sources are then classified as stratum 2 sources and so on.\n\nIt has to be understood that a server's stratum cannot be taken as an indication of its accuracy or reliability. Typically, stratum 2 servers are used for general synchronization purposes: if you do not already know the servers you are going to connect to, you should choose a server pool close to your location from the pool.ntp.org servers (alternative link).\n\nSince ntp version 4.2.7.p465-2, Arch Linux uses its own default vendor pool of NTP servers provided by the NTP Pool Project (see FS#41700). Modify those to suit your needs, e.g. if you want to use your country's servers with an option:\n\n```\n/etc/ntp.conf\n```\n\n```\nserver 0.fr.pool.ntp.org iburst\nserver 1.fr.pool.ntp.org iburst\nserver 2.fr.pool.ntp.org iburst\nserver 3.fr.pool.ntp.org iburst\n```\n\nThe iburst option is recommended, and sends a burst of packets only if it cannot obtain a connection with the first attempt. The burst option always does this, even on the first attempt, and should never be used without explicit permission and may result in blacklisting.\n\n"
    },
    {
      "title": "Leap seconds file",
      "level": 3,
      "content": "In order for the system to be able to provide the International Atomic Time to an application that requests it, the list of leap seconds must be loaded. The list is part of the tzdata package and can be loaded by adding the following line to the NTP configuration file:\n\n```\nleapfile /usr/share/zoneinfo/leap-seconds.list\n```\n\n"
    },
    {
      "title": "NTP server mode",
      "level": 3,
      "content": "If setting up an NTP server, check that you have orphan mode enabled, so that, in case it loses internet access, it will continue serving time to the network; enable orphan mode using the tos configuration parameter (you can set up to stratum 15) so that it will never be used unless internet access is lost:\n\n```\ntos orphan 15\n```\n\nNext, define the rules that will allow clients to connect to your service (localhost is considered a client too) using the restrict command; you should already have a line like this in your file:\n\n```\nrestrict default nomodify nopeer noquery\n```\n\nThis restricts everyone from modifying anything and prevents everyone from querying the status of your time server: nomodify prevents reconfiguring ntpd (with ntpq or ntpdc), and noquery is important to prevent dumping status data from ntpd (also with ntpq or ntpdc).\n\nYou can also add other options:\n\n```\nrestrict default kod limited nomodify notrap nopeer noquery\n```\n\nIf you want to change any of these, see the full docs for the \"restrict\" option in ntp.conf(5), the detailed ntp instructions and #Usage.\n\nFollowing this line, you need to tell ntpd what to allow through into your server; the following line is enough if you are not configuring an NTP server:\n\n```\nrestrict 127.0.0.1\n```\n\nIf you want to force DNS resolution to the IPv6 namespace, write -6 before the IP address or host name (-4 forces IPv4 instead), for example:\n\n```\nrestrict -6 default kod limited nomodify notrap nopeer noquery\nrestrict -6 ::1    # ::1 is the IPv6 equivalent for 127.0.0.1\n```\n\nLastly, specify the drift file (which keeps track of your clock's time deviation) and optionally the log file location:\n\n```\ndriftfile /var/lib/ntp/ntp.drift\nlogfile /var/log/ntp.log\n```\n\nA very basic configuration file will look like this:\n\n```\n/etc/ntp.conf\n```\n\n```\nserver 0.arch.pool.ntp.org iburst\nserver 1.arch.pool.ntp.org iburst\nserver 2.arch.pool.ntp.org iburst\nserver 3.arch.pool.ntp.org iburst\ntos orphan 15\n\nrestrict default kod limited nomodify notrap nopeer noquery\nrestrict -6 default kod limited nomodify notrap nopeer noquery\n\nrestrict 127.0.0.1\nrestrict -6 ::1  \n\ndriftfile /var/lib/ntp/ntp.drift\nlogfile /var/log/ntp.log\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "The package has a default client-mode configuration and its own user and group to drop root privileges after starting. If you start it from the console, you should always do so with the -u option:\n\n```\n# ntpd -u ntp:ntp\n```\n\nThe -u option is employed by the two included systemd services. These services also use the -g option, which disables a threshold (so-called panic-gate). Hence, they will synchonize time even in case the ntp-server's time exceeds the threshold deviation from the system clock.\n\nBoth services are tied to the system's resolver, and will start synchronizing when an active network connection is detected.\n\n"
    },
    {
      "title": "Start ntpd at boot",
      "level": 3,
      "content": "Enable the daemon with ntpd.service. See also #Running in a chroot.\n\nUse ntpq to see the list of configured peers and status of synchronization:\n\n```\n$ ntpq -p\n```\n\nThe delay, offset and jitter columns should be non-zero. The servers ntpd is synchronizing with are prefixed by an asterisk. It can take several minutes before ntpd selects a server to synchronize with; try checking after 17 minutes (1024 seconds).\n\n"
    },
    {
      "title": "Synchronize time once per boot",
      "level": 3,
      "content": "Alternatively, enable ntpdate.service to synchronize time once (option -q) and non-forking (option -n) per boot, instead of running the daemon in the background. This method is discouraged on servers, and in general on machines that run without rebooting for more than a few days.\n\nIf the synchronized time should be written to the hardware clock as well, configure the provided unit as described in systemd#Editing provided units before starting it:\n\n```\n/etc/systemd/system/ntpdate.service.d/hwclock.conf\n```\n\n```\n[Service]\nExecStart=/usr/bin/hwclock -w\n```\n\n"
    },
    {
      "title": "Start ntpd on network connection",
      "level": 3,
      "content": "ntpd can be started by your network manager, so that the daemon only runs when the computer is online.\n\n"
    },
    {
      "title": "Netctl",
      "level": 4,
      "content": "Append the following lines to your netctl profile:\n\n```\nExecUpPost=\"systemctl start ntpd.service\"\nExecDownPre=\"systemctl stop ntpd.service\"\n```\n\n"
    },
    {
      "title": "NetworkManager",
      "level": 4,
      "content": "The ntpd daemon can be brought up/down along with a network connection through the use of NetworkManager's dispatcher scripts. The networkmanager-dispatcher-ntpdAUR package installs one, pre-configured to start and stop the ntpd service with a connection.\n\n"
    },
    {
      "title": "KDE",
      "level": 4,
      "content": "KDE can use NTP (ntp must be installed) by right clicking the clock and selecting Adjust date/time. However, this requires the ntp daemon to be disabled before configuring KDE to use NTP. [2]\n\n"
    },
    {
      "title": "Using ntpd with GPS",
      "level": 3,
      "content": "Most of the articles online about configuring ntpd to receive time from a GPS suggest to use the SHM (shared memory) method. However, at least since ntpd version 4.2.8, a much better method is available. It connects directly to gpsd, so gpsd needs to be installed.\n\nAdd these lines to your /etc/ntp.conf:\n\n```\n/etc/ntp.conf\n```\n\n```\n#=========================================================\n#  GPSD native ntpd driver\n#=========================================================\n# This driver exists from at least ntp version 4.2.8\n# Details at\n#   https://www.eecis.udel.edu/~mills/ntp/html/drivers/driver46.html\nserver 127.127.46.0 \nfudge 127.127.46.0 time1 0.0 time2 0.0 refid GPS\n```\n\nThis will work as long as you have gpsd working. It connects to gpsd via the local socket and queries the \"gpsd_json\" object that is returned.\n\nTo test the setup, first ensure that gpsd is working by running:\n\n```\n$ cgps -s\n```\n\nThen wait a few minutes and run ntpq -p. This will show if ntpd is talking to gpsd:\n\n```\n$ ntpq -p\n```\n\n```\nremote           refid            st t when poll reach   delay   offset  jitter\n ==================================================================================\n*GPSD_JSON(0)    .GPS.            0 l   55   64  377    0.000    2.556  14.109\n```\n\n- If the reach column is 0, it means ntpd has not been able to talk to gpsd. Wait a few minutes and try again. Sometimes it takes ntpd a while.\n- The GPS device must have PPS capabilities. You can test if your device is capable running ppscheck /dev/gps0.\n\n"
    },
    {
      "title": "Running in a chroot",
      "level": 3,
      "content": "Create a new directory /etc/systemd/system/ntpd.service.d/ if it does not exist and a file named customexec.conf inside with the following content:\n\n```\n[Service]\nExecStart=\nExecStart=/usr/bin/ntpd -g -u ntp:ntp -i /var/lib/ntp\n```\n\nThen, edit /etc/ntp.conf to change the driftfile path such that it is relative to the chroot directory, rather than to the real system root. Change:\n\n```\ndriftfile       /var/lib/ntp/ntp.drift\n```\n\nto\n\n```\ndriftfile       /ntp.drift\n```\n\nCreate a suitable chroot environment so that getaddrinfo() will work by creating pertinent directories and files (as root):\n\n```\n# mkdir /var/lib/ntp/etc /var/lib/ntp/lib /var/lib/ntp/proc\n# mkdir /var/lib/ntp/usr /var/lib/ntp/usr/lib\n# touch /var/lib/ntp/etc/resolv.conf /var/lib/ntp/etc/services\n```\n\nand by bind-mounting the aformentioned files:\n\n```\n/etc/fstab\n```\n\n```\n...\n#ntpd chroot mounts\n/etc/resolv.conf  /var/lib/ntp/etc/resolv.conf none bind 0 0\n/etc/services\t  /var/lib/ntp/etc/services none bind 0 0\n/lib\t\t  /var/lib/ntp/lib none bind 0 0\n/usr/lib\t  /var/lib/ntp/usr/lib none bind 0 0\n/proc\t\t  /var/lib/ntp/proc none bind 0 0\n```\n\n```\n# mount -a\n```\n\nFinally, restart ntpd daemon again. Once it restarted you can verify that the daemon process is chrooted by checking where /proc/{PID}/root symlinks to:\n\n```\n# ps -C ntpd | awk '{print $1}' | sed 1d | while read -r PID; do ls -l /proc/$PID/root; done\n```\n\nshould now link to /var/lib/ntp instead of /.\n\nIt is relatively difficult to be sure that your driftfile configuration is actually working without waiting a while, as ntpd does not read or write it very often. If you get it wrong, it will log an error; if you get it right, it will update the timestamp. If you do not see any errors about it after a full day of running, and the timestamp is updated, you should be confident of success.\n\n"
    },
    {
      "title": "Restrict listening sockets",
      "level": 3,
      "content": "You can limit sockets ntpd is listening to using the interface option:\n\n```\ninterface [listen | ignore | drop] [all | ipv4 | ipv6 | wildcard | name | address[/prefixlen]]\n```\n\nlike\n\n```\n/etc/ntp.conf\n```\n\n```\ninterface listen lo\ninterface listen enp3s0\ninterface ignore enp5s0\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://www.ntp.org/\n- https://support.ntp.org/\n- https://www.pool.ntp.org/\n- https://www.eecis.udel.edu/~mills/ntp/html/index.html\n- https://www.akadia.com/services/ntp_synchronize.html\n\n"
    }
  ]
}