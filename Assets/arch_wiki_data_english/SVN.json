{
  "title": "SVN",
  "url": "https://wiki.archlinux.org/title/SVN",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nApache Subversion is \"a full-featured version control system originally designed to be a better CVS. Subversion has since expanded beyond its original goal of replacing CVS, but its basic model, design, and interface remain heavily influenced by that goal.\"\n\nThis article deals with setting up an svn-server on your machine. There are two popular svn-servers, the built in svnserve and the more advanced option, Apache HTTP Server with svn plugins.\n\n"
    },
    {
      "title": "Goals",
      "level": 3,
      "content": "The goal of this how to is to setup Subversion, with Apache. Why use Apache for Subversion? Well, quite simply, it provides features that the standalone svnserve does not have...\n\n- HTTPS support. This is more secure than the MD5 authentication used by svnserve.\n- fine-grained access controls. You can use Apache auth to limit permissions by directory. This means you can grant read access to everything, but commit access only to trunk for instance, while have another group with commit access to tags or branches.\n- a free repository viewer\n- The Subversion team is working on seamless WebDAV integration. At some point you should be able to use any WebDAV interface to update files in the repository.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install Apache HTTP Server as described in its article.\n\nBesides Apache, you will only need to install the subversion package.\n\n"
    },
    {
      "title": "Subversion configuration",
      "level": 3,
      "content": "Create a directory for your repositories:\n\n```\n# mkdir -p /home/svn/repositories\n```\n\n"
    },
    {
      "title": "Edit /etc/httpd/conf/httpd.conf",
      "level": 4,
      "content": "Ensure the following are listed...if not, add them (you will typically have to add just the last two), they must be in this order:\n\n```\nLoadModule dav_module           modules/mod_dav.so\nLoadModule dav_fs_module        modules/mod_dav_fs.so\nLoadModule dav_svn_module       modules/mod_dav_svn.so\nLoadModule authz_svn_module     modules/mod_authz_svn.so\n```\n\n"
    },
    {
      "title": "To SSL or not to SSL?",
      "level": 4,
      "content": "SSL for SVN access has a few benefits, for instance it allows you to use Apache's AuthType Basic, with little fear of someone sniffing passwords.\n\nGenerate the certificate by:\n\n```\n# cd /etc/httpd/conf/\n# openssl req -new -x509 -keyout server.key -out server.crt -days 365 -nodes\n```\n\nAdd the following to /etc/httpd/conf/extra/httpd-ssl.conf (or to /etc/httpd/conf/extra/httpd-vhosts.conf if you are not using ssl). Include the following inside of a virtual host directive:\n\n```\n<Location /svn>\n   DAV svn\n   SVNParentPath /home/svn/repositories\n   AuthzSVNAccessFile /home/svn/.svn-policy-file\n   AuthName \"SVN Repositories\"\n   AuthType Basic\n   AuthUserFile /home/svn/.svn-auth-file\n   Require valid-user\n</Location>\n```\n\nTo make sure the SSL settings get loaded, uncomment the SSL configuration line in /etc/httpd/conf/httpd.conf so it looks like this:\n\n```\nLoadModule ssl_module modules/mod_ssl.so\nLoadModule socache_shmcb_module modules/mod_socache_shmcb.so\nInclude /etc/httpd/conf/extra/httpd-ssl.conf\n```\n\n"
    },
    {
      "title": "Create /home/svn/.svn-policy-file",
      "level": 4,
      "content": "```\n[/]\n* = r\n\n[REPO_NAME:/]\nUSER_NAME = rw\n```\n\nThe * in the / section is matched to anonymous users. Any access above and beyond read only will be prompted for a user/pass by apache AuthType Basic. The REPO_NAME:/ section inherits permissions from those above, so anonymous users have read only permission to it. The last bit grants read/write permission of the REPO_NAME repository to the user USER_NAME.\n\n"
    },
    {
      "title": "Create /home/svn/.svn-auth-file",
      "level": 4,
      "content": "This is either an htpasswd, or htdigest file. I used htpasswd. Again, because of SSL, I do not worry as much about password sniffing. htdigest would provide even more security vs. sniffing, but at this point, I do not have a need for it. Run the following command\n\n```\n# htpasswd -cs /home/svn/.svn-auth-file USER_NAME\n```\n\nThe above creates the file (-c) and uses SHA-1 for storing the password (-s). The user USER_NAME is created.\n\nTo add additional users, leave off the (-c) flag.\n\n```\n# htpasswd -s /home/svn/.svn-auth-file OTHER_USER_NAME\n```\n\n"
    },
    {
      "title": "Create a repository",
      "level": 4,
      "content": "```\n# svnadmin create /home/svn/repositories/REPO_NAME\n```\n\n"
    },
    {
      "title": "Set permissions",
      "level": 4,
      "content": "The Apache user needs permissions over the new repository.\n\n```\n# chown -R http:http /home/svn/repositories/REPO_NAME\n```\n\n"
    },
    {
      "title": "Directory structure for project",
      "level": 4,
      "content": "Create a temporary directory with the branches tags trunk directory structure on your development machine.\n\n```\n$ mkdir -p ~/svn-import/{branches,tags,trunk}\n```\n\n"
    },
    {
      "title": "Populate directory",
      "level": 4,
      "content": "Copy or move your project source files into the created trunk directory.\n\n```\n$ cp -R /my/existing/project/* ~/svn-import/trunk\n```\n\n"
    },
    {
      "title": "Import the project",
      "level": 4,
      "content": "```\n$ svn import -m \"Initial import\" ~/svn-import https://yourdomain.net/svn/REPO_NAME/\n```\n\n"
    },
    {
      "title": "Test SVN checkout",
      "level": 4,
      "content": "```\n$ svn checkout https://yourdomain.net/svn/REPO_NAME/ /my/svn/working/copy\n```\n\nIf everything worked out, you should now have a working, checked out copy of your freshly created SVN repo.\n\n"
    },
    {
      "title": "Install the package",
      "level": 3,
      "content": "Install the subversion package.\n\n"
    },
    {
      "title": "Create a repository",
      "level": 3,
      "content": "Create your repository\n\n```\nmkdir /path/to/repos/\nsvnadmin create /path/to/repos/repo1\n```\n\nYour initial repository is empty, if you want to import files into it, use the following command.\n\n```\nsvn import ~/code/project1 file:///path/to/repos/repo1 --message 'Initial repository layout'\n```\n\n"
    },
    {
      "title": "Set access policies",
      "level": 3,
      "content": "Edit the file /path/to/repos/repo1/conf/svnserve.conf and uncomment or add the line under [general]\n\n```\npassword-db = passwd\n```\n\nYou might also want to change the default option for anonymous users.\n\n```\nanon-access = read\n```\n\nReplace \"read\" with \"write\" for a repository that anyone can commit to, or set it to \"none\" to disable all anonymous access.\n\nNow edit the file /path/to/repos/repo1/conf/passwd\n\n```\n[users]\nharry = foopassword\nsally = barpassword\n```\n\nThe above defines users harry and sally, with passwords foopassword and barpassword, change it as you like\n\n"
    },
    {
      "title": "Start the server daemon",
      "level": 3,
      "content": "Before you start the server, edit the configuration file:\n\n```\n/etc/conf.d/svnserve\n```\n\n```\nSVNSERVE_ARGS=\"--root=/path/to/repos\"\n```\n\nThe --root=/path/to/repos option set the root of repository tree. If you have multiple repositories use --root=/path-to/reposparent. Then access independent repositories by passing in repository name in the URL: svn://host/repo1 (Make sure that the user has read/write access to the repository files.)\n\nOptionally add a --listen-port if you want a different port, or other options.\n\nBy default, the service runs as root. If you want to change that, add a drop-in:\n\n```\n/etc/systemd/system/svnserve.service.d/50-custom.conf\n```\n\n```\n[Service]\nUser=svn\n```\n\nNow start the svnserve.service daemon.\n\n"
    },
    {
      "title": "svn+ssh",
      "level": 3,
      "content": "To use svn+ssh://, we have to have a wrapper written for svnserve.\n\ncheck where the svnserve binary is located:\n\n```\n# which svnserve\n```\n\n```\n/usr/local/bin/svnserve\n```\n\nOur wrapper is going to have to fall in PATH prior to this location...\n\nCreate a wrapper with the following content:\n\n```\n/usr/bin/svnserve\n```\n\n```\n#!/bin/sh\n# wrapper script for svnserve\numask 007\n/usr/local/bin/svnserve -r /path/to \"$@\"\n```\n\nThen, make it executable.\n\n-r /path/to is what makes use of the svn co svn+ssh://server.domain.com:/reponame instead of :/path/to/reponame.\n\nStart svnserve with new wrapper script like so:\n\n```\n# /usr/bin/svnserve -d  ( start daemon mode )\n```\n\nwe can also check the perms for remote users like this:\n\n```\n$ svn ls svn+ssh://server.domain.com:/reponame\n```\n\n```\n++server.domain.com++\ndev/\nqa/\nrelease/\n```\n\n"
    },
    {
      "title": "Subversion backup and restore",
      "level": 2,
      "content": "To back up your subversion repositories, do this for each repository you have.\n\n```\n$ svnadmin dump /path/to/repo > /tmp/repo.dump\n```\n\nTo restore the backup, create the corresponding repositories first:\n\n```\n$ svnadmin create /path/to/repo\n```\n\nThen load svn dump into new repo:\n\n```\n$ svnadmin load /path/to/repo < /tmp/repo.dump\n```\n\nSetting permissions:\n\n```\n$ chown -R svn:svnusers /path/to/repo\n$ chmod -R g+w /path/to/repo/db/\n```\n\nThese repositories should now be all setup.\n\n"
    },
    {
      "title": "Subversion clients",
      "level": 2,
      "content": "See also Wikipedia:Comparison of Subversion clients.\n\n- kdesvn — Subversion client for KDE.\n\n- RabbitVCS — Set of graphical tools written to provide simple and straightforward access to the version control systems you use.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- https://svnbook.red-bean.com/en/1.1/svn-book.html#svn-ch-9-sect-2.2-re-load\n- https://subversion.apache.org/\n\n"
    }
  ]
}