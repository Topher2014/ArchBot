{
  "title": "Spectrwm",
  "url": "https://wiki.archlinux.org/title/Spectrwm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Window manager\n\nFrom spectrwm website:\n\nSpectrwm is written in C and configured with a text configuration file. It was previously known as scrotwm.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the spectrwmAUR package.\n\n"
    },
    {
      "title": "Starting",
      "level": 2,
      "content": "Run spectrwm with xinit.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "spectrwm looks for the user configuration file in ~/.config/spectrwm/spectrwm.conf and ~/.spectrwm.conf. If none of these exist it opens the global configuration file at /etc/spectrwm.conf. It also supports the XDG Base Directory paths.\n\nOptionally, spectrwm can call baraction.sh (in the user's path), which should output a text status message to stdout for the status bar.\n\n```\n~/.spectrwm.conf\n```\n\n```\nbar_font = xos4 Terminus:pixelsize=14\n```\n\nThe modkey (the main key to issue commands with) is set to Mod4, which is usually the Super key.\n\nThere is also a screen lock key binding, which by default calls xlock from the xlockmore package.\n\nxscreensaver is also useful for screen saving and power management after an idle period and screen locking.\n\nSee Xdefaults for details of how to set up fonts, colours and other settings for xterm and xscreensaver. Run xscreensaver-demo to select the animation (or blank) and display power management (recommended).\n\n"
    },
    {
      "title": "Keybindings",
      "level": 3,
      "content": "Default keybindings are in /etc/spectrwm/spectrwm_<<keyboard layout>>.conf. In order to customize keybindings:\n\n- Set keyboard_mapping to /dev/null in your ~/.spectrwm.conf\n\n- Copy-paste the contents of /etc/spectrwm/spectrwm_<<keyboard layout>>.conf to the end of your ~/.spectrwm.conf.\n\n"
    },
    {
      "title": "Multiple monitors (Xinerama)",
      "level": 3,
      "content": "With a non-Xrandr multiple monitor setup create regions to split the total desktop area into one region per monitor:\n\n```\nregion                = screen[1]:1280x1024+0+0\nregion                = screen[1]:1280x1024+1280+0\n```\n\n"
    },
    {
      "title": "Statusbar",
      "level": 3,
      "content": "To enable the statusbar, uncomment these two items in /etc/spectrwm.conf (or ~/.spectrwm.conf). By default they are commented out and the statusbar is disabled.\n\n```\nbar_action              = baraction.sh\nbar_delay               = 5\n```\n\n"
    },
    {
      "title": "Bash scripts",
      "level": 4,
      "content": "To test the status bar, place the following simple baraction.sh in a ~/scripts (or ~/bin) directory which you have previously added to your $PATH in your ~/.bashrc file.\n\n```\n#!/bin/bash\n# baraction.sh script for spectrwm status bar\n\nSLEEP_SEC=5  # set bar_delay = 5 in /etc/spectrwm.conf\nCOUNT=0\n#loops forever outputting a line every SLEEP_SEC secs\nwhile :; do\n\tlet COUNT=$COUNT+1\n        echo -e \"         Hello World! $COUNT\"\n        sleep $SLEEP_SEC\ndone\n```\n\nPress Modkey+Q to restart spectrwm and after a few seconds you should see the output in the status bar. If you have problems at this stage, make sure the script is executable, test it from the command line, and check the path/filename you specified in bar_action.\n\nHere are some other ideas for status bar items: ethernet, email notification, disk space, mounts, now playing (mpc current).\n\nThe script may also show the date, in which case the built-in clock can be disabled:\n\n```\nclock_enabled     = 0\n```\n\n"
    },
    {
      "title": "Conky",
      "level": 4,
      "content": "Instead of a bash script, Conky may be used. It should be used in non-graphical mode as shown below to output a text string to stdout which can be read in by spectrwm. First install conky. It is not necessary to install the cut-down conky-cliAUR (although that would work too).\n\nIn ~/.spectrwm.conf set\n\n```\nbar_action = conky\n```\n\nThen in each user's ~/.conkyrc file place for example:\n\n```\nout_to_x no\nout_to_console yes\nupdate_interval 1.0\ntotal_run_times 0\nuse_spacer none\nTEXT\n${time %R %a,%d-%#b-%y} |Mail:${new_mails} |Up:${uptime_short} |Temp:${acpitemp}C |Batt:${battery_short} |${addr wlan0} |RAM:$memperc% |CPU:${cpu}% | ${downspeedf wlan0}\n```\n\n"
    },
    {
      "title": "Alternative status bar",
      "level": 3,
      "content": "An alternative is to use dzen2 to create a status bar. This has the advantage that colors and even icons may be used, but the disadvantage that the bar is not integrated with spectrwm. So the current workspace number and layout and the bar-toggle keybinding are not available. The \"region\" option can be used to reserve the required screen space.\n\nFor example to reserve 14 pixels at the top of the screen:\n\n```\nspectrwm.conf\n```\n\n```\nbar_enabled             = 0\nregion                  = screen[1]:1024x754+0+14\n```\n\n(adjust for your screen resolution).\n\nThen, for example using i3status to supply the information:\n\n```\n$ i3status | dzen2 -fn -*-terminus-medium-*-*-*-*-*-*-*-*-*-*-* &\n```\n\nSpectrwm's own bar can still be enabled and disabled with Meta+b.\n\n"
    },
    {
      "title": "Screenshots",
      "level": 2,
      "content": "Spectrwm has the facility to execute a script called screenshot.sh with the keybindings\n\n- Meta+s − for a full screenshot\n- Meta+Shift+s − for a screenshot of a single window\n\nFirst install scrot, then copy the default script supplied in the spectrwm package to a location in your $PATH, for example:\n\n```\n$ cp /usr/share/spectrwm/screenshot.sh ~/bin\n```\n\n"
    },
    {
      "title": "Screen locking",
      "level": 2,
      "content": "By default the lock keybinding Mod+Shift+Delete executes xlock\n\n```\nprogram[lock]      = xlock\n```\n\nAn alternative, if xscreensaver is already running, is to use\n\n```\nprogram[lock]      = xscreensaver-command -lock\n```\n\n"
    },
    {
      "title": "Using spectrwm",
      "level": 2,
      "content": "- To save space, window title bars are not shown. Window borders are one pixel wide. The border changes colour to indicate focus.\n- Layouts are handled dynamically and can be changed on the fly. There are three standard layouts (stacking algorithms): vertical, horizontal and maximized (indicated in the status bar as [|], [-] and [ ])\n- There is the concept of a master area (a working area). Any window can be switched to become the master and will then be shown in the master area. The master area is the left (top) portion of the screen in vertical (horizontal) mode. The size of the master area can be adjusted with the keys. By default the master area holds one window, but this can be increased.\n- The area excluding the master area is called the stacking area. New windows are added to the stacking area. By default the stacking area has one column (row) in vertical (horizontal) mode, but this can be increased.\n- Windows may be moved to a floating layer, i.e. removed from the tiling management. This is useful for programs which are not suitable for tiling.\n\nSome of the most useful key bindings to be used with Meta:\n\n- Shift+Enter: open terminal\n- p: invokes dmenu (where you can type the start of the program name and Enter)\n- 1 to 0: select workspaces 1 to 10\n- Shift+1 to Shift+0: move the window to the workspace 1 to 10\n- Right or Left: select the next or previous workspace\n- Shift+Right or Shift+Left: select the next or previous screen\n- Space: cycle through layouts (vertical, horizontal, maximized)\n- j or k: cycle through windows forwards or backwards\n- Tab or Shift+Tab: same as Meta+j or Meta+k\n- Enter: move the current window to the master area\n- h or l: increase or decrease the size of the master area\n\nAdvanced stacking (still accompanying Meta):\n\n- , or .: increase or decrease the number of windows in master area (default is 1)\n- Shift+, or Shift+.: increase or decrease the number of columns(rows) in stacking area in vertical(horizontal) mode (default is 1)\n- Shift+j or Shift+k: swap window position with the next or previous window\n- t: toggle between float and tile\n\nMouse bindings:\n\n- Mouseover: focus window\n- Meta+LeftClick+Drag: move window (and float it if tiled)\n- Meta+RightClick+Drag: resize floating window\n- Meta+Shift+RightClick+Drag: resize floating window keeping it centered\n\nOther useful bindings (accompanying Meta):\n\n- x: close window\n- Shift+x: kill window\n- b: hide or show the status bar\n- q: restart spectrwm (reset desktops and reread spectrwm configuration without stopping running programs)\n- Shift+q: exit spectrwm\n\n"
    },
    {
      "title": "Help, I just logged in and all I see is a blank screen",
      "level": 3,
      "content": "Press Shift+Super+Enter and an xterm will start. See the manual for other default key bindings. Also check your configuration file.\n\n"
    },
    {
      "title": "Why does my window open in a desktop other than the current active one?",
      "level": 3,
      "content": "Currently the PID of window is used to determine the desktop for new windows. To workaround this with terminals for example, you can often pass an argument to open the terminal in a new process.\n\n"
    },
    {
      "title": "Help, Xorg terminates after running startx",
      "level": 3,
      "content": "Make sure all the dependencies such as xlockmore are installed.\n\nYou may also use Xephyr against your xinitrc within another xsession to troubleshoot.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- spectrwm - spectrwm's official website\n\n- #spectrwm at OFTC - Official IRC channel.\n\n- dmenu - Simple application launcher from the developers of dwm\n\n- The scrotwm thread\n\n"
    }
  ]
}