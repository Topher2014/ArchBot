{
  "title": "Nix",
  "url": "https://wiki.archlinux.org/title/Nix",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Nix is a purely functional package manager that aims to make package management reproducible, declarative and reliable.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "There are four choices for installing Nix:\n\n- the native Arch Linux package,\n- the upstream installation script officially supported by Nix,\n- the Zero to Nix script provided by Determinate Systems, a company providing third party support for Nix,\n- and the Lix script provided by passionate Nix community members aiming for improvements in Nix ecosystem by providing a hard fork version from the Nix package manager.\n\n"
    },
    {
      "title": "Native",
      "level": 3,
      "content": "Install the nix package.\n\n"
    },
    {
      "title": "Upstream installation script",
      "level": 3,
      "content": "Note: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nDownload the file with curl --proto '=https' --tlsv1.2 -sSfL https://nixos.org/nix/install -o nix-install.sh, view it: less ./nix-install.sh, and run the script ./nix-install.sh --daemon to start Nix installation.\n\n"
    },
    {
      "title": "Zero to Nix installation script",
      "level": 3,
      "content": "Note: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nFor an easier and less complicated Nix setup you can use the setup from Determinate Systems. Download the file with curl --proto '=https' --tlsv1.2 -sSf -L https://install.determinate.systems/nix -o nix-install.sh, view it: less ./nix-install.sh, and run the script sh ./nix-install.sh install to start the installation.\n\nFor more information see the manual from Determinate Systems.\n\n"
    },
    {
      "title": "Lix installation script",
      "level": 3,
      "content": "Note: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nDownload the file with curl --proto '=https' --tlsv1.2 -sSf -L https://install.lix.systems/lix -o lix-install.sh, view it: less ./lix-install.sh, and run the script sh ./lix-install.sh to start the installation.\n\nFor more information see the manual from Lix Installer\n\n```\nuninstallnix.sh\n```\n\n```\n#!/bin/sh\nfor i in {01..10}; do\n  userdel \"nixbld$i\"\ndone\ngroupdel nixbld\n```\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "To have the Nix daemon launched at boot time, enable nix-daemon.service.\n\nAdd required users to the nix-users group in order to access the daemon socket. Restart your session for the change to have an effect.\n\nAdd a channel and update it.\n\n```\n$ nix-channel --add https://nixos.org/channels/nixpkgs-unstable\n$ nix-channel --update\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "With the shell configured, the following should install hello into your updated PATH:\n\n```\n$ nix-env -iA nixpkgs.hello\n```\n\nThe binary itself will be located at /nix/store/[hash]-hello-[version]/bin/hello.\n\nRun hello and make sure it is in the right PATH. If it works, you can remove it:\n\n```\n$ nix-env --uninstall hello\n```\n\nOr you can check the list of installed programs:\n\n```\n$ nix-env --query\n```\n\nYou can also list generations:\n\n```\n$ nix-env --list-generations\n```\n\nSee nix-env(1) for more detailed information.\n\n"
    },
    {
      "title": "Max jobs",
      "level": 3,
      "content": "By default, nix only uses one builder. The following will allow nix to use as many jobs as the number of CPUs:\n\n```\n/etc/nix/nix.conf\n```\n\n```\nmax-jobs = auto\n```\n\n"
    },
    {
      "title": "Graphical acceleration",
      "level": 3,
      "content": "To run OpenGL and Vulkan applications, use NixGL.\n\n"
    },
    {
      "title": "Desktop integration",
      "level": 3,
      "content": "For integrating Nix applications with your desktop environment, add the ~/.nix-profile/share directory to your $XDG_DATA_DIRS, for instance using export XDG_DATA_DIRS=$HOME/.nix-profile/share:$XDG_DATA_DIRS.\n\n"
    },
    {
      "title": "Zsh integration for nix-shell",
      "level": 3,
      "content": "nix-shell starts Bash by default. zsh-nix-shellAUR lets you use Zsh as the default shell in a nix-shell environment. Some prompt plugins such as zsh-theme-powerlevel10kAUR and zsh-pure-promptAUR provide a nix-shell indicator.\n\n"
    },
    {
      "title": "Zsh",
      "level": 3,
      "content": "nix-zsh-completionsAUR provides Zsh completions for nix commands such as nix-env and nix-shell.\n\n"
    },
    {
      "title": "Too many open files",
      "level": 3,
      "content": "Some builds may run into an error such as:\n\n```\nerror: opening directory '/nix/store/...': Too many open files\n```\n\nEdit nix-daemon.service and increase the file limit:\n\n```\n[Service]\nLimitNOFILE=65536\n```\n\n"
    },
    {
      "title": "Warning message about root user channels",
      "level": 3,
      "content": "If you get this error while using Nix:\n\n```\nwarning: Nix search path entry '/nix/var/nix/profiles/per-user/root/channels' does not exist, ignoring\n```\n\nThe root user will need to update their channels:\n\n```\n# nix-channel --update\n```\n\n"
    },
    {
      "title": "User-related Nix search path entry does not exist, ignoring",
      "level": 3,
      "content": "```\nwarning: Nix search path entry '/nix/var/nix/profiles/per-user/<USER>/channels' does not exist, ignoring\n```\n\nSee FS#78828. Alternatively, you can use the #Upstream installation script or #Zero to Nix installation script, which do not exhibit the issue.\n\n"
    },
    {
      "title": "error: file 'nixpkgs' was not found in the Nix search path (add it using $NIX_PATH or -I)",
      "level": 3,
      "content": "See FS#78828. Alternatively, you can use the #Upstream installation script or #Zero to Nix installation script, which do not exhibit the issue.\n\n"
    },
    {
      "title": "Other sandbox issues",
      "level": 4,
      "content": "```\nerror: while setting up the build environment: mounting /proc: Operation not permitted\nerror: program '/usr/bin/nix-env' failed with exit code 1\n```\n\n```\n1: package 'utils' in options(\"defaultPackages\") was not found\n2: package 'stats' in options(\"defaultPackages\") was not found\nError: .onLoad failed in loadNamespace() for 'utils', details:\n call: system(paste(which, shQuote(names[i])), intern = TRUE, ignore.stderr = TRUE)\n error: cannot popen '/nix/store/fnkvlbls29d01jcx3wsdnhykyrl7087r-which-2.21/bin/which 'uname' 2>/dev/null', probable reason 'Cannot allocate memory'\n```\n\nThe issue is known upstream: #2311, #3000, and #4636.\n\nThe most common fix is to disable sandboxing in the configuration file:\n\n```\n/etc/nix/nix.conf\n```\n\n```\n# disable sandboxing\nsandbox = false\n```\n\nThen restart the nix-daemon service.\n\n"
    },
    {
      "title": "Locale warnings",
      "level": 3,
      "content": "The Nixos wiki recommends running export LOCALE_ARCHIVE=/usr/lib/locale/locale-archive. Alternatively, export the environment variable LC_ALL=C.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Upstream Wiki\n- Nix Package Manager Guide\n\n"
    }
  ]
}