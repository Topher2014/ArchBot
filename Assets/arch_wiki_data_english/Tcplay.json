{
  "title": "Tcplay",
  "url": "https://wiki.archlinux.org/title/Tcplay",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Data-at-rest encryption\n- TrueCrypt\n- Tomb\n\ntcplay is a free, fully featured and stable TrueCrypt implementation including multiple keyfiles and cipher cascades.\n\nSource: github project home\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the tcplay package.\n\n"
    },
    {
      "title": "Encrypting a file as a virtual volume",
      "level": 2,
      "content": "Invoke\n\n```\n$ losetup -f\n```\n\nto find the first unused loopback device; in this example, /dev/loop0.\n\nCreate a new container foo.tc, 20M in size for instance, in the working directory:\n\n```\n# fallocate -l 20M foo.tc\n# losetup /dev/loop0 foo.tc\n# tcplay -c -d /dev/loop0 -a whirlpool -b AES-256-XTS\n```\n\nEnter a secure password for the volume, and confirm the query to overwrite foo.tc with the new volume. tcplay will then write random data into the volume. Map the volume and create a filesystem on it in order to mount\n\n```\n# tcplay -m foo.tc -d /dev/loop0\n# mkfs.ext4 /dev/mapper/foo.tc\n# mount /dev/mapper/foo.tc /mnt/truecrypt/\n```\n\nTo unset the container,\n\n```\n# umount /mnt/truecrypt\n# dmsetup remove foo.tc\n# losetup -d /dev/loop0\n```\n\n"
    },
    {
      "title": "Mounting an existing container for a user",
      "level": 2,
      "content": "Consider /dev/loop0 the first unused loop device, foo.tc the TrueCrypt container, /home/you/truecrypt/ the desired mount point. The user you in this example has uid=1000 and gid=100. The steps for mounting the container as a virtual volume are:\n\n1. Associate loop device with the container\n1. Map the container to the loop device\n1. Mount the container in the filesystem\n\nThe following commands perform the above actions.\n\n```\n# losetup /dev/loop0 foo.tc\n# tcplay -m foo.tc -d /dev/loop0\n# mount -o nodev,nosuid,uid=1000,gid=100 /dev/mapper/foo.tc /home/you/truecrypt/\n```\n\nNote, if the container uses ext4 or another filesystem that supports file ownership, the uid and gid parameters are not needed and will not work. Therefore the third command would be simply:\n\n```\n# mount -o nodev,nosuid /dev/mapper/foo.tc /home/you/truecrypt/\n```\n\nTo reverse them:\n\n```\n# umount /home/you/truecrypt/\n# dmsetup remove foo.tc\n# losetup -d /dev/loop0\n```\n\n"
    },
    {
      "title": "Using tcplay-helper",
      "level": 2,
      "content": "The tcplay-helper script simplifies the process of creating, mounting and unmounting tc-play containers. The script is basic, but should work fine for most users wanting to work with simple secure tc-play containers.\n\nThe following command creates a 3Mb container called foo.tc.\n\n```\n# tcplay-helper create foo.tc 3M\n```\n\nTo mount the container file we can either mount it as root with the following command. The container will be mounted under /mnt/truecrypt/\n\n```\n# tcplay-helper open foo.tc\n```\n\nAlternatively, we can supply a username to mount the container as.\n\n```\n# tcplay-helper open foo.tc archie\n```\n\nFinally, to close the container this command does the trick.\n\n```\n# tcplay-helper close foo.tc\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- tcplay(8)\n- Jason Ryan: Replacing TrueCrypt\n- Truecrypt Tutorial on HowToForge\n- There is a good chance the CIA has a backdoor? (via wp)\n- tcplay-helper documentation\n\n"
    }
  ]
}