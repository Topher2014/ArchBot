{
  "title": "Lark Ultimate 7i WIN",
  "url": "https://wiki.archlinux.org/title/Lark_Ultimate_7i_WIN",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section does not follow the Laptop page guidelines.** This article or section does not follow the Laptop page guidelines.\n\nThis article or section does not follow the Laptop page guidelines.\n\nTable content:\nHardware | PCI/USB ID | Working?\nDisplay |  | Yes\n#Touchscreen |  | Partial\nWireless |  | Yes\nAudio |  | Yes\nCamera (front) |  | No\nCamera (back) |  | No\nBluetooth |  | Yes\nMicroSD Reader |  | Yes\nAccelerometer |  | Yes\n\nLark Ultimate 7i WIN is a budget 7\" tablet shipping with Windows 8, 8.1 or 10. Android versions are known to exist but were not as popular and less featured than the Windows (WIN) counterparts. There also exist 8\", 10\" and 11\" versions of these tables and versions with 3G modem, featuring different interiors.\n\nLark Ultimate 7i WIN has Intel Atom Z3735G BayTrail processor with integrated graphics and 1 GB of integrated DDR3L RAM, 16 GB eMMC, 1024 x 600 pixel screen with 10-point touchscreen of unknown resolution and \"Windows\" button, three hardware buttons (volume up, down and power), basic accelerometer, two cameras (VGA in front, 2 Mpix in the back), microphone, mono speaker, 3.5 mm jack slot, microSD slot, miniHDMI port and one microUSB port (for data and charging). It features InsydeH20 32-bit UEFI BIOS.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "This tablet uses 32-bit UEFI despite having 64-bit processor.\n\nFor installation, you will most likely need some kind of USB hub, as you need to have keyboard and boot media connected. Booting from microSD was not tested. Wireless should work with recent Arch boot media.\n\n"
    },
    {
      "title": "Touchscreen",
      "level": 3,
      "content": "For touchscreen to work, firmware is needed. For silead (recommended) driver, copy mssl1680.fw file that was extracted from Windows drivers to /usr/lib/firmware/silead/ directory. Then, Calibrating Touchscreen will be needed. Until a better solution is found, this entry can be added at the bottom of .xinitrc file for relatively usable touchpad:\n\n```\n~/.xinitrc\n```\n\n```\nxinput set-prop \"silead_ts' --type=float \"Coordinate Transformation Matrix\" 4.75 0 -0.02 0 6.7 -0.02 0 0 1\n```\n\nSee https://github.com/onitake/gsl-firmware/tree/master/firmware/lark/ulti7iwin and https://github.com/onitake/gsl-firmware/blob/master/README.md for more info.\n\n"
    },
    {
      "title": "Accelerometer",
      "level": 3,
      "content": "/sys/bus/i2c/devices lists a BMA250E device. To see how it works, see\n\n```\n$ cd /sys/bus/i2c/devices/i2c-BMA250E\\:00/iio\\:device0/\n$ watch cat in_accel_*_raw\n```\n\n"
    },
    {
      "title": "Camera",
      "level": 3,
      "content": "According to /sys/bus/i2c/devices, there is an INT0310 device (GalaxyCore GC0310 - Front Camera) and OVTI2680 device (OmniVision OV2680 - Back Camera). Both had a short-lived driver implementation as a part of Linux kernels 4.12â€“4.17 staging atomisp driver [1], which was later removed. OV2680 is implemented as a standalone driver, but it is not enabled on stock Arch kernel.\n\n"
    },
    {
      "title": "Devices on i2c bus",
      "level": 3,
      "content": "/sys/bus/i2c/devices\n\nTable content:\ni2c-10EC5640:00 | snd_soc_rt5640 | Realtek RT5640 - Sound Card\ni2c-BMA250E:00 | bmc150_accel_* | Bosch BMC150 - Accelerometer\ni2c-INT0310:00 | gc0310 | GalaxyCore GC0310 - Front Camera\ni2c-INT33F4:00 | intel_soc_pmic_i2c | Intel I2C Interface\ni2c-MSSL1680:00 | silead | GSL1680 - Silead touchescreen\ni2c-OVTI2680:00 | ov2680 | OmniVision OV2680 - Back Camera\n\n"
    }
  ]
}