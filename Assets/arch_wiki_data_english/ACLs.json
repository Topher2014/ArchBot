{
  "title": "ACLs",
  "url": "https://wiki.archlinux.org/title/ACLs",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Access control list (ACL) provides an additional, more flexible permission mechanism for file systems. It is designed to assist with UNIX file permissions. ACL allows you to give permissions for any user or group to any disk resource.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "The acl package is a dependency of systemd, it should already be installed.\n\n"
    },
    {
      "title": "Enable ACL",
      "level": 2,
      "content": "To enable ACL, the filesystem must be mounted with the acl option. You can use fstab entries to make it permanent on your system.\n\nThere is a possibility that the acl option is already active as one of the default mount options on the filesystem. Btrfs and Ext2/3/4 filesystems are affected by this. Use the following command to check ext2/3/4 formatted partitions for the option:\n\n```\n# tune2fs -l /dev/sdXY | grep \"Default mount options:\"\n```\n\n```\nDefault mount options:    user_xattr acl\n```\n\nAlso check that the default mount options are not overridden, in such case you will see noacl in /proc/mounts in the relevant line.\n\nYou can set the default mount options of a filesystem using the tune2fs -o option partition command, for example:\n\n```\n# tune2fs -o acl /dev/sdXY\n```\n\nUsing the default mount options instead of an entry in /etc/fstab is very useful for external drives, such partition will be mounted with acl option also on other Linux machines. There is no need to edit /etc/fstab on every machine.\n\n- acl is specified as a default mount option when creating an ext2/3/4 filesystem. This is configured in /etc/mke2fs.conf.\n- The default mount options are not listed in /proc/mounts.\n\n"
    },
    {
      "title": "Set ACL",
      "level": 3,
      "content": "The ACL can be modified using the setfacl command.\n\n- You can list file/directory permission changes without modifying the permissions (i.e. dry-run) by appending the --test flag.\n- To apply operations to all files and directories recursively, append the -R/--recursive argument.\n\nTo set permissions for a user (user is either the user name or ID):\n\n```\n# setfacl -m \"u:user:permissions\" <file/dir>\n```\n\nTo set permissions for a group (group is either the group name or ID):\n\n```\n# setfacl -m \"g:group:permissions\" <file/dir>\n```\n\nTo set permissions for others:\n\n```\n# setfacl -m \"other:permissions\" <file/dir>\n```\n\nTo allow all newly created files or directories to inherit entries from the parent directory (this will not affect files which will be moved into the directory):\n\n```\n# setfacl -dm \"entry\" <dir>\n```\n\nTo remove a specific entry:\n\n```\n# setfacl -x \"entry\" <file/dir>\n```\n\nTo remove the default entries:\n\n```\n# setfacl -k <file/dir>\n```\n\nTo remove all entries (entries of the owner, group and others are retained):\n\n```\n# setfacl -b <file/dir>\n```\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\n"
    },
    {
      "title": "Show ACL",
      "level": 3,
      "content": "To show permissions, use:\n\n```\n# getfacl <file/dir>\n```\n\n"
    },
    {
      "title": "Examples",
      "level": 2,
      "content": "Set all permissions for user johnny to file named abc:\n\n```\n# setfacl -m \"u:johnny:rwx\" abc\n```\n\nCheck permissions:\n\n```\n# getfacl abc\n```\n\n```\n# file: abc\n# owner: someone\n# group: someone\nuser::rw-\nuser:johnny:rwx\ngroup::r--\nmask::rwx\nother::r--\n```\n\nChange permissions for user johnny:\n\n```\n# setfacl -m \"u:johnny:r-x\" abc\n```\n\nCheck permissions:\n\n```\n# getfacl abc\n```\n\n```\n# file: abc\n# owner: someone\n# group: someone\nuser::rw-\nuser:johnny:r-x\ngroup::r--\nmask::r-x\nother::r--\n```\n\nRemove all ACL entries:\n\n```\n# setfacl -b abc\n```\n\nCheck permissions:\n\n```\n# getfacl abc\n```\n\n```\n# file: abc\n# owner: someone\n# group: someone\nuser::rw-\ngroup::r--\nother::r--\n```\n\n"
    },
    {
      "title": "Output of ls command",
      "level": 3,
      "content": "You will notice that there is an ACL for a given file because it will exhibit a + (plus sign) after its Unix permissions in the output of ls -l.\n\n```\n$ ls -l /dev/audio\n```\n\n```\ncrw-rw----+ 1 root audio 14, 4 nov.   9 12:49 /dev/audio\n```\n\n```\n$ getfacl /dev/audio\n```\n\n```\ngetfacl: Removing leading '/' from absolute path names\n# file: dev/audio\n# owner: root\n# group: audio\nuser::rw-\nuser:solstice:rw-\ngroup::rw-\nmask::rw-\nother::---\n```\n\n"
    },
    {
      "title": "Execution permissions for private files",
      "level": 3,
      "content": "The following technique describes how a process like a web server can be granted access to files that reside in a user's home directory, without compromising security by giving the whole world access.\n\nIn the following we assume that the web server runs as the user http and grant it access to geoffrey's home directory /home/geoffrey.\n\nThe first step is granting execution permissions for the user http:\n\n```\n# setfacl -m \"u:http:--x\" /home/geoffrey\n```\n\nSince the user http is now able to access files in /home/geoffrey, others no longer need access:\n\n```\n# chmod o-rx /home/geoffrey\n```\n\nUse getfacl to verify the changes:\n\n```\n$ getfacl /home/geoffrey\n```\n\n```\ngetfacl: Removing leading '/' from absolute path names\n# file: home/geoffrey\n# owner: geoffrey\n# group: geoffrey\nuser::rwx\nuser:http:--x\ngroup::r-x\nmask::r-x\nother::---\n```\n\nAs the above output shows, other's no longer have any permissions, but the user http is still able to access the files, thus security might be considered increased.\n\nIf you need to give write access for the user http on specific directories and/or files, run:\n\n```\n# setfacl -dm \"u:http:rwx\" /home/geoffrey/project1/cache\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- getfacl(1)\n- setfacl(1)\n- POSIX Access Control Lists on Linux\n- How to set default file permissions for all folders/files in a directory?\n\n"
    }
  ]
}