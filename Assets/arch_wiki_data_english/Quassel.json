{
  "title": "Quassel",
  "url": "https://wiki.archlinux.org/title/Quassel",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Quassel (sometimes referred to as Quassel IRC) is a cross-platform IRC client introduced in 2008. It is dual-licensed under GPLv2 and GPLv3, while most graphical data is licensed under the LGPL and provided by the Oxygen Team. The Quassel client uses the Qt framework for its user interface.\n\nQuassel is split up into two parts by a server-client model; a client and a core. There is also a monolithic version of the official client that does not require a core. The core(server) is the application that actually does the communication with IRC networks, while the client(s) only communicates with the core. This gives the user a flexibility of having the same instance to IRC networks on different clients (e.g. mobile, desktop) at the same time.\n\n"
    },
    {
      "title": "Basic usage",
      "level": 3,
      "content": "Just install the quassel-monolithic (or quassel-monolithic-qt) package if you only want to use Quassel from a single computer (e.g. for quickly asking for support on Arch IRC channels).\n\n"
    },
    {
      "title": "Setting up a bouncer (Quassel core) to be permanently online",
      "level": 3,
      "content": "Install quassel-core on the server and quassel-client (or quassel-client-qt) on your desktop. If the server is headless, you could install quassel-core-smallAUR instead to avoid unnecessary dependencies like X11 libraries.\n\nGenerate a certificate (this will be valid for 1 years, after which it needs to be reissued, just change the -days to another value if you so desire):\n\n```\n# openssl req -x509 -nodes -days 365 -newkey rsa:4096 -keyout /var/lib/quassel/quasselCert.pem -out /var/lib/quassel/quasselCert.pem\n# chown quassel:quassel /var/lib/quassel/quasselCert.pem\n```\n\nAs this is a self-signed certificate, you can type whatever you want in the fields.\n\nOpen port 4242 in your firewall.\n\nStart core by starting quassel.service.\n\nStart the client and connect to core:\n\n```\n$ quasselclient\n```\n\nAccept your self-created certificate.\n\nNow set up your IRC-servers and IRC-nicknames on the core.\n\nIf you choose to use PostgreSQL as backend you will need to create a database and user for quasselcore.\n\n```\n[postgres]$ psql -c \"CREATE USER quassel WITH PASSWORD 'myPassword';\"\n[postgres]$ psql -c \"CREATE DATABASE quassel WITH OWNER quassel ENCODING 'UTF8';\"\n```\n\nSee also PostgreSQL instruction on Quassel wiki.\n\nOnce it all works, you can enable quassel.service to start automatically on system boot.\n\n"
    },
    {
      "title": "Setting up multiple clients to connect through the same core",
      "level": 3,
      "content": "If you want additional users to be able to use the same core, run as the quassel user:\n\n```\n[quassel]$ quasselcore --configdir=/var/lib/quassel --add-user\n```\n\nIt will then prompt you for a new account's username and password.\n\n"
    },
    {
      "title": "Spell checking",
      "level": 2,
      "content": "For spell checking, make sure hunspell and a language dictionary for it are installed. Enable it by selecting the check-boxes in Settings > Configure Quassel... > Spell Checking and restarting your client.\n\n"
    },
    {
      "title": "Viewing logs",
      "level": 3,
      "content": "In addition to the tools listed in the Quassel wiki, quargAUR allows searching through the database.\n\n"
    },
    {
      "title": "Waiting until the network is up to start",
      "level": 3,
      "content": "By default, quassel.service is only depending on network.target. To wait until the network is up, edit the unit to use network-online.target instead:\n\n```\n/etc/systemd/system/quassel.service.d/network-online.conf\n```\n\n```\n[Unit]\nAfter=\nAfter=network-online.target nss-lookup.target postgresql.service\nWants=\nWants=network-online.target postgresql.service\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- QuasselWiki\n\n"
    }
  ]
}