{
  "title": "Xinit",
  "url": "https://wiki.archlinux.org/title/Xinit",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Display manager\n- Xorg\n- xprofile\n- Xresources\n\nFrom Wikipedia:\n\nxinit is typically used to start window managers or desktop environments. While you can also use xinit to run GUI applications without a window manager, many graphical applications expect an EWMH compliant window manager. Display managers start Xorg for you and generally source xprofile.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the xorg-xinit package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "xinit and startx take an optional client program argument, see #Override xinitrc. If you do not provide one they will look for ~/.xinitrc to run as a shell script to start up client programs.\n\n"
    },
    {
      "title": "xinitrc",
      "level": 3,
      "content": "~/.xinitrc is handy to run programs depending on X and set environment variables on X server startup. If it is present in a user's home directory, startx and xinit execute it. Otherwise startx will run the default /etc/X11/xinit/xinitrc.\n\nThis default xinitrc will start a basic environment with Twm, xorg-xclock and Xterm (assuming that the necessary packages are installed). Therefore, to start a different window manager or desktop environment, first create a copy of the default xinitrc in your home directory:\n\n```\n$ cp /etc/X11/xinit/xinitrc ~/.xinitrc\n```\n\nThen edit the file and replace the default programs with desired commands. Remember that lines following a command using exec would be ignored. For example, to start xscreensaver in the background and then start openbox, use the following:\n\n```\n~/.xinitrc\n```\n\n```\n...\nxscreensaver &\nexec openbox-session\n```\n\nLong-running programs started before the window manager, such as a screensaver and wallpaper application, must either fork themselves or be run in the background by appending an & sign. Otherwise, the script would halt and wait for each program to exit before executing the window manager or desktop environment. Note that some programs should instead not be forked, to avoid race bugs, as is the case of xrdb. Prepending exec will replace the script process with the window manager process, so that X does not exit even if this process forks to the background.\n\n"
    },
    {
      "title": "xserverrc",
      "level": 3,
      "content": "The xserverrc file is a shell script responsible for starting up the X server. Both startx and xinit execute ~/.xserverrc if it exists, startx will use /etc/X11/xinit/xserverrc otherwise.\n\nSee Xserver(1) for a list of all command line options.\n\n"
    },
    {
      "title": "Passing virtual terminal number",
      "level": 4,
      "content": "In order to maintain an authenticated session with logind and to prevent bypassing the screen locker by switching terminals, Xorg has to be started on the same virtual terminal where the login occurred [1]. For this purpose, Xorg needs to be passed the number of the current virtual terminal.\n\nIf you are invoking startx, nothing more needs to be done â€“ it contains logic to compute and pass the virtual terminal number to Xorg.\n\nIn other cases, e.g. if you are running xinit, it is recommended to specify vt$XDG_VTNR in the ~/.xserverrc file:\n\n```\n~/.xserverrc\n```\n\n```\n#!/bin/sh\n\nexec /usr/bin/Xorg -nolisten tcp \"$@\" vt$XDG_VTNR\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "To run Xorg as a regular user, issue:\n\n```\n$ startx\n```\n\nOr if #xserverrc is configured:\n\n```\n$ xinit -- :1\n```\n\nYour window manager (or desktop environment) of choice should now start correctly.\n\nTo quit X, run your window manager's exit function (assuming it has one). If it lacks such functionality, run:\n\n```\n$ pkill -15 Xorg\n```\n\n```\n$ pkill -15 -t tty\"$XDG_VTNR\" Xorg\n```\n\nSee also signal(7).\n\n"
    },
    {
      "title": "Override xinitrc",
      "level": 3,
      "content": "If you have a working ~/.xinitrc but just want to try other window manager or desktop environment, you can run it by issuing startx followed by the path to the window manager, for example:\n\n```\n$ startx /usr/bin/i3\n```\n\nIf the binary takes arguments, they need to be quoted to be recognized as part of the first parameter of startx:\n\n```\n$ startx \"/usr/bin/application --key value\"\n```\n\nNote that the full path is required. You can also specify custom options for the #xserverrc script by appending them after the double dash -- sign:\n\n```\n$ startx /usr/bin/enlightenment -- -br +bs -dpi 96\n```\n\nSee also startx(1).\n\n"
    },
    {
      "title": "Autostart X at login",
      "level": 3,
      "content": "Make sure that startx is properly configured.\n\nPlace the following in your login shell initialization file (e.g. ~/.bash_profile for Bash or ~/.zprofile for Zsh):\n\n```\nif [ -z \"$DISPLAY\" ] && [ \"$XDG_VTNR\" = 1 ]; then\n  exec startx\nfi\n```\n\nYou can replace the -eq comparison with one like -le 3 (for vt1 to vt3) if you want to use graphical logins on more than one virtual terminal.\n\nAlternative conditions to detect the virtual terminal include \"$(tty)\" = \"/dev/tty1\", which does not allow comparison with -le, and \"$(fgconsole 2>/dev/null || echo -1)\" -eq 1, which does not work in serial consoles.\n\nThe exec command ensures that the user is logged out when the X server exits, crashes or is killed by an attacker. If you want to take the risk and remain logged in when the X session ends, remove exec.\n\nSee also Fish#Start X at login and Systemd/User#Automatic login into Xorg without display manager.\n\n"
    },
    {
      "title": "Switching between desktop environments/window managers",
      "level": 3,
      "content": "If you are frequently switching between different desktop environments or window managers, it is convenient to either use a display manager or expand ~/.xinitrc to make the switching possible.\n\nThe following example shows how to start a particular desktop environment or window manager with an argument:\n\n```\n~/.xinitrc\n```\n\n```\n...\n\n# Here Xfce is kept as default\nsession=${1:-xfce}\n\ncase $session in\n    i3|i3wm           ) exec i3;;\n    kde               ) exec startplasma-x11;;\n    xfce|xfce4        ) exec startxfce4;;\n    # No known session, try to run it as command\n    *                 ) exec $1;;\nesac\n```\n\nTo pass the argument session:\n\n```\n$ xinit session\n```\n\nor\n\n```\n$ startx ~/.xinitrc session\n```\n\n"
    },
    {
      "title": "Starting applications without a window manager",
      "level": 3,
      "content": "It is possible to start only specific applications without a window manager, although most likely this is only useful with a single application shown in full-screen mode. For example:\n\n```\n~/.xinitrc\n```\n\n```\n...\n\nexec chromium\n```\n\nAlternatively the binary can be called directly from the command prompt as described in #Override xinitrc.\n\nWith this method you need to set each application's window geometry through its own configuration files (if possible at all).\n\nSee also Display manager#Starting applications without a window manager.\n\n"
    },
    {
      "title": "Output redirection using startx",
      "level": 3,
      "content": "See Xorg#Session log redirection for details.\n\n"
    },
    {
      "title": "Running in a virtual server",
      "level": 3,
      "content": "Note: **This article or section is a candidate for moving to Xorg.** This article or section is a candidate for moving to Xorg.\n\nThis article or section is a candidate for moving to Xorg.\n\nUseful for running graphical applications:\n\n- Without showing their GUI.\n- On testcases.\n- Within a system that does not have xorg-server running.\n- While building in a clean chroot.\n\nInstall xorg-server-xvfb, then run xvfb-run command.\n\n"
    }
  ]
}