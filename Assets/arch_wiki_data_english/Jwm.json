{
  "title": "Jwm",
  "url": "https://wiki.archlinux.org/title/Jwm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Window manager\n\nJWM (Joe's Window Manager) is a lightweight window manager for Xorg written in C. It is under active development and maintained by Joe Wingbermuehle.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the jwmAUR package.\n\n"
    },
    {
      "title": "Starting",
      "level": 2,
      "content": "You can start a JWM session with a display manager. Alternatively, you can run jwm with xinit.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Configuration is done via a single XML file. There is native support for customizable panels and buttons, and a system tray dock. A sample configuration file is located at /etc/system.jwmrc which can be copied to the user configuration ~/.jwmrc:\n\n```\n$ cp -i /etc/system.jwmrc ~/.jwmrc\n```\n\nEdit this file to establish the environment. See JWM Configuration for a complete list of available tags, attributes and values.\n\n"
    },
    {
      "title": "Autostart",
      "level": 3,
      "content": "Add an StartupCommand section in your configuration file to execute one or more commands at startup. For example:\n\n```\n~/.jwmrc\n```\n\n```\n<StartupCommand>\nfeh --randomize --bg-fill ~/backgrounds/*\nxterm -geometry 100x30 &\nnumlockx\n</StartupCommand>\n```\n\n"
    },
    {
      "title": "Improve <Tasklist> contrast",
      "level": 3,
      "content": "Change the default <Tasklist> settings to match the improved contrast style of the default <MenuStyle> and active <WindowStyle>:\n\n```\n<TaskListStyle>\n    <ActiveForeground>black</ActiveForeground>\n    <ActiveBackground>gray90:gray70</ActiveBackground>\n</TaskListStyle>\n\n<TaskListStyle>\n    <ActiveForeground>white</ActiveForeground>\n    <ActiveBackground>#70849d:#2e3a67</ActiveBackground>\n</TaskListStyle>\n```\n\n"
    },
    {
      "title": "Logout and refresh",
      "level": 3,
      "content": "<Exit/> (Logout) is the menu command to cleanly log out of the current X server.\n\n<Restart/> (Refresh) is the menu command tag which reinitializes the configuration file and updates menus and keybindings accordingly.\n\n<Restart/> and <Exit/> can be bound to the Ctrl+Alt modified keys following the example syntax below:\n\n```\n<Key mask=\"CA\" key=\"r\">exec:jwm -restart</Key>\n<Key mask=\"CA\" key=\"e\">exec:jwm -exit</Key>\n```\n\n"
    },
    {
      "title": "Reboot and shutdown",
      "level": 4,
      "content": "The Restart and Poweroff menu options can use systemctl commands:\n\n```\n<Program label=\"Restart\">systemctl reboot</Program>\n<Program label=\"Poweroff\">systemctl poweroff</Program>\n```\n\nAlternatively, use <Key> to bind the commands to a chosen key.\n\nSee Allow users to shutdown#Using systemd-logind for additional information.\n\n"
    },
    {
      "title": "Conky",
      "level": 4,
      "content": "Conky can be run within the <StartupCommand> to provide the display of various data streams (e.g. battery life and AC adapter status for notebooks). xfdesktop may conflict with Conky; workarounds include:\n\n1. Review the Conky FAQ for workarounds in ~/.conkyrc\n1. <Group> Conky and specify the following <Option> tags in ~/.jwmrc:\n\n```\n<Group>\n    <Class>Conky</Class>\n    <Option>nolist</Option>\n    <Option>noborder</Option>\n    <Option>notitle</Option>\n    <Option>sticky</Option>\n</Group>\n```\n\n"
    },
    {
      "title": "Minimal font suggestions",
      "level": 3,
      "content": "```\n<WindowStyle>\n<Font>-*-fixed-*-r-*-*-10-*-*-*-*-*-*-*</Font>\n\n<TaskListStyle>\n<Font>-*-fixed-*-r-*-*-13-*-*-*-*-*-*-*</Font>\n\n<TrayStyle>\n<Font>-*-fixed-*-r-*-*-13-*-*-*-*-*-*-*</Font>\n```\n\n- See xfontsel(1) and the X Logical Font Description article for additional details and pattern descriptions.\n\n"
    },
    {
      "title": "Manual tiling support",
      "level": 3,
      "content": "Tiling support can be added to JWM with the Poor Man's Tiling Window Manager. Assuming manage.py is part of the local PATH, various tiling actions can be assigned to keys, for example:\n\n```\n<Key mask=\"H\" key=\"Up\">exec:manage.py swap</Key>\n<Key mask=\"H\" key=\"Down\">exec:manage.py cycle</Key>\n<Key mask=\"H\" key=\"Left\">exec:manage.py left</Key>\n<Key mask=\"H\" key=\"Right\">exec:manage.py right</Key>\n```\n\n"
    },
    {
      "title": "Additional troubleshooting",
      "level": 3,
      "content": "If X is not already running on tty1, Ctrl+Alt+F1 will allow you to review standard output errors and messages. See script(1) command for details on how to create a typescript of what is printed to the terminal.\n\n"
    },
    {
      "title": "All windows are transparent using picom",
      "level": 3,
      "content": "Adjust the window transparency in ~/.jwmrc:\n\n```\n<WindowStyle>\n  <Opacity>1.0</Opacity>\n</WindowStyle>\n```\n\n"
    },
    {
      "title": "Terminal windows do not fully maximize",
      "level": 3,
      "content": "Add a group with the iignore option to ~/.jwmrc, for example:\n\n```\n<Group>\n <Class>URxvt</Class>\n <Option>iignore</Option>\n</Group>\n```\n\n"
    },
    {
      "title": "Verify configuration changes",
      "level": 3,
      "content": "To check the JWM configuration and return syntax errors (including associated line numbers), if any, run:\n\n```\n$ jwm -p\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Joe's Window Manager\n- PuppyLinux JoesWindowManager\n- Puppy Linux JWM themes exchange\n\n"
    }
  ]
}