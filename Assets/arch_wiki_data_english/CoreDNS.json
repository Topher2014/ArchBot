{
  "title": "CoreDNS",
  "url": "https://wiki.archlinux.org/title/CoreDNS",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Domain name resolution\n\nCoreDNS is a DNS server/forwarder, written in Go, that chains plugins. Each plugin performs a (DNS) function making it very flexible. If some functionality is not provided out of the box you can add it by writing a plugin.\n\nCoreDNS can listen for DNS requests coming in over UDP/TCP (Do53), DNS over TLS (DoT, RFC 7858) and DNS over HTTPS (DoH, RFC 8484).\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the corednsAUR, or coredns-binAUR, or coredns-gitAUR package.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "See the documentation on configuration.\n\ncoredns.service will look for /etc/coredns/Corefile and fail to start if the file is missing. After creating the configuration file in that location, Start/enable coredns.service.\n\nBelow is an example configuration with useful plugins. CoreDNS will start on port 53, serve DNS to the listed subnets and forward everything to Wikimedia DNS servers. You can use drill command to verify that CoreDNS is working locally: drill archlinux.org @127.0.0.1.\n\n```\n/etc/coredns/Corefile\n```\n\n```\n.:53 {\n       bind 127.0.0.1 ::1 192.168.1.254 192.0.0.1 \n       bufsize 1232 \n       acl { \n               allow net 192.168.0.0/16 172.16.0.0/12 10.0.0.0/8 192.0.0.0/24\n               block\n       }\n       hosts { \n               reload 0\n               fallthrough\n       }\n       loadbalance\n       forward . tls://185.71.138.138 tls://2001:67c:930::1 {\n               tls_servername wikimedia-dns.org\n       }\n       cache {\n               success 4096\n               denial  1024\n               prefetch 512\n       }\n       prometheus :9153\n       errors\n       log\n}\n```\n\n"
    },
    {
      "title": "Forwarding",
      "level": 3,
      "content": "To forward queries to a different resolver, use the forward plugin. It supports regular DNS and DNS over TLS. For DNS over TLS, use the tls:// protocol and specify the server hostname with tls_servername.\n\nFor example, to forward everything using DNS over TLS to Wikimedia DNS, edit /etc/coredns/Corefile as follows:\n\n```\n/etc/coredns/Corefile\n```\n\n```\n.:53 {\n    bind 127.0.0.1 ::1\n    forward . tls://185.71.138.138 tls://2001:67c:930::1 {\n        tls_servername wikimedia-dns.org\n    }\n}\n```\n\nConfigure 127.0.0.1 and ::1 as your nameserver; see Domain name resolution. Restart coredns.service after that.\n\nRun journalctl -u coredns as root to verify things are working by default. The resolver will now listen on port 53.\n\nIf the resolver should be accessible from other hosts, configure other network interfaces or IP addresses in /etc/coredns/Corefile with bind. Also the acl plugin can be used to block ranges that should be use the server for recursion. Refer to CoreDNS plugin documentation for more information.\n\nIf the resolver should respect entries from the /etc/hosts file, add a hosts line to /etc/coredns/Corefile. See coredns-hosts(7).\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- coredns(1)\n- CoreDNS manual\n- CoreDNS plugins\n- CoreDNS github\n\n"
    }
  ]
}