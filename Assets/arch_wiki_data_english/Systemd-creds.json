{
  "title": "Systemd-creds",
  "url": "https://wiki.archlinux.org/title/Systemd-creds",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "systemd-creds is a utility and service provided by systemd, designed to securely store and retrieve credentials used by systemd units. It aims to simplify the management of sensitive information, such as usernames, passwords, API keys, and other authentication data, required by various services and applications.\n\nSee https://systemd.io/CREDENTIALS/ and systemd-creds(1) for more information.\n\n"
    },
    {
      "title": "Credential encryption",
      "level": 2,
      "content": "Credentials may optionally be encrypted and authenticated, either with a key derived from a local TPM2 chip, or one stored in /var/, or both (the default) if available. To check if your system uses TPM2 encryption or only the key stored in /var/, run\n\n```\n$ systemd-analyze has-tpm2\n```\n\n```\nyes\n+firmware\n+driver\n+system\n+subsystem\n```\n\nTo encrypt a secret stored in plaintext.txt, run\n\n```\n# systemd-creds --name=foobar encrypt plaintext.txt ciphertext.cred\n```\n\nEncrypted credentials carry the intended name in them, so they cannot be mispurposed. If you omit --name, then the filename will be used as credential name.\n\nYou can check that encryption was successful with\n\n```\n# shred -u plaintext.txt\n# systemd-run -P --wait -p LoadCredentialEncrypted=foobar:$(pwd)/ciphertext.cred systemd-creds cat foobar\n```\n\nWithout using --name above, the correct command would be\n\n```\n# systemd-run -P --wait -p LoadCredentialEncrypted=ciphertext.cred:$(pwd)/ciphertext.cred systemd-creds cat ciphertext.cred\n```\n\nAlternatively, you can use systemd-ask-password to provide the secret without first writing it to disk. The -p switch allows outputting a credential in a format ready to be included in a service file:\n\n```\n# systemd-ask-password -n | systemd-creds encrypt --name=mysql-password -p - -\nüîê Password: ***************         \nSetCredentialEncrypted=mysql-password: \\\n       k6iUCUh0RJCQyvL8k8q1UyAAAAABAAAADAAAABAAAAD42X4T5h86ynMHG5MAAAAAgAAAA \\\n       AAAAAALACMA8AAAACAAAAAAngAgws4cwpkrOvpxVf4/GSyOYCoQ4dmPs3Vcfg3D0eH/Ov \\\n       cAEC/U9JTyeHgktYBDl8U5jOq/NqFX3IPc24EX7aeTevsL6OKwlTDcF04W1M6eodqngRo \\\n       1JfRqHWnSfVHHYVXgMjIkWT4AcC0OoqAzQobK5e5G1zjTPygiG/ewGttY9sueKCL/INUu \\\n       n1e6/QB6D9T0x9Sl18CeBtoASepCAE4ACAALAAAAEgAgY9RHOefBR+mMgV/Frr+UzQX1S \\\n       IsLFItIbfB6Ep76It0AEAAgKH2Tduip205Dw0GVkME+yvOUNYVhnSHYqWHQoxelKrdj1E \\\n       c558FH6YyBX8Wuv5TNBfVIiwsUi0ht8HoSnvoi3QAAAAA3WzuXTYG2OFX9wFo740b3YjE \\\n       ZtiCWakoAOxzX+D/vIFyB3INROxpfXUCV7LY4eRITI9PJZiE6lGn4kjZBnbUf47yo1WDG \\\n       Wg==\n```\n\nEdit the service file to include the relevant credential\n\n"
    },
    {
      "title": "User credential encryption",
      "level": 2,
      "content": "The systemd-creds utility can also be used by a regular user.\n\n```\n$ echo -n hunter2 | systemd-creds --user encrypt - ciphertext.cred\n$ systemd-creds --user decrypt ciphertext.cred\nhunter2\n$ cat <(systemd-creds --user decrypt ciphertext.cred)\nhunter2$\n```\n\nAs mentioned in systemd-creds(1), the user's scope and the /etc/machine-id are used to encrypt the credential. For example, a root user may decrypt it, but only matching the user scope:\n\n```\n$ systemd-creds --uid anotheruser decrypt ciphertext.cred\nFailed to decrypt: io.systemd.InteractiveAuthenticationRequired\n# systemd-creds decrypt ciphertext.cred\nEncrypted file is scoped to a user, but no user selected.\n# systemd-creds --uid user decrypt ciphertext.cred\nhunter2\n```\n\n"
    }
  ]
}