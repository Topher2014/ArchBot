{
  "title": "Mc",
  "url": "https://wiki.archlinux.org/title/Mc",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- File manager functionality\n- lf\n- nnn\n- ranger\n- Vifm\n\nMidnight Commander is a visual shell for Unix-like systems. It is an orthodox (two-pane) file manager, supporting standard file operations, virtual filesystems, panelizing of external commands, and user menus. It also includes an internal viewer mcview(1), editor mcedit(1), and visual diff tool mcdiff(1).\n\nAs it is based on versatile text interfaces — ncurses or S-Lang — it works on a regular console, inside an X Window terminal, over Secure Shell (SSH) connections, and all kinds of remote shells.\n\nThe documentation[dead link 2025-03-15 ⓘ] is still in draft state though.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the mc package, or mc-gitAUR for the development version.\n\n"
    },
    {
      "title": "Skins",
      "level": 3,
      "content": "Midnight Commander comes with multiple skins by default. You can set the skin in Options > Appearance.\n\nAdditional third-party skins can be installed separately:\n\n- mc-solarized-git — Solarized color scheme for Midnight Commander.\n\n- mc-skin-modarin-debian — Thin versions of the modarin theme.\n\nSee also mc(1) § Skins.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Most of the Midnight Commander settings can be changed from the menus. However, a small number of settings such as clipboard commands, codeset detection and parameters for external editors can only be changed from ~/.config/mc/ini. See mc(1) § Special Settings and following for a complete description of options.\n\nAdditionally, the following environment variables are respected: MC_SKIN, MC_KEYMAP, MC_XDG_OPEN, MC_COLOR_TABLE, MC_DATADIR, MC_HOME, KEYBOARD_KEY_TIMEOUT_US, PAGER, EDITOR, VIEWER.\n\nSee also mc(1) § FILES.\n\n"
    },
    {
      "title": "extfs",
      "level": 3,
      "content": "extfs allows to easily create new virtual filesystems for Midnight Commander. See /usr/lib/mc/extfs.d/README for details.\n\n"
    },
    {
      "title": "Interface",
      "level": 3,
      "content": "In prominent view are two vertical panes. Either can list directory contents, show a plain text preview, file details, or a directory tree (see mc(1) § Directory Tree). File operations are accessible through the function keys or the mouse. More options are visible in a dynamic user menu (F2) and option menu (F9). Keys above F12 (F13 up to F20) are accessible through Shift. Menu and dialog options have one letter highlighted - pressing this letter (or Alt+Letter inside a text entry) directly activates the respective option.\n\nBelow, a command line is visible, connected to a subshell. This shell is generally of the same type Midnight Commander was launched from, and may be switched to at will (Ctrl+o), see mc(1) § The subshell support. On this command line, cd is interpreted by Midnight Commander, and not passed to the shell for execution. As such, special completion (such as from Zsh) is unavailable. Files in the pane interact with the command line; for example, Alt+Enter copies the name of a (selected) file to the command line.\n\nKeybindings are generally similar to GNU Emacs. A more strict emacs keymap can be enabled (see mc(1) § Redefine hotkey bindings). New users may however use Lynx-like (arrow) keybindings (enabled in Options > Panel options) and mouse clicks for navigation.\n\nMouse support for Linux virtual consoles can be enabled with General purpose mouse.\n\n"
    },
    {
      "title": "Modules",
      "level": 3,
      "content": "These can be called via the Midnight Commander interface (with Use internal enabled in Options > Configuration), or separately as symbolic links to the mc binary.\n\n- mcedit(1) — Text and binary file editor, with regex replace, syntax highlighting, macros and shell piping\n- mcview(1) — Text and hex viewer with goto marks and regex search\n- mcdiff(1) — Compares and edits two files in-place (Ctrl+x d)\n\nPer Midnight Commander instance, multiple modules can be run concurrently and you can switch between them using Alt+`, see mc(1) § Screen selector. External editors may be used instead, and parameters configured accordingly.\n\n"
    },
    {
      "title": "Start from the menu",
      "level": 3,
      "content": "Midnight Commander can be run from a menu with the correct Desktop entry. For example:\n\n```\n[Desktop Entry]\nType=Application\nVersion=1.0\nName=Midnight Commander\nComment=Visual file manager\nExec=mc\nIcon=folder\nMimeType=inode/directory\nTerminal=true\nCategories=Utility;\n```\n\n"
    },
    {
      "title": "Trash support",
      "level": 3,
      "content": "Midnight Commander does not support a trash can by default.\n\n"
    },
    {
      "title": "Using libtrash",
      "level": 4,
      "content": "Install the libtrashAUR package, and create an mc alias in the initialization file of your shell (e.g., ~/.bashrc or ~/.zshrc):\n\n```\nalias mc='LD_PRELOAD=/usr/lib/libtrash.so mc'\n```\n\nTo apply the changes, reopen your shell session or source the shell initialization file.\n\nDefault settings are defined in /etc/libtrash.conf.sys; the default trash directory is ~/Trash/. You can overwrite these settings per-user in ~/.libtrash, for example:\n\n```\n~/.libtrash\n```\n\n```\nTRASH_CAN = .Trash\nINTERCEPT_RENAME = NO\nIGNORE_EXTENSIONS= o;exe;com\nUNCOVER_DIRS=/dev\n```\n\nNow files deleted by Midnight Commander will be moved to the ~/.Trash/ directory.\n\n- Applications launched from Midnight Commander inherit LD_PRELOAD, which may cause problems with some applications. [1]\n- With GLOBAL_PROTECTION = YES set (default), files deleted outside the home directory are moved to the trash, even if they are on a different partition. Depending on the file, this may cause a significant delay.\n\nSee also this thread on the GNOME mailing list.\n\n"
    },
    {
      "title": "mcedit syntax highlighting",
      "level": 3,
      "content": "The mcedit(1) § SYNTAX HIGHLIGHTING section lacks some essential information from the corresponding section of man 1 cooledit. Read both mcedit and cooledit manual pages, or apply the patch.\n\n"
    },
    {
      "title": "Exit to the current directory",
      "level": 3,
      "content": "On exit, the shell returns to the directory Midnight Commander was started from, instead of the last active directory. A wrapper script is included, which can be used by adding this line to your ~/.bashrc or ~/.zshrc:\n\n```\nalias mc=\". /usr/lib/mc/mc-wrapper.sh\"\n```\n\nFor the fish shell use this wrapper: http://mc-wrapper.fish. Place it to ~/.config/fish/functions/mc.fish or execute the content inside fish shell and than run\n\n```\nfuncsave mc\n```\n\nAnother simple workaround is to use the subshell (Ctrl+o). This may however interfere with other terminal applications.\n\n"
    },
    {
      "title": "Garbled screen",
      "level": 3,
      "content": "Press Ctrl+l to redraw the display. This only redraws, but does not refresh (Ctrl+r) the file list.\n\n"
    },
    {
      "title": "Opening files",
      "level": 3,
      "content": "Midnight Commander reads the MC_XDG_OPEN environment variable to open files, which defaults to xdg-open when unset.\n\nIf Midnight Commander is blocked until the resulting process ends, or the process exits together with mc, use nohup &:\n\n```\n~/bin/nohup-open\n```\n\n```\n#!/bin/bash\nnohup xdg-open \"$@\" &\n```\n\nAnd set MC_XDG_OPEN accordingly:\n\n```\n$ export MC_XDG_OPEN=~/bin/nohup-open\n```\n\n"
    },
    {
      "title": "Find file shows no results",
      "level": 3,
      "content": "If the Find file dialog (accessible with Alt+?, or Esc+?, or the F9 (menu) > Command > Find file) shows no results, check the current directory for symbolic links. Find file does not follow symbolic links, so use bind mounts (see mount(8)) instead, or the External panelize command.\n\n"
    },
    {
      "title": "Broken shortcuts",
      "level": 3,
      "content": "With certain terminal definitions such as screen-256color or xterm-termite, shortcuts such as Shift+F6 may not work or act as different combinations. To remedy this, assign the terminal sequences manually with the Learn keys dialog.\n\nSettings will be stored in the ~/.config/mc/ini file, for example for screen-256color:\n\n```\n[terminal:screen-256color]\nf1=\\\\eOP\nf2=\\\\eOQ\nf3=\\\\eOR\nf4=\\\\eOS\nf5=\\\\e[15~\nf6=\\\\e[17~\nf7=\\\\e[18~\nf8=\\\\e[19~\nf9=\\\\e[20~\nf10=\\\\e[21~\nf11=\\\\e[23~\nf12=\\\\e[24~\nf13=\\\\e[1\\;2R\nf14=\\\\e[1\\;2S\nf15=\\\\e[15\\;2~\nf16=\\\\e[17\\;2~\nf17=\\\\e[18\\;2~\nf18=\\\\e[19\\;2~\nf19=\\\\e[20\\;2~\nf20=\\\\e[21\\;2~\ncomplete=\\\\e^i\nbacktab=\\\\e[Z\nbackspace=^?\n```\n\n"
    },
    {
      "title": "Xterm window title customization",
      "level": 3,
      "content": "Xterm window title format is hardcoded to mc [username@hostname]:current/path, also see the corresponding ticket.\n\nmc(1) § Screen selector (Screen list) file manager (Panels:) entry format is hardcoded too.\n\nmcdiff(1), mcedit(1) and mcview(1) do not change Xterm window title at all.\n\n"
    }
  ]
}