{
  "title": "Paplay",
  "url": "https://wiki.archlinux.org/title/Paplay",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- PulseAudio\n- PulseAudio/Examples\n- PulseAudio/Troubleshooting\n- FFmpeg\n\npacat(1) is a simple tool for playing back or capturing raw or encoded audio files on a PulseAudio sound server. It understands all audio file formats supported by libsndfile.\n\nIt is also present under the aliases paplay, parecord, parec, and pamon.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "pacat is installed by default with PulseAudio, as part of the libpulse package.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "See the pacat(1) man page for information on pacat's flags.\n\n- paplay is equivalent to pacat --file-format\n- parecord is equivalent to pacat -r --file-format\n- parec is equivalent to pacat -r --raw\n- pamon is equivalent to pacat --raw\n- When invoking pacat directly, the defaults are equivalent to pacat -p --raw.\n\nTo summarize, parecord and parec both record by default, whereas pacat and paplay play back by default. parecord and paplay both deal with encoded audio, whereas parec and pacat work on raw PCM (and thus can be used in pipelines).\n\nNote that a single instance of pacat cannot record and play back at the same time; for that, see #Playing back an audio input.\n\n"
    },
    {
      "title": "Select a sink or source",
      "level": 3,
      "content": "Configuring which sink to play to, or which source to record, can be done using a PulseAudio front-end, or programmatically using the -d option.\n\nTo list the available sinks:\n\n```\n$ pactl list sinks short\n```\n\nTo list the available sources:\n\n```\n$ pactl list sources short\n```\n\nRemoving the short keyword produces detailed output about each sink/source.\n\nThere are two ways to refer to a given sink/source: either by name, or by ID. Taking the following source list as an example:\n\n```\n$ pactl list sources short\n```\n\n```\n0\talsa_output.pci-0000_00_1f.3.analog-stereo.monitor\tmodule-alsa-card.c\ts16le 2ch 44100Hz\tRUNNING\n1\talsa_input.pci-0000_00_1f.3.analog-stereo\tmodule-alsa-card.c\ts16le 2ch 44100Hz\tRUNNING\n2\talsa_output.hw_0_7.monitor\tmodule-alsa-sink.c\ts16le 2ch 48000Hz\tRUNNING\n3\trtp.monitor\tmodule-null-sink.c\ts16le 2ch 44100Hz\tRUNNING\n```\n\nThen the following two lines produce the same result.\n\n```\n$ parecord -d alsa_input.pci-0000_00_1f.3.analog-stereo speech.flac\n$ parecord -d 1 speech.flac\n```\n\n"
    },
    {
      "title": "Low-latency playback",
      "level": 3,
      "content": "By default, pacat lets the PulseAudio server pick the latency, \"usually relatively high for power saving reasons\". If this is not desirable, for example for #Playing back an audio input, one can pass the latency (in bytes) or latency-msec option to pacat. For example:\n\n```\n$ pacat -d 0 --latency-msec 1\n```\n\nNote that this usually only needs to be done when playing back, not when recording.\n\n"
    },
    {
      "title": "Playing back an audio input",
      "level": 3,
      "content": "If you are recording an external audio source (for example via a jack male-male cable), you may want to have feedback on what you are recording. This can be done by using parec to capture the input, and piping it into pacat to play it back.\n\n```\n$ parec | pacat\n```\n\nIt may be practical to #Select a sink or source directly, for example:\n\n```\n$ parec -d 0 | pacat -d 1\n```\n\nIt is possible to record the sound at the same time by adding tee to the pipeline:\n\n```\n$ parec | tee speech.raw | pacat\n```\n\nThough you may want to launch a separate instance of parec or parecord instead.\n\n"
    },
    {
      "title": "Recording from multiple sources",
      "level": 3,
      "content": "It is possible to record from both sinks and sources in a single command by using the -d argument several times. For instance, recording a video conference including the speech of your guests (sink) and your own voice (source) might look like\n\n```\n$ parec -d alsa_input.pci-0000_00_1f.3.analog-stereo -d alsa_output.pci-0000_00_1f.3.analog-stereo --file-format=wav (date +%F).wav\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- List of applications/Multimedia#Audio editors\n\n"
    }
  ]
}