{
  "title": "Bubblejail",
  "url": "https://wiki.archlinux.org/title/Bubblejail",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Bubblewrap\n- Security\n\nBubblejail is a Bubblewrap based sandboxing utility.\n\nBubblejail has a resource oriented permission model. For example, x11 is a resource that can be added to sandbox. This will give sandbox access to X11 display server.\n\nBubblejail also uses seccomp and D-Bus filtering to enhance security and permission model.\n\nBubblejail also has a graphical interface that allows creating and configuring sandboxes.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install bubblejailAUR or bubblejail-gitAUR.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Bubblejail sandboxes are separated in to instances. Each instance is a separate home directory and a permissions configuration.\n\nEach instance usually sandboxes one application.\n\n"
    },
    {
      "title": "Creating Instances",
      "level": 3,
      "content": "New instances are usually created from an available profiles. The profile is initial set of permissions and the desktop entry used. If a specific application is missing the profile a generic profile or empty profile can be used and tweaked after creation.\n\n"
    },
    {
      "title": "Using graphical interface",
      "level": 4,
      "content": "Run the Bubblejail Configuration application. On the first screen at the bottom there will be Create Instance button.\n\n"
    },
    {
      "title": "Using command line",
      "level": 4,
      "content": "For example, creating a Firefox instance:\n\n```\n$ bubblejail create --profile firefox instance_name\n```\n\n"
    },
    {
      "title": "Using desktop entry",
      "level": 4,
      "content": "When creating an instance a desktop entry will be generated unless --no-desktop-entry option was used.\n\nDesktop entry would have the instance_name bubble name and can be launched from the desktop environment.\n\n"
    },
    {
      "title": "Using command line",
      "level": 4,
      "content": "Once created the instance can be run with run subcommand:\n\n```\n$ bubblejail run instance_name args\n```\n\nIf no arguments are passed when the default arguments will be used based on the profile used.\n\nIf args are passed when those arguments will be executed inside the sandbox. First argument should be the binary name and following arguments will be passed to this binary.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Once the instance has been created its permissions and resources can be modified. For modified permissions to take effect the sandbox needs to be restarted.\n\nThe profile used when creating sandbox only affect the initial set of permissions. However, removing certain permissions might prevent targeted application from working correctly.\n\n"
    },
    {
      "title": "Using graphical interface",
      "level": 3,
      "content": "Run the Bubblejail Configuration application. On the first screen click on the name of the sandbox you want to modify. This will bring up the list of all available permissions and a Save button.\n\n"
    },
    {
      "title": "Using command line",
      "level": 3,
      "content": "Bubblejail provides edit command that will open the configuration file in the editor defined EDITOR Environment variables.\n\n```\n$ bubblejail edit instance_name\n```\n\nBubblejail uses TOML for its configuration. The defined dictionaries gives permission for a specific resource and key value pairs inside dictionaries will set a specific resource settings.\n\nFor example:\n\n```\n[x11]\n\n[home_share]\nhome_paths = [ \"Downloads\",]\n```\n\nThis config defines two resources available to sandbox: the x11 windowing system and shares the Downloads directory in the home folder.\n\nThe available services and options are documented in bubblejail.services man page.\n\n"
    },
    {
      "title": "Running terminal inside sandbox",
      "level": 3,
      "content": "Using run command a terminal can be launched inside already running sandbox. The terminal can be used to debug the sandbox.\n\nIt is recommended to use the terminal application that requires minimal amount of permissions such as Alacritty which only requires access to windowing system. (either x11 or wayland)\n\n```\n$ bubblejail run instance_name alacritty\n```\n\n"
    },
    {
      "title": "Re-using profile for similar applications",
      "level": 3,
      "content": "If an application is missing a profile but there is a related software with existing profile that profile can be used.\n\nFor example, chromium profile can be used on any chromium derived browser such as qutebrowser.\n\nFirst, generate the instance using chromium profile but disable the desktop entry creation.\n\n```\n$ bubblejail create --no-desktop-entry --profile chromium qutebrowser\n```\n\nNow a desktop entry can be created from the qutebrowser's desktop entry.\n\n```\n$ bubblejail generate-desktop-entry --desktop-entry /usr/share/applications/org.qutebrowser.qutebrowser.desktop qutebrowser\n```\n\nNow the sandboxed qutebrowser can be launched with the qutebrowser bubble desktop entry.\n\n"
    },
    {
      "title": "\"Instance already running\" error",
      "level": 3,
      "content": "It can happen sometimes, that the process started in the sandbox instance has ended, but Bubblejail does not recognize this. This makes it impossible to run the sandbox instance again. Bubblejail quits with an \"Instance already running\" error.\n\nTo fix this you can delete the contents of the run directory of the failed sandbox instance. The directories for all jails are located at /run/user/UID/bubblejail/instance_name.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Bubblejail home page\n\n"
    }
  ]
}