{
  "title": "Redshift",
  "url": "https://wiki.archlinux.org/title/Redshift",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "From the Redshift project web page:\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the redshift package. Alternatively, install the redshift-minimalAUR package, for a version with minimal dependencies.\n\n"
    },
    {
      "title": "Front ends",
      "level": 3,
      "content": "The redshift-gtk command comes with the redshift package and provides a system tray icon for controlling Redshift. See optional dependencies.\n\nAlternatives are redshift-qtAUR, redshiftconfAUR or plasma5-applets-redshift-control-gitAUR[broken link: package not found].\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Redshift will at least need your location to start (unless -O is used), meaning the latitude and longitude of your location. Redshift employs several routines for obtaining your location. If none of them works (e.g. none of the used helper programs is installed), you need to enter your location manually.\n\n"
    },
    {
      "title": "Quick start",
      "level": 3,
      "content": "To just get it up and running with a basic setup, issue:\n\n```\n$ redshift -l LATITUDE:LONGITUDE\n```\n\nwhere LATITUDE is the latitude and LONGITUDE is the longitude of your location.\n\nTo instantly adjust the color temperature of your screen use:\n\n```\n$ redshift -P -O TEMPERATURE\n```\n\nwhere TEMPERATURE is the desired color temperature (between 1000 and 25000).\n\n"
    },
    {
      "title": "Autostart",
      "level": 3,
      "content": "There are several options to have Redshift automatically started:\n\n- By right-clicking the system tray icon and selecting Autostart when redshift-gtk or plasma5-applets-redshift-control is already launched.\n- By placing a Redshift desktop entry in ~/.config/autostart/ or by adding redshift to your window manager or desktop environment's autostarting method.\n- By using the user units provided: redshift.service and redshift-gtk.service. Activate only one of them depending on whether or not you want the system tray icon.\n\n- The Redshift service files contain Restart=always so they will restart infinitely. See systemd.service(5).\n- When using a systemd user service, Xorg must be started before execution of the service, which is not the case without a display manager. Otherwise you will get RANDR Query Version' returned error -1 and Initialization of randr failed. This is already accounted for in the systemd/User method above, which contains After=display-manager.service.\n\n"
    },
    {
      "title": "Toggle",
      "level": 3,
      "content": "Redshift will continously update the color temperature at regular intervals. One shot mode can be selected if you only want to do one adjustment. The color adjustments done by Redshift can be temporarily toggled on and off by sending it the USR1 signal:\n\n```\n$ pkill -USR1 redshift\n```\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Redshift reads the configuration file ~/.config/redshift/redshift.conf [2] if it exists. However, Redshift does not create that configuration file, so you may want to create it manually. See redshift.conf.sample.\n\n"
    },
    {
      "title": "Specify location manually",
      "level": 3,
      "content": "Redshift calculates the sunrise and sunset times based on geographic coordinates. It can be specified manually by using the manual location-provider, e.g. for Paris:\n\n```\n~/.config/redshift/redshift.conf\n```\n\n```\n[redshift]\n...\nlocation-provider=manual\n...\n[manual]\nlat=48.864716\nlon=2.349014\n```\n\n"
    },
    {
      "title": "Automatic location based on GeoClue",
      "level": 3,
      "content": "Redshift uses the geoclue2 location-provider by default. It needs a GeoClue agent running in the background. It is supposed to work without further configuration, but if you experience problems, see #Unable to connect to GeoClue.\n\n"
    },
    {
      "title": "Automatic location based on GPSD",
      "level": 3,
      "content": "You can also use gpsd to automatically determine your GPS location and use it as an input for Redshift. Create the following script and pass $lat and $lon to redshift -l $lat:$lon:\n\n```\n#!/bin/bash\ndate\n#gpsdata=$( gpspipe -w -n 10 |   grep -m 1 lon )\ngpsdata=$( gpspipe -w | grep -m 1 TPV )\nlat=$( echo \"$gpsdata\"  | jsawk 'return this.lat' )\nlon=$( echo \"$gpsdata\"  | jsawk 'return this.lon' )\nalt=$( echo \"$gpsdata\"  | jsawk 'return this.alt' )\ndt=$( echo \"$gpsdata\" | jsawk 'return this.time' )\necho \"$dt\"\necho \"You are here: $lat, $lon at $alt\"\n```\n\nFor more information, see this forums thread.\n\n"
    },
    {
      "title": "Use real screen brightness",
      "level": 3,
      "content": "Redshift has a brightness adjustment setting, but it does not work the way most people might expect. In fact it is a fake brightness adjustment obtained by manipulating the gamma ramps, which means that it does not reduce the backlight of the screen. [3]\n\nChanging screen backlight is possible with redshift hooks and acpilightAUR, but please see Backlight#xbacklight as there are some limitations and you may have to find another method of controlling the backlight depending on your hardware.\n\nYou need to create a file in ~/.config/redshift/hooks and make it executable. You can use and edit the following example:\n\n```\n~/.config/redshift/hooks/brightness.sh\n```\n\n```\n#!/bin/sh\n# Set brightness via xbrightness when redshift status changes\n\n# Set brightness values for each status.\n# Range from 1 to 100 is valid\nbrightness_day=85\nbrightness_transition=50\nbrightness_night=30\n# Set fps for smoooooth transition\nfps=1000\n# Adjust this grep to filter only the backlights you want to adjust\nbacklights=($(xbacklight -list | grep ddcci*))\n\nset_brightness() {\n\tfor backlight in \"${backlights[@]}\"\n\tdo\n\t\txbacklight -set $1 -fps $fps -ctrl $backlight &\n\tdone\n}\n\nif [ \"$1\" = period-changed ]; then\n\tcase $3 in\n\t\tnight)\n\t\t\tset_brightness $brightness_night \n\t\t\t;;\n\t\ttransition)\n\t\t\tset_brightness $brightness_transition\n\t\t\t;;\n\t\tdaytime)\n\t\t\tset_brightness $brightness_day\n\t\t\t;;\n\tesac\nfi\n```\n\nMake it executable and restart the redshift.service to apply changes.\n\nCheck the service status as it should not contain the following message:\n\n```\nredshift[..]: No outputs have backlight property\n```\n\n"
    },
    {
      "title": "Unable to connect to GeoClue",
      "level": 3,
      "content": "If running $ redshift and you are getting:\n\n```\nUnable to obtain GeoClue client path: Timeout was reached.\n```\n\nThen make sure that a GeoClue agent is running. GNOME Shell provides an agent itself. For other desktop environments, a demo agent (/usr/lib/geoclue-2.0/demos/agent) is autostarted. You can check if GeoClue works properly by checking the output of the /usr/lib/geoclue-2.0/demos/where-am-i command.\n\nIf you are using a desktop environment that does not support XDG Autostart, then you have to start the demo agent manually, or you can create a systemd unit file with the following config:\n\n```\n~/.config/systemd/user/geoclue-agent.service\n```\n\n```\n[Unit]\nDescription=redshift needs to get a (geo)clue\n\n[Service]\nExecStart=/usr/lib/geoclue-2.0/demos/agent\n\n[Install]\nWantedBy=default.target\n```\n\nThen start/enable the geoclue-agent.service user unit.\n\n"
    },
    {
      "title": "Screen 1 could not be found",
      "level": 3,
      "content": "Locate configuration-file \"redshift.conf\" in your distribution and change \"screen 1\" to \"screen 0\".\n\n"
    },
    {
      "title": "Left/right clicking the tray icon does not work",
      "level": 3,
      "content": "Install libappindicator-gtk3. See redshift issue 363 and FS#49971.\n\n"
    },
    {
      "title": "Redshift makes the screen quickly flicker between the set color value of the screen and the default color value",
      "level": 3,
      "content": "Make sure there are not multiple instances of redshift running.\n\n"
    },
    {
      "title": "Redshift works fine when invoked as a command but fails when run as a systemd service",
      "level": 3,
      "content": "The systemd unit has a line in the redshift.service file that makes the service wait until the display-manager.service unit is started by a display manager before the unit will invoke redshift. If you do not use a display manager, edit the redshift.service user service and delete the After=display-manager.service line. Run a daemon-reload and the service should initialize properly.\n\n"
    },
    {
      "title": "Redshift-gtk service causes core-dumping",
      "level": 3,
      "content": "Refer to the previous problem and to [4].\n\n"
    },
    {
      "title": "Redshift does not appear in system tray",
      "level": 3,
      "content": "If running the $ redshift-gtk command does not start in the system tray, but instead you get the following output\n\n```\n$ redshift-gtk\n```\n\n```\nTraceback (most recent call last):\n  File \"/usr/bin/redshift-gtk\", line 26, in <module>\n    from redshift_gtk.statusicon import run\n  File \"/usr/lib/python3.8/site-packages/redshift_gtk/statusicon.py\", line 31, in <module>\n    gi.require_version('Gtk', '3.0')\nAttributeError: module 'gi' has no attribute 'require_version'\n```\n\nyou will need to install python-gobject.\n\n"
    },
    {
      "title": "Redshift temporarily resets using some wine applications that reset gamma values",
      "level": 3,
      "content": "Note: **This article or section is being considered for removal.** This article or section is being considered for removal.\n\nThis article or section is being considered for removal.\n\nIf you notice that using some wine applications, redshift seems to reset temporarily upon launch, or adjusting settings, or etc, then there is a useful registry key that seems to alleviate this. See [5] and [6]. Set or create this string value using the registry editor, or import/set it otherwise:\n\n```\nHKEY_CURRENT_USER\\Software\\Wine\\X11 Driver\n```\n\n```\nUseXVidMode=\"N\"\n```\n\n"
    },
    {
      "title": "Redshift turns the screen green when resolution is over 1080p while using Nvidia drivers",
      "level": 3,
      "content": "This is a bug with the nvidia drivers. A fix for this is to make the following edit:\n\n```\n/etc/X11/xorg.conf.d/20-nvidia.conf\n```\n\n```\nSection \"Device\"\n    ...\n    Option         \"UseNvKmsCompositionPipeline\" \"false\"\n    ...\nEndSection\n```\n\nFor more information, see redshift issue 587 and redshift issue 720.\n\n"
    },
    {
      "title": "Redshift does not support hotkey for toggling",
      "level": 3,
      "content": "A workaround is to create a custom hotkey in your desktop environment calling the command pkill -USR1 '^redshift$'.\n\nFor more information, see [7].\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Redshift website\n- Redshift on GitHub\n- Wikipedia:Redshift (software)\n- Similar software: redshift-schedulerAUR, blugonAUR\n\n"
    }
  ]
}