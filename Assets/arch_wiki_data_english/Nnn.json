{
  "title": "Nnn",
  "url": "https://wiki.archlinux.org/title/Nnn",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- File manager functionality\n- lf\n- Midnight Commander\n- ranger\n- Vifm\n\nnnn (also stylized as nÂ³) is a portable terminal file manager written in C. It is easily extensible via its flat text plugin system where you can add your own language-agnostic scripts alongside already available plugins, including a (neo)vim plugin.\n\nnnn features native archiving/decompression to and from commonly installed formats such as xz, disk usage analysis and a fuzzy app launcher, a batch file renamer and a file picker through its plugin architecture. nnn supports instant search-as-you-type with regex (or simple string) filters and a navigate-as-you-type mode for continuous navigation in filter mode with directory auto-select. Also supported are contexts, bookmarks, multiple sorting options, SSHFS, batch operations on selections (a group of selected files) and a lot more.\n\nDespite its capabilities, nnn is designed to be easy to use and is configured by way of environment variables without the use of a configuration file.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the nnn package, or nnn-gitAUR for the development version.\n\n"
    },
    {
      "title": "Usage",
      "level": 3,
      "content": "nnn can be controlled with the vi-like keys hjkl or the arrow keys. Do not memorize keys: arrows, / and q suffice. Press ? for help on keyboard shortcuts anytime.\n\n"
    },
    {
      "title": "Configuration",
      "level": 3,
      "content": "nnn is configured via environment variables. For detailed information on these settings, see nnn(1) as well as the nnn wiki.\n\n```\nNNN_BMS='d:~/Documents;u:/home/user/Cam Uploads;D:~/Downloads/'\nNNN_SSHFS=\"sshfs -o follow_symlinks\"        # make sshfs follow symlinks on the remote\nNNN_COLORS=\"2136\"                           # use a different color for each context\nNNN_TRASH=1                                 # trash (needs trash-cli) instead of delete\n```\n\nOne of the more useful settings is the NNN_BMS variable which lets you choose shortcuts to quickly jump to your bookmarked directories. They are reached with b followed by one of the letters that you have specified. In the example configuration hitting the keys bD would result in nnn jumping into ~/Downloads. But all of these are optional, nnn will consistently behave the same on all of your machines.\n\n"
    },
    {
      "title": "Get selected files in terminal",
      "level": 4,
      "content": "To get a list of the files you have selected in nnn one could create the following alias:\n\n```\n~/.bashrc\n```\n\n```\nalias ncp=\"cat ${NNN_SEL:-${XDG_CONFIG_HOME:-$HOME/.config}/nnn/.selection} | tr '\\0' '\\n'\"\n```\n\nwhich later could be used to pipe the selected files to other tools.\n\n"
    },
    {
      "title": "Indicate depth level within nnn shells",
      "level": 4,
      "content": "If you use ! to spawn a shell in the current directory, it could be nice to add:\n\n```\n~/.bashrc\n```\n\n```\n[ -n \"$NNNLVL\" ] && PS1=\"N$NNNLVL $PS1\"\n```\n\nTo have your prompt indicate that you are within a shell that will return you to nnn when you are done.\n\nThis together with #cd on quit (Ctrl-G) becomes a powerful combination.\n\n"
    },
    {
      "title": "cd on quit (Ctrl-G)",
      "level": 4,
      "content": "Add the following to your .bashrc/.zshrc\n\n```\n~/.bashrc or ~/.zshrc\n```\n\n```\nif [ -f /usr/share/nnn/quitcd/quitcd.bash_sh_zsh ]; then\n    source /usr/share/nnn/quitcd/quitcd.bash_sh_zsh\nfi\n```\n\nAnd run the n command instead of nnn (more precisely the n bash function).\n\nAlso see the nnn wiki.\n\n"
    },
    {
      "title": "Add your own plugins",
      "level": 4,
      "content": "You can run your own plugins by putting them in ${XDG_CONFIG_HOME:-$HOME/.config}/nnn/plugins. For example you could create a executable shell script\n\n```\n${XDG_CONFIG_HOME:-$HOME/.config}/nnn/plugins/git-changes\n```\n\n```\n#!/usr/bin/env sh\ngit log -p -- \"$@\"\n```\n\nSet the environment variable NNN_PLUG='R:git-changes' and then trigger it by pressing ;R and selecting git-changes which will conveniently show the git log of changes to the particular file along with the code for a quick and easy review.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- nnn's official repository\n- Guides for additional configuration of nnn\n- Introduction to nnn video\n\n"
    }
  ]
}