{
  "title": "Freeipa",
  "url": "https://wiki.archlinux.org/title/Freeipa",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nFreeIPA is an open-source Identity, Policy and Audit (IPA) suite, sponsored by Red Hat, which provides services similar to Microsoft's Active Directory\n\n"
    },
    {
      "title": "Manual configuration as IPA client",
      "level": 2,
      "content": "Make sure your clocks are synchronized. Kerberos will not work otherwise. NTP is recommended.\n\nInstead of using ipa-client-install script for automated client configuration and enrollment, the following sections describe a manual procedure for enrolling the client client.example.com to the FreeIPA server ipaserver.example.com in the example.com domain.\n\n"
    },
    {
      "title": "Configure SSSD and Kerberos",
      "level": 3,
      "content": "Follow the LDAP auth instructions to setup SSSD. Use a SSSD configuration similar to the following, substituting the requisite fields:\n\n```\n/etc/sssd/sssd.conf\n```\n\n```\n[sssd]\nconfig_file_version = 2\nservices = nss, pam, sudo, ssh\ndomains = EXAMPLE.COM\n#debug_level = 9\n\n[domain/EXAMPLE.COM]\n#debug_level = 9\ncache_credentials = true\nkrb5_store_password_if_offline = true\nid_provider = ipa\nauth_provider = ipa\naccess_provider = ipa\nchpass_provider = ipa\n#ipa_domain=example.com  # Optional if you set SRV records in DNS\n#ipa_server=ipaserver.example.com  # Optional if you set SRV records in DNS\nipa_hostname=client.example.com\n```\n\nConfigure pam in similar way to LDAP, replacing pam_ldap.so with pam_sss.so.\n\nCreate an /etc/krb5.conf file for your domain:\n\n```\n/etc/krb5.conf\n```\n\n```\n[libdefaults]\n        default_realm = EXAMPLE.COM\n        dns_lookup_realm = false\n        dns_lookup_kdc = false\n        rdns = false\n        ticket_lifetime = 24h\n        forwardable = yes\n        #allow_weak_crypto = yes  # Only if absolutely necessary. Currently FreeIPA supports strong crypto.\n\n[realms]\n        EXAMPLE.COM = {\n                admin_server = freeipaserver.example.com\n                kdc = freeipaserver.example.com:749\n                default_admin = example.com\n        }\n\n[domain_realm]\n        example.com = EXAMPLE.COM\n        .example.com = EXAMPLE.COM\n\n[logging]\n        default = FILE:/var/log/krb5libs.log\n        kdc = FILE:/var/log/krb5kdc.log\n        admin_server = FILE:/var/log/kadmin.log\n```\n\n"
    },
    {
      "title": "Enroll the client",
      "level": 3,
      "content": "On FreeIPA server, add the client to the IPA server (From Fedora documentation):\n\n1. Login and request and admin session $ kinit admin\n1. Create a host entry $ ipa host-add --force --ip-address=192.168.166.31 client.example.com if the host does not have a static IP, use $ ipa host-add client.example.com\n1. Set the client to be managed by IPA $ ipa host-add-managedby --hosts=ipaserver.example.com client.example.com\n1. Generate keytab for the client # ipa-getkeytab -s ipaserver.example.com -p host/client.example.com -k /tmp/client1.keytab\n\n```\n$ kinit admin\n```\n\n```\n$ ipa host-add --force --ip-address=192.168.166.31 client.example.com\n```\n\n```\n$ ipa host-add client.example.com\n```\n\n```\n$ ipa host-add-managedby --hosts=ipaserver.example.com client.example.com\n```\n\n```\n# ipa-getkeytab -s ipaserver.example.com  -p host/client.example.com -k /tmp/client1.keytab\n```\n\nInstall the keytab on the client:\n\n```\n$ scp user@ipaserver.example.com:/tmp/client1.keytab krb5.keytab\n# mv krb5.keytab /etc/krb5.keytab\n```\n\n"
    },
    {
      "title": "authorized_keys",
      "level": 4,
      "content": "You can configure SSHD to fetch users SSH public key from the LDAP directory by uncommenting those lines in /etc/ssh/sshd_config:\n\n```\nAuthorizedKeysCommand /usr/bin/sss_ssh_authorizedkeys\nAuthorizedKeysCommandUser nobody\n```\n\nThen restart sshd.service.\n\nYou can add your ssh key to your FreeIPA user account through the web interface or use the -sshpubkey='ssh-rsa AAAA...' argument to the ipa user-mod or ipa user-create commands.\n\nTest it:\n\n```\n$ sudo -u nobody sss_ssh_authorizedkeys <username>\n```\n\nYou should see your ssh public key on standard output and no error message on standard error.\n\n"
    },
    {
      "title": "known_hosts",
      "level": 4,
      "content": "You can configure SSH to fetch hosts public key information from their directory entries in FreeIPA by adding those lines in /etc/ssh/ssh_config:\n\n```\nGlobalKnownHostsFile /var/lib/sss/pubconf/known_hosts\nProxyCommand /usr/bin/sss_ssh_knownhostsproxy -p %p %h\n```\n\n"
    },
    {
      "title": "Kerberos/GSS API Authentication",
      "level": 4,
      "content": "You can enabled Kerberos / GSS API Authentication for the SSH Client to FreeIPA member hosts by uncommenting and changing the following lines in /etc/ssh/ssh_config:\n\n```\nGSSAPIAuthentication yes\nGSSAPIDelegateCredentials yes\n```\n\n"
    },
    {
      "title": "See also",
      "level": 3,
      "content": "- Wikipedia:FreeIPA\n- Freeipa30_SSSD_OpenSSH_integration.pdf[dead link 2023-07-30 â“˜]\n\n"
    }
  ]
}