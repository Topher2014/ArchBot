{
  "title": "Spacemacs",
  "url": "https://wiki.archlinux.org/title/Spacemacs",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Spacemacs is an extensible and customizable text editor, built on top of Emacs and using Vim keybindings. The goal of the project is to combine both Vim and Emacs editors, getting the best parts from each. Spacemacs distribution is based on community-driven Emacs config, which greatly extends default Emacs behaviour and adds a lot of additional features.\n\n"
    },
    {
      "title": "Install Emacs",
      "level": 3,
      "content": "Spacemacs is built on top of Emacs, so we need to install Emacs first.\n\n- Install Emacs package\n\n"
    },
    {
      "title": "Backup old Emacs configuration (optional)",
      "level": 3,
      "content": "If you used Emacs before, be sure to backup your previous config.\n\n```\n$ mv ~/.emacs.d ~/.emacs.d.bak && mv ~/.emacs ~/.emacs.bak\n```\n\n"
    },
    {
      "title": "Install Spacemacs",
      "level": 3,
      "content": "To install Spacemacs we need to clone an actual configuration from GitHub, and replace Emacs configuration entirely.\n\n```\n$ git clone https://github.com/syl20bnr/spacemacs ~/.emacs.d\n```\n\n"
    },
    {
      "title": "Install Adobe Source Pro fonts (optional)",
      "level": 3,
      "content": "The default font used by Spacemacs is Source Code Pro by Adobe. It is recommended to install it on your system if you wish to use it.\n\n- Install adobe-source-code-pro-fonts package\n\nIf the specified font is not found, the fallback one will be used.\n\n"
    },
    {
      "title": "Remove Emacs configuration file",
      "level": 3,
      "content": "Backup (if required) and remove the ~/.emacs file if you have not already. Otherwise Spacemacs will not load since that file prevents Emacs from loading the proper initialization file. You can do this by either renaming it through:\n\n```\n$ mv ~/.emacs ~/.emacs.bak\n```\n\nOr you can just remove it without backing it up:\n\n```\n$ rm ~/.emacs\n```\n\n"
    },
    {
      "title": "Run Spacemacs for the first time",
      "level": 3,
      "content": "Now it is time to launch Spacemacs.\n\n```\n$ emacs\n```\n\nFor the first time you will be asked for features that should be installed. All the choices are alternatives, so something should be selected in any case. This choices affects some Spacemacs behavior and hotkeys. It is recommended to choose default values, just hitting Enter. Defaults are pretty optimized and you can always change them later.\n\nWhen you finish with the questions, Spacemacs will download and install all the required packages. It may take a few minutes. Spacemacs may seems frozen at this time, but it is okay.\n\n"
    },
    {
      "title": "Running Spacemacs",
      "level": 2,
      "content": "To start spacemacs simply run:\n\n```\n$ emacs\n```\n\nSpacemacs will be ready to work when there are no '...' operations in the bottom bar would be displayed.\n\n"
    },
    {
      "title": "Daemon mode",
      "level": 3,
      "content": "Spacemacs can also be launched in a daemon mode. Daemon mode allows to initialize editor once, and connect to it later, without re-reading configuration file. It can be useful, when you have massive configuration file, so the initialization sequence would be completed only once. You would be able to connect immediately any time later then.\n\nTo run Spacemacs in daemon mode:\n\n```\n$ emacs --daemon=instance1\n```\n\nThen you can connect to instance1 later, using emacsclient:\n\n```\n$ emacsclient -nc -s instance1\n```\n\n"
    },
    {
      "title": "Systemd module",
      "level": 3,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nYou may want to create a systemd module to run the emacs daemon. Note, due to security concerns stemming from community ELPA packages among other reasons, running the daemon as a user-privileged systemd user module is recommend as described here.\n\nCreate an emacs user systemd service file such as:\n\n```\n.config/systemd/user/emacs.service\n```\n\n```\n[Unit]\nDescription=Emacs text editor\nDocumentation=info:emacs man:emacs(1) https://gnu.org/software/emacs/\n\n[Service]\nType=forking\nExecStart=/usr/bin/emacs --daemon=instance1\nExecStop=/usr/bin/emacsclient --eval \"(kill-emacs)\"\nRestart=on-failure\n\n[Install]\nWantedBy=default.target\n```\n\nEdit your Emacs/Spacemacs desktop file as the following. Please note the changes to Exec. The rest is just nice aesthetics.\n\n```\n/usr/share/applications/emacs.desktop\n```\n\n```\n[Desktop Entry]\nName=Spacemacs\nGenericName=Text Editor\nComment=Edit text\nMimeType=text/english;text/plain;text/x-makefile;text/x-c++hdr;text/x-c++src;text/x-chdr;text/x-csrc;text/x-java;text/x-moc;text/x-pascal;text/x-tcl;text/x-tex;application/x-shellscript;text/x-c;text/x-c++;\nExec=emacsclient -nc -s instance1 %F\nIcon=/home/[!!! YOUR USER NAME HEREÂ !!!]/.emacs.d/assets/spacemacs.svg\nType=Application\nTerminal=false\nCategories=Development;TextEditor;\nStartupWMClass=Emacs\nKeywords=Text;Editor;\n```\n\nThen do a daemon-reload and start the emacs.service user unit.\n\nCheck to make sure no errors occured. If you have already been mucking around with emacs running as a daemon and get errors, I recommend enabling the user emacs service we just made and reboot. It happened to resolve my issues. It might also be useful to check your user emacs.service unit status. Then, if successful, enable the user unit for persistence.\n\nUpon completion, you may start emacs via your DE launcher and enjoy significantly reduced loading times, however emacs still does not instantly open on even very powerful systems. You may also alias the following command if you prefer. \"instance1\" may also be renamed as well but be sure to match the daemon's name in the service file as well.\n\n```\n$ emacsclient -nc -s instance1\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Using Spacemacs may be tricky for the first time, especially for complete beginners. However, your efforts will be rewarded. Only a few key concepts are required to perform basic tasks.\n\nYou can always exit Spacemacs by typing :q[Enter]\n\n"
    },
    {
      "title": "Built-in Tutorial",
      "level": 3,
      "content": "You can always run Spacemacs built-in tutorial by pressing SPC h T when in Spacemacs.\n\n"
    },
    {
      "title": "Prerequisites",
      "level": 4,
      "content": "In order to explain the basic concepts we need some text to play with. Let us generate it first. Please, do not mind if the commands are unclear right now, you do not need to know them at the moment.\n\n1. Run Spacemacs\n1. Press SPC b N to create new empty buffer\n1. Press 9 SPC i l l to insert some text\n\nYou should see nine lines of generated text as the result. Use them to experiment with the commands described in the next sections.\n\nNote: **SPC** \n\nNow we can move closer to a concept named states.\n\n"
    },
    {
      "title": "Editor states",
      "level": 4,
      "content": "The major difference between Spacemacs and regular text editor is states. Each state changes the way how the editor works. For example, there is an insert state, where you are able to enter text (like in a regular text editor), and there is a normal state, where all your key presses are used as commands, without changing the actual text. Only one state can be active at a time. Switching between the states is the key skill to use Spacemacs successfully.\n\nThe current editor state is displayed in the left bottom corner. It has the form of a colored rectangle with text \"1\" (by default). The color describes the current state. There are a lot of states, but only a few of them are used regularly:\n\n- Orange. This is normal state. Used for entering commands and text navigation.\n- Green. This is insert state. Used for text input.\n- Grey. This is visual state. Used for selecting chunks of text and controlling them.\n\nYou can also check the cursor color for the current state.\n\nNote: **normal** \n\nNormal state is used for text navigation and running commands. You cannot directly enter text in this mode. Instead, you are able to quickly navigate and make any sort of corrections there. Normal state is the default state and its color is orange.\n\nYou can always return to normal state by pressing ESC key or fd key sequence if you accidentally leave it.\n\nFor basic navigation, the following keys are used:\n\n- h - move cursor by one symbol left\n- j - move cursor by one line down\n- k - move cursor by one line up\n- l - move cursor by one symbol right\n\nIt is also possible to navigate between words or even sentences with a single key:\n\n- w - move to next word (beginning)\n- b - move to previous word (beginning)\n- ( - move to the beginning of current sentence\n- ) - move to the beginning of next sentence\n- ^ - move to beginning of line\n- $ - move to the end of line\n\nTo scroll the pages, use the following commands:\n\n- Ctrl+f - move one page down\n- Ctrl+b - move one page up\n- gg - goto first line of the document\n- G - goto last line of the document\n\nYou can also use numbers with commands, so they would repeat n times:\n\n- 5j - move cursor five lines down\n- 7w - move cursor seven words forward\n- 3 Ctrl+f - move three pages down\n- 20gg - move cursor to line with number 20\n\nThere are a lot of commands to be uncovered. Basically, you can navigate between everything in Spacemacs, thanks to Vim-like flow. Check the additional resources to get the details.\n\nYou can modify text with the following commands:\n\n- x - cut the symbol under cursor\n- dw - cut the word under cursor\n- dd - cut the line under cursor\n- yw - copy (yank) the word under cursor\n- yd - copy (yank) the line under cursor\n- p - paste copied/cut text\n- ra - replace the symbol under cursor to a\n\nYou can also use numeric arguments there.\n\nYou can undo and redo changes with the following commands:\n\n- u - undo last change\n- Ctrl+r - redo last change\n\nInsert state is used for the text input. It is very close to regular editor behavior. However, the ability to modify text is limited. You will need to switch back to the normal state in order to make corrections. The color of insert state is green.\n\nTo enter the insert state, press i from the normal state. Your cursor will change to being a green thin line. Now you can type something. When you are done, just leave the insert state by pressing ESC key or fd key sequence.\n\nThere are a lot of ways to enter insert mode. The difference, however, is only related to the initial cursor position. It is enough to know just the i hotkey for the first time. But there are also others and they will be very useful once you master them:\n\n- i - enter insert mode before the cursor\n- a - enter insert mode after the cursor\n- I - enter insert mode at the beginning of the line\n- A - enter insert mode at the end of the line\n- o - enter insert mode at next line\n- O - enter insert mode at previous line\n\nTo leave the insert state press ESC key or fd key sequence. You will return to normal state and cursor will change to orange.\n\nThis state used for visual text selection. It allows to select text chunks and cut/copy them. The state color is grey.\n\nTo enter visual state press v hotkey from the normal mode. Then you can navigate around using normal mode hotkeys with only one difference: text selection. Cursor movements would select text, based on initial cursor position, and you can yank (copy) or delete it later. Remember, that you can use commands like ve or v( to quickly select words or sentences. Check the Normal state: Navigation section to get the idea.\n\nYou can also press V to quickly select the whole line.\n\nVisual block state is more powerful version of visual state. It allows to select text in columns. It is similar to multi-cursor concept on regular editors and IDEs. This state can be entered by pressing Ctrl+v hotkey. Then you can navigate with h j k l keys to see the difference.\n\nThere is lots of stuff that can be done in visual block state. Refer to the additional resources for this information. This feature is called vim visual block mode in Vim parlance.\n\n"
    },
    {
      "title": "Buffers (Tabs)",
      "level": 4,
      "content": "Text in Spacemacs is located in areas called buffers. They are very similar to regular editor tabs. You can switch between buffers and create new ones. Buffers are also used by the editor itself to store some information you can inspect later.\n\nTo show the list of current buffers press SPC b b. You will see a new window at the bottom. This is the place where you can inspect, filter, and navigate buffers. Some buffers already exist there, like *Messages* and *scratch*. They are created by the editor and contain some useful information.\n\nThe first thing you can do with the bottom window is to type anything into the pattern field. This will filter buffers. If there are no buffers left after the filtering, you can create a new one by simply pressing \"Enter\" after your input. The new buffer will be created and opened.\n\nYou can also open any buffer by hand. Press Ctrl+j or Ctrl+k to navigate between the lines. Then press Ctrl+l or Enter to confirm your choice. The selected buffer will be opened.\n\nYou can also use some hotkeys from normal state to control buffers:\n\n- SPC b b - list buffers\n- SPC TAB - switch to last viewed buffer\n- SPC b n - switch to next buffer (one forward)\n- SPC b p - switch to previous buffer (one backward)\n- SPC f s - save the current buffer to file\n- SPC b d - close current buffer\n\n"
    },
    {
      "title": "Files",
      "level": 4,
      "content": "Spacemacs provides two options for file navigation: inline navigation and built-in file manager. Inline navigation is used in Spacemacs confirmation dialogs and it is very similar to the shell one. Build-in file manager is more user-friendly and allows to check the file details. Learning the basics of each is the essential key of mastering Spacemacs.\n\nThere also advanced options available, like more powerful file manager and file tree. They are covered in Advanced section.\n\nInline navigation available with SPC f f hotkey. It uses the window very similar to buffer-navigation one. You can filter and select files there. Just type anything to narrow results, or press Ctrl+j or Ctrl+k for moving the line down and up. Press Ctrl+l to open file or directory, and press Ctrl+h for going backward. Press TAB to autocomplete the input.\n\nIf you need more visual method, run built-in file manager by pressing SPC a d Enter. You can navigate, using Ctrl+h j k l keys, and press Enter to enter directories and open files.\n\nThere are some hotkeys available (refer to dired documentation for more):\n\n- q - quit dired\n- R - rename file\n- C - copy file\n- + - create new directory\n\nExiting the editor can be achieved with SPC q this will show the multiple exiting methods.\n\nSome available are:\n\n- SPC qf Quit current frame - good for emacsclient frames\n- SPC qq Quit emacs Kill-emacs\n- SPC qr Quit emacs and restart resuming layouts\n- SPC qR Quit emacs and restart\n- SPC qd Quit emacs and restart with --debug-init\n\n"
    },
    {
      "title": "Advanced concepts",
      "level": 3,
      "content": "At this step you are able to open files, make changes and save them successfully. Half the way is done, and now you can choose what to master next. There are some sections you may be interested.\n\n"
    },
    {
      "title": "Layers",
      "level": 4,
      "content": "Layers are one of the strongest features in Spacemacs. Layer is a set of packages and configuration options that greatly extends editor functionality in some way. There are layers for different programming languages, for example, or layers, providing additional tools (like IRC messaging, or integrated web browser). The full list of layers can be found at Layers documentation page.\n\nSome layers are already shipped with Spacemacs, the others can be added manually. To do this, open Spacemacs configuration file (SPC f e d), and find dotspacemacs-configuration-layers section there. Then simply add selected layer to the list and restart Spacemacs. It will download all the required files on the next start.\n\nSpacemacs will also offer you to install a new layer when you open a file with an already known extension. For example, if you open a .html file, the installation of the html layer is offered.\n\nYou can customize layer behaviour by overriding some layer-specific variables in your Spacemacs configuration file. Check the appropriate layer documentation to get the details.\n\n"
    },
    {
      "title": "File Navigation",
      "level": 4,
      "content": "There are some additional tools for file navigation. They may greatly increase the way you use Spacemacs on a daily basis.\n\nYou can run file tree by pressing SPC f t. New window opens, accessible with SPC 0. Standard h j k l navigation is available there. You can change root folder with R and toggle hidden files with s. Create new files with c and rename the old ones with r. Check Neotree documentation for the details.\n\nIf you need a full-featured file manager then Ranger may be the best choice. A lot of useful features are available there, like an instant h j k l navigation, inline file preview and ability to manipulate files. It also improves default Dired behaviour (SPC a d) a bit. Install ranger layer and run it with SPC a r. Check Ranger documentation for the details. Along with customization options, there are a lot of useful hotkeys.\n\n"
    },
    {
      "title": "Windows",
      "level": 4,
      "content": "Spacemacs allows you to split the screen into the separate windows. Each window has a personal number and can be accessed with SPC n hotkey, where the n is a selected number. Windows can be splitted individually, so it gives an ability to create complex layouts.\n\nSome of windows hotkeys are presented below. Check the inline help (SPC w) to get more.\n\n- SPC w 3 - focus window with number 3\n- SPC w s - split window horizontally\n- SPC w v - split window vertically\n- SPC w d - delete window\n- SPC w u - undo last window action\n- SPC w m - toggle window fullscreen\n- SPC w . - enter window transient state\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\n"
    },
    {
      "title": "Slow startup time",
      "level": 3,
      "content": "If startup time exceeds 10 seconds, there may be a problem with exec-path-from-shell module. It can be safely disabled on linux systems. Complete the following steps:\n\n1. Open Spacemacs configuration file by pressing SPC f e d\n1. Find dotspacemacs-excluded-packages section\n1. Add exec-path-from-shell module here, so the final entry would be like dotspacemacs-excluded-packages '(exec-path-from-shell)\n1. Save changes with SPC f s and restart Spacemacs\n\n"
    },
    {
      "title": "Incorrect minor mode icon fonts",
      "level": 3,
      "content": "If you see 24ba 24c0 symbols instead of âºâ or they are too ugly, then you have to install a good unicode fallback font for these symbols, or disable them by setting dotspacemacs-mode-line-unicode-symbols to nil.\n\n"
    },
    {
      "title": "Mass \"Package is unavailable. Is the package name misspelled\" error while updating packages",
      "level": 3,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nMight be related to GNU ELPA GPG key expiration, run : (setq package-check-signature nil) then M-x package-install RET gnu-elpa-keyring-update. If that does not work, try rolling back to emacs 26, e.g. via emacs26-gitAUR[broken link: package not found].\n\n"
    }
  ]
}