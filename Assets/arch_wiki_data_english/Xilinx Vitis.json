{
  "title": "Xilinx Vitis",
  "url": "https://wiki.archlinux.org/title/Xilinx_Vitis",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Arch Linux is not officially supported by Vivado, but as happens with Xilinx ISE WebPACK, most of its features can be used with a bit of hacking.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Xilinx Vivado can be downloaded from its official website [1]. It is recommended to download \"Vivado HLx <year>.<version>: All OS installer Single-File Download\" tarball, but make sure not to be in a hurry, as it is a large download (over 70 GB). Update tarballs can also be downloaded and installed later. The other installer can also be used, but see the troubleshooting section below first.\n\n"
    },
    {
      "title": "AUR Package",
      "level": 3,
      "content": "The vivadoAUR package can be used to create a Vivado installation managed by pacman. Since the download of the installer is locked behind a login wall, it needs to be downloaded manually as outlined above and placed in the same directory as the PKGBUILD. The package only builds the latest major version (<year>.<version>), not the minor updates (<year>.<version>.<update>); if these are required, install Vivado manually instead.\n\n"
    },
    {
      "title": "Digilent USB-JTAG Drivers",
      "level": 3,
      "content": "To use Digilent Adept USB-JTAG adapters (e.g. the onboard JTAG adapter on the ZedBoard) from Vivado, you need to install the Digilent Adept Runtime.\n\nMake sure you have installed fxloadAUR.\n\nTo install the Digilent Adept Runtime, it is recommended to install digilent.adept.runtimeAUR.\n\nIn addition, installing digilent.adept.utilitiesAUR may do good to configuring your board.\n\n"
    },
    {
      "title": "Enable display scaling",
      "level": 3,
      "content": "Start Vivado, then set the scaling rate through Tools > Setting > Display > Scaling.\n\n"
    },
    {
      "title": "Disable WebTalk",
      "level": 3,
      "content": "The free WebPACK license does not let you disable this feature which uploads usage data to Xilinx's servers when generating a bitstream, but synthesis will complete just fine if the connection fails. A simple way to make it fail consistently for Vivado tools only is to set an invalid HTTPS proxy for it.\n\n```\n/opt/Xilinx/Vivado/<version>/bin/setupEnv.sh\n```\n\n```\n...\n\nexport HTTPS_PROXY=localhost\n```\n\nThis method will not pollute your environment, only the temporary environment that is configured upon startup of the tools, so it should not break anything else.\n\n"
    },
    {
      "title": "HTML links under Help menu do not open in browser",
      "level": 3,
      "content": "See https://support.xilinx.com/s/article/76524?language=en_US\n\nCreate file\n\n```\n/Xilinx_path/Vitis_HLS/yyyy.Q/bin/compat_firefox\n```\n\n```\n#!/bin/sh\nunset LD_LIBRARY_PATH\nfirefox $@\n```\n\nthen configure the script at Window > Preferences > Web Browser.\n\n"
    },
    {
      "title": "Vitis HLS no response or only splash screen visible",
      "level": 3,
      "content": "See https://support.xilinx.com/s/question/0D52E00006hpY4PSAU/vitishls-20202-not-starting-only-splash-screen-visible\n\nWhen you run /Xilinx_path/Vitis_HLS/yyyy.Q/bin/vitis_hls (the path of Vitis_HLS in *.Desktop file), you may get\n\n```\n/Xilinx_path/Vitis_HLS/yyyy.Q/bin/vitis_hls\n```\n\n```\n****** Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)\n  **** SW Build 3367213 on Tue Oct 19 02:47:39 MDT 2021\n  **** IP Build 3369179 on Thu Oct 21 08:25:16 MDT 2021\n    ** Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.\n\nsource /opt/Xilinx/Vitis_HLS/2021.2/scripts/vitis_hls/hls.tcl -notrace\nINFO: [HLS 200-10] Running '/opt/Xilinx/Vitis_HLS/2021.2/bin/unwrapped/lnx64.o/vitis_hls'\nINFO: [HLS 200-10] For user 'username' on host 'hostname' (Linux_x86_64 version 5.14.16-arch1-1) on Sun Nov 07 21:57:50 CST 2021\nINFO: [HLS 200-10] On os \"Arch Linux\"\nINFO: [HLS 200-10] In directory '$HOME'\nINFO: [HLS 200-10] Bringing up Vitis HLS GUI ...\n```\n\nThen it is stuck here or exit directly.\n\nTo fix this issue, first change the file /Xilinx_path/Vitis_HLS/yyyy.Q/common/scripts/autopilot_init.tcl line 40\n\nfrom\n\n```\n----%r&-'%rl%&n$&lt'v-=\n```\n\nto\n\n```\n----%r&-'%rl%&n$&lt'v->\n```\n\nThen add\n\n```\nosgi.locking=none\n```\n\nto file\n\n/Xilinx_path/Vitis_HLS/yyyy.Q/lnx64/tools/eclipse/configuration/config.ini\n\n"
    },
    {
      "title": "Synthesis segfaults",
      "level": 3,
      "content": "See https://support.xilinx.com/s/feed/0D52E00006hpUycSAE?language=en_US\n\nYou will need to recompile glibc (just take the PKGBUILD from the abs) with --disable-lock-elision. Instead of patching the system libc in /usr/lib, copy the newly compiled libpthread-2.25.so and libc-2.25.so to /opt/Xilinx/Vivado/2016.4/ids_lite/ISE/lib/lin64 Do not forget to repeat this when glibc gets upgraded.\n\n"
    },
    {
      "title": "xsct, xsdb, xmd, and tclsh segfault",
      "level": 3,
      "content": "The Xilinx Vivado command-line tools xsct, xsdb, xmd, and tclsh may crash with a message similar to the following:\n\n```\nSegmentation fault (core dumped) \"$RDI_BINROOT\"/unwrapped/\"$RDI_PLATFORM$RDI_OPT_EXT\"/rlwrap -rc -f \"$RDI_APPROOT\"/scripts/xsdb/xsdb/cmdlist -H \"$HOME\"/.xsctcmdhistory \"$RDI_BINROOT\"/loader -exec rdi_xsct \"${RDI_ARGS[@]}\"\n```\n\nThis is a problem with the rlwrap version bundled with Vivado, probably due to the lack of legacy vsyscall emulation in Arch Linux. To fix this issue, either drop rlwrap altogether (losing command history and auto-completion), or install rlwrap and edit the path to the rlwrap binary in the affected command startup script(s) from:\n\n```\n/opt/Xilinx/{Vivado,SDK}/YYYY.Q/bin/{xsct,xsdb,xmd,tclsh}\n```\n\n```\n# Use rlwrap to invoke the tool\n\"$RDI_BINROOT\"/unwrapped/\"$RDI_PLATFORM$RDI_OPT_EXT\"/rlwrap ...\n```\n\nTo the following:\n\n```\n/opt/Xilinx/{Vivado,SDK}/YYYY.Q/bin/{xsct,xsdb,xmd,tclsh}\n```\n\n```\n# Use rlwrap to invoke the tool\n/usr/bin/rlwrap ...\n# OR run the tool without rlwrap\n#\"$RDI_BINROOT\"/loader -exec rdi_{xsct,xsdb,xmd,tclsh} \"${RDI_ARGS[@]}\"\n```\n\n"
    },
    {
      "title": "Vivado HLS testbench error with GCC",
      "level": 3,
      "content": "Vivado requires an older version of glibc (2.26).\n\nThe solution proposed in this thread from Xilinx forums suggests to update the fixed headers shipped by Xilinx.\n\nRun:\n\n```\n# /opt/Xilinx/Vivado/2018.1/lnx64/tools/gcc/libexec/gcc/x86_64-unknown-linux-gnu/4.6.3/install-tools/mkheaders /opt/Xilinx/Vivado/2018.1/lnx64/tools/gcc\n```\n\n"
    },
    {
      "title": "To update Vivado from 2020.1 to Vivado 2020.1.1",
      "level": 3,
      "content": "If your 2020.1 installation failed to launch and needed to be installed in batch mode, you will need to update using batch mode:\n\n```\n# ./xsetup -b Update\n```\n\nIf Vivado was originally installed by the root user, you will need to launch the update as the root user.\n\n"
    },
    {
      "title": "Configuring an IP in Vivado 2021.2 causes a crash",
      "level": 3,
      "content": "See [2]\n\nWhen editing an IP with Vivado 2021.2, Vivado may crash and report the following error:\n\n```\nhs_err_pid*.log\n```\n\n```\n#\n# An unexpected error has occurred (11)\n#\nStack:\n/opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib//server/libjvm.so(+0xbefecb) [0x7fd1e21efecb]\n/opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib//server/libjvm.so(JVM_handle_linux_signal+0xd1) [0x7fd1e21f6c81]\n/opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib//server/libjvm.so(+0xbead23) [0x7fd1e21ead23]\n/usr/lib/libc.so.6(+0x42560) [0x7fd246e38560]\n/opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib/libharfbuzz.so(+0x3574d) [0x7fd1bc03574d]\n/usr/lib/libharfbuzz.so.0(hb_font_funcs_set_glyph_shape_func+0x36) [0x7fd24503e886]\n/usr/lib/libharfbuzz.so.0(+0x9a802) [0x7fd2450ab802]\n/usr/lib/libharfbuzz.so.0(hb_ft_font_create+0x37) [0x7fd2450abcc7]\n/usr/lib/libfreetype.so.6(+0x5e2f0) [0x7fd2464912f0]\n/usr/lib/libfreetype.so.6(+0x6b7ad) [0x7fd24649e7ad]\n/usr/lib/libfreetype.so.6(FT_Load_Glyph+0x681) [0x7fd2464471a1]\n/opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib/libfontmanager.so(+0x7abf) [0x7fd1bc407abf]\n/opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib/libfontmanager.so(Java_sun_font_FreetypeFontScaler_getGlyphAdvanceNative+0x14) [0x7fd1bc4082b4]\n[0x7fd1c8e87710]\n```\n\nThis is due to a conflict between Vivado's and system's version of harfbuzz library.\n\nA possible workaround is to force Vivado to use the system libharfbuzz, by renaming the .so\n\n```\n# mv /opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib/libharfbuzz.so /opt/Xilinx/Vivado/2021.2/tps/lnx64/jre11.0.11_9/lib/libharfbuzz.so.bak\n```\n\n"
    },
    {
      "title": "Synthesis fails on certain locales",
      "level": 3,
      "content": "If your system locale does not use a dot . as the decimal seperator, but for example a comma , (e.g. de_DE), synthesis may fail with errors such as wrong operator types for +.\n\nA possible workaround is to force Vivado to use en_US.UTF-8 as the locale for numerics. This can be easily done by appending\n\n```\nexport LC_NUMERIC=en_US.UTF-8\n```\n\nto <your-vivado-installation-path>/bin/setupEnv.sh.\n\n"
    },
    {
      "title": "Fonts ignore system anti-aliasing settings",
      "level": 3,
      "content": "With OpenJDK 11 and Vivado display scaling activated, the menu and other UI element fonts may render without any anti-antialiasing regardless of desktop environment settings. This can be fixed by editing the Vivado launch script to append awt.useSystemAAFontSettings=on to the JVM options.\n\nAssuming Vivado is installed in the default location of /opt/Xilinx/Vivado/YYYY.Q where YYYY.Q is the verion (i.e. 2020.2), modify vivado to include the following:\n\n```\n/opt/Xilinx/Vivado/YYYY.Q/bin/vivado\n```\n\n```\n...\nexport _JAVA_OPTIONS=\"-Dawt.useSystemAAFontSettings=on -Dswing.aatext=true\"\n...\n```\n\n"
    },
    {
      "title": "Blank/grey window",
      "level": 3,
      "content": "See Java#Gray window, applications not resizing with WM, menus immediately closing.\n\n"
    },
    {
      "title": "Vitis: cannot open libssl.so.10",
      "level": 3,
      "content": "While creating a new platform component, cmake error on\n\n```\ncmake: error while loading shared libraries: libssl.so.10: cannot open shared object file: No such file or directory\n```\n\nhttps://support.xilinx.com/s/question/0D54U00007j9lkvSAA/vitis-20232-cmake-error-while-loading-shared-libraries-libsslso10?language=en_US\n\n```\nsudo ln -sf /path/to/Vitis/2023.2/tps/lnx64/cmake-3.24.2/libs/Rhel/9/* /usr/lib\n```\n\n"
    },
    {
      "title": "Vitis: Can't load library: ... libswt-pi4-gtk.so ...",
      "level": 3,
      "content": "You run vitis:\n\n```\n$ /tools/Xilinx/Vitis/2022.2/bin/vitis\n```\n\nYou get error messages here\n\n```\n/home/<user>/.Xilinx/Vitis/2022.2/<a-long-numbers>.log\n```\n\n```\n...\n\tno swt-pi4-gtk-4932r18 in java.library.path: [/tools/Xilinx/Vitis/2022.2/tps/lnx64/java-cef-95.0.4638.69/bin/lib/linux64, /tools/Xilinx/Vitis/2022.2/tps/lnx64/javafx-sdk-11.0.2/lib, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o/Default, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/tps/lnx64/jre11.0.11_9/lib/, /tools/Xilinx/Vitis/2022.2/tps/lnx64/jre11.0.11_9/lib//server, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o/Default, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/tps/lnx64/python-3.8.3/lib, /tools/Xilinx/Vitis/2022.2/aietools/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/bin/../lnx64/tools/dot/lib, /usr/java/packages/lib, /usr/lib64, /lib64, /lib, /usr/lib]\n\tno swt-pi4-gtk in java.library.path: [/tools/Xilinx/Vitis/2022.2/tps/lnx64/java-cef-95.0.4638.69/bin/lib/linux64, /tools/Xilinx/Vitis/2022.2/tps/lnx64/javafx-sdk-11.0.2/lib, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o/Default, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/tps/lnx64/jre11.0.11_9/lib/, /tools/Xilinx/Vitis/2022.2/tps/lnx64/jre11.0.11_9/lib//server, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o/Default, /tools/Xilinx/Vitis/2022.2/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/tps/lnx64/python-3.8.3/lib, /tools/Xilinx/Vitis/2022.2/aietools/lib/lnx64.o, /tools/Xilinx/Vitis/2022.2/bin/../lnx64/tools/dot/lib, /usr/java/packages/lib, /usr/lib64, /lib64, /lib, /usr/lib]\n\tCan't load library: /home/<user>/.swt/lib/linux/x86_64/libswt-pi4-gtk-4932r18.so\n\tCan't load library: /home/<user>/.swt/lib/linux/x86_64/libswt-pi4-gtk.so\n...\n```\n\nThis problem is due to libstdc++.so.6.\n\nMake sure libstdc++.so.6 has been installed in your computer:\n\n```\n$ find /usr/lib -iname 'libstdc++.so.6'\n```\n\nLet's fix it:\n\n```\n# cd /tools/Xilinx/Vitis/2022.2/lib/lnx64.o/Default/\n# mv libstdc++.so.6 libstdc++.so.6.bak\n# ln -sf /usr/lib/libstdc++.so.6 ./libstdc++.so\n```\n\nAbove way should solve this problem when you run Vitis.\n\n"
    },
    {
      "title": "The self-extracting web installer hangs at \"Generating installed devices list\"",
      "level": 3,
      "content": "Install ncurses5-compat-libsAUR.\n\n"
    },
    {
      "title": "Error while loading shared libraries: libcrypt.so.1",
      "level": 3,
      "content": "Install libxcrypt-compat.\n\n"
    },
    {
      "title": "Segfault if an LDAP user compiles a Vitis kernel",
      "level": 3,
      "content": "Symptom: LDAP users encounter segmentation faults, but local users do not.\n\nExample error when a Vitis kernel is compiled using v++:\n\n```\n/opt/Xilinx/Vivado/2023.2/bin/rdiArgs.sh: line 369: ... Segmentation fault      (core dumped) \"$RDI_PROG\" \"$@\"\nsegfault in /opt/Xilinx/Vivado/2023.2/bin/unwrapped/lnx64.o/vivado -exec vivado -notrace -mode batch -source run_ippack.tcl, exiting...\nERROR: [IMPL 213-28] Failed to generate IP.\n...\ncommand 'ap_source' returned error code\n   while executing\n\"source vadd.tcl\"\n   (\"uplevel\" body line 1)\n   invoked from within\n\"uplevel \\#0 [list source $tclfile] \"\n```\n\nIf you remove ldap from the name service switch configuration file, the symptom is gone, however the LDAP users cannot login:\n\n```\n/etc/nsswitch.conf\n```\n\n```\n...\npasswd: files systemd [success=return] #ldap\n...\n```\n\nThe workaround is to create local users.\n\n"
    },
    {
      "title": "Vivado shows an empty screen on Sway",
      "level": 3,
      "content": "This behavior happens in versions 2024.{1,2}. Set _JAVA_AWT_WM_NONREPARENTING=1 in your environment. See https://github.com/swaywm/sway/wiki#issues-with-java-applications.\n\n"
    },
    {
      "title": "Licensing",
      "level": 2,
      "content": "Xilinx Vivado contains modules called Intelectual Property (IP) cores and as the name suggests, you should expect licenses to be required for these modules. Two modes of licensing are possible: Floating (server) or Nodelocked (license file).\n\n"
    },
    {
      "title": "Floating License",
      "level": 3,
      "content": "Set the environment variable XILINX_LICENSE_FILE to point to a floating server license. You will have to be on the same network as the server, so connecting with a VPN might be required.\n\n```\nyour-vivado-installation-path/bin/setupEnv.sh\n```\n\n```\n...\n# Add your floating license\nexport XILINXD_LICENSE_FILE=2100@<server_name>\n```\n\n"
    },
    {
      "title": "Nodeblocked License",
      "level": 3,
      "content": "Generate a license file at https://www.xilinx.com/getlicense . You will shortly receive an automatically generated email with the license file Xilinx.lic. Download this to ${HOME}/.Xilinx directory.\n\n"
    }
  ]
}