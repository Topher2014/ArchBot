{
  "title": "Steam",
  "url": "https://wiki.archlinux.org/title/Steam",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Steam/Troubleshooting\n- Steam/Game-specific troubleshooting\n- Gaming\n- Gamepad\n- List of games\n- Gamescope\n\nSteam is a popular game distribution platform by Valve.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Enable the multilib repository and install the steam package (recommended) or alternatively the steam-native-runtime package for running Steam with native system libraries. See /Troubleshooting#Steam runtime.\n\nIn order to run Steam on Arch Linux:\n\n- You must install the 32-bit version of the OpenGL graphics driver appropriate for your system.\n- If not already done during installation, you must generate the en_US.UTF-8 locale to prevent invalid pointer errors.\n- If you need to add library folders or add non-Steam games to your Steam library, install XDG Desktop Portal with a backend providing a file chooser.\n- Since the GUI heavily uses the Arial font, you should either: Use a free alternative such as ttf-liberation. Follow Microsoft fonts to install the original fonts. Apply the workaround at Steam/Troubleshooting#Text is corrupt or missing to use a different font face.\n- If using systemd-networkd for network management, install lib32-systemd in order for Steam to be able to connect to its servers.\n- If using systemd-resolved for DNS, follow the steps to fix /etc/resolv.conf in order for Steam to be able to resolve hostnames.\n- If using the Big Picture Mode (Steam Deck UI), NetworkManager may be required for the network-related panels to work correctly.\n- vm.max_map_count must be increased in order to run some games without crashing, see Gaming#Increase vm.max_map_count.\n\n- Use a free alternative such as ttf-liberation.\n- Follow Microsoft fonts to install the original fonts.\n- Apply the workaround at Steam/Troubleshooting#Text is corrupt or missing to use a different font face.\n\n"
    },
    {
      "title": "SteamCMD",
      "level": 3,
      "content": "Install steamcmdAUR for the command-line version of Steam.\n\n"
    },
    {
      "title": "Directory structure",
      "level": 2,
      "content": "The default Steam install location is ~/.local/share/Steam. If Steam cannot find it, it will prompt you to reinstall it or select the new location. This article uses the ~/.steam/root symlink to refer to the install location.\n\n"
    },
    {
      "title": "Library folders",
      "level": 3,
      "content": "Every Steam application has a unique AppID, which you can find by either looking at its Steam Store page path or visiting SteamDB.\n\nSteam installs games into a directory under LIBRARY/steamapps/common/. LIBRARY normally is ~/.steam/root but you can also have multiple library folders (Steam > Settings > Storage > (+) Add Drive).\n\nIn order for Steam to recognize a game it needs to have an appmanifest_AppId.acf file in LIBRARY/steamapps/. The appmanifest file uses the KeyValues format and its installdir property determines the game directory name.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "```\nsteam [ -options ] [ steam:// URL ]\n```\n\nFor the available command-line options see the Command Line Options article on the Valve Developer Wiki.\n\nSteam also accepts an optional Steam URL, see the Steam browser procotol.\n\n"
    },
    {
      "title": "Launch options",
      "level": 2,
      "content": "When you launch a Steam game, Steam executes its launch command with /bin/sh. To let you alter the launch command Steam provides launch options, which can be set for a game by right-clicking on it in your library, selecting Properties and clicking on Set Launch Options.\n\nBy default Steam simply appends your option string to the launch command. To set environment variables or pass the launch command as an argument to another command you can use the %command% substitute.\n\n"
    },
    {
      "title": "Examples",
      "level": 3,
      "content": "- only arguments: -foo\n- environment variables: FOO=bar BAZ=bar %command% -baz\n- completely different command: othercommand # %command%\n\n"
    },
    {
      "title": "Start Minimized",
      "level": 3,
      "content": "It is possible to have Steam start minimized to the system tray, rather than taking focus. Add -silent to the list of command line arguments; see Desktop entries#Modify desktop files for doing this by default.\n\n"
    },
    {
      "title": "Small Mode",
      "level": 3,
      "content": "Steam supports an alternative, minimal UI with just your game list - the store, community and cover collection views are hidden. You can switch to it with View > Small Mode. To go back to the standard UI, select View > Large Mode.\n\n"
    },
    {
      "title": "Proton Steam-Play",
      "level": 3,
      "content": "Valve developed a compatibility tool for Steam Play based on Wine and additional components named Proton. It allows you to launch many Windows games (see compatibility list).\n\nIt is open-source and available on GitHub. Steam will install its own versions of Proton when Steam Play is enabled.\n\nProton needs to be enabled on Steam client: Steam > Settings > Compatibility. You can enable Steam Play for games that have and have not been whitelisted by Valve in that dialog.\n\nProton supports Easy AntiCheat integration if the developer activates it, however EAC may require a particular patched version of glibc: if a game is been reported to be working but is not in your machine, try using Steam Flatpak because it comes with glibc patched. Additionally, setting the procfs mount option hidepid to a hardened value may cause Easy Anti-Cheat to fail with the message \"Launch Error: 261\".\n\n"
    },
    {
      "title": "Force Proton usage",
      "level": 4,
      "content": "If needed, to force enable Proton or a specific version of Proton for a game, right click on the game, click Properties > Compatibility > Force the use of a specific Steam Play compatibility tool, and select the desired version. Doing so can also be used to force games that have a Linux port to use the Windows version.\n\n"
    },
    {
      "title": "Use Proton outside of Steam",
      "level": 4,
      "content": "You can install proton-cachyosAUR, but extra setup is required to work with Steam. See the Proton GitHub for details on how Steam recognizes Proton installs.\n\n"
    },
    {
      "title": "Steam Input",
      "level": 3,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nWhen a controller is plugged in while Steam is running, Steam's default behavior is to leave it alone and let games use it as-is. The gamepad's evdev and joystick devices are exposed by the kernel, and games may use them using APIs such as SDL2 as if Steam were not in the picture.\n\nThe Steam Input subsystem offers an abstraction layer which allows for more advanced functionality such as rebinding buttons and axes, having game-specific profiles, and doing higher-level button mappings based on in-game actions. The Steam Input Configurator (SIC) is the part of the system that implements this functionality. To enable Steam Input for a controller, go to Steam > Settings > Controller > General Controller Setting. [3] This will open a menu from the Big Picture settings, where you can enable the Configuration Support option corresponding to your controller.\n\n"
    },
    {
      "title": "Steam Input Configurator",
      "level": 4,
      "content": "When SIC is enabled for a controller, there are a few different controller devices:\n\n- The virtual Steam Controller, used by games that utilize the Steam Input API. All rebindings and Steam-specific features are functional. This is not to be confused with the Valve Steam Controller, the physical controller.\n- An evdev device representing an emulated Xbox 360 controller, used by games that do not support Steam Input. Basic rebindings are in effect. [4]\n- The original controller evdev device, whose inputs are passed through the SIC. Rebindings are not in effect, but games should be defaulting to the 360 controller instead.\n- The joystick analogues of the above two devices.\n\n- This is not to be confused with the Valve Steam Controller, the physical controller.\n\nThe SIC's behavior is context dependent:\n\n- When launching a game that supports the Steam Input API, it is using the SIC in native mode. The game receives \"actions\" rather than raw inputs to handle. This works for games running in Proton that would be using Steam Input on Windows. Even though it's theoretically not needed, the emulated 360 controller is still present. A game may choose to provide both support for the Steam Input, and traditional input API libraries that defer to evdev and joystick under the hood. When the game is launched with Steam and with SIC enabled for the controller, Steam Input takes higher priority. A game can also choose to only support Steam Input. For example, in Among Us, a gamepad will not work unless you have the SIC running.\n- When launching a game that does not support Steam Input, it is (unknowingly) using the SIC in legacy mode. The game receives its expected low-level raw inputs from what seems to be a 360 controller, but they are actually spoofed by the SIC to emulate the desired behavior of native mode. This is the case for native games that use evdev or joystick, as well as Windows games running through Proton that use DirectInput or XInput.\n- When launching a game that supports neither Steam Input nor other gamepad APIs, SIC can activate a profile that emulates gamepad support as described below.\n- When Big Picture has focus, the current Big Picture profile is in effect, configurable via Steam > Settings > Controller > Big Picture Configuration.\n- When anything else has focus, the current Desktop profile is in effect, configurable via Steam > Settings > Controller > Desktop Configuration.\n- When anything has focus, additional global bindings can be configured via Steam > Settings > Controller > Guide Button Chord Configuration.\n\n- This works for games running in Proton that would be using Steam Input on Windows.\n- Even though it's theoretically not needed, the emulated 360 controller is still present.\n- A game may choose to provide both support for the Steam Input, and traditional input API libraries that defer to evdev and joystick under the hood. When the game is launched with Steam and with SIC enabled for the controller, Steam Input takes higher priority.\n- A game can also choose to only support Steam Input. For example, in Among Us, a gamepad will not work unless you have the SIC running.\n\n- This is the case for native games that use evdev or joystick, as well as Windows games running through Proton that use DirectInput or XInput.\n\nGames are rated on how comprehensive their gamepad support is. A game can have one of three icons in the Big Picture UI: [5]\n\n- A full gamepad icon, indicating that the game has full controller support. This can be achieved even if the game does not use the Steam Input API; the focus is on accessibility regardless of API.\n- A half-filled gamepad icon, indicating that the game has partial gamepad support. Even if the game is using the Steam Input API, there are instances like Team Fortress 2 where certain parts are still inaccessible to warrant this rating.\n- A keyboard icon, indicating the game does not have native gamepad support.\n\nIn cases where the game does not have full gamepad support, SIC tries to fill the gaps. For example, in Bloons Tower Defense 5, a game that requires you to point and click, Steam will automatically activate the Keyboard (WASD) and Mouse profile, allowing you to use your gamepad to move and click.\n\n"
    },
    {
      "title": "Recommended Steam Input usage",
      "level": 4,
      "content": "To summarize what this all means for usage:\n\n- Enabling \"Configuration Support\" in the Big Picture settings is recommended for enhanced gamepad support such as rebinding to one's liking, or automated fixes like Nintendo-style button remapping or keyboard/mouse.\n- For some games, enabling this is outright required if they do not support traditional gamepad APIs.\n- By default, if you have enabled this, then the controller will not work with non-Steam games because the 360 controller takes precedence over the original controller device, but the default Desktop profile has the buttons disabled. To fix this, you can either: Set your Desktop profile to the template for Gamepad. This will pass through the inputs to the 360 controller, making the default device usable for other programs. Have the other game use the original device if it supports this. Note that the game will not benefit from any Steam Input rebindings. Disable the whole feature for the controller so Steam does not create the 360 controller at all. Note that Steam games would then not benefit from the enhanced gamepad support. Close Steam when using the other games.\n\n- Set your Desktop profile to the template for Gamepad. This will pass through the inputs to the 360 controller, making the default device usable for other programs.\n- Have the other game use the original device if it supports this. Note that the game will not benefit from any Steam Input rebindings.\n- Disable the whole feature for the controller so Steam does not create the 360 controller at all. Note that Steam games would then not benefit from the enhanced gamepad support.\n- Close Steam when using the other games.\n\n"
    },
    {
      "title": "Disabling Steam Input",
      "level": 4,
      "content": "If you wish to completely disable Steam Input, launch steam with the -nojoy argument, and also disable Steam Input for each game individually, as there is no global option for doing so.\n\n"
    },
    {
      "title": "HiDPI",
      "level": 3,
      "content": "See HiDPI#Steam.\n\n"
    },
    {
      "title": "Big Picture Mode from a display manager",
      "level": 3,
      "content": "To start Steam in Big Picture Mode from a display manager with Gamescope as its compositor:\n\n- Install gamescope\n- Create the following desktop entry with the following contents:\n\n```\n/usr/share/wayland-sessions/steam-big-picture.desktop\n```\n\n```\n[Desktop Entry]\nName=Steam Big Picture Mode\nComment=Start Steam in Big Picture Mode\nExec=/usr/bin/gamescope -e -- /usr/bin/steam -tenfoot\nType=Application\n```\n\n"
    },
    {
      "title": "Steam skins",
      "level": 3,
      "content": "The Steam interface can be customized using skins. Follow this Steam guide for more information.\n\nSome skins updated for the 2023 UI are:\n\n- Adwaita for Steam\n- Shiina's Steam Skins\n- Zehn\n- More skins are available in the guide linked above.\n\n"
    },
    {
      "title": "Changing the Steam notification position",
      "level": 3,
      "content": "The default Steam notification position is bottom right.\n\nYou can change the Steam notification position by altering Notifications.PanelPosition in\n\n- resource/styles/steam.styles for desktop notifications, and\n- resource/styles/gameoverlay.styles for in-game notifications\n\nBoth files are overwritten by Steam on startup and steam.styles is only read on startup.\n\n"
    },
    {
      "title": "Use a skin",
      "level": 4,
      "content": "You can create a skin to change the notification position to your liking. For example to change the position to top right:\n\n```\n$ cd ~/.steam/root/skins\n$ mkdir -p Top-Right/resource\n$ cp -r ~/.steam/root/resource/styles Top-Right/resource\n$ sed -i '/Notifications.PanelPosition/ s/\"[A-Za-z]*\"/\"TopRight\"/' Top-Right/resource/styles/*\n```\n\n"
    },
    {
      "title": "Live patching",
      "level": 4,
      "content": "gameoverlay.styles can be overwritten while Steam is running, allowing you to have game-specific notification positions.\n\n```\n~/.steam/notifpos.sh\n```\n\n```\nsed -i \"/Notifications.PanelPosition/ s/\\\"[A-Za-z]*\\\"/\\\"$1\\\"/\" ~/.steam/root/resource/styles/gameoverlay.styles\n```\n\nAnd the #Launch options should be something like:\n\n```\n~/.steam/notifpos.sh TopLeft && %command%\n```\n\n"
    },
    {
      "title": "Steam Remote Play",
      "level": 3,
      "content": "Steam has built-in support for remote play.\n\nSee this Steam Community guide on how to setup a headless streaming server on Linux.\n\n"
    },
    {
      "title": "Sharing games with Windows when using Proton",
      "level": 3,
      "content": "If you use Proton (Steam Play) for launching your games, and still keep a Windows installation for some reason (for example, if some game has problems with anti cheat or if you want to make a comparison tests with Windows), you may want to store your games in a common partition instead of keeping two copies of game one per OS.\n\nTo add another folder for library, click on Steam > Settings > Downloads > STEAM LIBRARY FOLDERS, then on the ⊕ (Plus) button.\n\nThere are three file systems, that can be read/write by both Windows and Linux.\n\n"
    },
    {
      "title": "NTFS",
      "level": 4,
      "content": "See https://github.com/ValveSoftware/Proton/wiki/Using-a-NTFS-disk-with-Linux-and-Windows for more information on how to configure that. To launch games from an NTFS drive, follow the steps from Steam/Troubleshooting#Steam Library in NTFS partition.\n\nUsing ntfs has disadvantages. It happens often that shaders cache folder becomes corrupted. Messages saying ntfs3: sdb6 ino=1921f, steamapprun_pipeline_cache Looks like your dir is corrupt. You cannot fix that from linux. You need to boot to Windows and use chkdsk for that.\n\n"
    },
    {
      "title": "EXFAT",
      "level": 4,
      "content": "This FS has disadvantage that it is case-insensitive. You will get such message: SteamLibrary has both 'SteamApps' and 'steamapps' directories. This will cause problems. Please fix manually and only keep 'steamapps' See issue #7665\n\nAlso it is problematic to create symlinks on exfat, so you cannot use the method of symlinking compatdata as in ntfs method.\n\n"
    },
    {
      "title": "UDF",
      "level": 4,
      "content": "This file system can be used without a problem. The only thing to remember is that Linux has not yet write support to udf 2.50+. So just create a udf formatted partition in Gparded, and it will be 2.01.\n\n"
    },
    {
      "title": "Faster shader pre-compilation",
      "level": 3,
      "content": "In certain circumstances shader pre-compilation may only use one core, however this can be overridden by the user, example to use 8 cores:\n\n```\n~/.steam/steam/steam_dev.cfg\n```\n\n```\nunShaderBackgroundProcessingThreads 8\n```\n\n"
    },
    {
      "title": "Compatibility layers other than Proton",
      "level": 3,
      "content": "There are compatibility tools other than Proton/Wine.\n\n- Luxtorpeda — Run games using native Linux engines.\n\n- Boxtron — Run DOS games using native Linux DOSBox\n\nYou can also use protonup-qtAUR to manage them:\n\n1. Close Steam\n1. Install protonup-qtAUR\n1. Open protonup-qt and install desired tools\n1. Start Steam\n1. In the game properties window, select Force the use of a specific Steam Play compatibility tool and select the desired tool.\n\n"
    },
    {
      "title": "Run games using discrete GPU",
      "level": 3,
      "content": "On hybrid graphics laptops, Steam runs games using the integrated GPU by default. See PRIME#PRIME GPU offloading to switch to the more powerful discrete GPU for specific games.\n\n"
    },
    {
      "title": "Flatpak",
      "level": 3,
      "content": "Steam can also be installed with Flatpak as com.valvesoftware.Steam from Flathub. The easiest way to install it for the current user is by using the Flathub repository:\n\n```\n$ flatpak --user remote-add --if-not-exists flathub https://dl.flathub.org/repo/flathub.flatpakrepo\n$ flatpak --user install flathub com.valvesoftware.Steam\n$ flatpak run com.valvesoftware.Steam\n```\n\nThe Flatpak application currently does not support themes. Also you currently cannot run games via optirun/primusrun, see Issue#869 for more details.\n\nSteam installed via Flatpak is not able to access your home directory and overriding this will cause Steam to not run because it is not safe. However, you can freely add directories outside the home directory. If you want to add an external library, run the following command to add it:\n\n```\n$ flatpak override --user com.valvesoftware.Steam --filesystem=/path/to/directory\n```\n\nLaunching Steam with Flatpak might warn you about installing the steam-devices package. This package currently does not exist but game-devices-udevAUR can be installed instead, see Gamepad#Device permissions.\n\n"
    },
    {
      "title": "Asian Font Problems with Flatpak",
      "level": 4,
      "content": "If you are having problem getting Asian fonts to show in game, it is because org.freedesktop.Platform does not include it. First try mounting your local font :\n\n```\n$ flatpak run --filesystem=~/.local/share/fonts --filesystem=~/.config/fontconfig com.valvesoftware.Steam\n```\n\nIf that does not work, consider this hack: make the fonts available by directly copying the font files into org.freedesktop.Platform's directories, e.g.\n\n```\n/var/lib/flatpak/runtime/org.freedesktop.Platform/x86_64/version/hash/files/etc/fonts/conf.avail\n/var/lib/flatpak/runtime/org.freedesktop.Platform/x86_64/version/hash/files/etc/fonts/conf.d \n/var/lib/flatpak/runtime/org.freedesktop.Platform/x86_64/version/hash/files/share/fonts\n```\n\n"
    },
    {
      "title": "Steam Flatpak start (run) issues",
      "level": 4,
      "content": "After launch, Steam will try to download files and you will see a progress bar. If it crashes, you may try to give additional permissions to the flatpak package:\n\n```\n$ flatpak permission-set background background com.valvesoftware.Steam yes\n$ flatpak run com.valvesoftware.Steam\n```\n\nFor an alternative way to control permissions, install flatseal.\n\n"
    },
    {
      "title": "Steam settings to reduce video card memory usage",
      "level": 3,
      "content": "This is useful for video cards with a small amount of video memory.\n\nMake a copy of the Steam shortcut:\n\n```\n$ cp /usr/share/applications/steam.desktop ~/.local/share/applications/steam_minimal.desktop\n```\n\nand change the Exec= and Name= sections in the shortcut copy:\n\n```\n~/.local/share/applications/steam_minimal.desktop\n```\n\n```\nName=Steam Minimal (Runtime)\nExec=/usr/bin/steam -cef-disable-gpu-compositing -cef-disable-gpu steam://open/minigameslist %U\n```\n\nAs a result, when launching the Steam Minimal (Runtime) shortcut you will get an ascetic interface, which is still functional enough to install and run games, and when launching the standard Steam (Runtime) shortcut you will get a full-fledged client.\n\n"
    },
    {
      "title": "Troubleshooting",
      "level": 2,
      "content": "See Steam/Troubleshooting.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Gentoo:Steam\n- The Big List of DRM-Free Games on Steam at PCGamingWiki\n- Steam Linux store\n- Proton Compatibility tool for Steam Play based on Wine and additional components.\n- ProtonDB crowdsourced Linux compatibility reports.\n- are we anti cheat yet A comprehensive and crowd-sourced list of games using anti-cheats and their compatibility with GNU/Linux or Wine/Proton.\n\n"
    }
  ]
}