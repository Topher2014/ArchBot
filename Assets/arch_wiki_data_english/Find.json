{
  "title": "Find",
  "url": "https://wiki.archlinux.org/title/Find",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Command-line shell\n- General recommendations\n- Users and groups\n- pacman\n- systemd\n\nCore utilities are the basic, fundamental tools of a GNU/Linux system. This article provides an incomplete overview of them, links their documentation and describes useful alternatives. The scope of this article includes, but is not limited to, the GNU Core Utilities. Most core utilities are traditional Unix tools and many were standardized by POSIX but have been developed further to provide more features.\n\nMost command-line interfaces are documented in man pages, utilities by the GNU Project are documented primarily in Info manuals, some shells provide a help command for shell builtin commands. Additionally most utilities print their usage when run with the --help flag.\n\n"
    },
    {
      "title": "Essentials",
      "level": 2,
      "content": "The following table lists some important utilities which Arch Linux users should be familiar with. See also intro(1).\n\nTable content:\nPackage | Utility | Description | Documentation | Alternatives\nshell built-ins | cd | change directory | cd(1p) | #cd alternatives\nGNU coreutils | ls | list directory | ls(1), info | tree, #ls alternatives\ncat | concatenate files to stdout | cat(1), info | tac(1), #cat alternatives\nmkdir | make directory | mkdir(1), info\nrmdir | remove empty directory | rmdir(1), info\nrm | remove files or directories | rm(1), info | shred unlink(1)\ncp | copy files or directories | cp(1), info | #cp alternatives\nmv | move files or directories | mv(1), info\nln | make hard or symbolic links | ln(1), info | sln(8) (soname recovery)\nchown | change file owner and group | chown(1), info | chgrp(1)\nchmod | change file permissions | chmod(1), info\ndd | convert and copy a file | dd(1), info | #dd alternatives\ndf | report file system disk space usage | df(1), info | #df alternatives\ndu | estimate disk space used by files and directories | du(1), info | #du alternatives\nGNU tar | tar | tar archiver | tar(1), info | archivers\nGNU less | less | terminal pager | less(1) | terminal pagers\nGNU findutils | find | search files or directories | find(1), info, GregsWiki | #find alternatives\nGNU diffutils | diff | compare files line by line | diff(1), info | #diff alternatives\nGNU grep | grep | print lines matching a pattern | grep(1), info | #grep alternatives\nGNU sed | sed | stream editor | sed(1), info, one-liners | sad, sd\nGNU AWK (gawk) | AWK | pattern scanning and processing language | gawk(1), info | AWK#Alternative implementations\nutil-linux | dmesg | print or control the kernel ring buffer | dmesg(1) | systemd journal\nlsblk | list block devices | lsblk(8)\nmount | mount a filesystem | mount(8)\numount | unmount a filesystem | umount(8)\nsu | substitute user | su(1) | sudo, doas\nkill | terminate a process | kill(1) | pkill(1), killall(1)\nprocps-ng | pgrep | look up processes by name or attributes | pgrep(1) | pidof(1)\nps | show information about processes | ps(1) | top(1), system monitors\nfree | display amount of free and used memory | free(1)\n\n"
    },
    {
      "title": "Preventing data loss",
      "level": 3,
      "content": "rm, mv, cp and shell redirections happily delete or overwrite files without asking. rm, mv, and cp all support the -i flag to prompt the user before every removal / overwrite. Some users like to enable the -i flag by default using aliases. Relying upon these shell options can be dangerous, because you get used to them, resulting in potential data loss when you use another system or user that does not have them. The best way to prevent data loss is to create backups.\n\n"
    },
    {
      "title": "Nonessentials",
      "level": 2,
      "content": "This table lists core utilities that often come in handy.\n\nTable content:\nPackage | Utility | Description | Documentation | Alternatives\nshell built-ins | alias | define or display aliases | alias(1p)\ntype | print the type of a command | type(1p) | command(1p), whereis(1), which(1)\ntime | time a command | time(1p)\nGNU coreutils | tee | read stdin and write to stdout and files | tee(1), info | pee(1)\nmktemp | make a temporary file or directory | mktemp(1), info\nmknod | create named pipe or device node | mknod(1), mkfifo(1), info\ntruncate | shrink or extend the size of a file | truncate(1), info | fallocate(1)\nbasenc | encoding input and output it | basenc(1), base64(1), info\ncut | print selected parts of lines | cut(1), info | colrm(1), hck, choose\ntr | translate or delete characters | tr(1), info | uconv(1)\nod | dump files in octal and other formats | od(1), info | hexdump(1), vim's xxd(1)\nsort | sort lines | sort(1), info\nuniq | report or omit repeated lines | uniq(1), info | anewer, runiqAUR, huniq-gitAUR\ncomm | compare two sorted files line by line | comm(1), info | zetAUR\nhead | output the first part of files | head(1), info\njoin | join lines of two inputs on a common field | join(1), info | combine(1) zetAUR\nmd5sum | calculate cryptography hash functions of inputs and output | sha256sum(1), sha512sum(1), info | shasum(1), rhash(1)\ntail | output the last part of files, or follow files | tail(1), info\nwc | print newline, word and byte count | wc(1), info\nGNU binutils | strings | print printable characters in binary files | strings(1), info | stringsextAUR\nutil-linux | column | columnate file, optionally pretty-printing in table with grid | column(1) | paste(1), csviewAUR\nGNU findutils | xargs | combine or template arguments from stdin to invoke external command | xargs(1) | parallel(1) (parallel_alternatives(7))\nGNU glibc | iconv | convert character encodings | iconv(1) | recode, uconv(1)\nGNU sharutils | uudecode | encode file into email friendly text | uuencode(1), uudecode(1), info | uudeview(1)\nfile | file | guess file type | file(1)\n\nThe moreutils package provides useful tools like sponge(1) that are missing from the GNU coreutils.\n\n"
    },
    {
      "title": "Alternatives",
      "level": 2,
      "content": "Alternative core utilities are provided by the following packages:\n\n- BusyBox — Utilities for rescue and embedded systems.\n\n- Toybox — An all-in-one Linux command line.\n\n- uutils — Cross-platform Rust rewrite of the GNU coreutils.\n\n- Heirloom Toolchest — Traditional implementations of standard Unix utilities.\n\n- 9base — A port of various original Plan9 tools to unix.\n\n- sbase — A suckless variant of the *nix core utilities.\n\n- ubase — An extension of the sbase utilities.\n\n"
    },
    {
      "title": "cat alternatives",
      "level": 3,
      "content": "- bat — A cat clone with syntax highlighting and Git integration.\n\n"
    },
    {
      "title": "cd alternatives",
      "level": 3,
      "content": "- zoxide — A smart cd command that learns your habits, allowing you to navigate anywhere in just a few keystrokes.\n\n- autojump — A faster way to navigate your filesystem from the command line.\n\nSee also Bash#Auto \"cd\" when entering just a path and Zsh#Remembering recent directories.\n\n"
    },
    {
      "title": "date alternatives",
      "level": 3,
      "content": "Note: **This article or section is a candidate for moving to List of applications/Other.** This article or section is a candidate for moving to List of applications/Other.\n\nThis article or section is a candidate for moving to List of applications/Other.\n\n- dateutils — Nifty command line date and time utilities; fast date calculations and conversion in the shell.\n\n- pdd — Tiny datetime diff calculator.\n\n"
    },
    {
      "title": "cp alternatives",
      "level": 3,
      "content": "Using rsync#As cp/mv alternative allows you to resume a failed transfer, to show the transfer status, to skip already existing files and to make sure of the destination files integrity using checksums.\n\n"
    },
    {
      "title": "ls alternatives",
      "level": 3,
      "content": "- broot — A new way to see and navigate directory trees.\n\n- clifm — A file manager that can list files like ls(1) would (plus icons and RGB colors support).\n\n- eza — Another ls replacement with color support, tree view, git integration and other features. Based on exa, which is no longer supported.\n\n- lsd — Modern ls with a lot of pretty colors and awesome icons.\n\n"
    },
    {
      "title": "find alternatives",
      "level": 3,
      "content": "- fd — Simple, fast and user-friendly alternative to find. Ignores hidden and .gitignore'd files by default.\n\n- fuzzy-find — Fuzzy completion for finding files.\n\n- plocate — A much faster locate.\n\n- rawhide — find files using pretty C expressions.\n\nFor graphical file searchers, see List of applications/Utilities#File searching.\n\n"
    },
    {
      "title": "diff alternatives",
      "level": 3,
      "content": "While diffutils does not provide a word-wise diff, several other programs do:\n\n- git diff can do a word diff with --color-words, using --no-index it can also be used for files outside of Git working trees.\n- cwdiff — A GNU wdiff wrapper that colorizes the output.\n\n- git-delta — A syntax-highlighting pager for git, diff, and grep output.\n\n- dwdiff — A word diff front-end for the diff program; supports colors.\n\n- icdiff — A colorized diff tool written in Python. \"Improved color diff\" is meant to supplement normal diff use.\n\n- wdiff — A wordwise implementation of GNU diff; does not support colors.\n\nSee also List of applications/Utilities#Comparison, diff, merge.\n\n"
    },
    {
      "title": "grep alternatives",
      "level": 3,
      "content": "- mgrep — A multiline grep.\n\n- pdfgrep — A tool to search text in PDF files.\n\n- ripgrep-all — Search in plain text and also in PDFs, E-Books, Office documents, zip, tar.gz.\n\n"
    },
    {
      "title": "Code searchers",
      "level": 4,
      "content": "These tools aim to replace grep for code search. They do recursive search by default, skip binary files and respect .gitignore.\n\n- ack — A Perl-based grep replacement, aimed at programmers with large trees of heterogeneous source code.\n\n- ripgrep (rg) — A search tool that combines the usability of ag with the raw speed of grep.\n\n- The Silver Searcher (ag) — Code searching tool similar to ack, but faster.\n\n- ugrep (ug) — Ultrafast grep with interactive user interface, fuzzy search, boolean queries, hexdumps and more.\n\nSee also: cscope.\n\n"
    },
    {
      "title": "Interactive filters",
      "level": 4,
      "content": "- fzf — General-purpose command-line fuzzy finder, powered by find by default.\n\n- fzy — A fast, simple fuzzy text selector with an advanced scoring algorithm.\n\n- peco — Simplistic interactive filtering tool.\n\n- percol — Adds flavor of interactive filtering to the traditional pipe concept of the UNIX shell.\n\n- skim — Fuzzy finder written in Rust, similar to fzf.\n\n"
    },
    {
      "title": "dd alternatives",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nSee also: dd and ddrescue\n\n"
    },
    {
      "title": "Alternative dd implementations",
      "level": 4,
      "content": "This subsection lists dd implementations whose interface and default behaviour is mostly compliant with the POSIX specification of dd(1p).\n\n- ddpt — A portable rewrite of sg_dd(8) by the SCSI subsystem maintainer of the Linux kernel, with optional but very specialised hardware I/O (SCSI command sets) support, plus many other features.\n\n- sdd — A dd implementation portable across UNIX environments by Joerg Schilling, that can checksum the copied data and retry reading bad blocks.\n\nThe GNU implementation of dd found in coreutils also conforms to POSIX. This subsection lists its forks.\n\n- dcfldd — feature-enhanced fork of GNU dd for forensics and security scenarios, includes on-the-fly hashing capability, flexible wipes, write verification, output to multiple targets at the same time, split and piped output.\n\n- dc3dd — Another patched version of GNU dd from the United States Department of Defense Cyber Crime Center (DC3), with similar goals and features to dcfldd.\n\n"
    },
    {
      "title": "Modernised dd analogues",
      "level": 4,
      "content": "This subsection lists dd alternatives that do not conform to POSIX (in terms of the JCL-resembling command-line syntax and default behaviour).\n\n- dd_rescue — A feature-packed, modernised dd analogue that is suitable for daily scripting, disk cloning, and data recovery.\n\n- rw — Minimal and portable dd analogue with conventional command-line flags.\n\n"
    },
    {
      "title": "buffer spin-offs",
      "level": 4,
      "content": "This subsection lists forks of bufferAUR, a general-purpose I/O buffering utility similar to dd but has a dynamic-sized buffer. It supports blockwise I/O and can be used when dumping from/to an LTO-tape to avoid shoe shining.\n\n- mbuffer — Continuation of the buffer utility with threading and other features.\n\n"
    },
    {
      "title": "df alternatives",
      "level": 3,
      "content": "- duf — A disk usage/free utility.\n\n"
    },
    {
      "title": "du alternatives",
      "level": 3,
      "content": "- cdu — du wrapper with colors and a pretty histogram.\n\n- dust — A more intuitive version of du, in Rust.\n\n- dua — Fast disk usage analyzer, supports deleting files, written in Rust.\n\n- gdu — Disk usage analyzer with console interface, written in Go.\n\n- ncdu — An extremely lightweight and simple ncurses based disk usage analyzer, written in Zig.\n\nSee also List of applications/Utilities#Disk usage display.\n\n"
    },
    {
      "title": "POSIX shell utilities",
      "level": 2,
      "content": "Many common packages already install most popular POSIX utilities as dependencies, but the posix metapackage can be installed to ensure all of them being always present.\n\nBeside mandatory utilities, there are also metapackages for some of the optional categories:\n\n- posix-c-development\n- posix-software-development\n- posix-user-portability\n- posix-xsi\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GNU Coreutils documentation\n- GNU Coreutils FAQ\n- Coreutils Gotchas: GNU coreutils maintainer's notes about some confusing behaviour in coreutils components\n- POSIX utilities\n\n"
    }
  ]
}