{
  "title": "Mumble",
  "url": "https://wiki.archlinux.org/title/Mumble",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Discord\n- TeamSpeak\n\nFrom Wikipedia, the free encyclopedia:\n\nThis page goes over installation and configuration of both the client portion of the software (Mumble) and the server portion (Murmur).\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the mumble package (or mumble-gitAUR for the development version).\n\n"
    },
    {
      "title": "Configuration",
      "level": 3,
      "content": "When you first launch the client, a configuration wizard will take you through the setup process. Settings can be changed later through the menu.\n\nFor a discussion of advanced settings, see the official documentation. The Mumbleguide is a good starting point.\n\n"
    },
    {
      "title": "Server",
      "level": 2,
      "content": "The Mumble project maintains a good guide for setting up the server. What follows is a quick-and-dirty, abridged version of that guide.\n\n"
    },
    {
      "title": "Installation",
      "level": 3,
      "content": "Install the mumble-server or murmur-gitAUR package. Both come with ICE support.\n\nThe post-install script will tell you to reload dbus and set the supervisor password. SQLite is used as the default database. The default configuration does not use dbus, so you can ignore that if you want. Setting the supervisor password is recommended, however.\n\n"
    },
    {
      "title": "Set supervisor password",
      "level": 4,
      "content": "To set the supervisor password, run this command as the mumble-server user (default _mumble-server):\n\n```\n[_mumble-server]$ mumble-server -ini /etc/mumble/mumble-server.ini -supw PASSWORD\n```\n\nThis will also create a SQLite database in the defined directory inside of the configuration file /etc/mumble/mumble-server.ini\n\n"
    },
    {
      "title": "Network",
      "level": 4,
      "content": "If you use a firewall, you will need to open TCP and UDP ports 64738. Depending on your network, you may also need to set a static IP, port forwarding, etc.\n\n"
    },
    {
      "title": "Configuration File",
      "level": 4,
      "content": "The default Murmur configuration file is at /etc/mumble/mumble-server.ini and is heavily commented. Reading through all the comments is highly recommended. More information can be found on the Mumble wiki here.\n\n"
    },
    {
      "title": "Startup",
      "level": 4,
      "content": "Enable/start mumble-server.service. If all went smoothly, you should have a functioning Murmur server.\n\n"
    },
    {
      "title": "SSL/TLS",
      "level": 4,
      "content": "Obtain either a self-signed certificate as described in OpenSSL, or a publicly trusted one with Let's Encrypt.\n\nEdit mumble-server.ini and tell it where your key and cert are:\n\n```\n/etc/mumble/mumble-server.ini\n```\n\n```\nsslCert=/etc/letsencrypt/live/$domain/cert.pem\nsslKey=/etc/letsencrypt/live/$domain/privkey.pem\nsslCA=/etc/letsencrypt/live/$domain/fullchain.pem\n```\n\nNote: For example, if using a certbot systemd unit, adding this to the end of the ExecStart line in the unit file would reload the certificate after a new one is issued:\n\nFor example, if using a certbot systemd unit, adding this to the end of the ExecStart line in the unit file would reload the certificate after a new one is issued:\n\n```\n--deploy-hook \"/usr/bin/killall -SIGUSR1 mumble-server\"\n```\n\n"
    },
    {
      "title": "Push-to-talk on Wayland",
      "level": 3,
      "content": "Currently with Wayland/GNOME/Sway, push-to-talk will not work without the window being in focus. Not allowing clients to sniff on the input when they do not have focus is a feature in Wayland, and it will be kept that way.\n\nSince Mumble 1.4, the Mumble IPC can be used to toggle push-to-talk:\n\n```\n$ mumble rpc starttalking\n$ mumble rpc stoptalking\n```\n\n"
    }
  ]
}