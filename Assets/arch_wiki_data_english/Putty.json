{
  "title": "Putty",
  "url": "https://wiki.archlinux.org/title/Putty",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- ssh\n- telnet\n- Proxy settings\n\nPuTTY is a port of the popular GUI SSH, Telnet, Rlogin and serial port connection client for Windows. It has support for advanced logging and termcap options, as well as a very configurable appearance and the ability to forward ports or create a SOCKS tunnel through an SSH destination. To start, simply run PuTTY, type the hostname of the host you would like to connect to and hit Open.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install putty.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "The settings can be modified through the tabs on the left; however, they will be reset if not saved. To save your settings, type a name into the box under Saved Sessions and click save. To load it again later, click the name of your save and click load. This allows you to persist your visual, termcap and connection settings between connections and also lets you keep one save per regularly used host. The save \"Default Settings\" is automatically loaded every time you start PuTTY, so save under that name with care.\n\n"
    },
    {
      "title": "Importing keys",
      "level": 2,
      "content": "PuTTY uses its own format to store the private keys on the client side. To import a key that you had previously generated, you need to use the puttygen command.\n\n```\n$ puttygen keyfile -o output-keyfile.ppk\n```\n\nwhere keyfile is an existent private keyfile, and output-keyfile.ppk is the file that will receive the key.\n\nIf the keyfile is protected with a passphrase, you will be prompted to input it, but the key will still be protected afterwards in the output-keyfile.ppk.\n\nAfter that, you can import it to make an SSH connection: Connection > SSH > Auth > Private key file for authentication and click on Browse... to add it.\n\n"
    },
    {
      "title": "256 color support",
      "level": 2,
      "content": "Settings > Connection > Data : Terminal-type string = putty-256color\n\nTo test color support, execute the following command[1]:\n\n```\nfor code in {0..255}; do echo -e \"\\e[38;05;${code}m $code: Test\"; done\n```\n\nSee 256colours for details.\n\n"
    }
  ]
}