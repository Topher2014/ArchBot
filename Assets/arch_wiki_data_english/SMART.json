{
  "title": "SMART",
  "url": "https://wiki.archlinux.org/title/SMART",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "S.M.A.R.T. (Self-Monitoring, Analysis, and Reporting Technology) is a supplementary component built into many modern storage devices through which devices monitor, store, and analyze the health of their operation. Statistics are collected (temperature, number of reallocated sectors, seek errors...) which software can use to measure the health of a device, predict possible device failure, and provide notifications on unsafe values.\n\n"
    },
    {
      "title": "Smartmontools",
      "level": 2,
      "content": "The smartmontools package contains two utility programs for analyzing and monitoring storage devices: smartctl and smartd and a 3rd database update utility update-smart-drivedb.\n\nInstall the smartmontools package to use these tools.\n\nSMART support must be available and enabled on each storage device to effectively use these tools. You can use #smartctl to check for and enable SMART support. That done, you can manually #Run a test and #View test results, or you can use #smartd to automatically run tests and email notifications.\n\n"
    },
    {
      "title": "smartctl",
      "level": 3,
      "content": "smartctl is a command-line tool that \"controls the Self-Monitoring, Analysis and Reporting Technology (SMART) system built into most ATA/SATA and SCSI/SAS hard drives and solid-state drives.\"\n\nThe -i/--info option prints a variety of information about a device, including whether SMART is available and enabled:\n\n```\n# smartctl --info /dev/sda | grep 'SMART support is:'\n```\n\n```\nSMART support is: Available - device has SMART capability.\nSMART support is: Enabled\n```\n\nIf SMART is available but not enabled, you can enable it:\n\n```\n# smartctl --smart=on /dev/device\n```\n\nYou may need to specify a device type. For example, specifying --device=ata tells smartctl that the device type is ATA, and this prevents smartctl from issuing SCSI commands to that device.\n\n"
    },
    {
      "title": "Run a test",
      "level": 4,
      "content": "There are three types of self-tests that a device can execute (all are safe to user data):\n\n- Short: runs tests that have a high probability of detecting device problems,\n- Extended or Long: the test is the same as the short check but with no time limit and with complete disk surface examination,\n- Conveyance: identifies if damage incurred during transportation of the device.\n- Selective: tests a range of LBA (read smartctl(8) § t for more).\n\nThe -c/--capabilities flag prints which tests a device supports and the approximate execution time of each test. For example:\n\n```\n# smartctl -c /dev/sda\n```\n\n```\n...\nShort self-test routine\nrecommended polling time:        (   1) minutes.\nExtended self-test routine\nrecommended polling time:        (  74) minutes.\nConveyance self-test routine\nrecommended polling time:        (   2) minutes.\n...\n```\n\nUse -t/--test=test_name flag to run a test:\n\n```\n# smartctl -t short /dev/device\n# smartctl -t long /dev/device\n# smartctl -t conveyance /dev/device\n# smartctl -t select,123+345 /dev/device\n```\n\n"
    },
    {
      "title": "View test results",
      "level": 4,
      "content": "You can view a device's overall health with the -H flag. \"If the device reports failing health status, this means either that the device has already failed, or that it is predicting its own failure within the next 24 hours. If this happens […] get your data off the disk and to someplace safe as soon as you can.\"\n\n```\n# smartctl -H /dev/device\n```\n\nYou can also view a list of recent test results and detailed information about a device:\n\n```\n# smartctl -l selftest /dev/device\n# smartctl -x /dev/device\n```\n\n"
    },
    {
      "title": "Generate table with attributes of all disks",
      "level": 4,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\n```\n#!/bin/bash\nfunction drives_csv {\n\tdeclare -A drive_values\n\tfor d in `smartctl --scan -d scsi | cut -d' ' -f1`; do\n\t\tdrive_values[\"-Drive-----------------\"]=\"${drive_values[-Drive-----------------]},$d\"\n\t\tfor l in `smartctl -A $d | grep ATTRIBUTE_NAME -A30 | grep -v ATTRIBUTE_NAME | column -H1,3,4,5,6,7,8,9,11,12,13,14,15 -t -o, | sed 's/ //g'`; do\n\t\t\tkey=`echo $l | cut -d',' -f1`\n\t\t\tvalue=`echo $l | cut -d',' -f2`\n\t\t\texisting=${drive_values[\"$key\"]}\n\t\t\tdrive_values[\"${key}\"]=\"${existing},${value}\"\n\t\t\t#~ echo \"${key},${drive_values[$key]}\"\n\t\tdone\n\tdone\n\tfor key in \"${!drive_values[@]}\"; do\n\t\techo \"${key}${drive_values[$key]}\"\n\tdone | sort\n}\ndrives_csv | column -s, -t\n```\n\n"
    },
    {
      "title": "smartd",
      "level": 3,
      "content": "The smartd daemon monitors SMART statuses and emits notifications when something goes wrong. It can be managed with systemd and configured using the /etc/smartd.conf configuration file. The configuration file syntax is esoteric, and this wiki page provides only a quick reference. For more complete information, read the examples and comments within the configuration file, or read smartd.conf(5).\n\n"
    },
    {
      "title": "daemon management",
      "level": 4,
      "content": "To start the daemon, check its status, make it auto-start on system boot and read recent log file entries, simply start/enable the smartd.service systemd unit.\n\n"
    },
    {
      "title": "Define the devices to monitor",
      "level": 4,
      "content": "To monitor for all possible SMART errors on all disks, the following setting must be added in the configuration file.\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -a\n```\n\nNote this is the default smartd configuration and the -a parameter, which is the default parameter, may be omitted.\n\nTo monitor for all possible SMART errors on /dev/sda and /dev/sdb, and ignore all other devices:\n\n```\n/etc/smartd.conf\n```\n\n```\n/dev/sda -a\n/dev/sdb -a\n```\n\nTo monitor for all possible SMART errors on externally connected disks (USB-backup disks spring to mind) it is prudent to use persistent block device naming:\n\n```\n/etc/smartd.conf\n```\n\n```\n/dev/disk/by-uuid/820cdd8a-866a-444d-833c-1edb0f4becac -a\n```\n\nNote that you may additionally need -d removable for smartd to work.\n\nNow your USB disk will be monitored even if the /dev/sdX path changes during reboot.\n\n"
    },
    {
      "title": "Notifying potential problems",
      "level": 4,
      "content": "To have an email sent when a failure or new error occurs, use the -m option:\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -m address@domain.com\n```\n\nTo be able to send the email externally (i.e. not to the root mail account) a MTA (Mail Transport Agent) or a MUA (Mail User Agent) will need to be installed and configured. Common MUAs are msmtp and Postfix, but perhaps the easiest dma will suffice. Common MTAs are sendmail and Postfix. It is enough to simply configure S-nail if you do not want anything else, but you will need to follow these instructions.\n\nThe -M test option causes a test email to be sent each time the smartd daemon starts:\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -m address@domain.com -M test\n```\n\nEmails can take quite a while to be delivered. To make sure you are warned immediately if your hard drive fails, you may also define a script to be executed in addition to the email sending:\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -m address@domain.com -M exec /usr/local/bin/smartdnotify\n```\n\nTo send an email and a system notification, put something like this into /usr/local/bin/smartdnotify:\n\n```\n#!/bin/sh\n# Send email\necho \"$SMARTD_MESSAGE\" | mail -s \"$SMARTD_FAILTYPE\" \"$SMARTD_ADDRESS\"\n# Notify user\nwall \"$SMARTD_MESSAGE\"\n```\n\nIf you are running a desktop environment, you might also prefer having a popup to appear on your desktop. In this case, you can use this script (replace user with the user):\n\n```\n/usr/local/bin/smartdnotify\n```\n\n```\n#!/bin/sh\n\nsystemd-run --machine=user@.host --user notify-send \"S.M.A.R.T Error ($SMARTD_FAILTYPE)\" \"$SMARTD_MESSAGE\" --icon=dialog-warning -u critical\n```\n\nThis requires libnotify and a compatible desktop notification server.\n\nYou can also put your custom scripts into /usr/share/smartmontools/smartd_warning.d/:\n\nThis scripts notifies every logged in users on the system via libnotify.\n\n```\n/usr/share/smartmontools/smartd_warning.d/smartdnotify\n```\n\n```\n#!/bin/sh\n\nfor users in $(loginctl list-users --json short | jq -r '.[].user') ; do\n\tsystemd-run --machine=\"$users\"@.host --user notify-send \"S.M.A.R.T Error ($SMARTD_FAILTYPE)\" \"$SMARTD_MESSAGE\" --icon=dialog-warning -u critical\ndone\n```\n\nThis script requires libnotify, jq and a compatible desktop notification server.\n\nYou can execute your custom scripts (remember to make them executable) with\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -m @smartdnotify\n```\n\n"
    },
    {
      "title": "Power management",
      "level": 4,
      "content": "If you use a computer under control of power management, you should instruct smartd how to handle disks in low power mode. Usually, in response to SMART commands issued by smartd, the disk platters are spun up. So if this option is not used, then a disk which is in a low-power mode may be spun up and put into a higher-power mode when it is periodically polled by smartd.\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -n standby,15,q\n```\n\nMore info on smartmontools wiki.\n\nOn some devices the -n does not work. You get the following error message in syslog:\n\n```\n# journalctl -u smartd\n```\n\n```\nCHECK POWER MODE: incomplete response, ATA output registers missing\nDevice: /dev/sdb [SAT], no ATA CHECK POWER STATUS support, ignoring -n Directive\n```\n\nAs an alternative, you can use the -i option of smartd. It controls how often smartd spins the disks up to check their status. Default is 30 minutes. To change it, edit /etc/conf.d/smartd.\n\n```\n/etc/conf.d/smartd\n```\n\n```\nSMARTD_ARGS=\"-i 10800\"  Check status every 10800 seconds (3 hours)\n```\n\nFor more info see smartd(8).\n\n"
    },
    {
      "title": "Schedule self-tests",
      "level": 4,
      "content": "smartd can tell disks to perform self-tests on a schedule. The following /etc/smartd.conf configuration will start a short self-test every day between 2-3am, and an extended self test weekly on Saturdays between 3-4am:\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -s (S/../.././02|L/../../6/03)\n```\n\n"
    },
    {
      "title": "Alert on temperature changes",
      "level": 4,
      "content": "smartd can track disk temperatures and alert if they rise too quickly or hit a high limit. The following will log changes of 4 degrees or more, log when temp reaches 35 degrees, and log/email a warning when temp reaches 40:\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -W 4,35,40\n```\n\n- You can determine the current disk temperature with the command smartctl -A /dev/device | grep Temperature_Celsius\n- If you have some disks that run a lot hotter/cooler than others, remove DEVICESCAN and define a separate configuration for each device with appropriate temperature settings.\n\n"
    },
    {
      "title": "Complete smartd.conf example",
      "level": 4,
      "content": "Putting together all of the above gives the following example configuration:\n\n- DEVICESCAN smartd scans for disks and monitors all it finds\n- -a monitor all attributes\n- -o on enable automatic offline data collection\n- -S on enable automatic attribute autosave\n- -n standby,q do not check if disk is in standby, and suppress log message to that effect so as not to cause a write to disk\n- -s ... schedule short and long self-tests\n- -W ... monitor temperature\n- -m ... mail alerts\n\n```\n/etc/smartd.conf\n```\n\n```\nDEVICESCAN -a -o on -S on -n standby,q -s (S/../.././02|L/../../6/03) -W 4,35,40 -m username-or-email\n```\n\n"
    },
    {
      "title": "update-smart-drivedb",
      "level": 3,
      "content": "This utility downloads the latest version of drivedb.h from the smartmontools source repository so that new drives and their parameters are understood.\n\nThe downloaded file can replace the default one located at /usr/share/smartmontools/drivedb.h and is a plaintext file that contains comma separated values for each drive.\n\nIf your drive is not yet recognised, it can be submitted upstream.\n\nSee update-smart-drivedb(8) for full command line options.\n\n"
    },
    {
      "title": "Console applications",
      "level": 2,
      "content": "- skdump — utility to monitor and manage SMART devices to monitor and report hard disk drive health.\n\n- iostat -x (from sysstat) also provides some disk health metrics: in particular, high values in the f_await column mean that the disk does not respond quickly to requests, and might be failing.\n\n"
    },
    {
      "title": "GUI applications",
      "level": 2,
      "content": "- DisKMonitor — Tools for KDE to monitor SMART devices and MDRaid health status.\n\n- GNOME Disks — GNOME frontend which uses libatasmart to monitor and report hard disk drive health. Part of gnome.\n\n- GSmartControl — GUI for smartctl. It allows you to inspect the drive's SMART data to determine its health, as well as run various tests on it.\n\n- Plasma Disks — Hard disk health monitoring for KDE Plasma. Part of plasma.\n\n- QDiskInfo — Frontend for smartctl. Provides a user experience similar to CrystalDiskInfo.\n\n- scrutiny — WebUI for smartd S.M.A.R.T monitoring.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Smartmontools Homepage\n- Smartmontools on Ubuntu Wiki\n- Gentoo: smartmontools\n\n"
    }
  ]
}