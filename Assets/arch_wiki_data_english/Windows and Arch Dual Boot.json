{
  "title": "Windows and Arch Dual Boot",
  "url": "https://wiki.archlinux.org/title/Windows_and_Arch_Dual_Boot",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This is an article detailing different methods of Arch/Windows coexistence.\n\n"
    },
    {
      "title": "Windows UEFI vs BIOS limitations",
      "level": 3,
      "content": "Microsoft imposes limitations on which firmware boot mode and partitioning style can be supported based on the version of Windows used:\n\n- Windows 8/8.1 and 10 x86 32-bit support booting in IA32 UEFI mode from GPT disk only, OR in BIOS mode from MBR disk only. They do not support x86_64 UEFI boot from GPT/MBR disk, x86_64 UEFI boot from MBR disk, or BIOS boot from GPT disk. On market, the only systems known to ship with IA32 (U)EFI are some old Intel Macs (pre-2010 models?) and Intel Atom System-on-Chip (Clover trail and Bay Trail) Windows Tablets, which boot ONLY in IA32 UEFI mode and ONLY from GPT disk.\n- Windows 8/8.1 and 10 x86_64 versions support booting in x86_64 UEFI mode from GPT disk only, OR in BIOS mode from MBR disk only. They do not support IA32 UEFI boot, x86_64 UEFI boot from MBR disk, or BIOS boot from GPT disk.\n- Windows 11 only supports x86_64 and a boot in UEFI mode from GPT disk.\n\nIn case of pre-installed Systems:\n\n- All systems pre-installed with Windows XP, Vista or 7 32-bit, irrespective of Service Pack level, bitness, edition (SKU) or presence of UEFI support in firmware, boot in BIOS/MBR mode by default.\n- MOST of the systems pre-installed with Windows 7 x86_64, irrespective of Service Pack level, bitness or edition (SKU), boot in BIOS/MBR mode by default. Very few late systems pre-installed with Windows 7 are known to boot in x86_64 UEFI/GPT mode by default.\n- ALL systems pre-installed with Windows 8/8.1, 10 and 11 boot in UEFI/GPT mode. Up to Windows 10, the firmware bitness matches the bitness of Windows, ie. x86_64 Windows boot in x86_64 UEFI mode and 32-bit Windows boot in IA32 UEFI mode.\n\nAn easy way to detect the boot mode of Windows is to do the following[1]:\n\n- Boot into Windows\n- Press Win+R keys to start the Run dialog\n- In the Run dialog type msinfo32 and press Enter\n- In the System Information windows, select System Summary on the left and check the value of BIOS mode item on the right\n- If the value is UEFI, Windows boots in UEFI/GPT mode. If the value is Legacy, Windows boots in BIOS/MBR mode.\n\nIn general, Windows forces type of partitioning depending on the firmware mode used, i.e. if Windows is booted in UEFI mode, it can be installed only to a GPT disk. If Windows is booted in Legacy BIOS mode, it can be installed only to an MBR disk. This is a limitation enforced by Windows Setup, and as of April 2014 there is no officially (Microsoft) supported way of installing Windows in UEFI/MBR or BIOS/GPT configuration. Thus Windows only supports either UEFI/GPT boot or BIOS/MBR configuration.\n\nSuch a limitation is not enforced by the Linux kernel, but can depend on which boot loader is used and/or how the boot loader is configured. The Windows limitation should be considered if the user wishes to boot Windows and Linux from the same disk, since installation procedure of boot loader depends on the firmware type and disk partitioning configuration. In case where Windows and Linux dual boot from the same disk, it is advisable to follow the method used by Windows, ie. either go for UEFI/GPT boot or BIOS/MBR boot. See https://support.microsoft.com/kb/2581408 for more information.\n\n"
    },
    {
      "title": "Boot loader UEFI vs BIOS limitations",
      "level": 3,
      "content": "Most of the Linux boot loaders installed for one firmware type cannot launch or chainload boot loaders of the other firmware type. That is, if Arch is installed in UEFI/GPT or UEFI/MBR mode in one disk and Windows is installed in BIOS/MBR mode in another disk, the UEFI boot loader used by Arch cannot chainload the BIOS installed Windows in the other disk. Similarly if Arch is installed in BIOS/MBR or BIOS/GPT mode in one disk and Windows is installed in UEFI/GPT in another disk , the BIOS boot loader used by Arch cannot chainload UEFI installed Windows in the other disk.\n\nThe only exceptions to this are GRUB in Apple Macs in which GRUB in UEFI mode can boot BIOS installed OS via appleloader command (does not work in non-Apple systems), and rEFInd which technically supports booting legacy BIOS OS from UEFI systems, but does not always work in non-Apple UEFI systems as per its author Rod Smith.\n\nHowever if Arch is installed in BIOS/GPT in one disk and Windows is installed in BIOS/MBR mode in another disk, then the BIOS boot loader used by Arch can boot the Windows in the other disk, if the boot loader itself has the ability to chainload from another disk.\n\nWindows Setup creates a 100 MiB EFI system partition (except for Advanced Format 4K native drives where it creates a 300 MiB ESP), so multiple kernel usage is limited. Workarounds include:\n\n- If you are installing Windows from scratch, you can dictate the size of the EFI system partition during installation. See Dual boot with Windows#The EFI system partition created by Windows Setup is too small\n- Mount ESP to /efi and use a boot loader that has file system drivers and is capable of launching kernels that reside on other partitions.\n- Reduce the size of the Windows partition and replace the existing ESP with a new, larger one.\n- Backup and delete unneeded fonts in esp/EFI/Microsoft/Boot/Fonts/ [2].\n- Backup and delete unneeded language directories in esp/EFI/Microsoft/Boot/ (e.g. to only keep en-US).\n- Use a higher, but slower, compression for the initramfs images making sure to decompress the loadable kernel modules and firmware. E.g.\n\n```\nCOMPRESSION=\"xz\"\nCOMPRESSION_OPTIONS=(-9e)\nMODULES_DECOMPRESS=\"yes\"\n```\n\n"
    },
    {
      "title": "UEFI Secure Boot",
      "level": 3,
      "content": "All pre-installed Windows 8/8.1, 10 and 11 systems by default boot in UEFI/GPT mode and have UEFI Secure Boot enabled by default. This is mandated by Microsoft for all OEM pre-installed systems.\n\nArch Linux install media does not support Secure Boot yet. See Secure Boot#Booting an installation medium.\n\nIt is advisable to disable UEFI Secure Boot in the firmware setup manually before attempting to boot Arch Linux. Windows 8/8.1, 10 and 11 SHOULD continue to boot fine even if Secure boot is disabled. The only issue with regards to disabling UEFI Secure Boot support is that it requires physical access to the system to disable secure boot option in the firmware setup, as Microsoft has explicitly forbidden presence of any method to remotely or programmatically (from within OS) disable secure boot in all Windows 8/8.1 and above pre-installed systems\n\n- If Windows used BitLocker and stored the key in the TPM for automatic unlock on boot, it fails to boot when Secure Boot is disabled, instead showing a BitLocker recovery screen. This is not permanent however, and you can easily boot Windows again by simply re-enabling Secure Boot.\n- On Windows 11, disabling Secure Boot after install will not cause problems as long as TPM is working normally.\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\nSecure Boot changes should not affect BitLocker: the issue might be self-signing the windows boot loader and chain-loading it from a boot loader: as long as the Windows boot loader stays signed with MS keys, and the Microsoft certs enrolled it should be fine. Is the issue disabling it and booting Windows or disabling, reenabling it and then booting Windows? The first one would be understandable, the second one is something to warn about.\n\nIf you intend to use Secure Boot for Linux as well, you may need to perform changes to the Secure Boot settings. Those changes prevent unlocking the BitLocker disk without the recovery key, leading to permanent data loss. Before proceeding, check if this is the case and save your BitLocker recovery key if not already done. This is especially important if Windows was preinstalled by the vendor.\n\n"
    },
    {
      "title": "Fast Startup and hibernation",
      "level": 3,
      "content": "There are two OSs that can be hibernated, you can hibernate Windows and boot Linux (or another OS), or you can hibernate Linux and boot Windows, or hibernate both OSs.\n\nFor the same reason, if you share one EFI system partition between Windows and Linux, then the EFI system partition may be damaged if you hibernate (or shutdown with Fast Startup enabled) Windows and then start Linux, or hibernate Linux and then start Windows.\n\nntfs-3g added a safe-guard to prevent read-write mounting of hibernated NTFS filesystems, but the NTFS driver within the Linux kernel has no such safeguard.\n\nWindows cannot read filesystems such as ext4 by default that are commonly used for Linux. These filesystems do not have to be considered, unless you install a Windows driver for them.\n\n"
    },
    {
      "title": "Windows settings",
      "level": 4,
      "content": "Fast Startup is a feature in Windows 8 and above that hibernates the computer rather than actually shutting it down to speed up boot times.\n\nThere are multiple options regarding the Windows settings for Fast Startup and hibernation that are covered in the next sections.\n\n- disable Fast Startup and disable hibernation\n- disable Fast Startup and enable hibernation\n- enable Fast Startup and enable hibernation\n\nThe procedure of disabling Fast Startup is described in the tutorials for Windows 8, Windows 10 and Windows 11. In any case if you disable a setting, make sure to disable the setting and then shut down Windows, before installing Linux; note that rebooting is not sufficient.\n\nThis is the safest option, and recommended if you are unsure about the issue, as it requires the least amount of user awareness when rebooting from one OS into the other. You may share the same EFI system partition between Windows and Linux.\n\nIn a Windows command-line shell with administrator privileges:\n\n```\n> powercfg /H off\n```\n\nThis option requires user awareness when rebooting from one OS into the other. If you want to start Linux while Windows is hibernated, which is a common use case, then\n\n- you must use a separate EFI system partition (ESP) for Windows and Linux, and ensure that Windows does not mount the ESP used for Linux. As there can only be one ESP per drive, the ESP used for Linux must be located on a separate drive than the ESP used for Windows. In this case Windows and Linux can still be installed on the same drive in different partitions, if you place the ESP used by linux on another drive than the Linux root partition.\n- you can not read-write mount any filesystem in Linux, that is mounted by Windows while Windows is hibernated. You should be extremely careful about this, and also consider Automount behaviour.\n- If you shut down Windows fully, rather than hibernating, then you can read-write mount the filesystem.\n\nThe same considerations apply as in case \"Disable Fast Startup and enable hibernation\", but since Windows can not be shut down fully, only hibernated, you can never read-write mount any filesystem that was mounted by Windows while Windows is hibernated.\n\n"
    },
    {
      "title": "Windows filenames limitations",
      "level": 3,
      "content": "Windows is limited to filepaths being shorter than 260 characters.\n\nWindows also puts certain characters off limits in filenames for reasons that run all the way back to DOS:\n\n- < (less than)\n- > (greater than)\n- : (colon)\n- \" (double quote)\n- / (forward slash)\n- \\ (backslash)\n- | (vertical bar or pipe)\n- ? (question mark)\n- * (asterisk)\n\nThese are limitations of Windows and not NTFS: any other OS using the NTFS partition will be fine. Windows will fail to detect these files and running chkdsk will most likely cause them to be deleted. This can lead to potential data-loss.\n\nNTFS-3G applies Windows restrictions to new file names through the windows_names option: ntfs-3g(8) § Windows_Filename_Compatibility (see fstab).\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "The recommended way to set up a Linux/Windows dual booting system is to first install Windows, only using part of the disk for its partitions. When you have finished the Windows setup, boot into the Linux install environment where you can create and resize partitions for Linux while leaving the existing Windows partitions untouched. The Windows installation will create the EFI system partition which can be used by your Linux boot loader. If you are installing Windows from scratch, do note that the EFI System partition created by Windows Setup will be too small for most use cases. See #The EFI system partition created by Windows Setup is too small.\n\n"
    },
    {
      "title": "BIOS systems",
      "level": 4,
      "content": "You may use any multi-boot supporting BIOS boot loader.\n\nThis section explains how to:\n\n- install a linux boot loader on a partition instead of the MBR;\n- copy this boot loader to a partition readable by the Windows boot loader;\n- use the windows boot loader to start said copy of the linux boot loader.\n\n- When installing the boot loader, install it on your /boot partition rather than the MBR. For details on doing this with GRUB, see GRUB/Tips and tricks#Install to partition or partitionless disk, for Syslinux, see the note at Syslinux#Manually, for LILO see LILO#Install to partition or partitionless disk.\n\n- Make a copy of the VBR: dd if=/dev/disk of=/path/to/linux.bin bs=512 count=1 where /dev/disk is the path of the partition on which your boot loader is installed and /path/to/ is the mounted filesystem on which you want the copy to be readable by the Windows boot loader.\n\n```\ndd if=/dev/disk of=/path/to/linux.bin bs=512 count=1\n```\n\n- On Windows, the linux.bin file should now be accessible. Run cmd with administrator privileges (navigate to Start > All Programs > Accessories, right-click on Command Prompt and select Run as administrator): bcdedit /create /d \"Linux\" /application BOOTSECTOR BCDEdit will return a UUID for this entry. This will be referred to as UUID in the remaining steps. bcdedit /set UUID device partition=c: (or the drive letter on which linux.bin is kept) bcdedit /set UUID path \\path\\to\\linux.bin bcdedit /displayorder UUID /addlast bcdedit /timeout 30\n\n```\nbcdedit /create /d \"Linux\" /application BOOTSECTOR\n```\n\n```\nbcdedit /set UUID device partition=c: (or the drive letter on which linux.bin is kept)\nbcdedit /set UUID path \\path\\to\\linux.bin\nbcdedit /displayorder UUID /addlast\nbcdedit /timeout 30\n```\n\nOn reboot, both Windows and Linux should now show up in the Windows boot loader.\n\nFor more details, see https://www.iceflatline.com/2009/09/how-to-dual-boot-windows-7-and-linux-using-bcdedit/\n\n"
    },
    {
      "title": "UEFI systems",
      "level": 4,
      "content": "If you already have Windows installed, it will already have created some partitions on a GPT-formatted disk:\n\n- a Windows Recovery Environment partition, generally of size 499 MiB,\n- an EFI system partition with a FAT32 filesystem, containing the Windows Boot Manager,\n- a Microsoft Reserved Partition, generally of size 128 MiB,\n- a Microsoft basic data partition with a NTFS filesystem, which corresponds to C:,\n- potentially system recovery and backup partitions and/or secondary data partitions (corresponding often to D: and above).\n\nUsing the Disk Management utility in Windows, check how the partitions are labelled and which type gets reported. The Reserved Partition may not be visible in the Disk Management utility in which case it can be identified using diskpart in windows cmd. This will help you understand which partitions are essential to Windows, and which others you might repurpose. The Windows Disk Management utility can also be used to shrink Windows (NTFS) partitions to free up disk space for additional partitions for Linux.\n\nYou can then proceed with partitioning, depending on your needs. The boot loader needs to support chainloading other EFI applications to dual boot Windows and Linux. An additional EFI system partition should not be created, as it may prevent Windows from booting.\n\nSimply mount the existing partition.\n\n- rEFInd and systemd-boot will autodetect Windows Boot Manager (\\EFI\\Microsoft\\Boot\\bootmgfw.efi) and show it in their boot menu automatically. For GRUB follow either GRUB#Windows installed in UEFI/GPT mode to add boot menu entry manually or GRUB#Detecting other operating systems for a generated configuration file.\n- To save space on the EFI system partition, especially for multiple kernels, increase the initramfs compression.\n\nComputers that come with newer versions of Windows often have Secure Boot enabled. You will need to take extra steps to either disable Secure Boot or to make your installation media compatible with secure boot (see above and in the linked page).\n\n"
    },
    {
      "title": "Linux before Windows",
      "level": 3,
      "content": "Even though the recommended way to set up a Linux/Windows dual booting system is to first install Windows, it can be done the other way around. In contrast to installing Windows before Linux, you will have to set aside a partition for Windows, say 40GB or larger, in advance. Or have some unpartitioned disk space, or create and resize partitions for Windows from within the Linux installation, before launching the Windows installation.\n\n"
    },
    {
      "title": "UEFI firmware",
      "level": 4,
      "content": "Windows will use the already existing EFI system partition. Follows an outline, assuming Secure Boot is disabled in the firmware.\n\n1. Boot into windows installation. Watch to let it use only the intended partition, but otherwise let it do its work as if there is no Linux installation.\n1. Follow the #Fast Startup and hibernation section.\n1. Fix the ability to load Linux at start up, perhaps by following #Cannot boot Linux after installing Windows. It was already mentioned in #UEFI systems that some Linux boot managers will autodetect Windows Boot Manager. Even though newer Windows installations have an advanced restart option, from which you can boot into Linux, it is advised to have other means to boot into Linux, such as an arch installation media or a live CD.\n\nThe following assumes GRUB is used as a boot loader (although the process is likely similar for other boot loaders) and that Windows 10 will be installed on a GPT block device with an existing EFI system partition (see the \"System partition\" section in the Microsoft documentation for more information).\n\nCreate with program gdisk on the block device the following three new partitions. See [5] for more precise partition sizes.\n\nTable content:\nMin size | Code | Name | File system\n16 MB | 0C01 | Microsoft reserved | N/A\n~40 GB | 0700 | Microsoft basic data | NTFS\n300 MB | 2700 | Windows RE | NTFS\n\nCreate NTFS file systems on the new Microsoft basic data and Windows RE (recovery) partitions using the mkntfs program from package ntfs-3g.\n\nReboot the system into a Windows 10 installation media. When prompted to install select the custom install option and install Windows on the Microsoft basic data partition created earlier. This should also install Microsoft EFI files in the EFI system partition.\n\nAfter installation (set up of and logging into Windows not required), reboot into Linux and generate a GRUB configuration for the Windows boot manager to be available in the GRUB menu on next boot.\n\n"
    },
    {
      "title": "Couldn't create a new partition or locate an existing one",
      "level": 4,
      "content": "See #Windows UEFI vs BIOS limitations.\n\n"
    },
    {
      "title": "Cannot boot Linux after installing Windows",
      "level": 4,
      "content": "See Unified Extensible Firmware Interface#Windows changes boot order.\n\n"
    },
    {
      "title": "Restoring a Windows boot record",
      "level": 4,
      "content": "By convention (and for ease of installation), Windows is usually installed on the first partition and installs its partition table and reference to its boot loader to the first sector of that partition. If you accidentally install a boot loader like GRUB to the Windows partition or damage the boot record in some other way, you will need to use a utility to repair it. Microsoft includes a boot sector fix utility FIXBOOT and an MBR fix utility called FIXMBR on their recovery discs, or sometimes on their install discs. Using this method, you can fix the reference on the boot sector of the first partition to the boot loader file and fix the reference on the MBR to the first partition, respectively. After doing this you will have to reinstall GRUB to the MBR as was originally intended (that is, the GRUB boot loader can be assigned to chainload the Windows boot loader).\n\nIf you wish to revert back to using Windows, you can use the FIXBOOT command which chains from the MBR to the boot sector of the first partition to restore normal, automatic loading of the Windows operating system.\n\nOf note, there is a Linux utility called ms-sysAUR that can install MBR's. However, this utility is only currently capable of writing new MBRs (all OS's and file systems supported) and boot sectors (a.k.a. boot record; equivalent to using FIXBOOT) for FAT file systems. Most LiveCDs do not have this utility by default, so it will need to be installed first, or you can look at a rescue CD that does have it, such as Parted Magic.\n\nFirst, write the partition info (table) again by:\n\n```\n# ms-sys --partition /dev/sda1\n```\n\nNext, write a Windows 2000/XP/2003 MBR:\n\n```\n# ms-sys --mbr /dev/sda  # Read options for different versions\n```\n\nThen, write the new boot sector (boot record):\n\n```\n# ms-sys -(1-6)          # Read options to discover the correct FAT record type\n```\n\nms-sys can also write Windows 98, ME, Vista, and 7 MBRs as well, see ms-sys -h.\n\n"
    },
    {
      "title": "Restoring an accidentally deleted EFI system partition",
      "level": 4,
      "content": "If you have a GPT-partitioned disk and erased (e.g. with mkfs.fat -F32 /dev/sdx) the EFI system partition, you will notice that Windows Boot Manager will either disappear from your boot options, or selecting it will send you back to the UEFI.\n\nTo remedy it, boot with a Windows installation media, press Shift+F10 to open the console (or click NEXT > Repair Computer > Troubleshoot... > Advanced > Command Prompt), then start the diskpart utility:\n\n```\nX:\\Sources> diskpart\nDISKPART> list disk\n```\n\nSelect the appropriate hard drive by typing:\n\n```\nDISKPART> select disk number\n```\n\nMake sure that there is a partition of type system (the EFI system partition):\n\n```\nDISKPART> list partition\n```\n\nSelect this partition:\n\n```\nDISKPART> select partition number\n```\n\nand assign a temporary drive letter to it:\n\n```\nDISKPART> assign letter=G:\n```\n\n```\nDiskPart successfully assigned the drive letter or mount point.\n```\n\nTo make sure that drive letter is correctly assigned:\n\n```\nDISKPART> list vol\n```\n\n```\nVolume ###  Ltr  Label        Fs     Type        Size     Status     Info\n ----------  ---  -----------  -----  ----------  -------  ---------  --------\n Volume 0     E                       DVD-ROM         0 B  No Media\n Volume 1     C                NTFS   Partition    195 GB  Healthy    Boot\n Volume 2         WINRE        NTFS   Partition    400 MB  Healthy    Hidden\n Volume 3     G                FAT32  Partition    499 MB  Healthy    System\n```\n\nClose diskpart:\n\n```\nDISKPART> exit\n```\n\nNavigate to C:\\ (or what your system drive letter is):\n\n```\nX:\\Sources> cd /d C:\\\n```\n\nNext is the \"magic\" command, which recreate the BCD store (with /s for the mount point, /f for firmware type, optionally add /v for verbose):\n\n```\nC:\\> bcdboot C:\\Windows /s G: /f UEFI\n```\n\nYou should now have Windows Boot Manager working as a boot option, and thus have access to Windows. Just make sure to never format your EFI system partition again!\n\nSee [6], [7] and [8].\n\n"
    },
    {
      "title": "The EFI system partition created by Windows Setup is too small",
      "level": 4,
      "content": "By default, Windows Setup creates a 100 MiB EFI system partition (except for Advanced Format 4K native drives where it creates a 300 MiB ESP). This is generally too small to fit everything you need. You can replace the existing EFI system partition with a new, larger one.\n\nIf you are installing Windows from scratch, you can dictate the size of the EFI system partition during installation[9]:\n\n1. Select your installation target and make sure it has no partitions.\n1. Click New and then the Apply buttons. The Windows installer will then generate the expected partitions (allocating nearly everything to its primary partition) and just 100MB to the EFI.\n1. Use the UI to delete the System, MSR, and Primary partitions. Leave the Recovery partition (if present) alone.\n1. Press Shift+F10 to open the Command Prompt.\n1. Type diskpart.exe and press Enter to open the disk partitioning tool.\n1. Type list disk and press Enter to list your disks. Find the one you intend to modify and note its disk number.\n1. Type select disk disk_number with the disk number to modify.\n1. Type create partition efi size=size with the desired size of the ESP in Mebibytes (MiB), and press Enter. See the note at EFI system partition#Create the partition for the recommended sizes.\n1. Type format quick fs=fat32 label=System and press Enter to format the ESP\n1. Type exit and press Enter to exit the disk partitioning tool and exit followed by Enter again.\n\nOnce Windows is installed, you can resize the primary partition down within Windows and then reboot and go about your usual Arch install, filling the space you just created.\n\nAlternatively, you can use the Arch install media to create a single EFI system partition of your preferred size before you install Windows on the drive. Windows Setup will use the EFI system partition you made instead of creating its own.\n\n"
    },
    {
      "title": "Unable to install Windows Cumulative Update on BIOS system",
      "level": 4,
      "content": "On BIOS systems, Windows cumulative updates may fail with the error We couldn’t complete the updates. Undoing changes. Don’t turn off your computer. In such case, while in Windows, you need to set the Windows partition as active.\n\n```\nC:\\> diskpart\nDISKPART> list disk\nDISKPART> select disk number\nDISKPART> list partition\nDISKPART> select partition number\nDISKPART> active\nDISKPART> exit\n```\n\nAfter successfully installing the Windows update, mark back your Linux partition as active, using commands above.\n\n"
    },
    {
      "title": "Time standard",
      "level": 2,
      "content": "- Recommended: Set both Arch Linux and Windows to use UTC, following System time#UTC in Microsoft Windows. Some versions of Windows revert the hardware clock back to localtime if they are set to synchronize the time online. This issue appears to be fixed in Windows 10.\n- Not recommended: Set Arch Linux to localtime and disable all time synchronization daemons. This will let Windows take care of hardware clock corrections and you will need to remember to boot into Windows at least two times a year (in Spring and Autumn) when DST kicks in. So please do not ask on the forums why the clock is one hour behind or ahead if you usually go for days or weeks without booting into Windows.\n\n"
    },
    {
      "title": "Bluetooth pairing",
      "level": 2,
      "content": "When it comes to pairing Bluetooth devices with both the Linux and Windows installation, both systems have the same MAC address, but will use different link keys generated during the pairing process. This results in the device being unable to connect to one installation, after it has been paired with the other. To allow a device to connect to either installation without re-pairing, follow Bluetooth#Dual boot pairing.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Booting Windows from a desktop shortcut\n- One-time boot into Windows partition from desktop shortcut\n- Windows 7/8/8.1/10 ISO to Flash Drive burning utility for Linux (MBR/GPT, BIOS/UEFI, FAT32/NTFS)\n\n"
    }
  ]
}