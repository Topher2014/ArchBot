{
  "title": "Interface RPC do Aurweb",
  "url": "https://wiki.archlinux.org/title/Interface_RPC_do_Aurweb",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Artigos relacionados\n\n- Interface web de repositórios oficiais\n\nA interface RPC do Aurweb é uma interface RPC leve para o AUR. Consultas são enviadas como requisições HTTP GET e respostas do servidor com JSON.\n\n"
    },
    {
      "title": "Tipos de consulta",
      "level": 3,
      "content": "Há dois tipos de consultas:\n\n- search\n- info\n\n"
    },
    {
      "title": "search",
      "level": 4,
      "content": "Pesquisas por pacote podem ser feitas enviando requisições na forma:\n\n```\n/rpc/?v=5&type=search&by=campo&arg=palavras-chave\n```\n\nsendo palavras-chave o argumento de pesquisa e campo um dos valores a seguir:\n\n- name (pesquisa pelo nome do pacote apenas)\n- name-desc (pesquisa pelo nome e descrição do pacote)\n- maintainer (pesquisa pelo mantenedor do pacote)\n- depends (pesquisa pacotes que são dependências por palavras-chaves)\n- makedepends (pesquisa pacotes que são dependências para compilação por palavras-chaves)\n- optdepends (pesquisa pacotes que são dependências opcionais por palavras-chaves)\n- checkdepends (pesquisa pacotes que são dependências para verificação por palavras-chaves)\n\nO parâmetro by pode ser pulado, tendo como padrão name-desc. tipos possíveis de retorno são search e error.\n\nSe uma pesquisa de mantenedor for realizada e o argumento de pesquisa for deixado vazio, uma lista de pacotes órfãos é retornada.\n\nExemplos:\n\nPesquisar por pacote:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=search&arg=pacote\n```\n\nPesquisar por pacotes mantidos por usuário:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=search&by=maintainer&arg=usuário\n```\n\nPesquisar por pacotes que têm pacote como `makedepends`:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=search&by=makedepends&arg=pacote\n```\n\nPesquisar com chamadas:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=search&arg=pacote&callback=jsonp1192244621103\n```\n\n"
    },
    {
      "title": "info",
      "level": 4,
      "content": "Informações de pacote podem ser obtidas enviando requisições na forma:\n\n```\n/rpc/?v=5&type=info&arg[]=pkg1&arg[]=pkg2&…\n```\n\nsendo pkg1, pkg2, … correspondências exatas de nomes de pacotes para obter detalhes de pacote.\n\nTipos de retorno possível são multiinfo e error.\n\nExemplos:\n\nInformação para um único pacote:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=info&arg[]=pacote\n```\n\nInformação para vários pacotes:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=info&arg[]=pacote1&arg[]=pacote2\n```\n\n"
    },
    {
      "title": "Tipos de retorno",
      "level": 3,
      "content": "A carga de retorno é de um formato, e atualmente tem três tipos principais. A resposta sempre retornará um tipo para que o usuário possa determinar se o resultado de uma operação foi um erro ou não.\n\nO formato da carga retornada é:\n\n```\n{\"version\":5,\"type\":TipoRetornado,\"resultcount\":0,\"results\":DadosRetornados}\n```\n\nTipoRetornado é uma string e o valor é um entre:\n\n- search\n- multiinfo\n- error\n\n"
    },
    {
      "title": "Dados de retorno",
      "level": 3,
      "content": "O tipo de DadosRetornados é um vetor de dicionário de objetos para os TipoRetornado search e multiinfo e um vetor vazio para TipoRetornado error.\n\nPara o TipoRetornado search, DadosRetornados pode conter os seguintes campos:\n\n- ID\n- Name\n- PackageBaseID\n- PackageBase\n- Version\n- Description\n- URL\n- NumVotes\n- Popularity\n- OutOfDate\n- Maintainer\n- FirstSubmitted\n- LastModified\n- URLPath\n\nPara os TipoRetornado info e multiinfo, DadosRetornados também pode conter os seguintes campos:\n\n- Depends\n- MakeDepends\n- OptDepends\n- CheckDepends\n- Conflicts\n- Provides\n- Replaces\n- Groups\n- License\n- Keywords\n\nCampos que um pacote não contém serão omitidos da saída.\n\n"
    },
    {
      "title": "error",
      "level": 4,
      "content": "O tipo error possui uma string de resposta de erro como o valor retornado. Uma resposta de erro pode ser retornada de um tipo de consulta search ou info.\n\nExemplo de TipoRetornado error:\n\n```\n{\"version\":5,\"type\":\"error\",\"resultcount\":0,\"results\":[],\"error\":\"Incorrect by field specified.\"}\n```\n\n"
    },
    {
      "title": "search",
      "level": 4,
      "content": "O tipo search é resultado retornado de uma operação de requisição de pesquisa.\n\nExemplo de TipoRetornado search:\n\n```\n{\"version\":5,\"type\":\"search\",\"resultcount\":2,\"results\":[{\"ID\":206807,\"Name\":\"cower-git\", ...}]}\n```\n\n"
    },
    {
      "title": "info",
      "level": 4,
      "content": "O tipo multiinfo é o resultado de uma operação de requisição de informações.\n\nExemplo de TipoRetornado multiinfo:\n\n```\n{\n    \"version\":5,\n    \"type\":\"multiinfo\",\n    \"resultcount\":1,\n    \"results\":[{\n        \"ID\":229417,\n        \"Name\":\"cower\",\n        \"PackageBaseID\":44921,\n        \"PackageBase\":\"cower\",\n        \"Version\":\"14-2\",\n        \"Description\":\"A simple AUR agent with a pretentious name\",\n        \"URL\":\"http:\\/\\/github.com\\/falconindy\\/cower\",\n        \"NumVotes\":590,\n        \"Popularity\":24.595536,\n        \"OutOfDate\":null,\n        \"Maintainer\":\"falconindy\",\n        \"FirstSubmitted\":1293676237,\n        \"LastModified\":1441804093,\n        \"URLPath\":\"\\/cgit\\/aur.git\\/snapshot\\/cower.tar.gz\",\n        \"Depends\":[\n            \"curl\",\n            \"openssl\",\n            \"pacman\",\n            \"yajl\"\n        ],\n        \"MakeDepends\":[\n            \"perl\"\n        ],\n        \"License\":[\n            \"MIT\"\n        ],\n        \"Keywords\":[]\n    }]\n }\n```\n\n"
    },
    {
      "title": "jsonp",
      "level": 3,
      "content": "Se você está trabalhando com uma página javascript e precisa de um mecanismo de retorno de chamada do JSON, você pode fazê-lo. Você só precisa fornecer uma variável de retorno de chamada adicional. Esse retorno de chamada geralmente é tratado através da biblioteca javascript, mas aqui é um exemplo.\n\nConsulta exemplo:\n\n```\nhttps://aur.archlinux.org/rpc/?v=5&type=search&arg=foobar&callback=jsonp1192244621103\n```\n\nResultado exemplo:\n\n```\n/**/jsonp1192244621103({\"version\":5,\"type\":\"search\",\"resultcount\":1,\"results\":[{\"ID\":250608,\"Name\":\"foobar2000\",\"PackageBaseID\":37068,\"PackageBase\":\"foobar2000\",\"Version\":\"1.3.9-1\",\"Description\":\"An advanced freeware audio player (uses Wine).\",\"URL\":\"http:\\/\\/www.foobar2000.org\\/\",\"NumVotes\":39,\"Popularity\":0.425966,\"OutOfDate\":null,\"Maintainer\":\"supermario\",\"FirstSubmitted\":1273255356,\"LastModified\":1448326415,\"URLPath\":\"\\/cgit\\/aur.git\\/snapshot\\/foobar2000.tar.gz\"}]})\n```\n\nIsso chamaria automaticamente a função JavaScript jsonp1192244621103 com o parâmetro definido para os resultados da chamada RPC.\n\n"
    },
    {
      "title": "Limitações",
      "level": 2,
      "content": "- Requisições de HTTP GET são limitadas a uma URI com tamanho máximo de 8190 bytes. Porém, a instância oficial do AUR, no servidor nginx com HTTP/2, usa o limite de tamanho máximo padrão de URI de 4443 bytes. Requisições de informações com mais do que 200 pacotes como argumento precisarão ser divididos.\n- Consultas de pesquisa devem ter pelo menos dois caracteres.\n- As pesquisas falharão se contiverem 5000 ou mais resultados.\n- A taxa de API está limitada a um máximo de 4000 requisições por dia por IP.\n\n"
    },
    {
      "title": "Clientes de referência",
      "level": 2,
      "content": "Às vezes, as coisas são mais fáceis de entender com exemplos. Algumas implementações de referência (jQuery, python, ruby) estão disponíveis na seguinte URL: https://github.com/cactus/random/tree/2b72a1723bfc8ae64eed6a3c40cb154accae3974/aurjson_examples\n\n"
    }
  ]
}