{
  "title": "Clevis",
  "url": "https://wiki.archlinux.org/title/Clevis",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Booster\n- Mkinitcpio\n- Dracut\n- Dm-crypt\n- YubiKey\n- Trusted Platform Module\n\nClevis allows binding a LUKS volume to a system by creating a key and encrypting it using the TPM, and sealing the key using PCR values which represent the system state at the time of the Clevis pin creation.\n\nPasswords manually entered by a user is a traditional and widely used way to unlock encrypted LUKS partitions. But it has a few disadvantages:\n\n- It requires manual intervention and thus does not work with setups that require automatic boot (e.g. a large server farm).\n- An average human brain is capable of remembering relatively simple passwords (~20-30 bits of entropy) that are much weaker than keys used for modern block ciphers (128/256 bits).\n\nA solution for it would be encrypting data with a strong key stored securely somewhere else, for example at your TPM chip or YubiKey or some network service. Clevis is a framework that implements this idea. It allows to encrypt (in terms of clevis bind) data with a pluggable pin. Currently clevis implements 3 pins:\n\n- TPM2 data binding (works only if you have a Trusted Platform Module chip at your computer)\n- Network service (called Tang) data binding\n- Shamir's Secret Sharing that allows you to combine other pins.\n- YubiKey binding using an external plugin.\n\nNote: **unlock automatically** \n\n- This means that access to data is not protected in case the hardware gets stolen.\n- Be aware that this method makes you more vulnerable to cold boot attacks, because even if your computer has been powered off for a long time (ensuring the memory is completely cleared), an attacker could simply turn it on and wait for the TPM to load the key automatically. This may be a concern for high-value targets.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "To use clevis install clevis package.\n\n"
    },
    {
      "title": "Bind some data",
      "level": 2,
      "content": "Here is an example of data binding with TPM2:\n\n```\n$ clevis encrypt tpm2 '{}' <<< 'hello, world'\n```\n\n```\neyJhbGciOiJkaXIiLCJjbGV2aXMiOnsicGluIjoidHBtMiIsInRwbTIiOnsiaGFzaCI6InNoYTI1NiIsImp3a19wcml2IjoiQU80QUlJQkxxT3FVenVDU1FmWkprNmdDN2wzMW43V3M2Y2FZd0VZS1BSR3Q0OHJEQUJBV2Z4M3pTUUNUTmtHZE9BM2FZd2RTZk9GcXZWdnVlQ3lPamFsWldCT2R4RlJKSzl5ZVRCM0pkNFktcF9HalhhNmlnLWxxNmtmMHZTWWkzOWMxVEpES1RYRVZTdnlXSlpEbGdxQ0JPMVNxeGJBd2tfSnIyRlRNY3hvNGtpSmNtMEVjbWd5dFdyME00QmcySlg4aVo3MEt1MTVjNzFORU5Ra3RjdGMtREhBVGFQcHJ2VzI2Z3d1YmUxckRfX19aV2tHaG9mX053M0M1OHlOcXF2RUpPZUwzNTZHNXJHNVVtYmUtWWV4Ujl2SEppZWlua3ZaNTJoMFVRYWVNSm9LYjJuNjlVTGZHb2J1NElTN20iLCJqd2tfcHViIjoiQUM0QUNBQUxBQUFFMGdBQUFCQUFJQ2poWDBVeTJKZVpSNU9pRU0ySktSeEtnUElYQ3dGNnRNR09NTDZ0ZnE5aiIsImtleSI6ImVjYyJ9fSwiZW5jIjoiQTI1NkdDTSJ9..1P2Emag_4k-GlhyY.MuQQYPa8QHrysZ74uA.0ddDxfZA3R-cCmaKu5yUZA\n```\n\nThis long base64-encoded message is our text encrypted with an internal TPM key. It can be decrypted at the current computer only. Trying to decrypt it from another computer (or rather with another TPM chip) will return an error.\n\n```\n$ clevis decrypt tpm2 '{}' <<< 'eyJhbGciOiJkaXIiLCJjbGV2aXMiOnsicGluIjoidHBtMiIsInRwbTIiOnsiaGFzaCI6InNoYTI1NiIsImp3a19wcml2IjoiQU80QUlJQkxxT3FVenVDU1FmWkprNmdDN2wzMW43V3M2Y2FZd0VZS1BSR3Q0OHJEQUJBV2Z4M3pTUUNUTmtHZE9BM2FZd2RTZk9GcXZWdnVlQ3lPamFsWldCT2R4RlJKSzl5ZVRCM0pkNFktcF9HalhhNmlnLWxxNmtmMHZTWWkzOWMxVEpES1RYRVZTdnlXSlpEbGdxQ0JPMVNxeGJBd2tfSnIyRlRNY3hvNGtpSmNtMEVjbWd5dFdyME00QmcySlg4aVo3MEt1MTVjNzFORU5Ra3RjdGMtREhBVGFQcHJ2VzI2Z3d1YmUxckRfX19aV2tHaG9mX053M0M1OHlOcXF2RUpPZUwzNTZHNXJHNVVtYmUtWWV4Ujl2SEppZWlua3ZaNTJoMFVRYWVNSm9LYjJuNjlVTGZHb2J1NElTN20iLCJqd2tfcHViIjoiQUM0QUNBQUxBQUFFMGdBQUFCQUFJQ2poWDBVeTJKZVpSNU9pRU0ySktSeEtnUElYQ3dGNnRNR09NTDZ0ZnE5aiIsImtleSI6ImVjYyJ9fSwiZW5jIjoiQTI1NkdDTSJ9..1P2Emag_4k-GlhyY.MuQQYPa8QHrysZ74uA.0ddDxfZA3R-cCmaKu5yUZA'\n```\n\n```\nhello, world\n```\n\n"
    },
    {
      "title": "Bind a LUKS volume",
      "level": 2,
      "content": "Note: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\n```\n# cryptsetup luksAddKey /dev/sdX\n```\n\nTo bind a LUKS volume to the TPM, use:\n\n```\n# clevis luks bind -d /dev/sdX tpm2 '{}'\n```\n\nwhere '{}' contains the configuration: even with no parameters the drive cannot be decrypted from another computer, unless the attacker knows the backup password.\n\nNote: If the UEFI or Secure Boot settings are modified, the TPM will compute different PCR values and decryption will fail. This gives protection against evil maid attacks.\n\n```\n'{\"pcr_ids\":\"1,7\"}'\n```\n\nIf the UEFI or Secure Boot settings are modified, the TPM will compute different PCR values and decryption will fail. This gives protection against evil maid attacks.\n\nFor a list of parameters, see clevis-encrypt-tpm2(1) ยง CONFIG.\n\nFor a simplified explanation of the meaning of PCRs, see Trusted Platform Module#Accessing PCR registers.\n\nFor a full explanation of the meanings of PCRs, see the TCG specification (ยง 2.3.4).\n\nIf this fails with ERROR: pcr-input-file filesize does not match pcr set-list, you should specify a different pcr bank:\n\n```\n'{\"pcr_bank\":\"sha256\",\"pcr_ids\":\"1,7\"}'\n```\n\nAs of August 2022 Clevis only supports sha1 (default) and sha256 banks, so naturally the only different option is sha256 - you can look up available and used banks using # tpm2_pcrread.\n\nTo generate a new Clevis pin after changes in system configuration that result in different PCR values, for example updating the UEFI when PCR 0 is used, run\n\n```\n# cryptsetup luksDump /dev/sdX\n```\n\n```\nTokens:\n  token slot: clevis\n        Keyslot:  keyslot\n```\n\nto find the slot used for the Clevis pin, then\n\n```\n# clevis luks regen -d /dev/sdX -s keyslot\n```\n\nTo remove the Clevis binding, run:\n\n```\n# clevis luks unbind -d /dev/sdX -s keyslot\n```\n\nYou can unlock a TPM-bound volume using:\n\n```\n# clevis luks unlock -d /dev/sdX\n```\n\nFor automated decryption of volumes in /etc/crypttab, enable clevis-luks-askpass.path.\n\nFor automated decryption of the root volume, we should make some changes to our Initramfs generators:\n\n"
    },
    {
      "title": "Mkinitcpio hook",
      "level": 3,
      "content": "Install the mkinitcpio-clevis-hookAUR package. Then enable the clevis hook editing mkinitcpio.conf:\n\n```\n/etc/mkinitcpio.conf\n```\n\n```\n# Edit the hooks and add clevis before the 'encrypt' hook. Eg:\nHOOKS=(.. clevis encrypt ..)\n```\n\nAt the end regenerate the initramfs.\n\n"
    },
    {
      "title": "Booster",
      "level": 3,
      "content": "Luckily Booster automatically decrypts LUKS volumes bound using Clevis out of the box!\n\nBooster is also able to read the LUKS tokens, decode clevis information, reconstruct the password and unlock the partition automatically.\n\nTang (network binding) pin requires network enabled. Please refer to Booster#Configuration section for more information on network configuration with booster.\n\n"
    },
    {
      "title": "Dracut",
      "level": 3,
      "content": "Dracut needs the following extra packages:\n\n- libpwquality\n- luksmeta\n- nmap\n\nFollowed by an initramfs regeneration:\n\n```\n# dracut -f\n```\n\n```\n/etc/dracut.conf.d/curl.conf\n```\n\n```\ninstall_items+=\" /usr/bin/curl \"\n```\n\n"
    },
    {
      "title": "YubiKey binding",
      "level": 3,
      "content": "Clevis allows binding a LUKS partition using YubiKey's challenge-response mode. To bind a LUKS partition, run\n\n```\n# clevis luks bind -d /dev/sdX yubikey '{\"slot\":1}'\n```\n\nInstall yubikey-personalization. Edit the configuration file and add following option:\n\n```\n/etc/booster.yaml\n```\n\n```\nextra_files: ykchalresp\n```\n\nRegenerate the booster images. Booster will detect this configuration during boot and use the present YubiKey to unlock the drive.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Project homepage\n- mkinitcpio-clevis-hook's homepage\n\n"
    }
  ]
}