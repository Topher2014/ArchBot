{
  "title": "SCIM",
  "url": "https://wiki.archlinux.org/title/SCIM",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Note: **This article or section is out of date.** This article or section is out of date.\n\nThis article or section is out of date.\n\nSCIM is an input method framework developed by Su Zhe (or James Su) around 2001, similar to IBus or Uim.\n\nIts stated goals are to:\n\n- Act as an unified front-end for current available input method libraries. Currently bindings to uim and m17n library are available.\n- Act as a language engine of IIIMF input method framework.\n- Provide as many native IMEngines as possible.\n- Support as many input method protocols/interfaces as possible.\n- Support as many operating systems as possible.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the scim package.\n\n"
    },
    {
      "title": "Input method engines",
      "level": 3,
      "content": "Currently the SCIM project has a wide range of input methods (some may need other libraries), covering more than 30 languages, including (Simplified/Traditional) Chinese, Japanese, Korean and many European languages. These are some of the examples (more can be found here):\n\n- scim-chewingAUR - Chinese\n- scim-pinyinAUR - Chinese Smart PinYin .\n- scim-tablesAUR - Chinese WuBi or other tables based\n- scim-anthyAUR - Japanese\n- scim-hangulAUR - Korean\n\nuim can be used as an engine for SCIM by using scim-uimAUR.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Configuring SCIM correctly requires the following three steps:\n\n1. Exporting some environment variables that specify the used input method.\n1. Modifying locale related files.\n1. Finally, starting SCIM.\n\n"
    },
    {
      "title": "A simple scenario",
      "level": 3,
      "content": "If you just need SCIM to work urgently in any desktop environment or window manager, put these lines into your xprofile and then reboot:\n\n```\n~/.xprofile\n```\n\n```\nexport XMODIFIERS=@im=SCIM\nexport GTK_IM_MODULE=\"scim\"\nexport QT_IM_MODULE=\"scim\"\nscim -d\n```\n\nThese lines can be added to other files that are run at startup, such as: /etc/profile, ~/.profile, ~/.xinitrc or ~/.config/openbox/autostart (when using Openbox).\n\nThis is a very basic example for configuring XIM (X Input Method) to work with SCIM. XIM is not recommended because it has quite some limitations.\n\n"
    },
    {
      "title": "Note for GTK",
      "level": 3,
      "content": "If you use GNOME, edit /etc/gtk-2.0/gtk.immodules by adding follow content at the end:\n\n```\n/etc/gtk-2.0/gtk.immodules\n```\n\n```\n\"/usr/lib/gtk-2.0/immodules/im-scim.so\"\n\"scim\" \"SCIM Input Method\" \"scim\" \"/usr/share/locale\" \"ja:ko:zh\"\n```\n\nIf your LC_CTYPE or LANG is en_US.UTF-8, change ja:ko:zh to en:ja:ko:zh.\n\nAfter making those changes, be sure to reboot. You can find out what input method modules are available on your system by executing gtk-query-immodules-2.0.\n\nIf SCIM does not work with GTK applications after these changes, check that the GTK_IM_MODULE_FILE environment variable is set to /etc/gtk-2.0/gtk.immodules.\n\nYou can use another file (in this example ~/.immodules) that contains the necessary information about input methods modules by adding these lines in the file you selected in the section above.\n\n```\ngtk-query-immodules-2.0 > ~/.immodules\nexport GTK_IM_MODULE_FILE=~/.immodules\n```\n\n"
    },
    {
      "title": "Locale-related files",
      "level": 3,
      "content": "If your keyboard locale is not en_US.UTF-8 (or en_US.utf8), you have to modify the first line of ~/.scim/global (or /etc/scim/global to apply these settings to all users) according to the following example:\n\n```\n/SupportedUnicodeLocales = en_US.UTF-8,de_CH.UTF-8\n```\n\nand replace your de_CH.UTF-8 with your locale.\n\nIf you do not know which locales you have active at the moment, you can check it:\n\n```\nlocale -a\n```\n\n(alternatively you can look at /etc/locale.gen).\n\n"
    },
    {
      "title": "Further troubleshooting with locales",
      "level": 4,
      "content": "If after you have install SCIM and the necessary input tables, SCIM still does not work, then you need to set the LC_CTYPE environmental variable in /etc/profile to the locale you plan to use. Simply create an entry for LC_CTYPE such as:\n\n```\nLC_CTYPE=\"zh_CN.UTF-8\"              # if you want to type simplified chinese\n```\n\nFinally you need to generate the locale using the locale-gen command.\n\n"
    },
    {
      "title": "Executing SCIM",
      "level": 3,
      "content": "SCIM can be run by just executing the scim command, although it is common to start SCIM as a daemon:\n\n```\nscim -d\n```\n\nYou can put the above command in a script file and execute it automatically. Usual places are ~/.xinitrc (after environment variables and before DE/WM), /etc/profile (after environment variables) or ~/.config/openbox/autostart (after environment variables and possibly after some sleep command).\n\n"
    },
    {
      "title": "Note for GNOME",
      "level": 4,
      "content": "In case you use GNOME as your desktop environment, the command above does not seem to work as expected. Instead, you have to execute the following:\n\n```\nscim -f x11 -c simple -d\n```\n\nIf you want SCIM to start automatically at startup, go to System > Preferences > Session and create a new command with the line above.\n\n"
    },
    {
      "title": "Note for KDE",
      "level": 4,
      "content": "In case you use KDE as a desktop environment, the command above does not seem to work as expected. Instead, you have to execute the following:\n\n```\nscim -f socket -c socket -d\n```\n\n"
    },
    {
      "title": "LWJGL (Lightweight Java Game Library) losing keyboard focus",
      "level": 3,
      "content": "See these two forum posts for a solution.\n\n"
    },
    {
      "title": "Chrome/Chromium does not take input",
      "level": 3,
      "content": "Edit the .xinitrc or .xsession file.\n\n```\n~/.xprofile\n```\n\n```\nexport XMODIFIERS=@im=SCIM\nexport GTK_IM_MODULE=\"xim\"\nexport QT_IM_MODULE=\"scim\"\nscim -d\n```\n\nThis is a rather sloppy workaround. Also, even with this workaround, Korean users may find scim unusable with Chrome/Chromium, as the preedit string disappears when the space bar or other modifier keys are pressed at the end of a word.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- GitHub repository\n- Arch Linux news page from 2005\n\n"
    }
  ]
}