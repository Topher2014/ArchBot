{
  "title": "Cmusfm-git",
  "url": "https://wiki.archlinux.org/title/Cmusfm-git",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "cmus (C* MUsic Player) is a small, fast and powerful console audio player which supports most major audio formats. Various features include gapless playback, ReplayGain support, MP3 and Ogg streaming, live filtering, instant startup, customizable key-bindings, and vi-style default key-bindings.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the cmus package, or cmus-gitAUR for the development version.\n\nSee the optional dependencies for available codecs and output plugins (installed can be listed with cmus --plugins).\n\n"
    },
    {
      "title": "Using cmus with ALSA",
      "level": 3,
      "content": "Install the alsa-lib package.\n\nWhen using cmus with ALSA the default configuration does not allow playing music. What you might encounter when trying to start cmus is a blank terminal line with no output whatsoever. To fix it, create a new configuration file and set the following variables:\n\n```\n~/.config/cmus/rc\n```\n\n```\nset output_plugin=alsa\nset dsp.alsa.device=default\nset mixer.alsa.device=default\nset mixer.alsa.channel=Master\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "See cmus(1), cmus-tutorial(7) and cmus-remote(1).\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "To configure cmus, see cmus(1).\n\n"
    },
    {
      "title": "Remote control",
      "level": 3,
      "content": "Cmus can be controlled externally through a unix-socket with cmus-remote. This makes it easy to control playback through an external application or key-binding.\n\nOne such usage of this feature is to control playback in Cmus with the XF86 keyboard events. The following script when run will start Cmus in an xterm terminal if it is not running, otherwise it will will toggle play/pause:\n\n```\n#!/bin/sh\n\nif ! pgrep -x cmus ; then\n  xterm -e cmus\nelse\n  cmus-remote -u\nfi\n```\n\nCopy the code above into a file ~/bin/cplay and make it executable.\n\nTo use cmus-remote in Openbox, see Openbox#rc.xml.\n\n"
    },
    {
      "title": "JACK",
      "level": 3,
      "content": "To make cmus work with JACK server run the above command in cmus:\n\n```\n:set output_plugin=jack\n```\n\n"
    },
    {
      "title": "Audio scrobbling",
      "level": 2,
      "content": "Cmus does not support audio scrobbling itself, but there is third party solutions. Install cmusfmAUR for Last.fm or Libre.fm scrobbling. For initial configuration run cmusfm init and follow link to perform authentication.\n\nBy default cmusfm scrobbles to the Last.fm service. However, it is possible to change this behavior by modifying service-api-url and service-auth-url options in the configuration file (~/.config/cmus/cmusfm.conf). Afterwards, one should reinitialize cmusfm cmusfm init in order to authenticate with new scrobbling service. In order to use Libre.fm as a scrobbling service, one shall use configuration as follows:\n\n```\n~/.config/cmus/cmusfm.conf\n```\n\n```\nservice-api-url = \"https://libre.fm/2.0/\"\nservice-auth-url = \"https://libre.fm/api/auth\"\n```\n\nNext step is to set cmusfm as status program for cmus. Execute command in main cmus window :set status_display_program=cmusfm\n\n"
    },
    {
      "title": "Cannot see tracks after adding",
      "level": 3,
      "content": "If you cannot see tracks just added, that can be because you did not install ffmpeg package. You can see available files extension with:\n\n```\n$ cmus --plugins\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Git Repository\n- Website\n- User submitted scripts\n\n"
    }
  ]
}