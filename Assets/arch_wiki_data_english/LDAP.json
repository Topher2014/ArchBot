{
  "title": "LDAP",
  "url": "https://wiki.archlinux.org/title/LDAP",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- LDAP authentication\n- LDAP Hosts\n\nOpenLDAP is an open-source implementation of the LDAP protocol. An LDAP server basically is a non-relational database which is optimised for accessing, but not writing, data. It is mainly used as an address book (for e.g. email clients) or authentication backend to various services (such as Samba, where it is used to emulate a domain controller, or Linux system authentication, where it replaces /etc/passwd) and basically holds the user data.\n\nThis page is a starting point for a basic OpenLDAP installation and a sanity check.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "OpenLDAP contains both a LDAP server and client. Install it with the package openldap.\n\n"
    },
    {
      "title": "The server",
      "level": 3,
      "content": "- If you have an obsolete slapd.conf configuration, you can simply convert it into the new cn=config database using\n\n```\n$ slaptest -f /etc/openldap/slapd.conf -F /etc/openldap/slapd.d/\n```\n\n- If you already have an OpenLDAP database on your machine and would like to remove it, then it can be removed by deleting everything inside of /var/lib/openldap/openldap-data/. So, backup your DB_CONFIG.\n\nSlapd, the server, stores its configuration directly inside its database. Thus, we need to write our configuration as an LDIF file and import it.\n\nFirst, create the directory /var/lib/openldap/openldap-data/, where your LDAP database contents (\"database 1\", as OpenLDAP calls it):\n\n```\n# install -m 0700 -o ldap -g ldap -d /var/lib/openldap/openldap-data/\n```\n\nNow we need to create a place for the LDAP configuration database (\"database 0\"):\n\n```\n# install -m 0760 -o root -g ldap -d /etc/openldap/slapd.d\n```\n\nCreate a file /etc/openldap/config.ldif containing the following minimal useful configuration:\n\n```\n/etc/openldap/config.ldif\n```\n\n```\n# The root config entry\ndn: cn=config\nobjectClass: olcGlobal\ncn: config\nolcArgsFile: /run/openldap/slapd.args\nolcPidFile: /run/openldap/slapd.pid\n\n# Schemas\ndn: cn=schema,cn=config\nobjectClass: olcSchemaConfig\ncn: schema\n\n# TODO: Include further schemas as necessary\ninclude: file:///etc/openldap/schema/core.ldif\n\n# The config database\ndn: olcDatabase=config,cn=config\nobjectClass: olcDatabaseConfig\nolcDatabase: config\nolcRootDN: cn=Manager,$BASEDN\n\n# The database for our entries\ndn: olcDatabase=mdb,cn=config\nobjectClass: olcDatabaseConfig\nobjectClass: olcMdbConfig\nolcDatabase: mdb\nolcSuffix: $BASEDN\nolcRootDN: cn=Manager,$BASEDN\nolcRootPW: $PASSWD\nolcDbDirectory: /var/lib/openldap/openldap-data\n# TODO: Create further indexes\nolcDbIndex: objectClass eq\n```\n\nThere are a few options you will need to change:\n\n- Every occurence of $BASEDN must be replaced with a valid DN. If you own a domain example.com you will most likely want to choose dc=example,dc=com.\n- $PASSWD must be replaced by a salted and hashed password, which you may generate by running slappasswd.\n\nAdditionally, you might consider to add further schemas and create additional indexes to tune the performance of your database. The specifics will depend on your use case, but here are a few recommendations. For LDAP authentication, you should include the three schemas below to be able to use the posixAccount object class used for storing users.\n\n```\n# TODO: Create further indexes\nolcDbIndex: objectClass eq\nolcDbIndex: uid pres,eq\nolcDbIndex: mail pres,sub,eq\nolcDbIndex: cn,sn pres,sub,eq\nolcDbIndex: dc eq\n\n# Additional schemas\n# RFC1274: Cosine and Internet X.500 schema\ninclude: file:///etc/openldap/schema/cosine.ldif\n# RFC2307: An Approach for Using LDAP as a Network Information Service\n# Check RFC2307bis for nested groups and an auxiliary posixGroup objectClass (way easier)\ninclude: file:///etc/openldap/schema/nis.ldif\n# RFC2798: Internet Organizational Person\ninclude: file:///etc/openldap/schema/inetorgperson.ldif\n```\n\nAllow logins to the ldap user account with chsh, typically selecting the shell /bin/bash. Then import these settings as the ldap user:\n\n```\n[ldap]$ slapadd -n 0 -F /etc/openldap/slapd.d/ -l /etc/openldap/config.ldif\n```\n\nAlternatively, you may also run this directly as root. However, if you do, make sure /etc/openldap/slapd.d/ remains accessible by ldap:\n\n```\n# slapadd -n 0 -F /etc/openldap/slapd.d/ -l /etc/openldap/config.ldif\n# chown -R ldap:ldap /etc/openldap/*\n```\n\nIf everything worked, you will now have directories underneath /etc/openldap/slapd.d with names such as cn=config.\n\nBy default, OpenLDAP will listen unencrypted on all interfaces. To make it only listen on local IP interfaces, you may edit the environment file read by slapd.service:\n\n```\n/etc/conf.d/slapd\n```\n\n```\nSLAPD_URLS=\"ldap://127.0.0.1/ ldap://[::1]\"\nSLAPD_OPTIONS=\n```\n\nFinally, start the slapd daemon by starting slapd.service.\n\n- If you want to have your directory accept requests from the network, you should consider using TLS. See #OpenLDAP over TLS for details.\n- If you plan to use your LDAP server for authentication, you might want to check access control configuration in LDAP authentication#LDAP server setup.\n- Berkeley DB (BDB) should no longer be used. The mdb backend to slapd(8) is the recommended primary backend for a normal slapd database. It uses OpenLDAP's own Lightning Memory-Mapped Database (LMDB) library to store data and is intended to replace the Berkeley DB backend. The OpenLDAP package in the official repositories defaults to mdb.\n\n"
    },
    {
      "title": "The client",
      "level": 3,
      "content": "The client configuration file is located at /etc/openldap/ldap.conf.\n\nIt is quite simple: you will only have to alter BASE to reflect the suffix of the server, and URI to reflect the address of the server, like:\n\n```\n/etc/openldap/ldap.conf\n```\n\n```\nBASE            dc=example,dc=com\nURI             ldap://localhost\n```\n\nIf you decide to use SSL:\n\n- The protocol (ldap or ldaps) in the URI entry has to conform with the slapd configuration\n- If you decide to use TLS, add a TLS_REQCERT allow line to ldap.conf\n- If you use a signed certificate from a CA, add the line TLS_CACERTDIR /usr/share/ca-certificates/trust-source in ldap.conf.\n\n"
    },
    {
      "title": "Create initial entry",
      "level": 3,
      "content": "Once your client is configured, you probably want to create the root entry, and an entry for the Manager role:\n\n```\n$ ldapadd -x -D 'cn=Manager,dc=example,dc=com' -W\ndn: dc=example,dc=com\nobjectClass: dcObject\nobjectClass: organization\ndc: example\no: Example\ndescription: Example directory\n\ndn: cn=Manager,dc=example,dc=com\nobjectClass: organizationalRole\ncn: Manager\ndescription: Directory Manager\n^D\n```\n\nThe text after the first line is entered on stdin, or could be read from a file either with the -f option or a file redirect.\n\n"
    },
    {
      "title": "Test your new OpenLDAP installation",
      "level": 3,
      "content": "This is easy, just run the command below:\n\n```\n$ ldapsearch -x '(objectclass=*)' -b 'dc=example,dc=com'\n```\n\nOr authenticating as the rootdn (replacing -x by -D user -W), using the example configuration we had above:\n\n```\n$ ldapsearch -D \"cn=Manager,dc=example,dc=com\" -W '(objectclass=*)' -b 'dc=example,dc=com'\n```\n\nNow you should see some information about your database.\n\n"
    },
    {
      "title": "OpenLDAP over TLS",
      "level": 3,
      "content": "If you access the OpenLDAP server over the network and especially if you have sensitive data stored on the server you run the risk of someone sniffing your data which is sent clear-text. The next part will guide you on how to setup an SSL connection between the LDAP server and the client so the data will be sent encrypted.\n\nIn order to use TLS, you must have a certificate. For testing purposes, a self-signed certificate will suffice. To learn more about certificates, see OpenSSL.\n\n"
    },
    {
      "title": "Create a self-signed certificate",
      "level": 4,
      "content": "To create a self-signed certificate, type the following:\n\n```\n$ openssl req -new -x509 -nodes -out slapdcert.pem -keyout slapdkey.pem -days 365\n```\n\nYou will be prompted for information about your LDAP server. Much of the information can be left blank. The most important information is the common name. This must be set to the DNS name of your LDAP server. If your LDAP server's IP address resolves to example.org but its server certificate shows a CN of bad.example.org, LDAP clients will reject the certificate and will be unable to negotiate TLS connections (apparently the results are wholly unpredictable).\n\nNow that the certificate files have been created copy them to /etc/openldap/ssl/ (create this directory if it does not exist) and secure them. slapdcert.pem must be world readable because it contains the public key. slapdkey.pem on the other hand should only be readable for the ldap user for security reasons:\n\n```\n# mv slapdcert.pem slapdkey.pem /etc/openldap/ssl/\n# chmod -R 755 /etc/openldap/ssl/\n# chmod 400 /etc/openldap/ssl/slapdkey.pem\n# chmod 444 /etc/openldap/ssl/slapdcert.pem\n# chown ldap /etc/openldap/ssl/slapdkey.pem\n```\n\n"
    },
    {
      "title": "Configure slapd for SSL",
      "level": 4,
      "content": "Edit the configuration to tell LDAP where the certificate files reside by executing the following command:\n\nNote: **do** \n\n```\nldapmodify -D 'cn=Manager,dc=example,dc=com' -W\n```\n\n```\ndn: cn=config\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/openldap/ssl/slapdcert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/openldap/ssl/slapdkey.pem\n```\n\nIf you are using a signed SSL Certificate from a certification authority such as Let’s Encrypt, you will also need to specify the path to the root certificates database and your intermediary certificate. You will also need to change ownership of the .pem files and intermediary directories to make them readable to the user ldap:\n\n```\nldapmodify -D 'cn=Manager,dc=example,dc=com' -W\n```\n\n```\ndn: cn=config\nadd: olcTLSCACertificateFile\nolcTLSCACertificateFile: /etc/letsencrypt/live/ldap.my-domain.com/chain.pem\n-\nadd: olcTLSCertificateFile\nolcTLSCertificateFile: /etc/letsencrypt/live/ldap.my-domain.com/cert.pem\n-\nadd: olcTLSCertificateKeyFile\nolcTLSCertificateKeyFile: /etc/letsencrypt/live/ldap.my-domain.com/privkey.pem\n-\nadd: olcTLSCACertificatePath\nolcTLSCACertificatePath: /usr/share/ca-certificates/trust-source\n```\n\nSSLv2/v3\n\nDisable SSLv2/v3 and use strong ciphers.\n\n```\nldapmodify -D 'cn=Manager,dc=example,dc=com' -W\n```\n\n```\ndn: cn=config\nadd: olcTLSProtocolMin\nolcTLSProtocolMin: 3.3\n-\nadd: olcTLSCipherSuite\nolcTLSCipherSuite: DEFAULT:!kRSA:!kDHE\n-\n```\n\nTLSProtocolMin specifies the minimum version in wire format, so \"3.3\" actually means TLSv1.2.\n\nThe TLSCipherSuite specifies a list of OpenSSL ciphers from which slapd will choose when negotiating TLS connections, in decreasing order of preference. In addition to those specific ciphers, you can use any of the wildcards supported by OpenSSL. Note: DEFAULT is a wildcard. See ciphers(1ssl) for description of ciphers, wildcards and options supported.\n\n"
    },
    {
      "title": "Start slapd with SSL",
      "level": 4,
      "content": "You will have to edit the environment file read by slapd.service to change the protocol slapd listens on:\n\n```\n/etc/conf.d/slapd\n```\n\n```\nSLAPD_URLS=\"ldaps:///\"\nSLAPD_OPTIONS=\n```\n\nLocalhost connections do not need to use SSL. So, if you want to access the server locally you should change the SLAPD_URLS line to:\n\n```\nSLAPD_URLS=\"ldap://127.0.0.1 ldaps:///\"\n```\n\nThen restart slapd.service. If it was enabled before, reenable it now.\n\n"
    },
    {
      "title": "Next steps",
      "level": 2,
      "content": "You now have a basic LDAP installation. The next step is to design your directory. The design is heavily dependent on what you are using it for. If you are new to LDAP, consider starting with a directory design recommended by the specific client services that will use the directory (PAM, Postfix, etc).\n\nA directory for system authentication is the LDAP authentication article.\n\nA nice web frontend is phpLDAPadmin.\n\n"
    },
    {
      "title": "Backup LDAP",
      "level": 3,
      "content": "It is imperative that we have a backup of our LDAP database and configuration in case we ever need to restore for any number of reasons.\n\n"
    },
    {
      "title": "Export configuration",
      "level": 4,
      "content": "```\n[ldap]$ slapcat -vF /etc/openldap/slapd.d -n 0 -l \"$(hostname)-ldap-mdb-config-$(date '+%F').ldif\"\n```\n\n"
    },
    {
      "title": "Export database",
      "level": 4,
      "content": "```\n[ldap]$ slapcat -v -n 1 -l \"$(hostname)-ldap-database-$(date '+%F').ldif\"\n```\n\n"
    },
    {
      "title": "Import configuration",
      "level": 4,
      "content": "```\n[ldap]$ slapadd -v -n 0 -F /etc/openldap/slapd.d -l <filename from config export>\n```\n\n"
    },
    {
      "title": "Import database",
      "level": 4,
      "content": "```\n[ldap]$ slapadd -v -n 1 -F /etc/openldap/slapd.d -l <filename from database export>\n```\n\n"
    },
    {
      "title": "slapd configuration checking",
      "level": 3,
      "content": "You can check configuration settings with\n\n```\n$ slaptest -F /etc/openldap/slapd.d/ -v\n```\n\n"
    },
    {
      "title": "Client authentication checking",
      "level": 3,
      "content": "If you cannot connect to your server for non-secure authentication:\n\n```\n$ ldapsearch -x -H ldap://ldaservername:389 -D cn=Manager,dc=example,dc=exampledomain\n```\n\nand for TLS secured authentication with:\n\n```\n$ ldapsearch -x -H ldaps://ldaservername:636 -D cn=Manager,dc=example,dc=exampledomain\n```\n\n"
    },
    {
      "title": "LDAP server stops suddenly",
      "level": 3,
      "content": "If you notice that slapd seems to start but then stops, try running:\n\n```\n# chown -R ldap:ldap /var/lib/openldap\n```\n\nto allow slapd write access to its data directory as the user \"ldap\".\n\n"
    },
    {
      "title": "LDAP server does not start",
      "level": 3,
      "content": "Try starting the server from the command line with debugging output enabled:\n\n```\n# slapd -u ldap -g ldap -h ldaps://ldaservername:636 -d Config,Stats\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Official OpenLDAP Software Administrator's Guide\n- phpLDAPadmin is a web interface tool in the style of phpMyAdmin.\n- LDAP authentication\n- apachedirectorystudioAUR from the Arch User Repository is an Eclipse-based LDAP viewer. Works perfect with OpenLDAP installations.\n\n"
    }
  ]
}