{
  "title": "PyPy",
  "url": "https://wiki.archlinux.org/title/PyPy",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "PyPy is an alternate implementation of the Python 2.7, 3.9 and 3.10 interpreters. PyPy's benefits are in the area of speed, memory usage, sandboxing and stacklessness. It is compatible with CPython with some exceptions. PyPy also can be used to compile RPython programs to C code.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "For Python 2.7, install the pypy package. For Python 3.10, install the pypy3 package.\n\nPyPy is installed in /opt/pypy/ or /opt/pypy3 and the main pypy executable is bin/pypy-c.\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Basic PyPy usage is done through the pypy or pypy3 command and functions similarly to CPython usage. Enter\n\n```\n$ pypy -h\n```\n\nto view the listing of pypy options.\n\n"
    },
    {
      "title": "Interactive interpreter",
      "level": 3,
      "content": "To load the PyPy interactive interpreter, run\n\n```\n$ pypy\n```\n\n"
    },
    {
      "title": "Run program from file",
      "level": 3,
      "content": "To run a Python program from a file in PyPy, run\n\n```\n$ pypy example.py\n```\n\n"
    },
    {
      "title": "Virtual environment creation",
      "level": 3,
      "content": "To make a virtual environment with PyPy:\n\n```\n$ virtualenv --python=/usr/bin/pypy venv-pypy\n```\n\nSee Python/Virtual environment for further information.\n\n"
    },
    {
      "title": "Installing pip",
      "level": 3,
      "content": "As Python packages for PyPy are not distributed as Arch packages, it is most convenient to install what you require as your own user:\n\n```\n$ pypy -m ensurepip --user\n$ pypy -m pip install --user --upgrade pip\n```\n\nOnce you have pip, you can install any package you need, e.g., sqlalchemy:\n\n```\n$ pypy -m pip install --user sqlalchemy\n```\n\nIf you would prefer to install packages system-wide, just run the previous commands as root without the --user. Note that this will result in the packages being installed in /opt/pypy without the package manager being aware of them.\n\n"
    },
    {
      "title": "EasyInstall",
      "level": 2,
      "content": "Python libraries and programs can be installed in PyPy through EasyInstall.\n\n"
    },
    {
      "title": "EasyInstall installation",
      "level": 3,
      "content": "EasyInstall does not come with the PyPy package but is automatically installed when installing pip and located at /opt/pypy/bin/easy_install.\n\n"
    },
    {
      "title": "Installing EasyInstall packages",
      "level": 3,
      "content": "To install the EasyInstall package package_name into PyPy, enter\n\n```\n# /opt/pypy/bin/easy_install package_name\n```\n\nPackages will be located at /opt/pypy/site-packages. Installed libraries and applications will be at /opt/pypy/bin. Programs installed through EasyInstall on PyPy can usually be ran with /opt/pypy/bin/program_name where program_name is the name of the PyPy program.\n\n"
    },
    {
      "title": "EasyInstall package example",
      "level": 3,
      "content": "The following will install the Lamson email framework:\n\n```\n# /opt/pypy/bin/easy_install lamson\n```\n\nThe following will run the framework's gen -project command:\n\n```\n$ /opt/pypy/bin/lamson gen -project testproject\n```\n\n"
    }
  ]
}