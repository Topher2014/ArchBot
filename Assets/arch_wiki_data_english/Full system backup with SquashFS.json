{
  "title": "Full system backup with SquashFS",
  "url": "https://wiki.archlinux.org/title/Full_system_backup_with_SquashFS",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- Full system backup with tar\n\nNote: **This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.** This article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nThis article or section needs language, wiki syntax or style improvements. See Help:Style for reference.\n\nCompressed backup archives of whole filesystems can be made in the SquashFS format. Backup and retrieval takes relatively less time with its random access capability, but any kind of modification other than appending is not yet possible.\n\nTable content:\nDevice File | Description\n/dev/sdB | Backup Drive\n/dev/sdL | Live Medium\n/dev/sdSRC | Drive to Be Backed Up\n\n"
    },
    {
      "title": "Pros and cons",
      "level": 2,
      "content": "Pros:\n\n- No partitioning, no guessing how much size is required\n- SquashFS should be supported by most rescue disks\n- Random access[citation needed], with a plain mount\n- Duplicate files are removed by default (unless -no-duplicates flag is on)\n\nCons:\n\n- Access Control Lists are not yet supported, and therefore not backed up\n- Not accessible from Windows1\n- Appendable but impossible to remove things from it\n- To use the disk for some other purposes, you have to destroy the backup2\n\n1. squashfs-tools-ng may support SquashFS image files but Windows itself does not support partitionless drives at all.\n1. Do not grab the lifebuoy when you need a swim ring. File sharing and backup should be in separate disks. Please buy adequate backup hardware.\n\n"
    },
    {
      "title": "Prepare the backup drive",
      "level": 2,
      "content": "- All data on the backup drive will be lost.\n- All data on machine may be lost if an incorrect device file is specified.\n\n1. Wipe out all partitions /dev/sdBN, then the partition table /dev/sdB, with wipefs.\n1. Synchronize all write caches # sync\n1. Inform the OS of partition table changes # partprobe\n1. Check for bad blocks: If the backup drive is an SSD, use S.M.A.R.T.. If the backup drive is an HDD, use badblocks.\n\n- If the backup drive is an SSD, use S.M.A.R.T..\n- If the backup drive is an HDD, use badblocks.\n\n"
    },
    {
      "title": "Prepare a live medium",
      "level": 2,
      "content": "Installation guide#Prepare an installation medium or archiso to /dev/sdL\n\n"
    },
    {
      "title": "Back up",
      "level": 2,
      "content": "Installation guide#Boot the live environment\n\n1. Boot the live medium\n1. When the boot loader menu appears, press 'e'\n1. Append copytoram to kernel parameters\n1. # udisksctl power-off -b /dev/sdL (requires archiso releng with udisks2 in packages.x86_64)\n1. Make sure the live medium stops spinning and disconnect it\n\nMount filesystems you would like to backup. (e.g. /dev/sdSRC to /mnt)\n\n```\n# fsck /dev/sdSRC\n# mount -o ro /dev/sdSRC /mnt\n```\n\nBack up (example script)\n\n- All data on the backup drive will be lost.\n- All data on machine may be lost if an incorrect device file is specified.\n\n```\n# mksquashfs /mnt /dev/sdB \\\n  -not-reproducible \\\n  -xattrs \\\n  -wildcards \\\n  -noappend \\\n  -progress \\\n  -mem 5G \\\n  -e \\\n    var/cache/pacman/pkg \\\n    var/lib/pacman/sync \\\n    var/log/journal \\\n    efi \\\n    boot/grub \\\n    boot/initramfs-linux\"*\".img \\\n    boot/vmlinuz-linux\n```\n\n"
    },
    {
      "title": "(Optional) Test backup in QEMU",
      "level": 2,
      "content": "Grant permission\n\n```\n$ sudo chown $USER:$USER /dev/sdB\n```\n\nLaunch QEMU\n\n```\n$ qemu-system-x86_64 \\\n  -kernel /boot/vmlinuz-linux \\\n  -append \"root=/dev/sdB ro loglevel=3 init=/usr/lib/systemd/systemd\" \\\n  -initrd /boot/initramfs-linux-fallback.img \\\n  -drive file=/dev/sdB,index=0,media=disk,format=raw \\\n  -m virtual_machine_ram_in_MiB \\\n  --enable-kvm \\\n  -cpu host\n```\n\n"
    },
    {
      "title": "(Optional) Inspect backup",
      "level": 2,
      "content": "Get backup date\n\n```\n# date --date=@\"$(unsquashfs -mkfs-time /dev/sdB)\"\n```\n\nMore superblock information\n\n```\n# unsquashfs -stat /dev/sdB\n```\n\nChecksum\n\nNote: **The factual accuracy of this article or section is disputed.** The factual accuracy of this article or section is disputed.\n\nThe factual accuracy of this article or section is disputed.\n\n```\n# COUNT=\"$(unsquashfs -stat /dev/sdB | grep -F 'Filesystem size' | cut -d' ' -f3)\"\n# echo \"$COUNT Byte\"\n# numfmt --to=iec-i \"$COUNT\"\n# head -c \"$COUNT\" /dev/sdB | sha1sum | tee -a sha1sum.txt\n```\n\n"
    },
    {
      "title": "Retrieve file from backup",
      "level": 2,
      "content": "```\n# mount /dev/sdB /mnt\n# cp /mnt/path/to/file /path/to/destination\n```\n\n"
    },
    {
      "title": "Restore backup",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nNote: To make system bootable after restore:\n\nTo make system bootable after restore:\n\n- fix fstab\n- arch-chroot regenerate the initramfs install and configure boot loader\n\n- regenerate the initramfs\n- install and configure boot loader\n\n"
    }
  ]
}