{
  "title": "ISCSI Initiator",
  "url": "https://wiki.archlinux.org/title/ISCSI_Initiator",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "This article describes how to access an iSCSI target with the Open-iSCSI initiator.\n\nNote: **not** \n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the open-iscsi package.\n\n"
    },
    {
      "title": "Overview",
      "level": 2,
      "content": "The following diagram shows how the Components work together. A more detailed version can be found here: Open-iSCSI modules (Outdated)\n\n```\n+--------------------------------------------------------+             \n | Targets & Sessions configuration files and directories |             \n +--------------------------------------------------------+             \n                                                                       \n +--------------------------+     +----------------------------------+ \n | iscsiadm                 |     | iscsid: iSCSI daemon             | \n |                          |     |                                  | \n |  * Command line tool     |<--->|  * Implements Session management | \n |  * Manages database of   |     |  * Communicates with iscsiadm    | \n |    sessions and targets  |     |    and iscsi kernel modules      | \n +--------------------------+     +---------------+------------------+ \n                                                  |                    \n User space                                       |                    \n- - - - - - - - - - - - - - - - - - - - - - - - - | - - - - - - - - - -\n Kernel                                           v                    \n         +-----------------------------------------------------------+ \n         | kernel modules: scsi_transport_iscsi, iscsi_tcp, libiscsi | \n         +-----------------------------------------------------------+\n```\n\nFrom the Open-iSCSI README:\n\nPersistent configuration is implemented as a tree of files and directories, which are contained in two directories:\n\nNote: /etc/iscsi/ should only contain initiatorname.iscsi and iscsid.conf\n\n/etc/iscsi/ should only contain initiatorname.iscsi and iscsid.conf\n\n- Discovery directory /var/lib/iscsi/send_targets which has directories named after target addresses.\n- Node directory /var/lib/iscsi/nodes which has directories named after IQN (ISCSI Unique Name) of particular device.\n\n"
    },
    {
      "title": "Start the Service",
      "level": 3,
      "content": "iscsid is managed by a systemd Unit.\n\nStart iscsid.service or iscsid.socket.\n\n"
    },
    {
      "title": "ISCSI Qualified Name (IQN)",
      "level": 3,
      "content": "IQN is used for identifying every device.\n\nOpen-ISCSI stores its initiator IQN in the /etc/iscsi/initiatorname.iscsi file with a format InitiatorName=iqn\n\nDuring installation the initial IQN will be generated. If you wish to generate new IQN the iscsi-iname utility can be used which prints out new IQN.\n\n"
    },
    {
      "title": "Authentication",
      "level": 3,
      "content": "If the ISCSI target requires authentication by the initiator, the configuration file /etc/iscsi/iscsid.conf may need to be updated.\n\nThe following parameters are used for authenticating a login session of an initiator to a target:\n\n```\nnode.session.auth.authmethod = CHAP\nnode.session.auth.username = initiators_username\nnode.session.auth.password = initiators_password\n```\n\nIf your target has two-way authentication enabled then those lines also need to be edited:\n\n```\nnode.session.auth.username_in = targets_username\nnode.session.auth.password_in = targets_password\n```\n\nIf your target requires authentication to get the list of its nodes (most will not) then following lines should be edited:\n\n```\ndiscovery.sendtargets.auth.authmethod = CHAP\ndiscovery.sendtargets.auth.username = initiators_username\ndiscovery.sendtargets.auth.password = initiators_password\n```\n\nIf your target has two-way authentication enabled then those lines also need to be edited:\n\n```\ndiscovery.sendtargets.auth.username_in = targets_username\ndiscovery.sendtargets.auth.password_in = targets_password\n```\n\n"
    },
    {
      "title": "Target discovery",
      "level": 3,
      "content": "Request the target its nodes.\n\n```\n# iscsiadm --mode discovery --portal target_ip --type sendtargets\n```\n\nOn success information about nodes and target will be saved on your initiator.\n\n"
    },
    {
      "title": "Add target manually",
      "level": 3,
      "content": "```\n# iscsiadm -m node --target targetname --portal target_ip -o new\n```\n\nA possible scenario to use this is when server does not allow discovery.\n\n"
    },
    {
      "title": "Delete obsolete targets",
      "level": 3,
      "content": "```\n# iscsiadm -m discovery -p target_ip -o delete\n```\n\n"
    },
    {
      "title": "Login to available targets",
      "level": 3,
      "content": "```\n# iscsiadm -m node -L all\n```\n\nor login to specific target\n\n```\n# iscsiadm -m node --targetname=targetname --login\n```\n\nlogout:\n\n```\n# iscsiadm -m node -U all\n```\n\n"
    },
    {
      "title": "Info",
      "level": 3,
      "content": "For running session\n\n```\n# iscsiadm -m session -P 3\n```\n\nThe last line of the above command will show the name of the attached device e.g\n\n```\nAttached scsi disk sdd State: running\n```\n\nFor the known nodes\n\n```\n# iscsiadm -m node\n```\n\n"
    },
    {
      "title": "Online resize of volumes",
      "level": 3,
      "content": "If the iscsi blockdevice contains a partitiontable, you will not be able to do an online resize. In this case you have to unmount the filesystem and alter the size of the affected partition.\n\n1. Rescan active nodes in current session # iscsiadm -m node -R\n1. If you use multipath, you also have to rescan multipath volume information. # multipathd -k\"resize map sdx\"\n1. Finally resize the filesystem. # resize2fs /dev/sdx\n\n```\n# iscsiadm -m node -R\n```\n\n```\n# multipathd -k\"resize map sdx\"\n```\n\n```\n# resize2fs /dev/sdx\n```\n\n"
    },
    {
      "title": "Check for attached iSCSI devices",
      "level": 3,
      "content": "You can also check where the attached iSCSI devices are located in the /dev/ tree with:\n\n```\n$ ls -l /dev/disk/by-path/ip-*\n```\n\n"
    },
    {
      "title": "Login to targets on boot",
      "level": 3,
      "content": "To log in to a target during boot, enable iscsi.service and make sure the nodes have node.startup = automatic in their configuration (/var/lib/iscsi/nodes/iqn.node-name/node-ip-address,port).\n\nNote: **d** \n\n"
    },
    {
      "title": "Client IQN",
      "level": 3,
      "content": "At the server (target) you might need to include the client IQN from /etc/iscsi/initiatorname.iscsi in the account configuration.\n\n"
    },
    {
      "title": "Debugging the iSCSI daemon",
      "level": 3,
      "content": "To run the iSCSI daemon in debug mode (make sure you stopped iscsid.service before)\n\n```\n# iscsid -d 8 -c /etc/iscsi/iscsid.conf -i /etc/iscsi/initiatorname.iscsi -f\n```\n\n"
    }
  ]
}