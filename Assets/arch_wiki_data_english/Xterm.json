{
  "title": "Xterm",
  "url": "https://wiki.archlinux.org/title/Xterm",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "xterm is the standard terminal emulator for the X Window System. It is highly configurable and has many useful and some unusual features.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the xterm package.\n\n"
    },
    {
      "title": "Resource file settings",
      "level": 3,
      "content": "There are several options you can set in your X resources files that may make this terminal emulator much nicer to use. See xterm(1) § RESOURCES for a complete list.\n\n"
    },
    {
      "title": "TERM Environmental Variable",
      "level": 4,
      "content": "Allow xterm to report the TERM variable correctly. Do not set the TERM variable from your ~/.bashrc or ~/.bash_profile or similar file. The terminal itself should report the correct TERM to the system so that the proper terminfo file will be used. Two usable terminfo names are xterm and xterm-256color. To set the name, use the resource\n\n```\nXTerm.termName: xterm-256color\n```\n\nYou can check the result within xterm using either of these commands:\n\n```\n$ echo $TERM\n$ tset -q\n```\n\n"
    },
    {
      "title": "UTF-8",
      "level": 4,
      "content": "Ensure that your locale is set up for UTF-8. If you do not use UTF-8, you may need to force xterm to more strictly follow your locale by setting\n\n```\nXTerm.vt100.locale: true\n```\n\nTo force UTF-8, set\n\n```\nXTerm.vt100.locale: false\nXTerm.vt100.utf8: true\n```\n\nThis is often necessary because XTerm does not support all UTF-8 locales, including eo.UTF-8.\n\n"
    },
    {
      "title": "Make 'Alt' key behave as on other terminal emulators",
      "level": 4,
      "content": "The default Alt key behavior in xterm is a modifier to send eight bit input characters e.g. to insert æ by pressing Alt+f. To make Alt instead send a ^[ (escape) key (as in gnome-terminal and konsole), set\n\n```\nXTerm.vt100.metaSendsEscape: true\n```\n\n"
    },
    {
      "title": "Fix the backspace key",
      "level": 4,
      "content": "On Arch Linux, xterm sends ^H key when backspace is pressed. This breaks the Ctrl+H key combination on Emacs. The workaround is to send ^? when backspace is pressed by setting the resources\n\n```\nXTerm.vt100.backarrowKey: false\nXTerm.ttyModes: erase ^?\n```\n\n"
    },
    {
      "title": "Key binding",
      "level": 4,
      "content": "xterm defines a whole suite of \"actions\" for manipulating the terminal e.g. copy-selection(), hard-reset(), scroll-back(), etc. These actions can be mapped to mouse/key combinations using the translations resource. For example, you can map Ctrl+M and Ctrl+R to maximize/restore the window:\n\n```\nXTerm.vt100.translations: #override \\n\\\n    Ctrl <Key>M: maximize() \\n\\\n    Ctrl <Key>R: restore()\n```\n\n#override indicates that these bindings should override any existing ones (you almost always want this for custom key bindings). Each binding must be separated by the escape sequence \\n. If you want to insert a literal newline, it also needs to be escaped (hence \\n\\). See xterm(1) § KEY_BINDINGS for the full list of actions and many examples.\n\n"
    },
    {
      "title": "Scrolling",
      "level": 3,
      "content": "As new lines are written to the bottom of the xterm window, older lines disappear from the top. To scroll up and down through the off-screen lines one can use the mouse wheel, the key combinations Shift+PageUp and Shift+PageDown, or the scrollbar.\n\nBy default, 1024 lines are saved. You can change the number of saved lines with the saveLines resource:\n\n```\nXTerm.vt100.saveLines: 4096\n```\n\nOther X resources that affect scrolling are jumpScroll, multiScroll, and fastScroll (all under XTerm.vt100, see xterm(1) § VT100 Widget Resources). To scroll inside an alternate screen, set alternateScroll to true.\n\n"
    },
    {
      "title": "Scrollbar",
      "level": 4,
      "content": "The scrollbar is not shown by default. It can be enabled and its appearance tweaked through resource settings (note the differing capitalization of \"scrollbar\"!)\n\n```\nXTerm.vt100.scrollBar: true\nXTerm.vt100.scrollbar.width: 8\n```\n\nSee xterm(1) § Scrollbar Resources for other scrollbar resources.\n\nThe scrollbar operates differently from what you may be accustomed to using.\n\n- To scroll down: Click on the scrollbar with the left mouse button, or Click on the scrollbar below the thumb with the middle mouse button.\n- To scroll up: Click on the scrollbar with the right mouse button, or Click on the scrollbar above the thumb with the middle mouse button.\n- To position text, moving in either direction: Grab the thumb and use \"click-and-drag\" with the middle mouse button.\n\n- Click on the scrollbar with the left mouse button, or\n- Click on the scrollbar below the thumb with the middle mouse button.\n\n- Click on the scrollbar with the right mouse button, or\n- Click on the scrollbar above the thumb with the middle mouse button.\n\n- Grab the thumb and use \"click-and-drag\" with the middle mouse button.\n\n"
    },
    {
      "title": "Menus",
      "level": 3,
      "content": "xterm is compiled with the toolbar, or menubar, disabled. The menus are still available as popups when you press Ctrl+MouseButton within the xterm window. The actions invoked by the menu items can often be accomplished using command line options or by setting resource values.\n\n```\nXTerm.vt100.geometry: 80x32\n```\n\nSome of the menu options are discussed below.\n\n"
    },
    {
      "title": "Main Options menu",
      "level": 4,
      "content": "Opens with Ctrl+LeftMouse:\n\n- Secure Keyboard attempts to ensure only the xterm window, and no other application, receives your keystrokes. The display changes to reverse video when it is invoked. If the display is not in reverse video, the Secure Keyboard mode is not in effect. Please read xterm(1) § SECURITY for this option's limitations.\n- Allow SendEvents allows other processes to send keypress and mouse events to the xterm window. Because of the security risk, do not enable this unless you are very sure you know what you are doing.\n- Log to File – The log file will be named Xterm.log.hostname.yyyy.mm.dd.hh.mm.ss.XXXXXX. This file will contain all the printed output and all cursor movements. Logging may be a security risk.\n- The six Send *** Signal menu items are not often useful, except when your keyboard fails. HUP, TERM and KILL will close the xterm window. KILL should be avoided, as it does not allow any cleanup code to run.\n- The Quit menu item will also close the xterm window – it is the same as sending a HUP signal. Most users will use the keyboard combination Ctrl+d or will type exit to close an xterm instance.\n\n"
    },
    {
      "title": "VT Options menu",
      "level": 4,
      "content": "Opens with Ctrl+MiddleMouse:\n\n- Select to Clipboard – Normally, selected text is stored in PRIMARY, to be pasted with Shift+Insert or by using the middle mouse button. By toggling this option to on selected text will use CLIPBOARD, allowing you to paste the text selected in an xterm window into a GUI application using Ctrl+v. The corresponding resource is XTerm.vt100.selectToClipboard.\n- Show Alternate Screen – When you use a terminal application such as vim, or less, the alternate screen is opened. The main VT window, now hidden, remains in memory. You can view this main window, but not issue any commands in it, by toggling this menu option. You are able to select and copy text from this main window. Tip: Suspending the process running in the Alternate Screen and then resuming it provides more functionality than using Show Alternate Screen. With a bash shell, pressing Ctrl+z suspends the process; issuing the command fg then resumes it.\n- Show Tek Window and Switch to Tek Mode – The Tektronix 4014 was a graphics terminal from the 1970s used for CAD and plotting applications. The command line program graph, from plotutils, and the application gnuplot can be made to use xterm's Tek emulation; most people will prefer more modern display options for charting data. See the #Tek 4014 demonstration, below.\n\n"
    },
    {
      "title": "VT Fonts menu",
      "level": 4,
      "content": "Opens with Ctrl+RightMouse:\n\n- When using XLFD fonts, the first seven menu items will change the font face and the font size used in the current xterm window. If you are using an Xft font, only the font size will change, the font face will not change with the different selections.Tip: Unreadable and Tiny are useful if you wish to keep an eye on a process but do not want to devote a large amount of screen space to the terminal window. An example use might be a lengthy compilation process when you only want to see that the operation completes.\n- Selection, when using XLFD font names, allows you to switch to the font name stored in the PRIMARY selection (or CLIPBOARD).\n\n"
    },
    {
      "title": "Tek Options menu",
      "level": 4,
      "content": "Opens from the Tek Window with Ctrl+MiddleMouse.\n\nThe first section's options allow you to change the Tek window font size. The second set of options are used to move the focus between the Tek emulation window and the main, or VT, window and to close or hide the Tek window.\n\n"
    },
    {
      "title": "Copy and paste",
      "level": 3,
      "content": "First, highlighting text using the mouse in an xterm (or alternatively another application) will select the text to copy, then clicking the mouse middle-button will paste that highlighted text. The key combination Shift+Insert will paste highlighted text (but not in all applications).\n\nSee Clipboard#Selections for the terminology and general information.\n\n"
    },
    {
      "title": "PRIMARY or CLIPBOARD",
      "level": 4,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nBy default, xterm copies highlighted text into a buffer called the PRIMARY selection where the text is immediately replaced by a new PRIMARY selection as soon as another piece of text is highlighted. The PRIMARY selection can be pasted in xterm by pressing the middle-mouse button or Shift+Insert.\n\nThe CLIPBOARD selection is used for explicit copy/paste commands, e.g. via the shortcuts Ctrl+c, Ctrl+x, or Ctrl+v.\n\nxterm allows users to switch between using PRIMARY or CLIPBOARD using Select to Clipboard on the #VT Options menu, or with the XTerm.vt100.selectToClipboard resource.\n\n"
    },
    {
      "title": "PRIMARY and CLIPBOARD",
      "level": 4,
      "content": "With the above setting you can select if you want to use PRIMARY or CLIPBOARD, but you can also hack it to add the selection to both. Just override the #Key binding for releasing the left mouse button:\n\n```\n<Btn1Up>: select-end(PRIMARY, CLIPBOARD, CUT_BUFFER0)\n```\n\nYou can add key bindings similar to other terminals' copy/paste behavior (such as gnome terminal):\n\n```\nCtrl Shift <Key>C: copy-selection(CLIPBOARD) \\n\\\nCtrl Shift <Key>V: insert-selection(CLIPBOARD)\n```\n\n"
    },
    {
      "title": "Selecting text",
      "level": 4,
      "content": "The new user usually discovers that text may be selected using a \"click-and-drag\" with the left mouse button. Double-clicking will select a word, where a word is defined as consecutive alphabetic characters plus the underscore, or the Basic Regular Expression (BRE) [A-Za-z_]. Triple-clicking selects a line, with a \"tab\" character usually copied as multiple \"space\" characters.\n\nAnother way of selecting text, especially useful when copying more than one full screen, is:\n\n1. Left-click at the start of the intended selection.\n1. Scroll to where the end of the selection is visible.\n1. Right-click at the end of the selection.\n\nYou can clear any selected text by left-clicking once, anywhere within the xterm window.\n\nWhen a character-based application runs inside xterm, it is allowed to receive mouse events. This may be a problem if the program can not communicate with the X11 clipboard. In order to pass these events to the underlying xterm, they must be accompanied by the Shift key. For example, in links (not xlinks -g), one can mouse-click on URLs and menu items, but not select or paste with a middle button. To do copy-paste, press the Shift key and then perform mouse clicks (the key needs to be pressed only during the click, so there is no need to hold it when dragging mouse to select, for instance, a text block).\n\n"
    },
    {
      "title": "Colors",
      "level": 2,
      "content": "xterm defaults to black text, the foreground color, on a white background. The foreground and background colors can be reversed by setting the resource\n\n```\nXTerm.vt100.reverseVideo: true\n```\n\nAlternatively, you can directly change the foreground and background colors (as well as the first sixteen terminal colors) using resources:\n\n```\nXTerm.vt100.foreground: white\nXTerm.vt100.background: black\nXTerm.vt100.color0: rgb:28/28/28\n! ...\nXTerm.vt100.color15: rgb:e4/e4/e4\n```\n\nNote: Some colors can be specified by assigned names. If emacs or vim has been installed, you can examine /usr/share/emacs/*/etc/rgb.txt or /usr/share/vim/*/rgb.txt to view the list of color names with their decimal RGB values. Colors may also be specified using hexadecimal RGB values with the format rgb:RR/GG/BB, or the older and not encouraged syntax #RRGGBB.\n\nSome colors can be specified by assigned names. If emacs or vim has been installed, you can examine /usr/share/emacs/*/etc/rgb.txt or /usr/share/vim/*/rgb.txt to view the list of color names with their decimal RGB values. Colors may also be specified using hexadecimal RGB values with the format rgb:RR/GG/BB, or the older and not encouraged syntax #RRGGBB.\n\nThe color PapayaWhip is the same as rgb:ff/ef/d5, which is the same as #ffefd5.\n\nMany suggestions for color schemes can be viewed in the forum thread, Terminal Colour Scheme Screenshots.\n\n```\n*foreground: rgb:b2/b2/b2\n*background: rgb:08/08/08\n```\n\n"
    },
    {
      "title": "Default fonts",
      "level": 3,
      "content": "xterm's default font is the bitmap font named by the X Logical Font Description alias fixed, often resolving to\n\n```\n-misc-fixed-medium-r-semicondensed--13-120-75-75-c-60-iso8859-?\n```\n\nThis font, also aliased to the name 6x13, has remakably wide coverage for unicode glyphs. The default \"TrueType\" font is the 14‑point font matched by the name mono. The FreeType font that will be used can be found with this command:\n\n```\n$ fc-match mono\n```\n\nFonts can be specified in your resources, depending on whether the font is TrueType or not:\n\n```\nXTerm.vt100.faceName: Liberation Mono:size=10:antialias=false\nXTerm.vt100.font: 7x13\n```\n\nTo test, you can also set the font on the command line: -fa for faceName, -fn for font. If you set both kinds of fonts, you can alternate between the two by toggling TrueType Fonts from the #VT Fonts menu. You can also choose the default with the following resource\n\n```\n! start with TrueType fonts disabled\nXTerm.vt100.renderFont: false\n```\n\n"
    },
    {
      "title": "Bold and underlined fonts",
      "level": 3,
      "content": "Italic fonts are shown as underlined characters when using XLFD names in xterm. TrueType fonts should use an oblique typeface.\n\nIf you do not specify a bold font at the command line, -fb, or through the XTerm.vt100.boldFont resource, xterm will attempt to find a bold font matching the normal font. If a matching font is not found, the bold font will be created by \"overstriking\" the normal font.\n\n"
    },
    {
      "title": "CJK Fonts",
      "level": 3,
      "content": "Many fonts do not contain glyphs for the double width Chinese, Japanese and Korean languages. Other terminal emulators such as urxvt may be better suited if you frequently work with these languages.\n\nUsing bitmapped XLFD fonts with CJK has many pitfalls in xterm. It is much easier to use TrueType fonts for CJK display, using the faceNameDoublesize resource. This example uses DejaVu Sans Mono as the normal font and WenQuanYi WenQuanYi Bitmap Song as the double width font:\n\n```\nXTerm.vt100.faceName: DejaVu Sans Mono:style=Book:antialias=false\nXTerm.vt100.faceNameDoublesize: WenQuanYi WenQuanYi Bitmap Song\nXTerm.vt100.faceSize: 8\n```\n\n"
    },
    {
      "title": "Automatic transparency",
      "level": 3,
      "content": "Install a transset package, such as transset-dfAUR or xorg-transsetAUR, and a composite manager such as Xcompmgr. Then add the following line to your ~/.bashrc:\n\n```\n[ -n \"$XTERM_VERSION\" ] && transset-df --id \"$WINDOWID\" >/dev/null\n```\n\nNow, each time you launch a shell in an xterm and a composite manager is running, the xterm window will be transparent. The test in front of transset-df keeps it from executing if XTERM_VERSION is not defined. Note that your terminal will not be transparent if you launch a program other than a shell this way. It is probably possible to work around this if you want the functionality.\n\nAlso see Per-application transparency.\n\n"
    },
    {
      "title": "Enable bell urgency",
      "level": 3,
      "content": "To make the bell character notify the window manager of urgency, set:\n\n```\nXTerm.vt100.bellIsUrgent: true\n```\n\n"
    },
    {
      "title": "Use color in place of bold and italics",
      "level": 4,
      "content": "When using small font sizes, bold or italic characters may be difficult to read. One solution is to turn off bolding and underlining or italics and use color instead. This example does just that:\n\n```\n! disable bold font faces, instead make text light blue.\nXTerm.vt100.colorBDMode: true\nXTerm.vt100.colorBD: rgb:82/a4/d3\n! disable underlined text, instead make it white.\nXTerm.vt100.colorULMode: true\nXTerm.vt100.colorUL: rgb:e4/e4/e4\n! similarly use colorIT for italics\n```\n\nSee #Colors for formatting information.\n\n"
    },
    {
      "title": "Adjust line spacing",
      "level": 4,
      "content": "Lines of text can sometimes be too close together, or they may appear to be too widely spaced. For one example, using DejaVu Sans Mono, the low underscore glyph may butt against CJK glyphs or the cursor block in the line below. Line spacing, called leading by typographers, can be adjusted with the following resource, for example to widen the spacing:\n\n```\nXTerm.vt100.scaleHeight: 1.01\n```\n\nValid values for range from 0.9 to 1.5, with 1.0 being the default.\n\n"
    },
    {
      "title": "Tek 4014 demonstration",
      "level": 3,
      "content": "If you have plotutils installed, you can use xterm's Tektronix 4014 emulation to view some of the plotutils package's test files. Open the Tek window from the #VT Options menu menu item Switch to Tek Mode or start a new xterm instance using this command:\n\n```\n$ xterm -t -tn tek4014\n```\n\nYour PS1 prompt will not render correctly, if it appears at all. In the new window, enter the command,\n\n```\ncat /usr/share/tek2plot/dmerc.tek\n```\n\nA world map will appear in the Tek window. You can also view other *.tek files from that same directory. To close the Tek window, one can use the xterm menus.\n\n"
    },
    {
      "title": "Protect against X11 input snooping",
      "level": 3,
      "content": "It can be inconvenient to activate Secure Keyboard mode from the #Main Options menu. You can instead invoke the secure() action with a #Key binding:\n\n```\nCtrl Alt <Key>S: secure()\n```\n\n"
    },
    {
      "title": "Flickering on scroll",
      "level": 3,
      "content": "Rebuild xterm using ABS and include the --enable-double-buffer flag:\n\n```\n./configure --prefix=/usr \\\n     ...\n     --with-utempter \\\n     --enable-double-buffer\n```\n\nSee Xterm modifications for details.\n\n"
    },
    {
      "title": "Configuration is not applied",
      "level": 3,
      "content": "Some applications, such as i3, call uxterm wrapper instead of xterm. This can be resolved by adding the same configurations for uxterm, such as:\n\n```\nUXTerm.vt100.reverseVideo: true\n```\n\nIf you prefer to not having duplicate entries in the configuration file, wildcard matching can be used:\n\n```\n*.vt100.reverseVideo: true\n```\n\n"
    },
    {
      "title": "Font size menu does not change font size",
      "level": 3,
      "content": "If you have issues with changing the font size, install the xorg-mkfontscale package.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Hidden gems of Xterm\n- Commented XTerm resources\n- XTerm introduction and TrueType fonts configuration\n\n"
    }
  ]
}