{
  "title": "VDPAU",
  "url": "https://wiki.archlinux.org/title/VDPAU",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Hardware video acceleration makes it possible for the video card to decode/encode video, thus offloading the CPU and saving power.\n\nThere are several ways to achieve this on Linux:\n\n- Video Acceleration API (VA-API) is a specification and open source library to provide both hardware accelerated video encoding and decoding, developed by Intel.\n- Video Decode and Presentation API for Unix (VDPAU) is an open source library and API to offload portions of the video decoding process and video post-processing to the GPU video-hardware, developed by NVIDIA.\n- Advanced Media Framework SDK (AMF) is an open source framework which allows \"Optimal\" access to AMD GPUs for multimedia processing using the AMDGPU PRO Stack, Developed by AMD.\n- NVDEC/NVENC - NVIDIA's proprietary APIs for hardware video acceleration, used by NVIDIA GPUs from Fermi onwards.\n- Vulkan Video is an extension of the Vulkan graphics API designed to support hardware-accelerated video encoding and decoding.\n\nFor comprehensive overview of driver and application support see #Comparison tables.\n\n"
    },
    {
      "title": "VA-API",
      "level": 4,
      "content": "Intel graphics open-source drivers support VA-API:\n\n- HD Graphics series starting from Broadwell (2014) and newer (e.g. Intel Arc) are supported by intel-media-driver.\n- GMA 4500 (2008) up to Coffee Lake (2017) are supported by libva-intel-driver.\n- GMA 4500 H.264 decoding is supported by libva-intel-driver-g45-h264AUR, see Intel graphics#Hardware accelerated H.264 decoding on GMA 4500.\n- Haswell Refresh to Skylake VP9 decoding and Broadwell to Skylake hybrid VP8 encoding is supported by intel-hybrid-codec-driver-gitAUR.\n\nAlso see VAAPI supported hardware and features.\n\n"
    },
    {
      "title": "Vulkan",
      "level": 4,
      "content": "ANV open-source vulkan driver provides Vulkan Video support via vulkan-intel.\n\n"
    },
    {
      "title": "Intel Video Processing Library (Intel VPL)",
      "level": 4,
      "content": "For Intel VPL, install the base library libvpl, and at least one of the following runtime implementations:\n\n- vpl-gpu-rt: provides support for Tiger Lake and newer GPUs\n- intel-media-sdk (Discontinued): provides support for older Intel GPUs\n\n"
    },
    {
      "title": "NVIDIA",
      "level": 3,
      "content": "Nouveau open-source driver supports both VA-API and VDPAU:\n\n- GeForce 8 series and newer GPUs up until GeForce GTX 750 are supported by mesa.\n- Requires nouveau-fwAUR firmware package, presently extracted from the NVIDIA binary driver.\n\nNVIDIA proprietary driver supports via nvidia-utils:\n\n- VDPAU on GeForce 8 series and newer GPUs;\n- NVDEC on Fermi and newer GPUs [1];\n- NVENC on Kepler and newer GPUs;\n- Vulkan Video on Pascal and newer GPUs [2].\n\n"
    },
    {
      "title": "AMD/ATI",
      "level": 3,
      "content": "AMD and ATI open-source drivers support both VA-API and VDPAU via mesa:\n\n- VA-API on Radeon HD 2000 and newer GPUs.\n- VDPAU on Radeon R600 and newer GPUs.\n\nRADV open-source vulkan driver provides Vulkan Video support via vulkan-radeon.\n\nAMDGPU PRO proprietary driver is built on top of AMDGPU driver and supports both VA-API and VDPAU in addition to AMF.\n\n- AMF on Fiji and newer GPUs supported by amf-amdgpu-proAUR.\n\n- You may need to force your application to use AMDGPU PRO Vulkan Driver.\n- HEVC encoding may not be available on GPUs older than Navi.\n\n"
    },
    {
      "title": "Translation layers",
      "level": 3,
      "content": "- libvdpau-va-gl — VDPAU driver with OpenGL/VAAPI backend. H.264 only.\n\n- nvidia-vaapi-driver — A CUDA NVDEC based backend for VA-API.\n\n"
    },
    {
      "title": "Verification",
      "level": 2,
      "content": "Your system may work perfectly out-of-the-box without needing any configuration. Therefore it is a good idea to start with this section to see that it is the case.\n\n- mpv with its command-line support is great for testing hardware acceleration. Look at the log of mpv --hwdec=auto video_filename and see hwdec for more details.\n- Use nvtop to check \"DEC\" (decoder) usage on the top lines while playing a video, for AMD, Intel and NVIDIA.\n- For Intel GPU, use intel-gpu-tools and run intel_gpu_top as root to monitor the GPU activity during video playback for example. The video bar being above 0% indicates GPU video decoder/encoder usage.\n- For AMD GPU, use radeontop to monitor GPU activity. Unlike intel-gpu-tools, there is currently no way to see decode/encode usage on radeontop [3].\n- For any GPU, you can compare CPU usage with a tool like htop. Especially for higher resolution videos (4k+), CPU usage when VA-API is enabled and working should be dramatically lower on laptops and other relatively low-power devices.\n\n"
    },
    {
      "title": "Verifying VA-API",
      "level": 3,
      "content": "Verify the settings for VA-API by running vainfo, which is provided by libva-utils:\n\n```\n$ vainfo\n```\n\n```\nlibva info: VA-API version 0.39.4\nlibva info: va_getDriverName() returns 0\nlibva info: Trying to open /usr/lib/dri/i965_drv_video.so\nlibva info: Found init function __vaDriverInit_0_39\nlibva info: va_openDriver() returns 0\nvainfo: VA-API version: 0.39 (libva 1.7.3)\nvainfo: Driver version: Intel i965 driver for Intel(R) Skylake - 1.7.3\nvainfo: Supported profile and entrypoints\n      VAProfileMPEG2Simple            :\tVAEntrypointVLD\n      VAProfileMPEG2Simple            :\tVAEntrypointEncSlice\n      VAProfileMPEG2Main              :\tVAEntrypointVLD\n      VAProfileMPEG2Main              :\tVAEntrypointEncSlice\n      VAProfileH264ConstrainedBaseline:\tVAEntrypointVLD\n      VAProfileH264ConstrainedBaseline:\tVAEntrypointEncSlice\n      VAProfileH264ConstrainedBaseline:\tVAEntrypointEncSliceLP\n      VAProfileH264Main               :\tVAEntrypointVLD\n      VAProfileH264Main               :\tVAEntrypointEncSlice\n      VAProfileH264Main               :\tVAEntrypointEncSliceLP\n      VAProfileH264High               :\tVAEntrypointVLD\n      VAProfileH264High               :\tVAEntrypointEncSlice\n      VAProfileH264High               :\tVAEntrypointEncSliceLP\n      VAProfileH264MultiviewHigh      :\tVAEntrypointVLD\n      VAProfileH264MultiviewHigh      :\tVAEntrypointEncSlice\n      VAProfileH264StereoHigh         :\tVAEntrypointVLD\n      VAProfileH264StereoHigh         :\tVAEntrypointEncSlice\n      VAProfileVC1Simple              :\tVAEntrypointVLD\n      VAProfileVC1Main                :\tVAEntrypointVLD\n      VAProfileVC1Advanced            :\tVAEntrypointVLD\n      VAProfileNone                   :\tVAEntrypointVideoProc\n      VAProfileJPEGBaseline           :\tVAEntrypointVLD\n      VAProfileJPEGBaseline           :\tVAEntrypointEncPicture\n      VAProfileVP8Version0_3          :\tVAEntrypointVLD\n      VAProfileVP8Version0_3          :\tVAEntrypointEncSlice\n      VAProfileHEVCMain               :\tVAEntrypointVLD\n      VAProfileHEVCMain               :\tVAEntrypointEncSlice\n```\n\nVAEntrypointVLD means that your card is capable to decode this format, VAEntrypointEncSlice means that you can encode to this format.\n\nIn this example the i965 driver is used, as you can see in this line:\n\n```\nvainfo: Driver version: Intel i965 driver for Intel(R) Skylake - 1.7.3\n```\n\nIf the following error is displayed when running vainfo:\n\n```\nlibva info: va_openDriver() returns -1\nvaInitialize failed with error code -1 (unknown libva error),exit\n```\n\nYou need to configure the correct driver, see #Configuring VA-API.\n\n"
    },
    {
      "title": "Verifying VDPAU",
      "level": 3,
      "content": "Install vdpauinfo to verify if the VDPAU driver is loaded correctly and retrieve a full report of the configuration:\n\n```\n$ vdpauinfo\n```\n\n```\ndisplay: :0   screen: 0\nAPI version: 1\nInformation string: G3DVL VDPAU Driver Shared Library version 1.0\n\nVideo surface:\n\nname   width height types\n-------------------------------------------\n420    16384 16384  NV12 YV12\n422    16384 16384  UYVY YUYV\n444    16384 16384  Y8U8V8A8 V8U8Y8A8\n\nDecoder capabilities:\n\nname                        level macbs width height\n----------------------------------------------------\nMPEG1                          --- not supported ---\nMPEG2_SIMPLE                    3  9216  2048  1152\nMPEG2_MAIN                      3  9216  2048  1152\nH264_BASELINE                  41  9216  2048  1152\nH264_MAIN                      41  9216  2048  1152\nH264_HIGH                      41  9216  2048  1152\nVC1_SIMPLE                      1  9216  2048  1152\nVC1_MAIN                        2  9216  2048  1152\nVC1_ADVANCED                    4  9216  2048  1152\n...\n```\n\n"
    },
    {
      "title": "Verifying Vulkan Video",
      "level": 3,
      "content": "Install vulkan-tools and use vulkaninfo to verify if the video processing extensions are available:\n\n```\n$ vulkaninfo | grep VK_KHR_video_\n```\n\n```\nVK_KHR_video_decode_av1                       : extension revision 1\n\tVK_KHR_video_decode_h264                      : extension revision 9\n\tVK_KHR_video_decode_h265                      : extension revision 8\n\tVK_KHR_video_decode_queue                     : extension revision 8\n\tVK_KHR_video_encode_h264                      : extension revision 14\n\tVK_KHR_video_encode_h265                      : extension revision 14\n\tVK_KHR_video_encode_queue                     : extension revision 12\n\tVK_KHR_video_maintenance1                     : extension revision 1\n\tVK_KHR_video_queue                            : extension revision 8\n```\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "Although the video driver should automatically enable hardware video acceleration support for both VA-API and VDPAU, it may be needed to configure VA-API/VDPAU manually. Only continue to this section if you went through #Verification.\n\nThe default driver names, used if there is no other configuration present, are guessed by the system. However, they are often hacked together and may not work. The guessed value will be printed in the Xorg log file, which is ~/.local/share/xorg/Xorg.0.log if rootless, or /var/log/Xorg.0.log if Xorg is running as root. To search the log file for the values of interest:\n\n```\n$ grep -iE 'vdpau | dri driver' xorg_log_file\n```\n\n```\n(II) RADEON(0): [DRI2] DRI driver: radeonsi\n(II) RADEON(0): [DRI2] VDPAU driver: radeonsi\n```\n\nIn this case radeonsi is the default for both VA-API and VDPAU.\n\nThis does not represent the configuration however. The values above will not change even if you override them.\n\n"
    },
    {
      "title": "Configuring VA-API",
      "level": 3,
      "content": "You can override the driver for VA-API by using the LIBVA_DRIVER_NAME environment variable:\n\n- Intel graphics: For libva-intel-driver use i965. For intel-media-driver use iHD.\n- NVIDIA: For Nouveau use nouveau. For NVIDIA NVDEC use nvidia.\n- AMD: For AMDGPU driver use radeonsi.\n\n- For libva-intel-driver use i965.\n- For intel-media-driver use iHD.\n\n- For Nouveau use nouveau.\n- For NVIDIA NVDEC use nvidia.\n\n- For AMDGPU driver use radeonsi.\n\nNote: **${LIBVA_DRIVER_NAME}** \n\n- You can find the installed drivers in /usr/lib/dri/. They are used as /usr/lib/dri/${LIBVA_DRIVER_NAME}_drv_video.so.\n- Some drivers are installed several times under different names for compatibility reasons. You can see which by running sha1sum /usr/lib/dri/* | sort.\n- LIBVA_DRIVERS_PATH can be used to overrule the VA-API drivers location.\n- Since version 12.0.1 Mesa provides radeonsi instead of gallium.\n\n"
    },
    {
      "title": "Configuring VDPAU",
      "level": 3,
      "content": "You can override the driver for VDPAU by using the VDPAU_DRIVER environment variable.\n\nThe correct driver name depends on your setup:\n\n- For Intel graphics you need to set it to va_gl.\n- For the open source AMD driver set it to radeonsi.\n- For the open source Nouveau driver set it to nouveau.\n- For NVIDIA's proprietary version set it to nvidia.\n\nNote: **${VDPAU_DRIVER}** \n\n- You can find the installed drivers in /usr/lib/vdpau/. They are used as /usr/lib/vdpau/libvdpau_${VDPAU_DRIVER}.so.\n- Some drivers are installed several times under different names for compatibility reasons. You can see which by running sha1sum /usr/lib/vdpau/*.\n- For hybrid setups (both NVIDIA and AMD), it may be necessary to set the DRI_PRIME environment variable. For more information see PRIME.\n\n"
    },
    {
      "title": "Configuring Vulkan Video",
      "level": 3,
      "content": "- Intel graphics: Vulkan Video support in vulkan-intel can be enabled with the ANV_VIDEO_DECODE=1 environment variable.\n- AMD: Vulkan Video support in vulkan-radeon is enabled by default for VCN 2, 3, and 4+ since Mesa 25. To force-enable support on older cards, set the RADV_PERFTEST environment variable to video_decode,video_encode.\n\n"
    },
    {
      "title": "Configuring applications",
      "level": 3,
      "content": "Multimedia frameworks:\n\n- FFmpeg#Hardware video acceleration\n- GStreamer#Hardware video acceleration\n\nVideo players:\n\n- Kodi#Hardware video acceleration\n- MPlayer#Hardware video acceleration\n- mpv#Hardware video acceleration\n- VLC media player#Hardware video acceleration\n\nWeb browsers:\n\n- Chromium#Hardware video acceleration\n- Firefox#Hardware video acceleration\n- GNOME/Web#Video\n\nMultimedia recording/streaming:\n\n- Open Broadcaster Software#Hardware video acceleration\n\n"
    },
    {
      "title": "Failed to open VDPAU backend",
      "level": 3,
      "content": "You need to set VDPAU_DRIVER variable to point to correct driver. See #Configuring VDPAU.\n\n"
    },
    {
      "title": "VAAPI init failed",
      "level": 3,
      "content": "An error along the lines of libva: /usr/lib/dri/i965_drv_video.so init failed is encountered. This can happen because of improper detection of Wayland. One solution is to unset $DISPLAY so that mpv, MPlayer, VLC, etc. do not assume it is X11. Another mpv-specific solution is to add the parameter --gpu-context=wayland.\n\nThis error can also occur if you installed the wrong VA-API driver for your hardware.\n\n"
    },
    {
      "title": "Video decoding corruption or distortion with AMDGPU driver",
      "level": 3,
      "content": "When experiencing video decoding corruption or distortion with AMDGPU driver, set allow_rgb10_configs=false as an environment variable. [4]\n\n"
    },
    {
      "title": "VA-API drivers",
      "level": 3,
      "content": "Table content:\nCodec | libva-intel-driver [5] | intel-media-driver [6] | mesa [7] [8] | libva-nvidia-driver (NVDEC adapter)\nDecoding\nMPEG-2 | GMA 4500 and newer | Broadwell and newer | Radeon HD 6000 and newerGeForce 8 and newer1 | See #NVIDIA driver only\nH.263/MPEG-4 Visual4 | No | No | Radeon HD 6000 and newer\nVC-1 | Sandy Bridge and newer | Broadwell and newer | Radeon HD 2000 and newerGeForce 9300 and newer1\nH.264/MPEG-4 AVC | GMA 45002, Ironlake and newer | Radeon HD 2000 and newerGeForce 8 and newer1\nH.265/HEVC 8bit | Cherryview/Braswell and newer | Skylake and newer | Radeon R9 Fury and newer\nH.265/HEVC 10bit | Broxton and newer | Broxton/Apollo Lake and newer | Radeon 400 and newer\nVP8 | Broadwell and newer | Broadwell and newer | No\nVP9 8bit | Broxton and newer Hybrid: Haswell refresh to Skylake3 | Broxton/Apollo Lake and newer | Raven Ridge + Radeon RX 5000 and newer\nVP9 10bit & 12bit | Kaby Lake and newer | Kaby Lake and newer\nAV1 8bit & 10bit | No | Tiger Lake and newer | Radeon RX 6600 and higher/newer\nEncoding\nMPEG-2 | Ivy Bridge and newer | Broadwell and newerexcept Broxton/Apollo Lake | No | No5\nH.264/MPEG-4 AVC | Sandy Bridge and newer | Broadwell and newer | Radeon HD 7000 and newer\nH.265/HEVC 8bit | Skylake and newer | Skylake and newer | Radeon 400 and newer\nH.265/HEVC 10bit | Kaby Lake and newer | Kaby Lake and newer | Raven Ridge + Radeon RX 5000 and newer\nVP8 | Cherryview/Braswell and newer Hybrid: Haswell to Skylake3 | No\nVP9 8bit | Kaby Lake and newer | Ice Lake and newer\nVP9 10bit & 12bit | No\nAV1 8bit & 10bit | Alchemist and newer | Radeon RX 7900 and higher/newer\n\n1. Up until GeForce GTX 750.\n1. Supported by libva-intel-driver-g45-h264AUR instead.\n1. Hybrid VP8 encoder and VP9 decoder supported by intel-hybrid-codec-driver-gitAUR.\n1. MPEG-4 Part 2 is disabled by default due to VAAPI limitations. Set the environment variable VAAPI_MPEG4_ENABLED=true to try to use it anyway.\n1. NVIDIA CUDA adapter codec support is in active development and susceptible to change [9].\n\n"
    },
    {
      "title": "VDPAU drivers",
      "level": 3,
      "content": "Table content:\nCodec | Colordepth | mesa [10] [11] | nvidia-utils | libvdpau-va-gl(VA-API adapter)\nDecoding\nMPEG-2 | 8bit | Radeon R600 and newer GeForce 8 and newer1 | GeForce 8 and newer | No\nH.263/MPEG-4 Visual | 8bit | Radeon HD 6000 and newer GeForce 200 and newer1 | GeForce 200 and newer\nVC-1 | 8bit | Radeon HD 2000 and newer GeForce 9300 and newer1 | GeForce 8 and newer2\nH.264/MPEG-4 AVC | 8bit | Radeon HD 2000 and newer GeForce 8 and newer1 | GeForce 8 and newer | See #VA-API drivers\nH.265/HEVC | 8bit | Radeon R9 Fury and newer | GeForce 900 and newer3 | No\n10bit | Radeon 400 and newer | No4\nVP9 | 8bit | Raven Ridge + Radeon RX 5000 and newer | GeForce 900 and newer3\n10bit/12bit | No4\nAV1 | 8bit | Radeon RX 6600 and higher/newer | GeForce 30 and newer5\n10bit | No4\n\n1. Up until GeForce GTX 750.\n1. Except GeForce 8800 Ultra, 8800 GTX, 8800 GTS (320/640 MB).\n1. Except GeForce GTX 970 and GTX 980.\n1. NVIDIA implementation is limited to 8bit streams [12] [13].\n1. Starting with driver version 510.[14]\n\n"
    },
    {
      "title": "NVIDIA driver only",
      "level": 3,
      "content": "Table content:\nCodec | nvidia-utils [15]\nNVDEC | NVENC\nMPEG-2 | Fermi and newer1 | No\nVC-1\nH.264/MPEG-4 AVC | Kepler and newer2\nH.265/HEVC 8bit | Maxwell (GM206) and newer | Maxwell (2nd Gen) and newer\nH.265/HEVC 10bit | Pascal and newer\nVP8 | Maxwell (2nd Gen) and newer | No\nVP9 8bit | Maxwell (GM206) and newer\nVP9 10bit & 12bit | Pascal and newer\nAV1 8bit & 10bit | Ampere and newer3 | Ada Lovelace and newer\n\n1. Except GM108 (not supported)\n1. Except GM108 and GP108 (not supported)\n1. Except A100 (not supported)\n\n"
    },
    {
      "title": "Application support",
      "level": 3,
      "content": "Table content:\nApplication | Decoding | Encoding | Documentation\nVA-API | VDPAU | NVDEC | Vulkan | VA-API | NVENC | Vulkan\nFFmpeg | Yes | Yes | Yes | Yes | Yes | Yes | Yes | FFmpeg#Hardware video acceleration\nGStreamer | Yes | No | Yes | Yes | Yes | Yes | No | GStreamer#Hardware video acceleration\nKodi | Yes | Yes | No | No | – | – | – | Kodi#Hardware video acceleration\nmpv | Yes | Yes | Yes | Yes | – | – | – | mpv#Hardware video acceleration\nVLC media player | Yes | Yes | No | No | – | – | – | VLC media player#Hardware video acceleration\nMPlayer | No | Yes | No | No | – | – | – | MPlayer#Hardware video acceleration\nFlash | No1 | Yes1 | No | No | – | – | – | Browser plugins#Adobe Flash Player\nChromium | Yes | No | No | No | Yes | No | No | Chromium#Hardware video acceleration\nFirefox | Yes | No | No | No | No | No | No | Firefox#Hardware video acceleration\nGNOME/Web | GStreamer | ? | ? | ? | GNOME/Web#Video\n\n1. VDPAU is supported only by NPAPI plugin. PPAPI plugin to NPAPI browser experimental adapter is available that provides partial VA-API and VDPAU acceleration.\n\n"
    }
  ]
}