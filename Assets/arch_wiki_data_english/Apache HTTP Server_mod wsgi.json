{
  "title": "Apache HTTP Server/mod wsgi",
  "url": "https://wiki.archlinux.org/title/Apache_HTTP_Server/mod_wsgi",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "According to the project's site:\n\nmod_wsgi is an Apache HTTP Server module that embeds a Python application within the server and allow them to communicate through the Python WSGI interface as defined in the Python PEP 333. WSGI is one of the Python ways to produce high quality and high performance web applications.\n\nWSGI provide a standard way to interface different web-apps without hassle. Several well-know python applications or frameworks provide wsgi for easy deployment and embedding. It means that you can embed your Django-powered blog and your project's Trac into a single Pylons application that wraps around them to deals with, say, authentication without modifying the formers.\n\nExample:\n\n- Pylons\n- Django\n- Turbo-gear\n- Trac\n- Moin-moin\n- Zope\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install mod_wsgiAUR which provides the module working with all common versions of Python (3.x).\n\n"
    },
    {
      "title": "Apache configuration",
      "level": 2,
      "content": "As indicated during installation, add the following line to the configuration file of Apache:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nLoadModule wsgi_module modules/mod_wsgi.so\n```\n\nRestart httpd.service.\n\nCheck that Apache is running properly. If the previous command returned nothing, it means that the launch of Apache went well. Otherwise, you can see errors with the httpd.service unit status.\n\n"
    },
    {
      "title": "Module test",
      "level": 2,
      "content": "Add this line in Apache configuration file:\n\n```\n/etc/httpd/conf/httpd.conf\n```\n\n```\nWSGIScriptAlias /wsgi_app /srv/http/wsgi_app.py\n```\n\nCreate a test file:\n\n```\n/srv/http/wsgi_app.py\n```\n\n```\n#-*- coding: utf-8 -*-\ndef wsgi_app(environ, start_response):\n    import sys\n    output = sys.version.encode('utf8')\n    status = '200 OK'\n    headers = [('Content-type', 'text/plain'),\n               ('Content-Length', str(len(output)))]\n    start_response(status, headers)\n    yield output\n\n# mod_wsgi need the *application* variable to serve our small app\napplication = wsgi_app\n```\n\nRestart httpd.service\n\nYou can check the proper functioning by going to the following address : http://localhost/wsgi_app\n\n"
    },
    {
      "title": "See Also",
      "level": 2,
      "content": "- LAMP\n- Quick Configuration Guide\n\n"
    }
  ]
}