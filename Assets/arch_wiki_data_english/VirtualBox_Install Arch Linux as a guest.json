{
  "title": "VirtualBox/Install Arch Linux as a guest",
  "url": "https://wiki.archlinux.org/title/VirtualBox/Install_Arch_Linux_as_a_guest",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- VirtualBox\n\nThis article is about installing Arch Linux in VirtualBox.\n\nBoot the Arch installation media through one of the virtual machine's virtual drives. Then, complete the installation of a basic Arch system as explained in the Installation guide.\n\n"
    },
    {
      "title": "Installation in EFI mode (optional)",
      "level": 3,
      "content": "Enabling EFI for Arch as guest is optional. If you want to install Arch Linux in EFI mode inside VirtualBox, you must change the firmware mode for the virtual machine. This must be done before installing Arch as guest, changing the option afterwards will result in an unbootable machine unless the setting is reverted.\n\nTo enable EFI for a virtual machine using the graphical interface, open the settings of the virtual machine, choose System item from the panel on the left and Motherboard tab from the right panel, and check the checkbox Enable EFI (special OSes only).\n\nAlternatively the same can be accomplished from the command line using VBoxManage:\n\n```\n$ VBoxManage modifyvm \"Virtual machine name\" --firmware efi\n```\n\nefi will set the firmware for the virtual machine to EFI with the bitness matching the virtual machine's CPU. To get a specific EFI bitness, set the firmware to efi64 for x86_64 EFI or efi32 for IA32 EFI.\n\nAfter selecting the kernel from the Arch Linux installation media's menu, the media will hang for a minute or two and will continue to boot the kernel normally afterwards. Be patient.\n\n"
    },
    {
      "title": "Install the Guest Additions",
      "level": 3,
      "content": "VirtualBox Guest Additions provides drivers and applications that optimize the guest operating system including improved image resolution and better control of the mouse. Within the installed guest system, install:\n\n- virtualbox-guest-utils for VirtualBox Guest utilities with X support\n- virtualbox-guest-utils-nox for VirtualBox Guest utilities without X support\n\n- You can alternatively install the Guest Additions with the ISO from the virtualbox-guest-iso package, provided you installed this on the host system. To do this, go to the device menu click Insert Guest Additions CD Image.\n- To recompile the vbox kernel modules, run rcvboxadd setup as root.\n\nThe guest additions running on your guest, and the VirtualBox application running on your host must have matching versions, otherwise the guest additions (like shared clipboard) may stop working. If you upgrade your guest (e.g. pacman -Syu), make sure your VirtualBox application on this host is also the latest version. \"Check for updates\" in the VirtualBox GUI is sometimes not sufficient; check the VirtualBox.org website.\n\n"
    },
    {
      "title": "Load the VirtualBox kernel modules",
      "level": 3,
      "content": "To load the modules automatically, enable vboxservice.service which loads the modules and synchronizes the guest's system time with the host.\n\nTo load the modules manually, type:\n\n```\n# modprobe -a vboxguest vboxsf vboxvideo\n```\n\n"
    },
    {
      "title": "Set optimal framebuffer resolution",
      "level": 3,
      "content": "See VirtualBox#Set guest starting resolution.\n\n"
    },
    {
      "title": "Launch the VirtualBox guest services",
      "level": 3,
      "content": "After the rather big installation step dealing with VirtualBox kernel modules, now you need to start the guest services. The guest services are actually just a binary executable called VBoxClient which will interact with your X Window System. VBoxClient manages the following features:\n\n- shared clipboard and drag and drop between the host and the guest;\n- seamless window mode;\n- the guest display is automatically resized according to the size of the guest window;\n- checking the VirtualBox host version\n\nAll of these features can be enabled independently with their dedicated flags:\n\n```\n$ VBoxClient --clipboard\n$ VBoxClient --draganddrop\n$ VBoxClient --seamless\n$ VBoxClient --checkhostversion\n$ VBoxClient --vmsvga\n```\n\nNotice that VBoxClient can only be called with one flag at a time, each call spawning a dedicated service process. As a shortcut, the VBoxClient-all bash script enables all of these features.\n\nvirtualbox-guest-utils installs /etc/xdg/autostart/vboxclient.desktop that launches VBoxClient-all on logon. If your desktop environment or window manager does not support XDG Autostart, you will need to set up autostarting yourself, see Autostarting#On desktop environment startup and Autostarting#On window manager startup for more details.\n\nVirtualBox can also synchronize the time between the host and the guest, to do this, start/enable the vboxservice.service.\n\nNow, you should have a working Arch Linux guest. Note that features like clipboard sharing are disabled by default in VirtualBox, and you will need to turn them on in the per-VM settings if you actually want to use them (e.g. Settings > General > Advanced > Shared Clipboard).\n\n"
    },
    {
      "title": "Auto-resize Guest Display",
      "level": 3,
      "content": "This option will automatically change the resolution of the Arch guest, whenever the window of the virtual machine is resized. This option is enabled by default, and in graphical interface is located at View > Auto-resize Guest Display. When using KDE Plasma, on GUI login screen (Session) select Plasma (X11) instead of the default session Plasma (Wayland), which does not work with auto-resize.\n\n"
    },
    {
      "title": "Hardware acceleration",
      "level": 3,
      "content": "Hardware acceleration can be activated in the VirtualBox options. The GDM display manager 3.16+ is known to break hardware acceleration support. [1] So if you get issues with hardware acceleration, try out another display manager (lightdm seems to work fine). [2] [3]\n\nIf the hardware acceleration does not work as expected, try changing the Graphics Controller option found under the Screen tab in the Display options of the settings GUI. It seems that depending on the host GPU type, not all emulated controllers work equally well.\n\n"
    },
    {
      "title": "Enable shared folders",
      "level": 3,
      "content": "Shared folders are managed on the host, in the settings of the Virtual Machine accessible via the GUI of VirtualBox, in the Shared Folders tab. There, Folder Path, the name of the mount point identified by Folder name, and options like Read-only, Auto-mount and Make permanent can be specified. These parameters can be defined with the VBoxManage command line utility. See there for more details.\n\nNo matter which method you will use to mount your folder, all methods require some steps first.\n\nTo avoid this issue /sbin/mount.vboxsf: mounting failed with the error: No such device, make sure the vboxsf kernel module is properly loaded. It should be, since we enabled all guest kernel modules previously.\n\nTwo additional steps are needed in order for the mount point to be accessible from users other than root:\n\n- the virtualbox-guest-utils package created a group vboxsf (done in a previous step);\n- your user must be in vboxsf user group.\n\n"
    },
    {
      "title": "Manual mounting",
      "level": 4,
      "content": "Use the following command to mount your folder in your Arch Linux guest:\n\n```\n# mount -t vboxsf -o gid=vboxsf shared_folder_name mount_point_on_guest_system\n```\n\nwhere shared_folder_name is the Folder name assigned by the hypervisor when the share was created.\n\nIf the user is not in the vboxsf group, to give them access to our mountpoint we can specify the mount(8) options uid= and gid= with the corresponding values of the user. These values can obtained from the id command run against this user. For example:\n\n```\n# mount -t vboxsf -o uid=1000,gid=1000 home /mnt\n```\n\n"
    },
    {
      "title": "Automounting",
      "level": 4,
      "content": "In order for the automounting feature to work you must have checked the auto-mount checkbox in the GUI or used the optional --automount argument with the command VBoxManage sharedfolder.\n\nThe shared folder should now appear as /media/sf_shared_folder_name. If users cannot access the shared folders, check that /media has permissions 755 or is owned by the vboxsf group if using permissions 750. This is currently not the default if the /media directory is created by vboxservice.service.\n\nYou can use symlinks if you want to have a more convenient access and avoid to browse in that directory, e.g.:\n\n```\n$ ln -s /media/sf_shared_folder_name ~/my_documents\n```\n\n"
    },
    {
      "title": "Mount at boot",
      "level": 4,
      "content": "You can mount your directory with fstab. However, to prevent startup problems with systemd, noauto,x-systemd.automount should be added to /etc/fstab. This way, the shared folders are mounted only when those mount points are accessed and not during startup. This can avoid some problems, especially if the guest additions are not loaded yet when systemd reads fstab and mounts the partitions.\n\n```\nsharedFolderName  /path/to/mntPtOnGuestMachine  vboxsf  uid=user,gid=group,rw,dmode=700,fmode=600,noauto,x-systemd.automount\n```\n\n- sharedFolderName: the value from the VirtualMachine's Settings > SharedFolders > Edit > FolderName menu. This value can be different from the name of the real folder name on the host machine. To see the VirtualMachine's Settings go to the host OS VirtualBox application, select the corresponding virtual machine and click on Settings.\n- /path/to/mntPtOnGuestMachine: if not existing, this directory should be created manually (for example by using mkdir).\n- dmode/fmode are directory/file permissions for directories/files inside /path/to/mntPtOnGuestMachine.\n\nAs of 2012-08-02, mount.vboxsf does not support the nofail option:\n\n```\ndesktop  /media/desktop  vboxsf  uid=user,gid=group,rw,dmode=700,fmode=600,nofail  0  0\n```\n\n"
    },
    {
      "title": "Access serial port from guest",
      "level": 3,
      "content": "See Working with the serial console#Connect using a terminal emulator program.\n\n"
    },
    {
      "title": "TTY text too small during installation",
      "level": 3,
      "content": "From the host, VirtualBox Manager, set the Display Scale-factor to 2.00 or 3.00.\n\n"
    },
    {
      "title": "Guest freezes after starting Xorg",
      "level": 3,
      "content": "Faulty or missing drivers may cause the guest to freeze after starting Xorg, see for example [4] and [5]. Try disabling 3D acceleration in Settings > Display, and check if all Xorg drivers are installed.\n\n"
    },
    {
      "title": "Fullscreen mode shows blank screen",
      "level": 3,
      "content": "On some window managers (i3, awesome), VirtualBox has issues with fullscreen mode properly due to the overlay bar. To work around this issue, disable Show in Full-screen/Seamless option in Guest Settings > User Interface > Mini ToolBar. See the upstream bug report for more information.\n\nIf the guest's screen goes black above a certain size (e.g. above 2048 pixels wide), increasing the Settings > Display > Screen > Video Memory can help.\n\n"
    },
    {
      "title": "Linux guests have slow/distorted audio",
      "level": 3,
      "content": "The AC97 audio driver within the Linux kernel occasionally guesses the wrong clock settings when running inside VirtualBox, leading to audio that is either too slow or too fast. To fix this, create a file in /etc/modprobe.d/ with the following line:\n\n```\noptions snd_intel8x0 ac97_clock=48000\n```\n\n"
    },
    {
      "title": "Linux guests have slow/laggy audio",
      "level": 3,
      "content": "In some cases, audio can have laggy performance (for example lag behind video when streaming video online). A possible workaround can be to use the Intel HD Audio controller in VirtualBox and disable its power saving by adding the following line in a file in /etc/modprobe.d/ in the guest OS:\n\n```\noptions snd_hda_intel power_save=0 power_save_controller=N\n```\n\n"
    },
    {
      "title": "Arch: pacstrap script fails",
      "level": 3,
      "content": "If you used pacstrap to also #Install the Guest Additions before performing a first boot into the new guest, you will need to umount -l /mnt/dev as root before using pacstrap again; a failure to do this will render it unusable.\n\n"
    },
    {
      "title": "Windows host: VERR_ACCESS_DENIED",
      "level": 3,
      "content": "To access the raw VMDK image on a Windows host, run the VirtualBox GUI as administrator.\n\n"
    },
    {
      "title": "No hardware 3D acceleration in Arch Linux guest",
      "level": 3,
      "content": "virtualbox-guest-utils package as of version 5.2.16-2 does not contain the file VBoxEGL.so. This causes the Arch Linux guest to not have proper 3D acceleration. See FS#49752.\n\nTo deal with this problem, apply the patch set at FS#49752#comment152254. Some fix to the patch set is required to make it work for version 5.2.16-2.\n\n"
    },
    {
      "title": "Plasma resets guest's resolution to 800×600",
      "level": 3,
      "content": "See KDE#Cannot change screen resolution when running in a virtual machine.\n\n"
    },
    {
      "title": "Black screen with Plasma-X11 minimal install",
      "level": 3,
      "content": "If you used plasma-desktop minimal install instead of plasma (which includes Wayland support), then probably you will have black screen with cursor after starting Plasma-X11 session.\n\nTo fix this, resize the VirtualBox window several times, then set resolution manually in VirtualBox window itself by: View > Virtual Screen 1 > Resize to 1024x768 (or other resolution you like).\n\nThen install kscreen.\n\nOpen in KDE launcher System Settings > Startup and Shutdown > Background Services, stop and unselect KScreen2 and save settings. Issue should go away forever.\n\n"
    }
  ]
}