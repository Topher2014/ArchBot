{
  "title": "Chef",
  "url": "https://wiki.archlinux.org/title/Chef",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Chef is a configuration management tool primarily written in Ruby, with an Erlang & Java server. It uses a pure-Ruby, domain-specific language (DSL) for writing system configuration \"recipes\". Chef is used to streamline the task of configuring and maintaining a company's servers, and can integrate with cloud-based platforms such as Amazon EC2, Google Cloud Platform, OpenStack, SoftLayer, and Microsoft Azure to automatically provision and configure new machines. Chef contains solutions for both small and large scale systems, with features and pricing for the respective ranges.\n\n"
    },
    {
      "title": "Chef Workstation",
      "level": 2,
      "content": "chef-workstationAUR contains the development and deployment tools for working with the Chef platform. It includes:\n\n- Chef Infra Client\n- Test Kitchen\n- Cookstyle\n- Chef InSpec\n\n"
    },
    {
      "title": "Chef Infra Client",
      "level": 2,
      "content": "For the systems being managed, install the chef-clientAUR package. This is the recommend installation method to get chef-client, chef-solo, or chef-zero tools.\n\n"
    },
    {
      "title": "CINC client",
      "level": 2,
      "content": "Chef Software changed their licensing for using their packages to require accepting their license, much like Red Hat requires license acceptance to use Red Hat Enterprise Linux. There is a community distribution called CINC that is working towards providing community-supported packages for Chef Software's products (similar to CentOS as an alternative). The cincAUR package provides the alternate cinc-client, cinc-solo, or cinc-zero tools.\n\n"
    },
    {
      "title": "Omnibus Chef installer",
      "level": 2,
      "content": "The packages provided by Chef Software are built with their dependencies included. This allows them to ship Chef without worrying about the underlying operating systems' support for Ruby, OpenSSL, etc. The chef-workstationAUR, chef-clientAUR, and cincAUR packages are built by re-using these packages.\n\n"
    },
    {
      "title": "Installing from source",
      "level": 3,
      "content": "If you wish to build your own Omnibus packages:\n\n```\n$ git clone https://github.com/chef/chef.git\n $ cd chef/omnibus\n```\n\nWipe out any previous installations and the omnibus cache:\n\n```\n# rm -Rf /opt/chef/* /var/cache/omnibus/*\n```\n\nSet up the directories and change the ownership to yourself so building as root is not required:\n\n```\n# mkdir -p /opt/chef /var/cache/omnibus\n# chown -R \"$USER:users\" /opt/chef\n# chown -R \"$USER:users\" /var/cache/omnibus\n```\n\nRun the following to build:\n\n```\n$ bundle install --binstubs\n$ bundle exec omnibus clean chef\n$ bundle exec omnibus build chef\n```\n\nAfter that, you may like to change the ownership of directories back to the system:\n\n```\n# chown -R root:root /opt/chef\n# chown -R root:root /var/cache/omnibus\n```\n\nA Makeself portable installer will be created, e.g. chef-11.8.2_0.arch.3.12.6-1-ARCH.sh. Run this executable to install chef.\n\n"
    },
    {
      "title": "Removal",
      "level": 3,
      "content": "Remove all installation files manually:\n\n```\n# rm -Rf /opt/chef\n```\n\nYou can also ensure the omnibus cache is removed:\n\n```\n# rm -Rf /var/cache/omnibus\n```\n\n"
    }
  ]
}