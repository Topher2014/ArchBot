{
  "title": "Steam Deck",
  "url": "https://wiki.archlinux.org/title/Steam_Deck",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Table content:\nHardware | PCI/USB ID | Working?\nmicroSD card reader | 1217:8621 | Yes\nWi-Fi (LCD/Jupiter) | 10ec:c822 | Yes\nWi-Fi (OLED/Galileo) | 17cb:1103\nGPU (LCD/Jupiter) | 1002:163f | Yes\nGPU (OLED/Galileo) | 1002:1435\nAudio | 1022:15e2 | Yes\nBluetooth (LCD/Jupiter) | 13d3:3553 | Yes\nBluetooth (OLED/Galileo) | 17cb:1103\nTouchscreen | 2808:1015 | Yes\nSteam Deck controls | 28de:1205 | Yes\n\nThe Steam Deck is a gaming-focused handheld PC from Valve. Since it is completely unlocked and by design has full Linux driver compatibility, it can easily be used as an all-purpose handheld PC with Arch Linux.\n\n"
    },
    {
      "title": "Accessibility",
      "level": 2,
      "content": "The firmware has white text on black background, which should be fine with OCR. Blind users may still want to request the help of a sighted person to change firmware settings or selecting a boot device.\n\nNavigation can be done with a keyboard and mouse, or the physical buttons (DPad and A,B,X,Y) and tactile screen of the device.\n\nThere is a single LED at the top of the device, but it does not provide diagnostic codes.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "You can install Arch Linux from the SteamOS \"Desktop Mode\", although this way of installing is more involved than using a USB flash installation medium through the microSD card slot or the USB-C port.\n\nIf you choose to use an Arch Linux installation medium, hold down Volume Down and press the Power buttons to boot on it when starting up the deck.\n\n"
    },
    {
      "title": "Firmware",
      "level": 2,
      "content": "Updating the firmware works with fwupd.\n\nFor the LCD models, firmware F7A0131 is the first to enable support for the amd_pstate CPU frequency scaling driver.\n\n"
    },
    {
      "title": "Shortcuts",
      "level": 3,
      "content": "- Hold down Volume Up and press the Power button to access the UEFI settings,\n- Hold down Volume Down and press the Power button to access the UEFI boot menu (called \"Boot Manager\" in Valve's documentation),\n- Hold down ⋯ (\"Three Dots\" button under the right touchpad) and press the Power button to access Valve's bootloader menu,\n- Hold down Volume Down+Power+⋯ (\"Three Dots\" button under the right touchpad) to reset the UEFI settings to their defaults (keep the two buttons other than Power held after the first blink of the LED: the LED will blink during the operation and stop once done, then release the buttons).\n\n"
    },
    {
      "title": "Audio",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe LCD model's built-in audio works out of the box since kernel version 6.1.\n\nThe OLED model's built-in audio requires compatible firmware, kernel and ALSA UCM rules in order to work:\n\n- The following firmware files need to be present in the system. They can be compiled from upstream source, or copied from the steamdeck-dsp package published in Valve's jupiter repository.\n\n```\n/usr/lib/firmware/amd/sof/sof-vangogh-data.bin\n/usr/lib/firmware/amd/sof/sof-vangogh-code.bin\n/usr/lib/firmware/amd/sof-tplg/sof-vangogh-nau8821-max.tplg\n```\n\n- Neptune kernel (from the jupiter repository) version 6.1.52 or newer works.\n- alsa-ucm-conf 1.2.11 or newer needs to be installed. Then, rules for sof-nau8821-max need to be added, such as by copying /usr/share/alsa/ucm2/conf.d/sof-nau8821-max/ from steamdeck-dsp.\n\nYou may want to use the Bazzite kernel instead for audio support on the OLED model. https://github.com/hhd-dev/kernel-bazzite\n\nFor troubleshooting, see ALSA and PipeWire. If ALSA can't access the built-in audio, check the kernel and audio firmware. If ALSA works but PipeWire doesn't, check the UCM rules.\n\n"
    },
    {
      "title": "PipeWire",
      "level": 3,
      "content": "Some applications, notably Wine, cause audio crackling on the OLED Deck's built-in speakers. When using pipewire-pulse, this can be fixed by increasing the minimum quantum size in pipewire.conf:\n\n```\ndefault.clock.min-quantum = 256\n```\n\n256 is the lowest value that has been observed to work well with wine. Higher, safer values of 512 or 1024 can also be used.\n\n"
    },
    {
      "title": "Bluetooth",
      "level": 2,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nA small Bluetooth quirk can be encountered on OLED models: a kernel bug prevents suspending if Bluetooth was turned off since boot. This means turning Bluetooth off requires a reboot.\n\n"
    },
    {
      "title": "Controller",
      "level": 2,
      "content": "The built-in game controller works out of the box, but is in lizard mode by default. In this mode, the touchpads act as a mouse, and some buttons as keys, while other buttons do nothing. One of the following methods can be used to remap the controller for gaming.\n\n"
    },
    {
      "title": "Raw",
      "level": 3,
      "content": "On some kernel-firmware-game combinations, the Steam Deck's controller will detect that a game is trying to use it, and switch from lizard mode to emulating a simple Xbox-compatible controller until the game is exited. While this precludes use of touchpads, gyros, and extra buttons that a basic Xbox controller would not have, it requires no configuration and may be preferred over more involved methods for some games.\n\n"
    },
    {
      "title": "sc-controller",
      "level": 3,
      "content": "You can use sc-controllerAUR as an alternative to Steam Input.\n\nIf the C0rn3j fork listed above gives you trouble with the right touchpad only working as a joystick mouse, or with the right joystick refusing to work in game, try the kozec beta branch.\n\nThis is useful if you wish to use complex profiles without using Steam, for non-Steam games, or as a fix for games that send double inputs.\n\nYou can use this while using Steam, just ensure the profile you wish to use is selected before launching a game. If you want to go back to the Steam driver, disable sc-controller from its GUI using the green \"burger\" button on the top left: if Steam is already open it will automatically switch.\n\n"
    },
    {
      "title": "Steam Input",
      "level": 3,
      "content": "Steam Input can detect and remap the Deck's controls, complete with complex tools such as gyros and capacitive thumbsticks. If Steam is being used to run games, using it to also handle controller mapping may be desirable.\n\nEven if Steam is not being used to run games, it can still serve a dedicated controller remapper – it will create a virtual Xbox-compatible controller under /dev/input that respects the mapping configured in the Steam client and can be used by any application. If Steam's role is limited to remapping controls, it can optionally be set to permanent offline mode, and in case of the Flatpak version, most permissions can be revoked.\n\n"
    },
    {
      "title": "OpenSD",
      "level": 3,
      "content": "Available via opensd-gitAUR, OpenSD is a highly-configurable userspace driver for the Steam Deck. It aims to be lighweight, very fast and provide a way to fully utilize the hardware. Configuration is done through text files and it provides a great user's manual.\n\n"
    },
    {
      "title": "Orientation",
      "level": 3,
      "content": "On Wayland, the display and touchscreen work correctly in all orientations, without any tweaks. Depending on the model, the orientation may default to portrait but can be changed as normal in a desktop environment's settings.\n\nOn Xorg, a manual orientation fix may be needed depending on the display manager used. If the screen defaults to portrait, it can be rotated using xrandr.\n\n```\n$ xrandr -o right\n```\n\nThe touchscreen can then be mapped to the proper orientation using xinput.\n\n```\n$ xinput --map-to-output 'pointer:FTS3528:00 2808:1015' eDP\n```\n\nTo have this persist on reboots, create an autostart script.\n\n"
    },
    {
      "title": "Refresh rates",
      "level": 3,
      "content": "Note: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nThe Steam Deck's display supports a wide range of refresh rates, but display managers will not auto-detect most of them.\n\nOn LCD models, only 60Hz is auto-detected, but 50Hz works well when force-enabled via KMS:\n\n```\nvideo=eDP-1:800x1280M@50\n```\n\nOn OLED models with the Samsung display, 90Hz and 60Hz are auto-detected.\n\n"
    },
    {
      "title": "Gamut",
      "level": 3,
      "content": "The OLED models are billed as HDR-capable and have a much wider gamut than sRGB, but this causes sRGB-targeting content, including most games, to appear greatly oversaturated.\n\nFortunately, the display's EDID exposes fairly accurate color information, which can be used to good effect even without any calibration hardware.\n\nGNOME and KDE will automatically generate an ICC profile based on the EDID, which can be used with various desktop applications.\n\nTo set up the same color correction for games, run displaycal GUI on the Deck, tell it to generate its own ICC profile from EDID (this is recommended over re-using the profile generated by GNOME since that uses a newer version of the ICC format), then convert that profile to a LUT via DisplayCAL's 3D LUT Maker. This LUT can then be injected into games via vkbasaltAUR.\n\nThe above was observed to give excellent results on the Samsung OLED. An even better method would be to tell AMDGPU to load the LUT into its color management pipeline, but while technical capability to do this is being adopted into mainline, documentation is scarce.\n\n"
    },
    {
      "title": "Fan controls",
      "level": 2,
      "content": "The Steam Deck's fan control can be enhanced by a daemon provided in Valve's jupiter repository, but are fully functional without it.\n\nIf you are using a mainline kernel, you need patches from Valve's kernel to expose the corresponding ACPI functionality, for example by installing the user-adapted steamdeck-dkmsAUR ACPI platform driver in DKMS form.\n\n"
    },
    {
      "title": "Function keys",
      "level": 2,
      "content": "Table content:\nKey | Visible?1 | Marked?2 | Effect\nVolume Down | Yes | Yes | VolumnDown\nVolume Up | Yes | Yes | VolumnUp\nPower | Yes3 | Yes | XF86PowerOff\nSelect | Yes | Yes | Tab\nDPad Up | Yes | Yes | Up\nDPad Left | Yes | Yes | Left\nDPad Right | Yes | Yes | Right\nDPad Down | Yes | Yes | Down\nStart | Yes | Yes | Escape\nA | Yes | Yes | Enter\nB | Yes | Yes | Escape\nX | No | Yes | \nY | No | Yes | \nSteam | No | Yes | \n⋯ \"Three dots\" | No | Yes | \nL1 | No | Yes | \nL2 | Yes | Yes | Right click\nR1 | No | Yes | \nR2 | Yes | Yes | Left click\nR4 | No | Yes | \nR5 | No | Yes | \nL4 | No | Yes | \nL5 | No | Yes | \n\n1. The key is visible to xev and similar tools.\n1. The physical key has a symbol on it, which describes its function.\n1. systemd-logind handles this by default.\n\n"
    },
    {
      "title": "Auto-login",
      "level": 3,
      "content": "To set your system to automatically login without password, you can use any display manager and configure it to do so, for example LightDM.\n\n"
    },
    {
      "title": "Big Picture Networking",
      "level": 3,
      "content": "To enable Steam Big Picture networking support, you must use NetworkManager.\n\n"
    },
    {
      "title": "Steam client integration",
      "level": 3,
      "content": "You can launch steam with the -steamdeck launch option to enable fullscreen UI elements such as login and client updates.\n\n"
    },
    {
      "title": "On-screen keyboard",
      "level": 3,
      "content": "See KDE#Plasma Mobile, GNOME on-screen keyboard or List of applications/Utilities#On-screen keyboards for information on how to set up an on-screen keyboard.\n\nSteam's on-screen keyboard also fully works, but Wayland will by design prevent it from interacting with other applications' windows. The libextest-gitAUR library can be injected into Steam to effectively remove this boundary, but this weakens the security inherently offered by Wayland.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Steam Deck Recovery Instructions\n- LCD model Linux Hardware Database probe\n- OLED model Linux Hardware Database probe\n\n"
    }
  ]
}