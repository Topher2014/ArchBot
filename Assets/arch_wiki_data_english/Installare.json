{
  "title": "Installare",
  "url": "https://wiki.archlinux.org/title/Installare",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Articoli correlati\n\n- Help:Browsing\n- Help:Style\n\nPoiché la maggior parte di ArchWiki contiene indicazioni che potrebbero richiedere chiarimenti per i nuovi utenti di Arch Linux (o GNU/Linux in generale), e' stata redatta questa rassegna di procedure di base sia per evitare confusione nell'assimilazione degli articoli sia per scoraggiare la ripetizione dei contenuti stessi.\n\n"
    },
    {
      "title": "Organizzazione",
      "level": 2,
      "content": "La maggior parte degli articoli ArchWiki non adottano un approccio olistico nel tentativo di illustrare un singolo argomento; questi contributi sono al contrario scritti sulla base del principio DRY, e dell'assunto che l'utente provvederà a cercare e leggere ogni tipologia di materiale di supporto relativo agli argomenti di cui non abbia ancora piena comprensione. Ove possibile, detto materiale viene indicato all'interno dell'articolo mediante una formattazione speciale, vedere #Formattazione.\n\nIn ragione di questo tipo di organizzazione, potrebbe essere necessario esaminare diverse fonti correlate per comprendere a pieno il contenuto di un articolo ArchWiki. In particolare, i nuovi utenti Arch (o GNU/Linux in generale) possono avere la ragionevole aspettativa di dover leggere un numero consistente di articoli per risolvere anche i problemi più semplici. È oltremodo importante studiare il materiale di supporto prima di chiedere ulteriore aiuto ad altri utenti.\n\n"
    },
    {
      "title": "Formattazione",
      "level": 2,
      "content": "- link a una sezione del presente articolo: #Organizzazione\n- link a un altro articolo ArchWiki\n- link a una pagina web esterna\n- link a una pagina del manuale: intro(1)\n- una pagina del manuale disponibile esclusivamente offline: foo(1)\n- link a un pacchetto nei repository ufficiali: foobar\n- link a un pacchetto nell'AUR: foobarAUR\n\n"
    },
    {
      "title": "Utente normale o root",
      "level": 2,
      "content": "Alcune righe di comando sono riportate come segue:\n\n```\n# mkinitcpio -p linux\n```\n\nmentre altre hanno un prefisso diverso:\n\n```\n$ makepkg -s\n```\n\nIl cancelletto o hashtag (#) indica che un comando deve essere eseguito come utente root, mentre il simbolo del dollaro ($) segnala che il comando va eseguito come utente normale.\n\nUn'eccezione rilevante alla quale prestare attenzione:\n\n```\n# This alias makes ls colorize the listing\nalias ls='ls --color=auto'\n```\n\nIn questo esempio, il contesto in cui si trova il cancelletto comunica che il testo dopo di esso non deve essere eseguito come comando; questa linea è invece destinata a essere inserita in un file. Pertanto, in questo caso, il cancelletto denota un commento. Un commento può rappresentare un testo con funzione esplicativa che non verrà interpretato dal programma associato. Incidentalmente, l'indicazione dei commenti negli script Bash coincide con il simbolo root PS1.\n\nA un ulteriore esame, si rileva che gli elementi che segnalano che non si tratta di un comando includono il carattere maiuscolo immediatamente dopo il segno #. Di norma, i comandi Unix non sono scritti in questo modo e nella maggior parte dei casi si tratta di abbreviazioni anziché parole inglesi riportate per esteso (ad esempio., Copy diventa cp).\n\nIn ogni caso, il più delle volte gli articoli semplificano l'identificazione di questi casi segnalandoli esplicitamente al lettore:\n\nAggiungere alla fine del file ~/path/to/file:\n\n```\n# This alias makes ls colorize the listing\nalias ls='ls --color=auto'\n```\n\n"
    },
    {
      "title": "Apporre, aggiungere, creare, modificare",
      "level": 2,
      "content": "Quando si riceve l'istruzione di aggiungere alla fine di un file (il termine inglese append indica l'azione di aggiungere un contenuto esattamente alla fine), di aggiungere a (il termine inglese add indica l'azione di aggiungere senza alcun vincolo di posizione), di creare o di modificare uno o più file, si presuppone l'utilizzo di uno dei seguenti metodi.\n\nPer creare o modificare file con più linee si consiglia l'utilizzo di un editor di testo. Ad esempio, per utilizzare nano per modificare il file /etc/bash.bashrc eseguire il seguente comando:\n\n```\n# nano /etc/bash.bashrc\n```\n\nPer creare o sovrascrivere un file da una stringa potrebbe risultare più semplice utilizzare la redirezione dell'output. Il seguente esempio crea o sovrascrive il contenuto del file /etc/hostname con il testo myhostname.\n\n```\n# echo myhostname > /etc/hostname\n```\n\nLa redirezione dell'output può essere utilizzata anche per aggiungere una stringa alla fine di un file. Il seguente esempio aggiunge il testo [custom-repo] alla fine del file /etc/pacman.conf.\n\n```\n# echo \"[custom-repo]\" >> /etc/pacman.conf\n```\n\nQuando viene data l'istruzione di creare una cartella, utilizzare il comando mkdir:\n\n```\n# mkdir /mnt/boot\n```\n\n"
    },
    {
      "title": "Rendere un file eseguibile",
      "level": 3,
      "content": "Dopo aver creato un file, se questo deve essere eseguito come script (manualmente o da parte di un altro programma) sarà necessario renderlo eseguibile, ad esempio con il comando:\n\n```\n$ chmod +x script\n```\n\nVedere chmod. Alcune applicazioni quali i file manager potrebbero fornire delle interfacce grafiche per eseguire questa operazione.\n\n"
    },
    {
      "title": "Source",
      "level": 2,
      "content": "Determinate applicazioni, in particolare le shell della riga di comando, utilizzano degli script per gestire la propria configurazione: dopo averli modificati, questi script devono essere sourced affinché le modifiche vengano effettivamente applicate. Nel caso di bash, ad esempio, questa operazione si esegue con il comando (è altresì possibile sostituire source con .):\n\n```\n$ source ~/.bashrc\n```\n\nNei casi in cui la wiki suggerisce di modificare uno di questi script di configurazione, non verrà ricordata esplicitamente la necessità di eseguire l'operazione di source del file, e solo in alcuni casi sarà presente un link che rimanda a questa sezione come promemoria.\n\n"
    },
    {
      "title": "Installazione di pacchetti",
      "level": 2,
      "content": "Quando un articolo invita a installare dei pacchetti in modo convenzionale, non indicherà le istruzioni dettagliate per eseguire questa operazione, limitandosi invece a menzionare i nomi dei pacchetti da installare.\n\nI sottoparagrafi di seguito forniscono una panoramica delle procedure generiche di installazione a seconda del tipo di pacchetto.\n\n"
    },
    {
      "title": "Pacchetti ufficiali",
      "level": 3,
      "content": "Per i pacchetti presenti nei repository ufficiali si leggerà un testo di questo tipo:\n\nCiò significa che si dovrà eseguire il comando:\n\n```\n# pacman -S foobar\n```\n\nL'articolo pacman illustra in modo dettagliato le nozioni per una corretta gestione dei pacchetti in Arch Linux.\n\n"
    },
    {
      "title": "Arch User Repository",
      "level": 3,
      "content": "Per i pacchetti presenti nell'Arch User Repository (AUR) si leggerà un testo di questo tipo:\n\nCiò significa che occorre in generale seguire il link foobarAUR, scaricare l'archivio PKGBUILD, estrarlo, verificarne il contenuto e infine eseguire, nella medesima cartella:\n\n```\n$ makepkg -si\n```\n\nL'articolo Arch User Repository contiene tutte le spiegazioni dettagliate e le migliori pratiche per la gestione dei pacchetti AUR.\n\n"
    },
    {
      "title": "Controllo delle unità systemd",
      "level": 2,
      "content": "Quando un articolo invita a avviare, abilitare, arrestare o riavviare determinate unità systemd (ad es. un servizio), non riporterà le istruzioni dettagliate per eseguire queste operazioni, bensì sarà presente un testo di questo tipo:\n\nCiò significa che si dovrà eseguire il comando:\n\n```\n# systemctl start example.service\n```\n\nIl link start condurrà all'articolo relativo a systemd, contenente tutte le spiegazioni dettagliate per gestire in modo ottimale le unità di systemd nei sistemi Arch Linux.\n\n"
    },
    {
      "title": "Configurazione a livello di sistema o specifica per utente",
      "level": 2,
      "content": "È importante ricordare che in un sistema GNU/Linux sono due i tipi di configurazione possibili. Una configurazione a livello di sistema riguarda tutti gli utenti. Dal momento che le impostazioni a livello di sistema si trovano di norma nella cartella /etc, per modificarle è necessari possedere i privilegi di root. Ad esempio, per applicare un'impostazione Bash per tutti gli utenti si dovrà modificare il file /etc/bash.bashrc.\n\nUna configurazione specifica per utente riguarda esclusivamente un singolo utente. A tal fine si utilizzano i cosiddetti dotfiles. Ad esempio, il file ~/.bashrc è il file di configurazione specifico per l'utente. L'idea alla base di questo approccio è la possibilità per ogni utente di definire le proprie impostazioni, quali alias, funzioni e altre caratteristiche interattive quali il prompt, senza incidere su quelle degli altri utenti.\n\n"
    },
    {
      "title": "File comuni della shell",
      "level": 3,
      "content": "Bash e altre shell compatibili con quest'ultima, come Zsh, eseguono il sourcing di file diversi a seconda che si tratti di shell di login o di shell interattiva. Vedere Bash#Configuration files e Zsh#Startup/Shutdown files per maggiori dettagli.\n\n"
    },
    {
      "title": "Pseudo-variabili negli esempi di codice",
      "level": 2,
      "content": "Alcuni blocchi di codice possono contenere le cosiddette pseudo-variabili le quali, come in effetti testimoniato dal nome, non sono vere e proprie variabili utilizzate nel codice. Si tratta invece di segnaposto generici che devono essere sostituiti manualmente con elementi specifici di configurazione del sistema prima che il codice possa essere eseguito o analizzato. Le shell di comune utilizzo come bash e zsh offrono la funzione di tab-completion per completare in modo automatico i parametri dei comandi più comuni come ad esempio systemctl.\n\nNegli articoli che si conformano alle regole di formattazione e punteggiatura, le pseudo-variabili sono formattate in stile italico. Ad esempio:\n\n- Abilitare il servizio dhcpcd@nome_interfaccia.service per l'interfaccia di rete identificata dall'output del comando ip link.\n\nIn questo caso nome_interfaccia viene utilizzato come una pseudo-variabile segnaposto in un'unità modello systemd. Tutte le unità modello systemd, identificabili in virtù della presenza del carattere @, richiedono un elemento di configurazione specifico per il sistema come argomento. Vedere Systemd#Using units.\n\n- Il comando dd if=sorgente_dati of=/dev/sdX bs=dimensione_settori count=numero_settori seek=settore_inizio_partizioni può essere eseguito come utente root per cancellare una partizione con i parametri specificati.\n\nIn questo caso le pseudo-variabili sono utilizzate per descrivere i parametri che devono essere inseriti al loro posto. I dettagli su come individuare tali parametri sono disponibili nella sezione Securely wipe disk#Calculate blocks to wipe manually, nella quale è descritto il comando.\n\nNote: **This article or section needs expansion.** This article or section needs expansion.\n\nThis article or section needs expansion.\n\nNel caso di esempi con file, incollando le pseudo-variabili all'interno di file di configurazione veri e propri si potrebbe causare il malfunzionamento dei relativi programmi.\n\n"
    },
    {
      "title": "Ellissi",
      "level": 3,
      "content": "Nella maggior parte dei casi le ellissi (...) non sono parte dell'effettivo contenuto del file o dell'output di codice, ma rappresentano testo omesso o opzionale, non rilevante per l'argomento trattato.\n\nAd esempio HOOKS=\"... encrypt ... filesystems ...\" o:\n\n```\n/etc/X11/xorg.conf.d/50-synaptics.conf\n```\n\n```\nSection \"InputClass\"\n    ...\n    Option      \"CircularScrolling\"          \"on\"\n    Option      \"CircScrollTrigger\"          \"0\"\n    ...\nEndSection\n```\n\nOccorre tuttavia essere consapevoli che, in alcuni casi, le ellissi possono essere parte integrante della sintassi del codice: gli utenti più esperti non avranno difficoltà a riconoscere questi casi in base al contesto.\n\n"
    }
  ]
}