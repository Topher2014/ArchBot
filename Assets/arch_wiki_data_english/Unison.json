{
  "title": "Unison",
  "url": "https://wiki.archlinux.org/title/Unison",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Unison is a bidirectional file synchronization tool that runs on Unix-like operating systems (including Linux, macOS, and Solaris) and Windows. It allows two replicas of a collection of files and directories to be stored on different hosts (or different disks on the same host), modified separately, and then brought up to date by propagating the changes in each replica to the other.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "Install the unison package, which provides CLI and GTK interfaces.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "In order to use Unison, you need to create a profile.\n\n"
    },
    {
      "title": "GUI",
      "level": 3,
      "content": "To configure Unison with the GUI run unison-gui.\n\n"
    },
    {
      "title": "Manual",
      "level": 3,
      "content": "Alternatively, manually create a profile in ~/.unison and add the following lines to the default configuration file, ~/.unison/profilename.prf.\n\nDefine the root directory to be synchronized.\n\n```\nroot=/home/user/\n```\n\nDefine the remote directory where the files should be sychronized to.\n\n```\nroot=ssh://example.com//path/to/server/storage\n```\n\nOptionally, provide arguments to SSH.\n\n```\nsshargs=-p 4000\n```\n\nDefine which directories and files should be synchronized:\n\n```\n# dirs\npath=Documents\npath=Photos\npath=Study\n# files\npath=.bashrc\npath=.vimrc\n```\n\nYou can also define which files to ignore:\n\n```\nignore=Name temp.*\nignore=Name .*~\nignore=Name *.tmp\n```\n\n"
    },
    {
      "title": "Usage",
      "level": 2,
      "content": "Once your profile is set up, you can start syncing:\n\n```\n$ unison profilename\n```\n\nor using the GUI tool:\n\n```\n$ unison-gui\n```\n\nand select the profile. Unison has a nice interface where you can view the progress and changes.\n\n"
    },
    {
      "title": "Version incompatibility",
      "level": 2,
      "content": "Since 2.52, Unison has implemented limited support for cross-version syncing. See the migration documentation for details.\n\nFor versions prior to 2.52 to function properly, both ends must have installed the same Unison version compiled with the same version of OCaml.\n\nWhen synchronizing with another distribution you will most likely have to manually compile OCaml and Unison on one end.\n\n"
    },
    {
      "title": "Save human time and keystrokes",
      "level": 3,
      "content": "If one runs unison within a terminal emulator capable of maintaining a suitable scrollback buffer, there is no purpose in having to confirm every non-conflicting change; set the auto option to true to avoid these prompts.\n\n"
    },
    {
      "title": "More helpful diff output",
      "level": 3,
      "content": "The unison default diff command is diff -u CURRENT2 CURRENT1. When looking at the output of this command, it can be difficult to remember which changes will be kept when propagating from left to right ('>'), versus right to left ('<'). The following configuration makes it easy to remember: '>' keeps lines which start with '>':\n\n```\ndiff = diff -u CURRENT2 CURRENT1 | perl -pe 's/^\\+/>/; s/^\\-/</'\n```\n\n"
    },
    {
      "title": "Merging in Emacs",
      "level": 3,
      "content": "Unison has the capability to assist users in merging two conflicting files using an external merge program, but it does not configure such a program by default. The manual suggests\n\n```\nmerge = Name *.txt -> emacs -q --eval '(ediff-merge-files-with-ancestor \"CURRENT1\" \"CURRENT2\" \"CURRENTARCH\" nil \"NEW\")'\n```\n\nThis assumes that you are running Unison in X, because the merge command cannot be run in the terminal (Emacs: \"standard input is not a tty\"). Note also that Unison replaces the CURRENT1, etc., variables with single-quoted filenames. Thus, the above works, but using double quotes throughout, as in \"(ediff-merge-files... \\\"CURRENT1\\\" ...)\", would not work.\n\nUsing the variable CURRENTARCH tells Unison that you expect to do 3-way merges with a common ancestor, which is only possible if the \"backupcurrent\" preference has been set previously to the last sync. To perform an ordinary 2-way merge in a terminal, one could use the following configuration instead. This also uses emerge.el, which some find preferable to ediff.el:\n\n```\nmerge = Name {*,.*} -> urxvt -e emacs -nw -q --eval '(emerge-files nil \"CURRENT1\" \"CURRENT2\" \"NEW\")'\n```\n\nIf the variable CURRENTARCHOPT is used instead of CURRENTARCH, then Unison will provide a common ancestor when it is available, and otherwise fall back to requesting a 2-way merge (by setting the variable to the empty string). This can be detected in a shell script. For example:\n\n```\nmerge = Name {*,.*} -> unison-merge-files CURRENT1 CURRENT2 NEW CURRENTARCHOPT\n```\n\nwith unison-merge-files defined as follows:\n\n```\n#!/bin/sh\nCURRENT1=$1\nCURRENT2=$2\nNEW=$3\nCURRENTARCHOPT=$4\nEMACS=\"urxvt -e emacs -nw\"\nif [ x$CURRENTARCHOPT = x ]; then\n    $EMACS --eval \"(emerge-files nil \\\"$CURRENT1\\\" \\\"$CURRENT2\\\" \\\"$NEW\\\")\";\nelse\n    $EMACS --eval \"(emerge-files-with-ancestor nil \\\"$CURRENT1\\\" \\\"$CURRENT2\\\" \\\"$CURRENTARCHOPT\\\" \\\"$NEW\\\")\";\nfi\n```\n\n"
    },
    {
      "title": "Common configuration synchronization",
      "level": 3,
      "content": "When syncing configuration files which would vary (e.g., due to endemic applications, security-sensitive configuration) among systems (servers, workstations, laptops, smartphones, etc.) but nevertheless contain common constructs (e.g., key bindings, basic shell aliases), it would be apt to separate such content into separate configuration files (e.g., .bashrc_common), and sync only these.\n\n"
    },
    {
      "title": "Using different data directory",
      "level": 3,
      "content": "Default unison data directory is ~/.unison. This directory will contain profiles, but also logs and raw data. If you want to change it, you can set an environment variable (in your shell config or before using unison command):\n\n```\nexport UNISON=\"my-unison-data-folder\"\n```\n\n- Unison is not XDG compliant yet, see these issues for more information: issue 270 and issue 552.\n- Setting the UNISON variable on one machine will still use the ~/.unison directory on the remote machine.\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- Wikipedia:Unison (software)\n- Official website\n- User Manual and Reference Guide\n- Replication using Unison on TWiki\n\n"
    }
  ]
}