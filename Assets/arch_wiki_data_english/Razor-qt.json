{
  "title": "Razor-qt",
  "url": "https://wiki.archlinux.org/title/Razor-qt",
  "sections": [
    {
      "title": "Introduction",
      "level": 1,
      "content": "Related articles\n\n- LXDE\n- Window manager\n\nLXQt is a desktop environment built on Qt which partly uses Razor-qt and LXDE components. While development is mainly focused on LXQt, the GTK 2 version of LXDE will see continued development.\n\n"
    },
    {
      "title": "Installation",
      "level": 2,
      "content": "First, install and configure Xorg. Then, install the lxqt group and an icon theme (e.g. breeze-icons or oxygen-icons).\n\nFor additional functionality, you may wish to install the following:\n\n- nm-tray — A simple Qt based frontend for NetworkManager.\n\n- SDDM — The recommended display manager for LXQt.\n\n- A screen locker, if needed. For example, slock or XScreenSaver. Both are confirmed to integrate with LXQt, others may too. If you are using LightDM as your display manager, you can use light-locker. If you want to disable screen locking upon suspend/sleep it is under LXQt > Preferences > LXQt Settings > Session Settings > Lock screen before suspending/hibernating checkbox. Tip: LXQt uses xdg-screensaver from xdg-utils for screen locking which only works with XScreenSaver and xautolockAUR in LXQt session. You can use it or another screen locker by itself. For example, with slock you can follow Slock#Lock on suspend as well as install patched xdg-utils-slockAUR to obtain feelings expected by LXQt.\n- You can now edit ~/.config/lxqt/lxqt.conf and add your screen-locker of choice, no need for xautolock anymore, for example to use i3lock add the following\n\n- If you are using LightDM as your display manager, you can use light-locker.\n- If you want to disable screen locking upon suspend/sleep it is under LXQt > Preferences > LXQt Settings > Session Settings > Lock screen before suspending/hibernating checkbox. Tip: LXQt uses xdg-screensaver from xdg-utils for screen locking which only works with XScreenSaver and xautolockAUR in LXQt session. You can use it or another screen locker by itself. For example, with slock you can follow Slock#Lock on suspend as well as install patched xdg-utils-slockAUR to obtain feelings expected by LXQt.\n\n```\n[Screensaver]\nlock_command=i3lock\n```\n\n- For audio support, see General recommendations#Sound system.\n- Some LXQt panel plugins require extra packages to function, check the optional dependencies for lxqt-panel.\n\n"
    },
    {
      "title": "Using xinit",
      "level": 3,
      "content": "Append the following line to Xinitrc:\n\n```\n~/.xinitrc\n```\n\n```\nexec startlxqt\n```\n\n"
    },
    {
      "title": "Graphical login",
      "level": 3,
      "content": "Choose LXQt Desktop from the menu in a display manager of choice.\n\n"
    },
    {
      "title": "Configuration",
      "level": 2,
      "content": "LXQt in general tries to provide GUI applications to change its settings. Configuration files are in ~/.config/lxqt. This directory is initialized automatically. The default configuration for new users is found in /usr/share/lxqt.\n\n"
    },
    {
      "title": "Screen Brightness",
      "level": 3,
      "content": "If you find that LXQt uses screen contrast control instead of screen brightness control for the screen brightness keyboard shortcuts, you can change the command to use xbacklight instead under the LXQt configuration center > shortcut keys\n\n```\nxbacklight -inc 10\nxbacklight -dec 10\n```\n\nIf you are using the Intel kernel modesetting driver xbacklight will not work, but you can use the following command instead\n\n```\npkexec lxqt-backlight_backend --inc\npkexec lxqt-backlight_backend --dec\n```\n\nYou may need to create two scripts for screen brightness up and down and point the keyboard shortcut to the path of the scripts for it to work.\n\nAnother way to change screen brightness is to use brightnessctl\n\n```\nbrightnessctl -d intel_backlight set +5%\nbrightnessctl -d intel_backlight set 5%-\n```\n\n"
    },
    {
      "title": "Panel widgets",
      "level": 3,
      "content": "If you cannot add the CPU and System Statistics widgets to the panel, make sure libstatgrab and libsysstat are installed.\n\n"
    },
    {
      "title": "Use a different window manager",
      "level": 3,
      "content": "LXQt presents a dialog to pick the preferred window manager at the first login. After that, you can specify a different window manager to use with LXQt via Session Settings, lxqt-config-session; or by editing ~/.config/lxqt/session.conf. Change the following line:\n\n```\nwindow_manager=current_window_manager\n```\n\nto a window manager of choice:\n\n```\nwindow_manager=your_window_manager\n```\n\n"
    },
    {
      "title": "Autostart",
      "level": 3,
      "content": "To have X applications start on login, click the main menu from the LXQt > Preferences > LXQt Settings > Session Settings. Alternatively, this can be launched with:\n\n```\n$ lxqt-config-session\n```\n\nFrom this window, click on AutoStart on the left side. Here you can add a new application to either the global autostart (launched in all sessions implementing the XDG Autostart specification) or your local autostart (labelled LXQt Autostart) (See issue 746 for a bug related to this option). For each item you add, lxqt-config-session will create a Desktop entry (.desktop file) in the appropriate XDG Autostart directory.\n\nThe distinction between \"Global Autostart\" and \"LXQt Autostart\" does not depend on the directory in which the corresponding .desktop file is located, but rather on the OnlyShowIn setting. If it is OnlyShowIn=true, it is considered an \"LXQt Autostart\". Furthermore, if X-LXQt-Module=true, the item is not shown in lxqt-config-session.\n\n"
    },
    {
      "title": "Set-up environment variables",
      "level": 3,
      "content": "Environment variables for LXQt session can be defined in Session Settings.\n\n"
    },
    {
      "title": "Editing the Application Menu",
      "level": 3,
      "content": "It is possible to edit menu entries by editing their .desktop files stored in /usr/share/applications/lxqt-*.desktop files. See Desktop entries.\n\n"
    },
    {
      "title": "Screen Compositor",
      "level": 3,
      "content": "You can add a compositor like picom to autostart applications with a command like the following\n\n```\npicom --vsync -r 12 --no-fading-openclose -b\n```\n\n"
    },
    {
      "title": "Customizing Leave",
      "level": 3,
      "content": "One can customize the options available under Leave simply by copying the respective package provide .desktop file to ~/.local/share/applications and modifying it to contain the NoDisplay=true directive. Reference: #876.\n\nComplete list of files to consider masking include:\n\n```\nlxqt-hibernate.desktop\nlxqt-leave.desktop\nlxqt-lockscreen.desktop\nlxqt-logout.desktop\nlxqt-reboot.desktop\nlxqt-shutdown.desktop\nlxqt-suspend.desktop\n```\n\nExample: remove hibernate option.\n\n```\n$ mkdir -p ~/.local/share/applications\n$ sed '/OnlyShowIn/aNoDisplay=true' </usr/share/applications/lxqt-hibernate.desktop >~/.local/share/applications/lxqt-hibernate.desktop\n```\n\n"
    },
    {
      "title": "Desktop icons are grouped together",
      "level": 3,
      "content": "When moving icons on the desktop it is possible to place them a bit too close to each other making them connected. If unable to separate them Stop Desktop from Session Settings, remove ~/.config/pcmanfm-qt/lxqt/desktop-items-0.conf and Start Desktop again.\n\n"
    },
    {
      "title": "Run LXQt with xrdp",
      "level": 3,
      "content": "Running LXQt with xrdp for remote login has the benefit of being fast and convenient, while minimizing resource consumption on the server. Setting up xrdp is rather painless, and only requires a user to adjust the ~/.xinitrc. Since LXQt appears to rely on some D-Bus service functionality, that file should have the following line at the end [1]:\n\n```\nexec dbus-run-session -- startlxqt\n```\n\n"
    },
    {
      "title": "See also",
      "level": 2,
      "content": "- LXQt homepage\n- LXQt development\n- LXQt on deviantART\n- LXQt wiki on GitHub\n\n"
    }
  ]
}